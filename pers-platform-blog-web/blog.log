2017-09-12 22:29:56.715  INFO 2996 --- [restartedMain] pers.platform.blog.Application           : Starting Application on PC-20160914JGKD with PID 2996 (E:\workspace\pers-cc-platform\pers-platform-blog-web\target\classes started by Administrator in E:\workspace\pers-cc-platform\pers-platform-blog-web)
2017-09-12 22:29:56.719 DEBUG 2996 --- [restartedMain] pers.platform.blog.Application           : Running with Spring Boot v1.5.2.RELEASE, Spring v4.3.7.RELEASE
2017-09-12 22:29:56.720  INFO 2996 --- [restartedMain] pers.platform.blog.Application           : The following profiles are active: test
2017-09-12 22:29:57.472  INFO 2996 --- [restartedMain] ationConfigEmbeddedWebApplicationContext : Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@6ec43fc1: startup date [Tue Sep 12 22:29:57 CST 2017]; root of context hierarchy
2017-09-12 22:30:00.015  INFO 2996 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2017-09-12 22:30:00.091  INFO 2996 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2017-09-12 22:30:00.148  INFO 2996 --- [restartedMain] o.s.b.f.s.DefaultListableBeanFactory     : Overriding bean definition for bean 'httpRequestHandlerAdapter' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.boot.autoconfigure.web.WebMvcAutoConfiguration$EnableWebMvcConfiguration; factoryMethodName=httpRequestHandlerAdapter; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/boot/autoconfigure/web/WebMvcAutoConfiguration$EnableWebMvcConfiguration.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.data.rest.webmvc.config.RepositoryRestMvcConfiguration; factoryMethodName=httpRequestHandlerAdapter; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/data/rest/webmvc/config/RepositoryRestMvcConfiguration.class]]
2017-09-12 22:30:00.391  INFO 2996 --- [restartedMain] o.s.b.f.s.DefaultListableBeanFactory     : Overriding bean definition for bean 'dataSource' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure; factoryMethodName=dataSource; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/alibaba/druid/spring/boot/autoconfigure/DruidDataSourceAutoConfigure.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=true; factoryBeanName=spring.datasource-pers.platform.blog.config.DruidDBConfig; factoryMethodName=dataSource; initMethodName=null; destroyMethodName=(inferred); defined in pers.platform.blog.config.DruidDBConfig]
2017-09-12 22:30:01.166  INFO 2996 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.amqp.rabbit.annotation.RabbitBootstrapConfiguration' of type [org.springframework.amqp.rabbit.annotation.RabbitBootstrapConfiguration$$EnhancerBySpringCGLIB$$2c7179c5] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017-09-12 22:30:01.258  INFO 2996 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$6605bb97] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017-09-12 22:30:01.360  INFO 2996 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'reidsConfig' of type [pers.platform.blog.config.ReidsConfig$$EnhancerBySpringCGLIB$$1b785740] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017-09-12 22:30:01.380  INFO 2996 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'keyGenerator' of type [pers.platform.blog.config.ReidsConfig$1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017-09-12 22:30:01.381  INFO 2996 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.cache.annotation.ProxyCachingConfiguration' of type [org.springframework.cache.annotation.ProxyCachingConfiguration$$EnhancerBySpringCGLIB$$af17f1b5] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017-09-12 22:30:01.464  INFO 2996 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'shiroConfig' of type [pers.platform.blog.config.ShiroConfig$$EnhancerBySpringCGLIB$$7011f20c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017-09-12 22:30:02.022  INFO 2996 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'myShiroRealm' of type [pers.platform.blog.realm.MyRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017-09-12 22:30:02.075  INFO 2996 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017-09-12 22:30:02.108  INFO 2996 --- [restartedMain] pers.platform.blog.config.ShiroConfig    : 注入Shiro的Web过滤器-->shiroFilter
2017-09-12 22:30:02.811  INFO 2996 --- [restartedMain] s.b.c.e.t.TomcatEmbeddedServletContainer : Tomcat initialized with port(s): 8080 (http)
2017-09-12 22:30:03.067  INFO 2996 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service Tomcat
2017-09-12 22:30:03.069  INFO 2996 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet Engine: Apache Tomcat/8.5.11
2017-09-12 22:30:03.341  INFO 2996 --- [localhost-startStop-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2017-09-12 22:30:03.341  INFO 2996 --- [localhost-startStop-1] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 5874 ms
2017-09-12 22:30:04.108  INFO 2996 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'characterEncodingFilter' to: [/*]
2017-09-12 22:30:04.109  INFO 2996 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2017-09-12 22:30:04.110  INFO 2996 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'httpPutFormContentFilter' to: [/*]
2017-09-12 22:30:04.110  INFO 2996 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'requestContextFilter' to: [/*]
2017-09-12 22:30:04.110  INFO 2996 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'delegatingFilterProxy' to: [/*]
2017-09-12 22:30:04.111  INFO 2996 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'webStatFilter' to urls: [/*]
2017-09-12 22:30:04.111  INFO 2996 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Filter webStatFilter was not registered (possibly already registered?)
2017-09-12 22:30:04.111  INFO 2996 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'shiroFilter' to: [/*]
2017-09-12 22:30:04.111  INFO 2996 --- [localhost-startStop-1] o.s.b.w.servlet.ServletRegistrationBean  : Mapping servlet: 'statViewServlet' to [/druid/*]
2017-09-12 22:30:04.113  INFO 2996 --- [localhost-startStop-1] o.s.b.w.servlet.ServletRegistrationBean  : Mapping servlet: 'dispatcherServlet' to [/]
2017-09-12 22:30:04.114  INFO 2996 --- [localhost-startStop-1] o.s.b.w.servlet.ServletRegistrationBean  : Mapping servlet: 'statViewServlet' to [/druid/*]
2017-09-12 22:30:04.114  INFO 2996 --- [localhost-startStop-1] o.s.b.w.servlet.ServletRegistrationBean  : Servlet statViewServlet was not registered (possibly already registered?)
2017-09-12 22:30:05.518  INFO 2996 --- [localhost-startStop-1] com.alibaba.druid.pool.DruidDataSource   : {dataSource-1} inited
2017-09-12 22:30:05.540 DEBUG 2996 --- [localhost-startStop-1] p.p.blog.repository.BloggerRepo.find     : ==>  Preparing: select * from t_blogger where id=? 
2017-09-12 22:30:05.807 DEBUG 2996 --- [localhost-startStop-1] p.p.blog.repository.BloggerRepo.find     : ==> Parameters: 1(String)
2017-09-12 22:30:05.863 DEBUG 2996 --- [localhost-startStop-1] p.p.blog.repository.BloggerRepo.find     : <==      Total: 1
2017-09-12 22:30:06.030 DEBUG 2996 --- [localhost-startStop-1] p.p.blog.repository.LinkRepo.list        : ==>  Preparing: select * from t_link order by orderNo 
2017-09-12 22:30:06.035 DEBUG 2996 --- [localhost-startStop-1] p.p.blog.repository.LinkRepo.list        : ==> Parameters: 
2017-09-12 22:30:06.040 DEBUG 2996 --- [localhost-startStop-1] p.p.blog.repository.LinkRepo.list        : <==      Total: 2
2017-09-12 22:30:06.088 DEBUG 2996 --- [localhost-startStop-1] p.p.b.repository.BlogTypeRepo.countList  : ==>  Preparing: SELECT t2.id,t2.`typeName`,COUNT(t1.id) AS blogCount FROM t_blog t1 RIGHT JOIN t_blogType t2 ON t1.typeId=t2.id GROUP BY t2.id,t2.typeName ORDER BY t2.orderNo; 
2017-09-12 22:30:06.154 DEBUG 2996 --- [localhost-startStop-1] p.p.b.repository.BlogTypeRepo.countList  : ==> Parameters: 
2017-09-12 22:30:06.195 DEBUG 2996 --- [localhost-startStop-1] p.p.b.repository.BlogTypeRepo.countList  : <==      Total: 17
2017-09-12 22:30:06.252 DEBUG 2996 --- [localhost-startStop-1] p.p.blog.repository.BlogRepo.countList   : ==>  Preparing: SELECT DATE_FORMAT (releaseDate,'%Y年%m月') AS releaseDateStr,COUNT(*) AS blogCount FROM t_blog GROUP BY DATE_FORMAT (releaseDate,'%Y年%m月') ORDER BY DATE_FORMAT (releaseDate,'%Y年%m月') DESC 
2017-09-12 22:30:06.269 DEBUG 2996 --- [localhost-startStop-1] p.p.blog.repository.BlogRepo.countList   : ==> Parameters: 
2017-09-12 22:30:06.280 DEBUG 2996 --- [localhost-startStop-1] p.p.blog.repository.BlogRepo.countList   : <==      Total: 12
2017-09-12 22:30:06.680  INFO 2996 --- [restartedMain] j.LocalContainerEntityManagerFactoryBean : Building JPA container EntityManagerFactory for persistence unit 'default'
2017-09-12 22:30:06.711  INFO 2996 --- [restartedMain] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
2017-09-12 22:30:06.889  INFO 2996 --- [restartedMain] org.hibernate.Version                    : HHH000412: Hibernate Core {5.0.12.Final}
2017-09-12 22:30:06.893  INFO 2996 --- [restartedMain] org.hibernate.cfg.Environment            : HHH000206: hibernate.properties not found
2017-09-12 22:30:06.897  INFO 2996 --- [restartedMain] org.hibernate.cfg.Environment            : HHH000021: Bytecode provider name : javassist
2017-09-12 22:30:06.999  INFO 2996 --- [restartedMain] o.hibernate.annotations.common.Version   : HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
2017-09-12 22:30:07.628  INFO 2996 --- [restartedMain] org.hibernate.dialect.Dialect            : HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
2017-09-12 22:30:08.068  INFO 2996 --- [restartedMain] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2017-09-12 22:30:10.477  INFO 2996 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerAdapter : Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@6ec43fc1: startup date [Tue Sep 12 22:29:57 CST 2017]; root of context hierarchy
2017-09-12 22:30:10.716  INFO 2996 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/],methods=[GET]}" onto public java.lang.String pers.platform.blog.Application.index()
2017-09-12 22:30:10.720  INFO 2996 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/blog/q]}" onto public org.springframework.web.servlet.ModelAndView pers.platform.blog.controller.BlogController.search(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2017-09-12 22:30:10.721  INFO 2996 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/blog/articles/{id}.html]}" onto private org.springframework.web.servlet.ModelAndView pers.platform.blog.controller.BlogController.details(java.lang.String,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2017-09-12 22:30:10.722  INFO 2996 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cc/login.html]}" onto public java.lang.String pers.platform.blog.controller.BloggerController.login(pers.platform.blog.model.Blogger,javax.servlet.http.HttpServletRequest)
2017-09-12 22:30:10.723  INFO 2996 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/blogger/aboutMe.html]}" onto public org.springframework.web.servlet.ModelAndView pers.platform.blog.controller.BloggerController.aboutMe() throws java.lang.Exception
2017-09-12 22:30:10.732  INFO 2996 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cc/blog/delete.html]}" onto public java.lang.String pers.platform.blog.controller.cc.BlogCcController.delete(java.lang.String,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2017-09-12 22:30:10.732  INFO 2996 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cc/blog/list.html]}" onto public java.lang.String pers.platform.blog.controller.cc.BlogCcController.list(java.lang.String,java.lang.String,pers.platform.blog.model.Blog,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2017-09-12 22:30:10.734  INFO 2996 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cc/blog/save.html]}" onto public java.lang.String pers.platform.blog.controller.cc.BlogCcController.save(pers.platform.blog.model.Blog,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2017-09-12 22:30:10.734  INFO 2996 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cc/blog/findById.html]}" onto public java.lang.String pers.platform.blog.controller.cc.BlogCcController.findById(java.lang.String,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2017-09-12 22:30:10.734  INFO 2996 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cc/blog/uploadPastImage]}" onto public java.lang.String pers.platform.blog.controller.cc.BlogCcController.uploadPastImage(javax.servlet.http.HttpServletRequest,java.lang.String) throws java.lang.Exception
2017-09-12 22:30:10.734  INFO 2996 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cc/blog/ckeditorUpload]}" onto public java.lang.String pers.platform.blog.controller.cc.BlogCcController.upLoadImage(javax.servlet.http.HttpServletRequest,org.springframework.web.multipart.MultipartFile,java.lang.String) throws java.lang.Exception
2017-09-12 22:30:10.735  INFO 2996 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cc/blog/modifyBlog.html]}" onto public org.springframework.web.servlet.ModelAndView pers.platform.blog.controller.cc.BlogCcController.modifyBlog(java.lang.String,javax.servlet.http.HttpServletResponse)
2017-09-12 22:30:10.740  INFO 2996 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cc/blogger/find.html]}" onto public java.lang.String pers.platform.blog.controller.cc.BloggerCcController.find(javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2017-09-12 22:30:10.741  INFO 2996 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cc/blogger/save.html]}" onto public java.lang.String pers.platform.blog.controller.cc.BloggerCcController.save(org.springframework.web.multipart.MultipartFile,pers.platform.blog.model.Blogger,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2017-09-12 22:30:10.744  INFO 2996 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cc/blogger/logout.html]}" onto public java.lang.String pers.platform.blog.controller.cc.BloggerCcController.logout() throws java.lang.Exception
2017-09-12 22:30:10.745  INFO 2996 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cc/blogger/modifyPassword.html]}" onto public java.lang.String pers.platform.blog.controller.cc.BloggerCcController.modifyPassword(java.lang.String,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2017-09-12 22:30:10.747  INFO 2996 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cc/blogType/delete.html]}" onto public java.lang.String pers.platform.blog.controller.cc.BlogTypeCcController.delete(java.lang.String,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2017-09-12 22:30:10.749  INFO 2996 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cc/blogType/list.html]}" onto public java.lang.String pers.platform.blog.controller.cc.BlogTypeCcController.list(java.lang.String,java.lang.String,pers.platform.blog.model.BlogType,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2017-09-12 22:30:10.751  INFO 2996 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cc/blogType/save.html]}" onto public java.lang.String pers.platform.blog.controller.cc.BlogTypeCcController.save(pers.platform.blog.model.BlogType,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2017-09-12 22:30:10.752  INFO 2996 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cc/blogType/findById.html]}" onto public java.lang.String pers.platform.blog.controller.cc.BlogTypeCcController.findById(java.lang.String,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2017-09-12 22:30:10.755  INFO 2996 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cc/comment/delete.html]}" onto public java.lang.String pers.platform.blog.controller.cc.CommentCcController.delete(java.lang.String,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2017-09-12 22:30:10.757  INFO 2996 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cc/comment/review.html]}" onto public java.lang.String pers.platform.blog.controller.cc.CommentCcController.delete(java.lang.String,java.lang.Integer,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2017-09-12 22:30:10.757  INFO 2996 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cc/comment/list.html]}" onto public java.lang.String pers.platform.blog.controller.cc.CommentCcController.list(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2017-09-12 22:30:10.760  INFO 2996 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cc/link/delete.html]}" onto public java.lang.String pers.platform.blog.controller.cc.LinkCcController.delete(java.lang.String,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2017-09-12 22:30:10.761  INFO 2996 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cc/link/list.html]}" onto public java.lang.String pers.platform.blog.controller.cc.LinkCcController.list(java.lang.String,java.lang.String,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2017-09-12 22:30:10.761  INFO 2996 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cc/link/save.html]}" onto public java.lang.String pers.platform.blog.controller.cc.LinkCcController.save(pers.platform.blog.model.Link,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2017-09-12 22:30:10.766  INFO 2996 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cc/system/refreshSystem.html]}" onto public java.lang.String pers.platform.blog.controller.cc.SystemCcController.refreshSystem(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2017-09-12 22:30:10.767  INFO 2996 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/comment/save.html]}" onto public java.lang.String pers.platform.blog.controller.CommentController.save(pers.platform.blog.model.Comment,java.lang.String,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpSession) throws java.lang.Exception
2017-09-12 22:30:10.773  INFO 2996 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/index]}" onto public org.springframework.web.servlet.ModelAndView pers.platform.blog.controller.IndexContrller.index(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2017-09-12 22:30:10.773  INFO 2996 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/download.html]}" onto public org.springframework.web.servlet.ModelAndView pers.platform.blog.controller.IndexContrller.download() throws java.lang.Exception
2017-09-12 22:30:10.778  INFO 2996 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2017-09-12 22:30:10.778  INFO 2996 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2017-09-12 22:30:10.841  INFO 2996 --- [restartedMain] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/cc/main.html] onto handler of type [class org.springframework.web.servlet.mvc.ParameterizableViewController]
2017-09-12 22:30:10.841  INFO 2996 --- [restartedMain] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/cc/blog.html] onto handler of type [class org.springframework.web.servlet.mvc.ParameterizableViewController]
2017-09-12 22:30:10.841  INFO 2996 --- [restartedMain] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/cc/commentReview.html] onto handler of type [class org.springframework.web.servlet.mvc.ParameterizableViewController]
2017-09-12 22:30:10.841  INFO 2996 --- [restartedMain] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/cc/blogManage.html] onto handler of type [class org.springframework.web.servlet.mvc.ParameterizableViewController]
2017-09-12 22:30:10.841  INFO 2996 --- [restartedMain] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/cc/blogTypeManage.html] onto handler of type [class org.springframework.web.servlet.mvc.ParameterizableViewController]
2017-09-12 22:30:10.841  INFO 2996 --- [restartedMain] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/cc/commentManage.html] onto handler of type [class org.springframework.web.servlet.mvc.ParameterizableViewController]
2017-09-12 22:30:10.841  INFO 2996 --- [restartedMain] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/cc/modifyInfo.html] onto handler of type [class org.springframework.web.servlet.mvc.ParameterizableViewController]
2017-09-12 22:30:10.841  INFO 2996 --- [restartedMain] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/cc/linkManage.html] onto handler of type [class org.springframework.web.servlet.mvc.ParameterizableViewController]
2017-09-12 22:30:10.891  INFO 2996 --- [restartedMain] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2017-09-12 22:30:10.891  INFO 2996 --- [restartedMain] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2017-09-12 22:30:10.947  INFO 2996 --- [restartedMain] .m.m.a.ExceptionHandlerExceptionResolver : Detected @ExceptionHandler methods in repositoryRestExceptionHandler
2017-09-12 22:30:11.162  INFO 2996 --- [restartedMain] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2017-09-12 22:30:14.165  INFO 2996 --- [restartedMain] o.s.d.r.w.RepositoryRestHandlerAdapter   : Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@6ec43fc1: startup date [Tue Sep 12 22:29:57 CST 2017]; root of context hierarchy
2017-09-12 22:30:14.215  INFO 2996 --- [restartedMain] o.s.d.r.w.RepositoryRestHandlerMapping   : Mapped "{[/{repository}/{id}/{property}],methods=[GET],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<org.springframework.hateoas.ResourceSupport> org.springframework.data.rest.webmvc.RepositoryPropertyReferenceController.followPropertyReference(org.springframework.data.rest.webmvc.RootResourceInformation,java.io.Serializable,java.lang.String,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler) throws java.lang.Exception
2017-09-12 22:30:14.218  INFO 2996 --- [restartedMain] o.s.d.r.w.RepositoryRestHandlerMapping   : Mapped "{[/{repository}/{id}/{property}/{propertyId}],methods=[GET],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<org.springframework.hateoas.ResourceSupport> org.springframework.data.rest.webmvc.RepositoryPropertyReferenceController.followPropertyReference(org.springframework.data.rest.webmvc.RootResourceInformation,java.io.Serializable,java.lang.String,java.lang.String,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler) throws java.lang.Exception
2017-09-12 22:30:14.219  INFO 2996 --- [restartedMain] o.s.d.r.w.RepositoryRestHandlerMapping   : Mapped "{[/{repository}/{id}/{property}],methods=[DELETE],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<? extends org.springframework.hateoas.ResourceSupport> org.springframework.data.rest.webmvc.RepositoryPropertyReferenceController.deletePropertyReference(org.springframework.data.rest.webmvc.RootResourceInformation,java.io.Serializable,java.lang.String) throws java.lang.Exception
2017-09-12 22:30:14.219  INFO 2996 --- [restartedMain] o.s.d.r.w.RepositoryRestHandlerMapping   : Mapped "{[/{repository}/{id}/{property}],methods=[GET],produces=[application/x-spring-data-compact+json || text/uri-list]}" onto public org.springframework.http.ResponseEntity<org.springframework.hateoas.ResourceSupport> org.springframework.data.rest.webmvc.RepositoryPropertyReferenceController.followPropertyReferenceCompact(org.springframework.data.rest.webmvc.RootResourceInformation,java.io.Serializable,java.lang.String,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler) throws java.lang.Exception
2017-09-12 22:30:14.220  INFO 2996 --- [restartedMain] o.s.d.r.w.RepositoryRestHandlerMapping   : Mapped "{[/{repository}/{id}/{property}],methods=[PATCH || PUT || POST],consumes=[application/json || application/x-spring-data-compact+json || text/uri-list],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<? extends org.springframework.hateoas.ResourceSupport> org.springframework.data.rest.webmvc.RepositoryPropertyReferenceController.createPropertyReference(org.springframework.data.rest.webmvc.RootResourceInformation,org.springframework.http.HttpMethod,org.springframework.hateoas.Resources<java.lang.Object>,java.io.Serializable,java.lang.String) throws java.lang.Exception
2017-09-12 22:30:14.220  INFO 2996 --- [restartedMain] o.s.d.r.w.RepositoryRestHandlerMapping   : Mapped "{[/{repository}/{id}/{property}/{propertyId}],methods=[DELETE],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<org.springframework.hateoas.ResourceSupport> org.springframework.data.rest.webmvc.RepositoryPropertyReferenceController.deletePropertyReferenceId(org.springframework.data.rest.webmvc.RootResourceInformation,java.io.Serializable,java.lang.String,java.lang.String) throws java.lang.Exception
2017-09-12 22:30:14.222  INFO 2996 --- [restartedMain] o.s.d.r.w.RepositoryRestHandlerMapping   : Mapped "{[/{repository}/search],methods=[HEAD],produces=[application/hal+json || application/json]}" onto public org.springframework.http.HttpEntity<?> org.springframework.data.rest.webmvc.RepositorySearchController.headForSearches(org.springframework.data.rest.webmvc.RootResourceInformation)
2017-09-12 22:30:14.223  INFO 2996 --- [restartedMain] o.s.d.r.w.RepositoryRestHandlerMapping   : Mapped "{[/{repository}/search/{search}],methods=[GET],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.data.rest.webmvc.RepositorySearchController.executeSearch(org.springframework.data.rest.webmvc.RootResourceInformation,org.springframework.util.MultiValueMap<java.lang.String, java.lang.Object>,java.lang.String,org.springframework.data.rest.webmvc.support.DefaultedPageable,org.springframework.data.domain.Sort,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler,org.springframework.http.HttpHeaders)
2017-09-12 22:30:14.224  INFO 2996 --- [restartedMain] o.s.d.r.w.RepositoryRestHandlerMapping   : Mapped "{[/{repository}/search],methods=[GET],produces=[application/hal+json || application/json]}" onto public org.springframework.data.rest.webmvc.RepositorySearchesResource org.springframework.data.rest.webmvc.RepositorySearchController.listSearches(org.springframework.data.rest.webmvc.RootResourceInformation)
2017-09-12 22:30:14.226  INFO 2996 --- [restartedMain] o.s.d.r.w.RepositoryRestHandlerMapping   : Mapped "{[/{repository}/search/{search}],methods=[OPTIONS],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<java.lang.Object> org.springframework.data.rest.webmvc.RepositorySearchController.optionsForSearch(org.springframework.data.rest.webmvc.RootResourceInformation,java.lang.String)
2017-09-12 22:30:14.227  INFO 2996 --- [restartedMain] o.s.d.r.w.RepositoryRestHandlerMapping   : Mapped "{[/{repository}/search/{search}],methods=[HEAD],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<java.lang.Object> org.springframework.data.rest.webmvc.RepositorySearchController.headForSearch(org.springframework.data.rest.webmvc.RootResourceInformation,java.lang.String)
2017-09-12 22:30:14.228  INFO 2996 --- [restartedMain] o.s.d.r.w.RepositoryRestHandlerMapping   : Mapped "{[/{repository}/search],methods=[OPTIONS],produces=[application/hal+json || application/json]}" onto public org.springframework.http.HttpEntity<?> org.springframework.data.rest.webmvc.RepositorySearchController.optionsForSearches(org.springframework.data.rest.webmvc.RootResourceInformation)
2017-09-12 22:30:14.228  INFO 2996 --- [restartedMain] o.s.d.r.w.RepositoryRestHandlerMapping   : Mapped "{[/{repository}/search/{search}],methods=[GET],produces=[application/x-spring-data-compact+json]}" onto public org.springframework.hateoas.ResourceSupport org.springframework.data.rest.webmvc.RepositorySearchController.executeSearchCompact(org.springframework.data.rest.webmvc.RootResourceInformation,org.springframework.http.HttpHeaders,org.springframework.util.MultiValueMap<java.lang.String, java.lang.Object>,java.lang.String,java.lang.String,org.springframework.data.rest.webmvc.support.DefaultedPageable,org.springframework.data.domain.Sort,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler)
2017-09-12 22:30:14.229  INFO 2996 --- [restartedMain] o.s.d.r.w.RepositoryRestHandlerMapping   : Mapped "{[/ || ],methods=[GET],produces=[application/hal+json || application/json]}" onto public org.springframework.http.HttpEntity<org.springframework.data.rest.webmvc.RepositoryLinksResource> org.springframework.data.rest.webmvc.RepositoryController.listRepositories()
2017-09-12 22:30:14.230  INFO 2996 --- [restartedMain] o.s.d.r.w.RepositoryRestHandlerMapping   : Mapped "{[/ || ],methods=[OPTIONS],produces=[application/hal+json || application/json]}" onto public org.springframework.http.HttpEntity<?> org.springframework.data.rest.webmvc.RepositoryController.optionsForRepositories()
2017-09-12 22:30:14.230  INFO 2996 --- [restartedMain] o.s.d.r.w.RepositoryRestHandlerMapping   : Mapped "{[/ || ],methods=[HEAD],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.data.rest.webmvc.RepositoryController.headForRepositories()
2017-09-12 22:30:14.237  INFO 2996 --- [restartedMain] o.s.d.r.w.RepositoryRestHandlerMapping   : Mapped "{[/{repository}/{id}],methods=[PUT],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<? extends org.springframework.hateoas.ResourceSupport> org.springframework.data.rest.webmvc.RepositoryEntityController.putItemResource(org.springframework.data.rest.webmvc.RootResourceInformation,org.springframework.data.rest.webmvc.PersistentEntityResource,java.io.Serializable,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler,org.springframework.data.rest.webmvc.support.ETag,java.lang.String) throws org.springframework.web.HttpRequestMethodNotSupportedException
2017-09-12 22:30:14.238  INFO 2996 --- [restartedMain] o.s.d.r.w.RepositoryRestHandlerMapping   : Mapped "{[/{repository}/{id}],methods=[GET],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<org.springframework.hateoas.Resource<?>> org.springframework.data.rest.webmvc.RepositoryEntityController.getItemResource(org.springframework.data.rest.webmvc.RootResourceInformation,java.io.Serializable,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler,org.springframework.http.HttpHeaders) throws org.springframework.web.HttpRequestMethodNotSupportedException
2017-09-12 22:30:14.240  INFO 2996 --- [restartedMain] o.s.d.r.w.RepositoryRestHandlerMapping   : Mapped "{[/{repository}],methods=[OPTIONS],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.data.rest.webmvc.RepositoryEntityController.optionsForCollectionResource(org.springframework.data.rest.webmvc.RootResourceInformation)
2017-09-12 22:30:14.240  INFO 2996 --- [restartedMain] o.s.d.r.w.RepositoryRestHandlerMapping   : Mapped "{[/{repository}],methods=[HEAD],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.data.rest.webmvc.RepositoryEntityController.headCollectionResource(org.springframework.data.rest.webmvc.RootResourceInformation,org.springframework.data.rest.webmvc.support.DefaultedPageable) throws org.springframework.web.HttpRequestMethodNotSupportedException
2017-09-12 22:30:14.241  INFO 2996 --- [restartedMain] o.s.d.r.w.RepositoryRestHandlerMapping   : Mapped "{[/{repository}],methods=[GET],produces=[application/hal+json || application/json]}" onto public org.springframework.hateoas.Resources<?> org.springframework.data.rest.webmvc.RepositoryEntityController.getCollectionResource(org.springframework.data.rest.webmvc.RootResourceInformation,org.springframework.data.rest.webmvc.support.DefaultedPageable,org.springframework.data.domain.Sort,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler) throws org.springframework.data.rest.webmvc.ResourceNotFoundException,org.springframework.web.HttpRequestMethodNotSupportedException
2017-09-12 22:30:14.242  INFO 2996 --- [restartedMain] o.s.d.r.w.RepositoryRestHandlerMapping   : Mapped "{[/{repository}],methods=[GET],produces=[application/x-spring-data-compact+json || text/uri-list]}" onto public org.springframework.hateoas.Resources<?> org.springframework.data.rest.webmvc.RepositoryEntityController.getCollectionResourceCompact(org.springframework.data.rest.webmvc.RootResourceInformation,org.springframework.data.rest.webmvc.support.DefaultedPageable,org.springframework.data.domain.Sort,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler) throws org.springframework.data.rest.webmvc.ResourceNotFoundException,org.springframework.web.HttpRequestMethodNotSupportedException
2017-09-12 22:30:14.242  INFO 2996 --- [restartedMain] o.s.d.r.w.RepositoryRestHandlerMapping   : Mapped "{[/{repository}],methods=[POST],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<org.springframework.hateoas.ResourceSupport> org.springframework.data.rest.webmvc.RepositoryEntityController.postCollectionResource(org.springframework.data.rest.webmvc.RootResourceInformation,org.springframework.data.rest.webmvc.PersistentEntityResource,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler,java.lang.String) throws org.springframework.web.HttpRequestMethodNotSupportedException
2017-09-12 22:30:14.243  INFO 2996 --- [restartedMain] o.s.d.r.w.RepositoryRestHandlerMapping   : Mapped "{[/{repository}/{id}],methods=[OPTIONS],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.data.rest.webmvc.RepositoryEntityController.optionsForItemResource(org.springframework.data.rest.webmvc.RootResourceInformation)
2017-09-12 22:30:14.244  INFO 2996 --- [restartedMain] o.s.d.r.w.RepositoryRestHandlerMapping   : Mapped "{[/{repository}/{id}],methods=[HEAD],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.data.rest.webmvc.RepositoryEntityController.headForItemResource(org.springframework.data.rest.webmvc.RootResourceInformation,java.io.Serializable,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler) throws org.springframework.web.HttpRequestMethodNotSupportedException
2017-09-12 22:30:14.245  INFO 2996 --- [restartedMain] o.s.d.r.w.RepositoryRestHandlerMapping   : Mapped "{[/{repository}/{id}],methods=[PATCH],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<org.springframework.hateoas.ResourceSupport> org.springframework.data.rest.webmvc.RepositoryEntityController.patchItemResource(org.springframework.data.rest.webmvc.RootResourceInformation,org.springframework.data.rest.webmvc.PersistentEntityResource,java.io.Serializable,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler,org.springframework.data.rest.webmvc.support.ETag,java.lang.String) throws org.springframework.web.HttpRequestMethodNotSupportedException,org.springframework.data.rest.webmvc.ResourceNotFoundException
2017-09-12 22:30:14.251  INFO 2996 --- [restartedMain] o.s.d.r.w.RepositoryRestHandlerMapping   : Mapped "{[/{repository}/{id}],methods=[DELETE],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.data.rest.webmvc.RepositoryEntityController.deleteItemResource(org.springframework.data.rest.webmvc.RootResourceInformation,java.io.Serializable,org.springframework.data.rest.webmvc.support.ETag) throws org.springframework.data.rest.webmvc.ResourceNotFoundException,org.springframework.web.HttpRequestMethodNotSupportedException
2017-09-12 22:30:14.262  INFO 2996 --- [restartedMain] o.s.d.r.w.BasePathAwareHandlerMapping    : Mapped "{[/profile],methods=[OPTIONS]}" onto public org.springframework.http.HttpEntity<?> org.springframework.data.rest.webmvc.ProfileController.profileOptions()
2017-09-12 22:30:14.262  INFO 2996 --- [restartedMain] o.s.d.r.w.BasePathAwareHandlerMapping    : Mapped "{[/profile],methods=[GET]}" onto org.springframework.http.HttpEntity<org.springframework.hateoas.ResourceSupport> org.springframework.data.rest.webmvc.ProfileController.listAllFormsOfMetadata()
2017-09-12 22:30:14.263  INFO 2996 --- [restartedMain] o.s.d.r.w.BasePathAwareHandlerMapping    : Mapped "{[/profile/{repository}],methods=[GET],produces=[application/schema+json]}" onto public org.springframework.http.HttpEntity<org.springframework.data.rest.webmvc.json.JsonSchema> org.springframework.data.rest.webmvc.RepositorySchemaController.schema(org.springframework.data.rest.webmvc.RootResourceInformation)
2017-09-12 22:30:14.264  INFO 2996 --- [restartedMain] o.s.d.r.w.BasePathAwareHandlerMapping    : Mapped "{[/profile/{repository}],methods=[GET],produces=[application/alps+json || */*]}" onto org.springframework.http.HttpEntity<org.springframework.data.rest.webmvc.RootResourceInformation> org.springframework.data.rest.webmvc.alps.AlpsController.descriptor(org.springframework.data.rest.webmvc.RootResourceInformation)
2017-09-12 22:30:14.264  INFO 2996 --- [restartedMain] o.s.d.r.w.BasePathAwareHandlerMapping    : Mapped "{[/profile/{repository}],methods=[OPTIONS],produces=[application/alps+json]}" onto org.springframework.http.HttpEntity<?> org.springframework.data.rest.webmvc.alps.AlpsController.alpsOptions()
2017-09-12 22:30:15.171  INFO 2996 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2017-09-12 22:30:15.708  INFO 2996 --- [restartedMain] o.s.j.e.a.AnnotationMBeanExporter        : Registering beans for JMX exposure on startup
2017-09-12 22:30:15.711  INFO 2996 --- [restartedMain] o.s.j.e.a.AnnotationMBeanExporter        : Bean with name 'statFilter' has been autodetected for JMX exposure
2017-09-12 22:30:15.712  INFO 2996 --- [restartedMain] o.s.j.e.a.AnnotationMBeanExporter        : Bean with name 'dataSource' has been autodetected for JMX exposure
2017-09-12 22:30:15.728  INFO 2996 --- [restartedMain] o.s.j.e.a.AnnotationMBeanExporter        : Bean with name 'rabbitConnectionFactory' has been autodetected for JMX exposure
2017-09-12 22:30:15.733  INFO 2996 --- [restartedMain] o.s.j.e.a.AnnotationMBeanExporter        : Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2017-09-12 22:30:15.735  INFO 2996 --- [restartedMain] o.s.j.e.a.AnnotationMBeanExporter        : Located managed bean 'rabbitConnectionFactory': registering with JMX server as MBean [org.springframework.amqp.rabbit.connection:name=rabbitConnectionFactory,type=CachingConnectionFactory]
2017-09-12 22:30:15.843  INFO 2996 --- [restartedMain] o.s.j.e.a.AnnotationMBeanExporter        : Located MBean 'statFilter': registering with JMX server as MBean [com.alibaba.druid.filter.stat:name=statFilter,type=StatFilter]
2017-09-12 22:30:15.851  INFO 2996 --- [restartedMain] o.s.c.support.DefaultLifecycleProcessor  : Starting beans in phase -2147482648
2017-09-12 22:30:15.851  INFO 2996 --- [restartedMain] o.s.c.support.DefaultLifecycleProcessor  : Starting beans in phase 2147483647
2017-09-12 22:30:16.042  INFO 2996 --- [restartedMain] s.b.c.e.t.TomcatEmbeddedServletContainer : Tomcat started on port(s): 8080 (http)
2017-09-12 22:30:16.075  INFO 2996 --- [restartedMain] pers.platform.blog.Application           : Started Application in 20.1 seconds (JVM running for 21.017)
2017-09-12 22:32:46.391  INFO 2996 --- [Thread-8] ationConfigEmbeddedWebApplicationContext : Closing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@6ec43fc1: startup date [Tue Sep 12 22:29:57 CST 2017]; root of context hierarchy
2017-09-12 22:32:46.400  INFO 2996 --- [Thread-8] o.s.c.support.DefaultLifecycleProcessor  : Stopping beans in phase 2147483647
2017-09-12 22:32:46.401  INFO 2996 --- [Thread-8] o.s.c.support.DefaultLifecycleProcessor  : Stopping beans in phase -2147482648
2017-09-12 22:32:46.406  INFO 2996 --- [Thread-8] o.s.j.e.a.AnnotationMBeanExporter        : Unregistering JMX-exposed beans on shutdown
2017-09-12 22:32:46.407  INFO 2996 --- [Thread-8] o.s.j.e.a.AnnotationMBeanExporter        : Unregistering JMX-exposed beans
2017-09-12 22:32:46.413  INFO 2996 --- [Thread-8] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2017-09-12 22:32:46.423  INFO 2996 --- [Thread-8] com.alibaba.druid.pool.DruidDataSource   : {dataSource-1} closed
2017-09-12 22:32:46.635  INFO 2996 --- [localhost-startStop-2] p.p.blog.controller.InitComponent        : deregistering jdbc driver: com.alibaba.druid.mock.MockDriver@4fd33d98
2017-09-12 22:32:46.635  INFO 2996 --- [localhost-startStop-2] p.p.blog.controller.InitComponent        : deregistering jdbc driver: com.mysql.jdbc.Driver@43deb4a0
2017-09-12 22:32:46.635  INFO 2996 --- [localhost-startStop-2] p.p.blog.controller.InitComponent        : deregistering jdbc driver: com.mysql.fabric.jdbc.FabricMySQLDriver@64ba8986
2017-09-12 22:32:46.635  INFO 2996 --- [localhost-startStop-2] p.p.blog.controller.InitComponent        : deregistering jdbc driver: com.alibaba.druid.proxy.DruidDriver@5a1815ce
2017-09-12 22:32:47.141  INFO 2996 --- [restartedMain] pers.platform.blog.Application           : Starting Application on PC-20160914JGKD with PID 2996 (E:\workspace\pers-cc-platform\pers-platform-blog-web\target\classes started by Administrator in E:\workspace\pers-cc-platform\pers-platform-blog-web)
2017-09-12 22:32:47.142 DEBUG 2996 --- [restartedMain] pers.platform.blog.Application           : Running with Spring Boot v1.5.2.RELEASE, Spring v4.3.7.RELEASE
2017-09-12 22:32:47.142  INFO 2996 --- [restartedMain] pers.platform.blog.Application           : The following profiles are active: profile
2017-09-12 22:32:47.149  INFO 2996 --- [restartedMain] ationConfigEmbeddedWebApplicationContext : Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@52bf90a5: startup date [Tue Sep 12 22:32:47 CST 2017]; root of context hierarchy
2017-09-12 22:32:48.783  INFO 2996 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2017-09-12 22:32:48.811  INFO 2996 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2017-09-12 22:32:48.830  INFO 2996 --- [restartedMain] o.s.b.f.s.DefaultListableBeanFactory     : Overriding bean definition for bean 'httpRequestHandlerAdapter' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.boot.autoconfigure.web.WebMvcAutoConfiguration$EnableWebMvcConfiguration; factoryMethodName=httpRequestHandlerAdapter; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/boot/autoconfigure/web/WebMvcAutoConfiguration$EnableWebMvcConfiguration.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.data.rest.webmvc.config.RepositoryRestMvcConfiguration; factoryMethodName=httpRequestHandlerAdapter; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/data/rest/webmvc/config/RepositoryRestMvcConfiguration.class]]
2017-09-12 22:32:48.920  INFO 2996 --- [restartedMain] o.s.b.f.s.DefaultListableBeanFactory     : Overriding bean definition for bean 'dataSource' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure; factoryMethodName=dataSource; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/alibaba/druid/spring/boot/autoconfigure/DruidDataSourceAutoConfigure.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=true; factoryBeanName=spring.datasource-pers.platform.blog.config.DruidDBConfig; factoryMethodName=dataSource; initMethodName=null; destroyMethodName=(inferred); defined in pers.platform.blog.config.DruidDBConfig]
2017-09-12 22:32:48.997  INFO 2996 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.amqp.rabbit.annotation.RabbitBootstrapConfiguration' of type [org.springframework.amqp.rabbit.annotation.RabbitBootstrapConfiguration$$EnhancerBySpringCGLIB$$2c7179c5] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017-09-12 22:32:49.028  INFO 2996 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$6605bb97] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017-09-12 22:32:49.056  INFO 2996 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'reidsConfig' of type [pers.platform.blog.config.ReidsConfig$$EnhancerBySpringCGLIB$$1b785740] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017-09-12 22:32:49.070  INFO 2996 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'keyGenerator' of type [pers.platform.blog.config.ReidsConfig$1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017-09-12 22:32:49.071  INFO 2996 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.cache.annotation.ProxyCachingConfiguration' of type [org.springframework.cache.annotation.ProxyCachingConfiguration$$EnhancerBySpringCGLIB$$af17f1b5] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017-09-12 22:32:49.093  INFO 2996 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'shiroConfig' of type [pers.platform.blog.config.ShiroConfig$$EnhancerBySpringCGLIB$$7011f20c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017-09-12 22:32:49.137  INFO 2996 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'myShiroRealm' of type [pers.platform.blog.realm.MyRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017-09-12 22:32:49.150  INFO 2996 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017-09-12 22:32:49.181  INFO 2996 --- [restartedMain] pers.platform.blog.config.ShiroConfig    : 注入Shiro的Web过滤器-->shiroFilter
2017-09-12 22:32:49.405  INFO 2996 --- [restartedMain] s.b.c.e.t.TomcatEmbeddedServletContainer : Tomcat initialized with port(s): 8080 (http)
2017-09-12 22:32:49.406  INFO 2996 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service Tomcat
2017-09-12 22:32:49.407  INFO 2996 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet Engine: Apache Tomcat/8.5.11
2017-09-12 22:32:49.418  INFO 2996 --- [localhost-startStop-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2017-09-12 22:32:49.419  INFO 2996 --- [localhost-startStop-1] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 2270 ms
2017-09-12 22:32:49.702  INFO 2996 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'characterEncodingFilter' to: [/*]
2017-09-12 22:32:49.703  INFO 2996 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2017-09-12 22:32:49.703  INFO 2996 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'httpPutFormContentFilter' to: [/*]
2017-09-12 22:32:49.704  INFO 2996 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'requestContextFilter' to: [/*]
2017-09-12 22:32:49.704  INFO 2996 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'delegatingFilterProxy' to: [/*]
2017-09-12 22:32:49.704  INFO 2996 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'webStatFilter' to urls: [/*]
2017-09-12 22:32:49.704  INFO 2996 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Filter webStatFilter was not registered (possibly already registered?)
2017-09-12 22:32:49.704  INFO 2996 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'shiroFilter' to: [/*]
2017-09-12 22:32:49.704  INFO 2996 --- [localhost-startStop-1] o.s.b.w.servlet.ServletRegistrationBean  : Mapping servlet: 'statViewServlet' to [/druid/*]
2017-09-12 22:32:49.705  INFO 2996 --- [localhost-startStop-1] o.s.b.w.servlet.ServletRegistrationBean  : Mapping servlet: 'dispatcherServlet' to [/]
2017-09-12 22:32:49.705  INFO 2996 --- [localhost-startStop-1] o.s.b.w.servlet.ServletRegistrationBean  : Mapping servlet: 'statViewServlet' to [/druid/*]
2017-09-12 22:32:49.705  INFO 2996 --- [localhost-startStop-1] o.s.b.w.servlet.ServletRegistrationBean  : Servlet statViewServlet was not registered (possibly already registered?)
2017-09-12 22:32:50.161  INFO 2996 --- [localhost-startStop-1] com.alibaba.druid.pool.DruidDataSource   : {dataSource-2} inited
2017-09-12 22:32:50.162 DEBUG 2996 --- [localhost-startStop-1] p.p.blog.repository.BloggerRepo.find     : ==>  Preparing: select * from t_blogger where id=? 
2017-09-12 22:32:50.164 DEBUG 2996 --- [localhost-startStop-1] p.p.blog.repository.BloggerRepo.find     : ==> Parameters: 1(String)
2017-09-12 22:32:50.172 DEBUG 2996 --- [localhost-startStop-1] p.p.blog.repository.BloggerRepo.find     : <==      Total: 1
2017-09-12 22:32:50.207 DEBUG 2996 --- [localhost-startStop-1] p.p.blog.repository.LinkRepo.list        : ==>  Preparing: select * from t_link order by orderNo 
2017-09-12 22:32:50.208 DEBUG 2996 --- [localhost-startStop-1] p.p.blog.repository.LinkRepo.list        : ==> Parameters: 
2017-09-12 22:32:50.211 DEBUG 2996 --- [localhost-startStop-1] p.p.blog.repository.LinkRepo.list        : <==      Total: 2
2017-09-12 22:32:50.242 DEBUG 2996 --- [localhost-startStop-1] p.p.b.repository.BlogTypeRepo.countList  : ==>  Preparing: SELECT t2.id,t2.`typeName`,COUNT(t1.id) AS blogCount FROM t_blog t1 RIGHT JOIN t_blogType t2 ON t1.typeId=t2.id GROUP BY t2.id,t2.typeName ORDER BY t2.orderNo; 
2017-09-12 22:32:50.244 DEBUG 2996 --- [localhost-startStop-1] p.p.b.repository.BlogTypeRepo.countList  : ==> Parameters: 
2017-09-12 22:32:50.253 DEBUG 2996 --- [localhost-startStop-1] p.p.b.repository.BlogTypeRepo.countList  : <==      Total: 17
2017-09-12 22:32:50.291 DEBUG 2996 --- [localhost-startStop-1] p.p.blog.repository.BlogRepo.countList   : ==>  Preparing: SELECT DATE_FORMAT (releaseDate,'%Y年%m月') AS releaseDateStr,COUNT(*) AS blogCount FROM t_blog GROUP BY DATE_FORMAT (releaseDate,'%Y年%m月') ORDER BY DATE_FORMAT (releaseDate,'%Y年%m月') DESC 
2017-09-12 22:32:50.293 DEBUG 2996 --- [localhost-startStop-1] p.p.blog.repository.BlogRepo.countList   : ==> Parameters: 
2017-09-12 22:32:50.298 DEBUG 2996 --- [localhost-startStop-1] p.p.blog.repository.BlogRepo.countList   : <==      Total: 12
2017-09-12 22:32:50.411  INFO 2996 --- [restartedMain] j.LocalContainerEntityManagerFactoryBean : Building JPA container EntityManagerFactory for persistence unit 'default'
2017-09-12 22:32:50.412  INFO 2996 --- [restartedMain] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
2017-09-12 22:32:50.736  INFO 2996 --- [restartedMain] org.hibernate.dialect.Dialect            : HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
2017-09-12 22:32:50.756  INFO 2996 --- [restartedMain] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2017-09-12 22:32:51.975  INFO 2996 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerAdapter : Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@52bf90a5: startup date [Tue Sep 12 22:32:47 CST 2017]; root of context hierarchy
2017-09-12 22:32:52.019  INFO 2996 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/],methods=[GET]}" onto public java.lang.String pers.platform.blog.Application.index()
2017-09-12 22:32:52.020  INFO 2996 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/blog/q]}" onto public org.springframework.web.servlet.ModelAndView pers.platform.blog.controller.BlogController.search(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2017-09-12 22:32:52.020  INFO 2996 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/blog/articles/{id}.html]}" onto private org.springframework.web.servlet.ModelAndView pers.platform.blog.controller.BlogController.details(java.lang.String,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2017-09-12 22:32:52.020  INFO 2996 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cc/login.html]}" onto public java.lang.String pers.platform.blog.controller.BloggerController.login(pers.platform.blog.model.Blogger,javax.servlet.http.HttpServletRequest)
2017-09-12 22:32:52.021  INFO 2996 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/blogger/aboutMe.html]}" onto public org.springframework.web.servlet.ModelAndView pers.platform.blog.controller.BloggerController.aboutMe() throws java.lang.Exception
2017-09-12 22:32:52.022  INFO 2996 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cc/blog/delete.html]}" onto public java.lang.String pers.platform.blog.controller.cc.BlogCcController.delete(java.lang.String,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2017-09-12 22:32:52.022  INFO 2996 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cc/blog/list.html]}" onto public java.lang.String pers.platform.blog.controller.cc.BlogCcController.list(java.lang.String,java.lang.String,pers.platform.blog.model.Blog,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2017-09-12 22:32:52.022  INFO 2996 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cc/blog/save.html]}" onto public java.lang.String pers.platform.blog.controller.cc.BlogCcController.save(pers.platform.blog.model.Blog,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2017-09-12 22:32:52.022  INFO 2996 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cc/blog/findById.html]}" onto public java.lang.String pers.platform.blog.controller.cc.BlogCcController.findById(java.lang.String,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2017-09-12 22:32:52.022  INFO 2996 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cc/blog/uploadPastImage]}" onto public java.lang.String pers.platform.blog.controller.cc.BlogCcController.uploadPastImage(javax.servlet.http.HttpServletRequest,java.lang.String) throws java.lang.Exception
2017-09-12 22:32:52.023  INFO 2996 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cc/blog/ckeditorUpload]}" onto public java.lang.String pers.platform.blog.controller.cc.BlogCcController.upLoadImage(javax.servlet.http.HttpServletRequest,org.springframework.web.multipart.MultipartFile,java.lang.String) throws java.lang.Exception
2017-09-12 22:32:52.024  INFO 2996 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cc/blog/modifyBlog.html]}" onto public org.springframework.web.servlet.ModelAndView pers.platform.blog.controller.cc.BlogCcController.modifyBlog(java.lang.String,javax.servlet.http.HttpServletResponse)
2017-09-12 22:32:52.024  INFO 2996 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cc/blogger/find.html]}" onto public java.lang.String pers.platform.blog.controller.cc.BloggerCcController.find(javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2017-09-12 22:32:52.025  INFO 2996 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cc/blogger/save.html]}" onto public java.lang.String pers.platform.blog.controller.cc.BloggerCcController.save(org.springframework.web.multipart.MultipartFile,pers.platform.blog.model.Blogger,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2017-09-12 22:32:52.051  INFO 2996 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cc/blogger/logout.html]}" onto public java.lang.String pers.platform.blog.controller.cc.BloggerCcController.logout() throws java.lang.Exception
2017-09-12 22:32:52.051  INFO 2996 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cc/blogger/modifyPassword.html]}" onto public java.lang.String pers.platform.blog.controller.cc.BloggerCcController.modifyPassword(java.lang.String,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2017-09-12 22:32:52.052  INFO 2996 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cc/blogType/delete.html]}" onto public java.lang.String pers.platform.blog.controller.cc.BlogTypeCcController.delete(java.lang.String,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2017-09-12 22:32:52.053  INFO 2996 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cc/blogType/list.html]}" onto public java.lang.String pers.platform.blog.controller.cc.BlogTypeCcController.list(java.lang.String,java.lang.String,pers.platform.blog.model.BlogType,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2017-09-12 22:32:52.053  INFO 2996 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cc/blogType/save.html]}" onto public java.lang.String pers.platform.blog.controller.cc.BlogTypeCcController.save(pers.platform.blog.model.BlogType,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2017-09-12 22:32:52.053  INFO 2996 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cc/blogType/findById.html]}" onto public java.lang.String pers.platform.blog.controller.cc.BlogTypeCcController.findById(java.lang.String,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2017-09-12 22:32:52.053  INFO 2996 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cc/comment/delete.html]}" onto public java.lang.String pers.platform.blog.controller.cc.CommentCcController.delete(java.lang.String,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2017-09-12 22:32:52.053  INFO 2996 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cc/comment/review.html]}" onto public java.lang.String pers.platform.blog.controller.cc.CommentCcController.delete(java.lang.String,java.lang.Integer,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2017-09-12 22:32:52.054  INFO 2996 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cc/comment/list.html]}" onto public java.lang.String pers.platform.blog.controller.cc.CommentCcController.list(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2017-09-12 22:32:52.054  INFO 2996 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cc/link/delete.html]}" onto public java.lang.String pers.platform.blog.controller.cc.LinkCcController.delete(java.lang.String,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2017-09-12 22:32:52.054  INFO 2996 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cc/link/list.html]}" onto public java.lang.String pers.platform.blog.controller.cc.LinkCcController.list(java.lang.String,java.lang.String,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2017-09-12 22:32:52.055  INFO 2996 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cc/link/save.html]}" onto public java.lang.String pers.platform.blog.controller.cc.LinkCcController.save(pers.platform.blog.model.Link,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2017-09-12 22:32:52.055  INFO 2996 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cc/system/refreshSystem.html]}" onto public java.lang.String pers.platform.blog.controller.cc.SystemCcController.refreshSystem(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2017-09-12 22:32:52.055  INFO 2996 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/comment/save.html]}" onto public java.lang.String pers.platform.blog.controller.CommentController.save(pers.platform.blog.model.Comment,java.lang.String,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpSession) throws java.lang.Exception
2017-09-12 22:32:52.056  INFO 2996 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/index]}" onto public org.springframework.web.servlet.ModelAndView pers.platform.blog.controller.IndexContrller.index(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2017-09-12 22:32:52.056  INFO 2996 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/download.html]}" onto public org.springframework.web.servlet.ModelAndView pers.platform.blog.controller.IndexContrller.download() throws java.lang.Exception
2017-09-12 22:32:52.058  INFO 2996 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2017-09-12 22:32:52.059  INFO 2996 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2017-09-12 22:32:52.092  INFO 2996 --- [restartedMain] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/cc/main.html] onto handler of type [class org.springframework.web.servlet.mvc.ParameterizableViewController]
2017-09-12 22:32:52.092  INFO 2996 --- [restartedMain] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/cc/blog.html] onto handler of type [class org.springframework.web.servlet.mvc.ParameterizableViewController]
2017-09-12 22:32:52.092  INFO 2996 --- [restartedMain] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/cc/commentReview.html] onto handler of type [class org.springframework.web.servlet.mvc.ParameterizableViewController]
2017-09-12 22:32:52.092  INFO 2996 --- [restartedMain] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/cc/blogManage.html] onto handler of type [class org.springframework.web.servlet.mvc.ParameterizableViewController]
2017-09-12 22:32:52.092  INFO 2996 --- [restartedMain] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/cc/blogTypeManage.html] onto handler of type [class org.springframework.web.servlet.mvc.ParameterizableViewController]
2017-09-12 22:32:52.093  INFO 2996 --- [restartedMain] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/cc/commentManage.html] onto handler of type [class org.springframework.web.servlet.mvc.ParameterizableViewController]
2017-09-12 22:32:52.093  INFO 2996 --- [restartedMain] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/cc/modifyInfo.html] onto handler of type [class org.springframework.web.servlet.mvc.ParameterizableViewController]
2017-09-12 22:32:52.093  INFO 2996 --- [restartedMain] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/cc/linkManage.html] onto handler of type [class org.springframework.web.servlet.mvc.ParameterizableViewController]
2017-09-12 22:32:52.199  INFO 2996 --- [restartedMain] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2017-09-12 22:32:52.200  INFO 2996 --- [restartedMain] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2017-09-12 22:32:52.223  INFO 2996 --- [restartedMain] .m.m.a.ExceptionHandlerExceptionResolver : Detected @ExceptionHandler methods in repositoryRestExceptionHandler
2017-09-12 22:32:52.287  INFO 2996 --- [restartedMain] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2017-09-12 22:32:52.984  INFO 2996 --- [restartedMain] o.s.d.r.w.RepositoryRestHandlerAdapter   : Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@52bf90a5: startup date [Tue Sep 12 22:32:47 CST 2017]; root of context hierarchy
2017-09-12 22:32:53.015  INFO 2996 --- [restartedMain] o.s.d.r.w.RepositoryRestHandlerMapping   : Mapped "{[/{repository}/{id}/{property}],methods=[GET],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<org.springframework.hateoas.ResourceSupport> org.springframework.data.rest.webmvc.RepositoryPropertyReferenceController.followPropertyReference(org.springframework.data.rest.webmvc.RootResourceInformation,java.io.Serializable,java.lang.String,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler) throws java.lang.Exception
2017-09-12 22:32:53.016  INFO 2996 --- [restartedMain] o.s.d.r.w.RepositoryRestHandlerMapping   : Mapped "{[/{repository}/{id}/{property}/{propertyId}],methods=[GET],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<org.springframework.hateoas.ResourceSupport> org.springframework.data.rest.webmvc.RepositoryPropertyReferenceController.followPropertyReference(org.springframework.data.rest.webmvc.RootResourceInformation,java.io.Serializable,java.lang.String,java.lang.String,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler) throws java.lang.Exception
2017-09-12 22:32:53.016  INFO 2996 --- [restartedMain] o.s.d.r.w.RepositoryRestHandlerMapping   : Mapped "{[/{repository}/{id}/{property}],methods=[DELETE],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<? extends org.springframework.hateoas.ResourceSupport> org.springframework.data.rest.webmvc.RepositoryPropertyReferenceController.deletePropertyReference(org.springframework.data.rest.webmvc.RootResourceInformation,java.io.Serializable,java.lang.String) throws java.lang.Exception
2017-09-12 22:32:53.017  INFO 2996 --- [restartedMain] o.s.d.r.w.RepositoryRestHandlerMapping   : Mapped "{[/{repository}/{id}/{property}],methods=[GET],produces=[application/x-spring-data-compact+json || text/uri-list]}" onto public org.springframework.http.ResponseEntity<org.springframework.hateoas.ResourceSupport> org.springframework.data.rest.webmvc.RepositoryPropertyReferenceController.followPropertyReferenceCompact(org.springframework.data.rest.webmvc.RootResourceInformation,java.io.Serializable,java.lang.String,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler) throws java.lang.Exception
2017-09-12 22:32:53.018  INFO 2996 --- [restartedMain] o.s.d.r.w.RepositoryRestHandlerMapping   : Mapped "{[/{repository}/{id}/{property}],methods=[PATCH || PUT || POST],consumes=[application/json || application/x-spring-data-compact+json || text/uri-list],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<? extends org.springframework.hateoas.ResourceSupport> org.springframework.data.rest.webmvc.RepositoryPropertyReferenceController.createPropertyReference(org.springframework.data.rest.webmvc.RootResourceInformation,org.springframework.http.HttpMethod,org.springframework.hateoas.Resources<java.lang.Object>,java.io.Serializable,java.lang.String) throws java.lang.Exception
2017-09-12 22:32:53.018  INFO 2996 --- [restartedMain] o.s.d.r.w.RepositoryRestHandlerMapping   : Mapped "{[/{repository}/{id}/{property}/{propertyId}],methods=[DELETE],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<org.springframework.hateoas.ResourceSupport> org.springframework.data.rest.webmvc.RepositoryPropertyReferenceController.deletePropertyReferenceId(org.springframework.data.rest.webmvc.RootResourceInformation,java.io.Serializable,java.lang.String,java.lang.String) throws java.lang.Exception
2017-09-12 22:32:53.020  INFO 2996 --- [restartedMain] o.s.d.r.w.RepositoryRestHandlerMapping   : Mapped "{[/{repository}/search],methods=[HEAD],produces=[application/hal+json || application/json]}" onto public org.springframework.http.HttpEntity<?> org.springframework.data.rest.webmvc.RepositorySearchController.headForSearches(org.springframework.data.rest.webmvc.RootResourceInformation)
2017-09-12 22:32:53.021  INFO 2996 --- [restartedMain] o.s.d.r.w.RepositoryRestHandlerMapping   : Mapped "{[/{repository}/search/{search}],methods=[GET],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.data.rest.webmvc.RepositorySearchController.executeSearch(org.springframework.data.rest.webmvc.RootResourceInformation,org.springframework.util.MultiValueMap<java.lang.String, java.lang.Object>,java.lang.String,org.springframework.data.rest.webmvc.support.DefaultedPageable,org.springframework.data.domain.Sort,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler,org.springframework.http.HttpHeaders)
2017-09-12 22:32:53.028  INFO 2996 --- [restartedMain] o.s.d.r.w.RepositoryRestHandlerMapping   : Mapped "{[/{repository}/search],methods=[GET],produces=[application/hal+json || application/json]}" onto public org.springframework.data.rest.webmvc.RepositorySearchesResource org.springframework.data.rest.webmvc.RepositorySearchController.listSearches(org.springframework.data.rest.webmvc.RootResourceInformation)
2017-09-12 22:32:53.029  INFO 2996 --- [restartedMain] o.s.d.r.w.RepositoryRestHandlerMapping   : Mapped "{[/{repository}/search/{search}],methods=[OPTIONS],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<java.lang.Object> org.springframework.data.rest.webmvc.RepositorySearchController.optionsForSearch(org.springframework.data.rest.webmvc.RootResourceInformation,java.lang.String)
2017-09-12 22:32:53.029  INFO 2996 --- [restartedMain] o.s.d.r.w.RepositoryRestHandlerMapping   : Mapped "{[/{repository}/search/{search}],methods=[HEAD],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<java.lang.Object> org.springframework.data.rest.webmvc.RepositorySearchController.headForSearch(org.springframework.data.rest.webmvc.RootResourceInformation,java.lang.String)
2017-09-12 22:32:53.030  INFO 2996 --- [restartedMain] o.s.d.r.w.RepositoryRestHandlerMapping   : Mapped "{[/{repository}/search],methods=[OPTIONS],produces=[application/hal+json || application/json]}" onto public org.springframework.http.HttpEntity<?> org.springframework.data.rest.webmvc.RepositorySearchController.optionsForSearches(org.springframework.data.rest.webmvc.RootResourceInformation)
2017-09-12 22:32:53.030  INFO 2996 --- [restartedMain] o.s.d.r.w.RepositoryRestHandlerMapping   : Mapped "{[/{repository}/search/{search}],methods=[GET],produces=[application/x-spring-data-compact+json]}" onto public org.springframework.hateoas.ResourceSupport org.springframework.data.rest.webmvc.RepositorySearchController.executeSearchCompact(org.springframework.data.rest.webmvc.RootResourceInformation,org.springframework.http.HttpHeaders,org.springframework.util.MultiValueMap<java.lang.String, java.lang.Object>,java.lang.String,java.lang.String,org.springframework.data.rest.webmvc.support.DefaultedPageable,org.springframework.data.domain.Sort,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler)
2017-09-12 22:32:53.031  INFO 2996 --- [restartedMain] o.s.d.r.w.RepositoryRestHandlerMapping   : Mapped "{[/ || ],methods=[GET],produces=[application/hal+json || application/json]}" onto public org.springframework.http.HttpEntity<org.springframework.data.rest.webmvc.RepositoryLinksResource> org.springframework.data.rest.webmvc.RepositoryController.listRepositories()
2017-09-12 22:32:53.032  INFO 2996 --- [restartedMain] o.s.d.r.w.RepositoryRestHandlerMapping   : Mapped "{[/ || ],methods=[OPTIONS],produces=[application/hal+json || application/json]}" onto public org.springframework.http.HttpEntity<?> org.springframework.data.rest.webmvc.RepositoryController.optionsForRepositories()
2017-09-12 22:32:53.032  INFO 2996 --- [restartedMain] o.s.d.r.w.RepositoryRestHandlerMapping   : Mapped "{[/ || ],methods=[HEAD],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.data.rest.webmvc.RepositoryController.headForRepositories()
2017-09-12 22:32:53.034  INFO 2996 --- [restartedMain] o.s.d.r.w.RepositoryRestHandlerMapping   : Mapped "{[/{repository}/{id}],methods=[PUT],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<? extends org.springframework.hateoas.ResourceSupport> org.springframework.data.rest.webmvc.RepositoryEntityController.putItemResource(org.springframework.data.rest.webmvc.RootResourceInformation,org.springframework.data.rest.webmvc.PersistentEntityResource,java.io.Serializable,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler,org.springframework.data.rest.webmvc.support.ETag,java.lang.String) throws org.springframework.web.HttpRequestMethodNotSupportedException
2017-09-12 22:32:53.034  INFO 2996 --- [restartedMain] o.s.d.r.w.RepositoryRestHandlerMapping   : Mapped "{[/{repository}/{id}],methods=[GET],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<org.springframework.hateoas.Resource<?>> org.springframework.data.rest.webmvc.RepositoryEntityController.getItemResource(org.springframework.data.rest.webmvc.RootResourceInformation,java.io.Serializable,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler,org.springframework.http.HttpHeaders) throws org.springframework.web.HttpRequestMethodNotSupportedException
2017-09-12 22:32:53.050  INFO 2996 --- [restartedMain] o.s.d.r.w.RepositoryRestHandlerMapping   : Mapped "{[/{repository}],methods=[OPTIONS],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.data.rest.webmvc.RepositoryEntityController.optionsForCollectionResource(org.springframework.data.rest.webmvc.RootResourceInformation)
2017-09-12 22:32:53.050  INFO 2996 --- [restartedMain] o.s.d.r.w.RepositoryRestHandlerMapping   : Mapped "{[/{repository}],methods=[HEAD],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.data.rest.webmvc.RepositoryEntityController.headCollectionResource(org.springframework.data.rest.webmvc.RootResourceInformation,org.springframework.data.rest.webmvc.support.DefaultedPageable) throws org.springframework.web.HttpRequestMethodNotSupportedException
2017-09-12 22:32:53.051  INFO 2996 --- [restartedMain] o.s.d.r.w.RepositoryRestHandlerMapping   : Mapped "{[/{repository}],methods=[GET],produces=[application/hal+json || application/json]}" onto public org.springframework.hateoas.Resources<?> org.springframework.data.rest.webmvc.RepositoryEntityController.getCollectionResource(org.springframework.data.rest.webmvc.RootResourceInformation,org.springframework.data.rest.webmvc.support.DefaultedPageable,org.springframework.data.domain.Sort,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler) throws org.springframework.data.rest.webmvc.ResourceNotFoundException,org.springframework.web.HttpRequestMethodNotSupportedException
2017-09-12 22:32:53.051  INFO 2996 --- [restartedMain] o.s.d.r.w.RepositoryRestHandlerMapping   : Mapped "{[/{repository}],methods=[GET],produces=[application/x-spring-data-compact+json || text/uri-list]}" onto public org.springframework.hateoas.Resources<?> org.springframework.data.rest.webmvc.RepositoryEntityController.getCollectionResourceCompact(org.springframework.data.rest.webmvc.RootResourceInformation,org.springframework.data.rest.webmvc.support.DefaultedPageable,org.springframework.data.domain.Sort,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler) throws org.springframework.data.rest.webmvc.ResourceNotFoundException,org.springframework.web.HttpRequestMethodNotSupportedException
2017-09-12 22:32:53.051  INFO 2996 --- [restartedMain] o.s.d.r.w.RepositoryRestHandlerMapping   : Mapped "{[/{repository}],methods=[POST],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<org.springframework.hateoas.ResourceSupport> org.springframework.data.rest.webmvc.RepositoryEntityController.postCollectionResource(org.springframework.data.rest.webmvc.RootResourceInformation,org.springframework.data.rest.webmvc.PersistentEntityResource,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler,java.lang.String) throws org.springframework.web.HttpRequestMethodNotSupportedException
2017-09-12 22:32:53.052  INFO 2996 --- [restartedMain] o.s.d.r.w.RepositoryRestHandlerMapping   : Mapped "{[/{repository}/{id}],methods=[OPTIONS],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.data.rest.webmvc.RepositoryEntityController.optionsForItemResource(org.springframework.data.rest.webmvc.RootResourceInformation)
2017-09-12 22:32:53.052  INFO 2996 --- [restartedMain] o.s.d.r.w.RepositoryRestHandlerMapping   : Mapped "{[/{repository}/{id}],methods=[HEAD],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.data.rest.webmvc.RepositoryEntityController.headForItemResource(org.springframework.data.rest.webmvc.RootResourceInformation,java.io.Serializable,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler) throws org.springframework.web.HttpRequestMethodNotSupportedException
2017-09-12 22:32:53.053  INFO 2996 --- [restartedMain] o.s.d.r.w.RepositoryRestHandlerMapping   : Mapped "{[/{repository}/{id}],methods=[PATCH],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<org.springframework.hateoas.ResourceSupport> org.springframework.data.rest.webmvc.RepositoryEntityController.patchItemResource(org.springframework.data.rest.webmvc.RootResourceInformation,org.springframework.data.rest.webmvc.PersistentEntityResource,java.io.Serializable,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler,org.springframework.data.rest.webmvc.support.ETag,java.lang.String) throws org.springframework.web.HttpRequestMethodNotSupportedException,org.springframework.data.rest.webmvc.ResourceNotFoundException
2017-09-12 22:32:53.054  INFO 2996 --- [restartedMain] o.s.d.r.w.RepositoryRestHandlerMapping   : Mapped "{[/{repository}/{id}],methods=[DELETE],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.data.rest.webmvc.RepositoryEntityController.deleteItemResource(org.springframework.data.rest.webmvc.RootResourceInformation,java.io.Serializable,org.springframework.data.rest.webmvc.support.ETag) throws org.springframework.data.rest.webmvc.ResourceNotFoundException,org.springframework.web.HttpRequestMethodNotSupportedException
2017-09-12 22:32:53.058  INFO 2996 --- [restartedMain] o.s.d.r.w.BasePathAwareHandlerMapping    : Mapped "{[/profile],methods=[OPTIONS]}" onto public org.springframework.http.HttpEntity<?> org.springframework.data.rest.webmvc.ProfileController.profileOptions()
2017-09-12 22:32:53.058  INFO 2996 --- [restartedMain] o.s.d.r.w.BasePathAwareHandlerMapping    : Mapped "{[/profile],methods=[GET]}" onto org.springframework.http.HttpEntity<org.springframework.hateoas.ResourceSupport> org.springframework.data.rest.webmvc.ProfileController.listAllFormsOfMetadata()
2017-09-12 22:32:53.058  INFO 2996 --- [restartedMain] o.s.d.r.w.BasePathAwareHandlerMapping    : Mapped "{[/profile/{repository}],methods=[GET],produces=[application/schema+json]}" onto public org.springframework.http.HttpEntity<org.springframework.data.rest.webmvc.json.JsonSchema> org.springframework.data.rest.webmvc.RepositorySchemaController.schema(org.springframework.data.rest.webmvc.RootResourceInformation)
2017-09-12 22:32:53.059  INFO 2996 --- [restartedMain] o.s.d.r.w.BasePathAwareHandlerMapping    : Mapped "{[/profile/{repository}],methods=[GET],produces=[application/alps+json || */*]}" onto org.springframework.http.HttpEntity<org.springframework.data.rest.webmvc.RootResourceInformation> org.springframework.data.rest.webmvc.alps.AlpsController.descriptor(org.springframework.data.rest.webmvc.RootResourceInformation)
2017-09-12 22:32:53.059  INFO 2996 --- [restartedMain] o.s.d.r.w.BasePathAwareHandlerMapping    : Mapped "{[/profile/{repository}],methods=[OPTIONS],produces=[application/alps+json]}" onto org.springframework.http.HttpEntity<?> org.springframework.data.rest.webmvc.alps.AlpsController.alpsOptions()
2017-09-12 22:32:53.700  INFO 2996 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2017-09-12 22:32:54.138  INFO 2996 --- [restartedMain] o.s.j.e.a.AnnotationMBeanExporter        : Registering beans for JMX exposure on startup
2017-09-12 22:32:54.139  INFO 2996 --- [restartedMain] o.s.j.e.a.AnnotationMBeanExporter        : Bean with name 'statFilter' has been autodetected for JMX exposure
2017-09-12 22:32:54.139  INFO 2996 --- [restartedMain] o.s.j.e.a.AnnotationMBeanExporter        : Bean with name 'dataSource' has been autodetected for JMX exposure
2017-09-12 22:32:54.143  INFO 2996 --- [restartedMain] o.s.j.e.a.AnnotationMBeanExporter        : Bean with name 'rabbitConnectionFactory' has been autodetected for JMX exposure
2017-09-12 22:32:54.145  INFO 2996 --- [restartedMain] o.s.j.e.a.AnnotationMBeanExporter        : Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2017-09-12 22:32:54.146  INFO 2996 --- [restartedMain] o.s.j.e.a.AnnotationMBeanExporter        : Located managed bean 'rabbitConnectionFactory': registering with JMX server as MBean [org.springframework.amqp.rabbit.connection:name=rabbitConnectionFactory,type=CachingConnectionFactory]
2017-09-12 22:32:54.155  INFO 2996 --- [restartedMain] o.s.j.e.a.AnnotationMBeanExporter        : Located MBean 'statFilter': registering with JMX server as MBean [com.alibaba.druid.filter.stat:name=statFilter,type=StatFilter]
2017-09-12 22:32:54.156  INFO 2996 --- [restartedMain] o.s.c.support.DefaultLifecycleProcessor  : Starting beans in phase -2147482648
2017-09-12 22:32:54.157  INFO 2996 --- [restartedMain] o.s.c.support.DefaultLifecycleProcessor  : Starting beans in phase 2147483647
2017-09-12 22:32:54.183  INFO 2996 --- [restartedMain] s.b.c.e.t.TomcatEmbeddedServletContainer : Tomcat started on port(s): 8080 (http)
2017-09-12 22:32:54.186  INFO 2996 --- [restartedMain] pers.platform.blog.Application           : Started Application in 7.168 seconds (JVM running for 179.125)
2017-09-12 22:33:03.385  INFO 2996 --- [Thread-12] ationConfigEmbeddedWebApplicationContext : Closing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@52bf90a5: startup date [Tue Sep 12 22:32:47 CST 2017]; root of context hierarchy
2017-09-12 22:33:03.388  INFO 2996 --- [Thread-12] o.s.c.support.DefaultLifecycleProcessor  : Stopping beans in phase 2147483647
2017-09-12 22:33:03.389  INFO 2996 --- [Thread-12] o.s.c.support.DefaultLifecycleProcessor  : Stopping beans in phase -2147482648
2017-09-12 22:33:03.390  INFO 2996 --- [Thread-12] o.s.j.e.a.AnnotationMBeanExporter        : Unregistering JMX-exposed beans on shutdown
2017-09-12 22:33:03.390  INFO 2996 --- [Thread-12] o.s.j.e.a.AnnotationMBeanExporter        : Unregistering JMX-exposed beans
2017-09-12 22:33:03.392  INFO 2996 --- [Thread-12] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2017-09-12 22:33:03.396  INFO 2996 --- [Thread-12] com.alibaba.druid.pool.DruidDataSource   : {dataSource-2} closed
2017-09-12 22:33:03.984  INFO 2996 --- [restartedMain] pers.platform.blog.Application           : Starting Application on PC-20160914JGKD with PID 2996 (E:\workspace\pers-cc-platform\pers-platform-blog-web\target\classes started by Administrator in E:\workspace\pers-cc-platform\pers-platform-blog-web)
2017-09-12 22:33:03.985 DEBUG 2996 --- [restartedMain] pers.platform.blog.Application           : Running with Spring Boot v1.5.2.RELEASE, Spring v4.3.7.RELEASE
2017-09-12 22:33:03.985  INFO 2996 --- [restartedMain] pers.platform.blog.Application           : The following profiles are active: prod
2017-09-12 22:33:03.992  INFO 2996 --- [restartedMain] ationConfigEmbeddedWebApplicationContext : Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@3a682b26: startup date [Tue Sep 12 22:33:03 CST 2017]; root of context hierarchy
2017-09-12 22:33:05.472  INFO 2996 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2017-09-12 22:33:05.499  INFO 2996 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2017-09-12 22:33:05.519  INFO 2996 --- [restartedMain] o.s.b.f.s.DefaultListableBeanFactory     : Overriding bean definition for bean 'httpRequestHandlerAdapter' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.boot.autoconfigure.web.WebMvcAutoConfiguration$EnableWebMvcConfiguration; factoryMethodName=httpRequestHandlerAdapter; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/boot/autoconfigure/web/WebMvcAutoConfiguration$EnableWebMvcConfiguration.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.data.rest.webmvc.config.RepositoryRestMvcConfiguration; factoryMethodName=httpRequestHandlerAdapter; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/data/rest/webmvc/config/RepositoryRestMvcConfiguration.class]]
2017-09-12 22:33:05.577  INFO 2996 --- [restartedMain] o.s.b.f.s.DefaultListableBeanFactory     : Overriding bean definition for bean 'dataSource' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure; factoryMethodName=dataSource; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/alibaba/druid/spring/boot/autoconfigure/DruidDataSourceAutoConfigure.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=true; factoryBeanName=spring.datasource-pers.platform.blog.config.DruidDBConfig; factoryMethodName=dataSource; initMethodName=null; destroyMethodName=(inferred); defined in pers.platform.blog.config.DruidDBConfig]
2017-09-12 22:33:05.634  INFO 2996 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.amqp.rabbit.annotation.RabbitBootstrapConfiguration' of type [org.springframework.amqp.rabbit.annotation.RabbitBootstrapConfiguration$$EnhancerBySpringCGLIB$$2c7179c5] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017-09-12 22:33:05.644  INFO 2996 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$6605bb97] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017-09-12 22:33:05.665  INFO 2996 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'reidsConfig' of type [pers.platform.blog.config.ReidsConfig$$EnhancerBySpringCGLIB$$1b785740] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017-09-12 22:33:05.681  INFO 2996 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'keyGenerator' of type [pers.platform.blog.config.ReidsConfig$1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017-09-12 22:33:05.682  INFO 2996 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.cache.annotation.ProxyCachingConfiguration' of type [org.springframework.cache.annotation.ProxyCachingConfiguration$$EnhancerBySpringCGLIB$$af17f1b5] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017-09-12 22:33:05.703  INFO 2996 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'shiroConfig' of type [pers.platform.blog.config.ShiroConfig$$EnhancerBySpringCGLIB$$7011f20c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017-09-12 22:33:05.744  INFO 2996 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'myShiroRealm' of type [pers.platform.blog.realm.MyRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017-09-12 22:33:05.758  INFO 2996 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017-09-12 22:33:05.785  INFO 2996 --- [restartedMain] pers.platform.blog.config.ShiroConfig    : 注入Shiro的Web过滤器-->shiroFilter
2017-09-12 22:33:05.899  INFO 2996 --- [restartedMain] s.b.c.e.t.TomcatEmbeddedServletContainer : Tomcat initialized with port(s): 8080 (http)
2017-09-12 22:33:05.901  INFO 2996 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service Tomcat
2017-09-12 22:33:05.901  INFO 2996 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet Engine: Apache Tomcat/8.5.11
2017-09-12 22:33:05.924  INFO 2996 --- [localhost-startStop-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2017-09-12 22:33:06.112  INFO 2996 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'characterEncodingFilter' to: [/*]
2017-09-12 22:33:06.112  INFO 2996 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2017-09-12 22:33:06.112  INFO 2996 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'httpPutFormContentFilter' to: [/*]
2017-09-12 22:33:06.112  INFO 2996 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'requestContextFilter' to: [/*]
2017-09-12 22:33:06.113  INFO 2996 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'delegatingFilterProxy' to: [/*]
2017-09-12 22:33:06.113  INFO 2996 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'webStatFilter' to urls: [/*]
2017-09-12 22:33:06.113  INFO 2996 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Filter webStatFilter was not registered (possibly already registered?)
2017-09-12 22:33:06.113  INFO 2996 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'shiroFilter' to: [/*]
2017-09-12 22:33:06.113  INFO 2996 --- [localhost-startStop-1] o.s.b.w.servlet.ServletRegistrationBean  : Mapping servlet: 'statViewServlet' to [/druid/*]
2017-09-12 22:33:06.113  INFO 2996 --- [localhost-startStop-1] o.s.b.w.servlet.ServletRegistrationBean  : Mapping servlet: 'dispatcherServlet' to [/]
2017-09-12 22:33:06.113  INFO 2996 --- [localhost-startStop-1] o.s.b.w.servlet.ServletRegistrationBean  : Mapping servlet: 'statViewServlet' to [/druid/*]
2017-09-12 22:33:06.113  INFO 2996 --- [localhost-startStop-1] o.s.b.w.servlet.ServletRegistrationBean  : Servlet statViewServlet was not registered (possibly already registered?)
2017-09-12 22:33:06.420  INFO 2996 --- [localhost-startStop-1] com.alibaba.druid.pool.DruidDataSource   : {dataSource-3} inited
2017-09-12 22:33:06.423 DEBUG 2996 --- [localhost-startStop-1] p.p.blog.repository.BloggerRepo.find     : ==>  Preparing: select * from t_blogger where id=? 
2017-09-12 22:33:06.425 DEBUG 2996 --- [localhost-startStop-1] p.p.blog.repository.BloggerRepo.find     : ==> Parameters: 1(String)
2017-09-12 22:33:06.428 DEBUG 2996 --- [localhost-startStop-1] p.p.blog.repository.BloggerRepo.find     : <==      Total: 1
2017-09-12 22:33:06.459 DEBUG 2996 --- [localhost-startStop-1] p.p.blog.repository.LinkRepo.list        : ==>  Preparing: select * from t_link order by orderNo 
2017-09-12 22:33:06.465 DEBUG 2996 --- [localhost-startStop-1] p.p.blog.repository.LinkRepo.list        : ==> Parameters: 
2017-09-12 22:33:06.468 DEBUG 2996 --- [localhost-startStop-1] p.p.blog.repository.LinkRepo.list        : <==      Total: 2
2017-09-12 22:33:06.518 DEBUG 2996 --- [localhost-startStop-1] p.p.b.repository.BlogTypeRepo.countList  : ==>  Preparing: SELECT t2.id,t2.`typeName`,COUNT(t1.id) AS blogCount FROM t_blog t1 RIGHT JOIN t_blogType t2 ON t1.typeId=t2.id GROUP BY t2.id,t2.typeName ORDER BY t2.orderNo; 
2017-09-12 22:33:06.520 DEBUG 2996 --- [localhost-startStop-1] p.p.b.repository.BlogTypeRepo.countList  : ==> Parameters: 
2017-09-12 22:33:06.529 DEBUG 2996 --- [localhost-startStop-1] p.p.b.repository.BlogTypeRepo.countList  : <==      Total: 17
2017-09-12 22:33:06.579 DEBUG 2996 --- [localhost-startStop-1] p.p.blog.repository.BlogRepo.countList   : ==>  Preparing: SELECT DATE_FORMAT (releaseDate,'%Y年%m月') AS releaseDateStr,COUNT(*) AS blogCount FROM t_blog GROUP BY DATE_FORMAT (releaseDate,'%Y年%m月') ORDER BY DATE_FORMAT (releaseDate,'%Y年%m月') DESC 
2017-09-12 22:33:06.581 DEBUG 2996 --- [localhost-startStop-1] p.p.blog.repository.BlogRepo.countList   : ==> Parameters: 
2017-09-12 22:33:06.585 DEBUG 2996 --- [localhost-startStop-1] p.p.blog.repository.BlogRepo.countList   : <==      Total: 12
2017-09-12 22:33:06.640  INFO 2996 --- [restartedMain] j.LocalContainerEntityManagerFactoryBean : Building JPA container EntityManagerFactory for persistence unit 'default'
2017-09-12 22:33:06.640  INFO 2996 --- [restartedMain] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
2017-09-12 22:33:06.922  INFO 2996 --- [restartedMain] org.hibernate.dialect.Dialect            : HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
2017-09-12 22:33:06.941  INFO 2996 --- [restartedMain] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2017-09-12 22:33:08.365  INFO 2996 --- [restartedMain] o.s.d.r.w.RepositoryRestHandlerAdapter   : Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@3a682b26: startup date [Tue Sep 12 22:33:03 CST 2017]; root of context hierarchy
2017-09-12 22:33:08.396  INFO 2996 --- [restartedMain] o.s.d.r.w.RepositoryRestHandlerMapping   : Mapped "{[/{repository}/{id}/{property}],methods=[GET],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<org.springframework.hateoas.ResourceSupport> org.springframework.data.rest.webmvc.RepositoryPropertyReferenceController.followPropertyReference(org.springframework.data.rest.webmvc.RootResourceInformation,java.io.Serializable,java.lang.String,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler) throws java.lang.Exception
2017-09-12 22:33:08.396  INFO 2996 --- [restartedMain] o.s.d.r.w.RepositoryRestHandlerMapping   : Mapped "{[/{repository}/{id}/{property}/{propertyId}],methods=[GET],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<org.springframework.hateoas.ResourceSupport> org.springframework.data.rest.webmvc.RepositoryPropertyReferenceController.followPropertyReference(org.springframework.data.rest.webmvc.RootResourceInformation,java.io.Serializable,java.lang.String,java.lang.String,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler) throws java.lang.Exception
2017-09-12 22:33:08.397  INFO 2996 --- [restartedMain] o.s.d.r.w.RepositoryRestHandlerMapping   : Mapped "{[/{repository}/{id}/{property}],methods=[DELETE],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<? extends org.springframework.hateoas.ResourceSupport> org.springframework.data.rest.webmvc.RepositoryPropertyReferenceController.deletePropertyReference(org.springframework.data.rest.webmvc.RootResourceInformation,java.io.Serializable,java.lang.String) throws java.lang.Exception
2017-09-12 22:33:08.397  INFO 2996 --- [restartedMain] o.s.d.r.w.RepositoryRestHandlerMapping   : Mapped "{[/{repository}/{id}/{property}],methods=[GET],produces=[application/x-spring-data-compact+json || text/uri-list]}" onto public org.springframework.http.ResponseEntity<org.springframework.hateoas.ResourceSupport> org.springframework.data.rest.webmvc.RepositoryPropertyReferenceController.followPropertyReferenceCompact(org.springframework.data.rest.webmvc.RootResourceInformation,java.io.Serializable,java.lang.String,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler) throws java.lang.Exception
2017-09-12 22:33:08.397  INFO 2996 --- [restartedMain] o.s.d.r.w.RepositoryRestHandlerMapping   : Mapped "{[/{repository}/{id}/{property}],methods=[PATCH || PUT || POST],consumes=[application/json || application/x-spring-data-compact+json || text/uri-list],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<? extends org.springframework.hateoas.ResourceSupport> org.springframework.data.rest.webmvc.RepositoryPropertyReferenceController.createPropertyReference(org.springframework.data.rest.webmvc.RootResourceInformation,org.springframework.http.HttpMethod,org.springframework.hateoas.Resources<java.lang.Object>,java.io.Serializable,java.lang.String) throws java.lang.Exception
2017-09-12 22:33:08.397  INFO 2996 --- [restartedMain] o.s.d.r.w.RepositoryRestHandlerMapping   : Mapped "{[/{repository}/{id}/{property}/{propertyId}],methods=[DELETE],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<org.springframework.hateoas.ResourceSupport> org.springframework.data.rest.webmvc.RepositoryPropertyReferenceController.deletePropertyReferenceId(org.springframework.data.rest.webmvc.RootResourceInformation,java.io.Serializable,java.lang.String,java.lang.String) throws java.lang.Exception
2017-09-12 22:33:08.399  INFO 2996 --- [restartedMain] o.s.d.r.w.RepositoryRestHandlerMapping   : Mapped "{[/{repository}/search],methods=[HEAD],produces=[application/hal+json || application/json]}" onto public org.springframework.http.HttpEntity<?> org.springframework.data.rest.webmvc.RepositorySearchController.headForSearches(org.springframework.data.rest.webmvc.RootResourceInformation)
2017-09-12 22:33:08.399  INFO 2996 --- [restartedMain] o.s.d.r.w.RepositoryRestHandlerMapping   : Mapped "{[/{repository}/search/{search}],methods=[GET],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.data.rest.webmvc.RepositorySearchController.executeSearch(org.springframework.data.rest.webmvc.RootResourceInformation,org.springframework.util.MultiValueMap<java.lang.String, java.lang.Object>,java.lang.String,org.springframework.data.rest.webmvc.support.DefaultedPageable,org.springframework.data.domain.Sort,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler,org.springframework.http.HttpHeaders)
2017-09-12 22:33:08.399  INFO 2996 --- [restartedMain] o.s.d.r.w.RepositoryRestHandlerMapping   : Mapped "{[/{repository}/search],methods=[GET],produces=[application/hal+json || application/json]}" onto public org.springframework.data.rest.webmvc.RepositorySearchesResource org.springframework.data.rest.webmvc.RepositorySearchController.listSearches(org.springframework.data.rest.webmvc.RootResourceInformation)
2017-09-12 22:33:08.400  INFO 2996 --- [restartedMain] o.s.d.r.w.RepositoryRestHandlerMapping   : Mapped "{[/{repository}/search/{search}],methods=[OPTIONS],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<java.lang.Object> org.springframework.data.rest.webmvc.RepositorySearchController.optionsForSearch(org.springframework.data.rest.webmvc.RootResourceInformation,java.lang.String)
2017-09-12 22:33:08.400  INFO 2996 --- [restartedMain] o.s.d.r.w.RepositoryRestHandlerMapping   : Mapped "{[/{repository}/search/{search}],methods=[HEAD],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<java.lang.Object> org.springframework.data.rest.webmvc.RepositorySearchController.headForSearch(org.springframework.data.rest.webmvc.RootResourceInformation,java.lang.String)
2017-09-12 22:33:08.400  INFO 2996 --- [restartedMain] o.s.d.r.w.RepositoryRestHandlerMapping   : Mapped "{[/{repository}/search],methods=[OPTIONS],produces=[application/hal+json || application/json]}" onto public org.springframework.http.HttpEntity<?> org.springframework.data.rest.webmvc.RepositorySearchController.optionsForSearches(org.springframework.data.rest.webmvc.RootResourceInformation)
2017-09-12 22:33:08.400  INFO 2996 --- [restartedMain] o.s.d.r.w.RepositoryRestHandlerMapping   : Mapped "{[/{repository}/search/{search}],methods=[GET],produces=[application/x-spring-data-compact+json]}" onto public org.springframework.hateoas.ResourceSupport org.springframework.data.rest.webmvc.RepositorySearchController.executeSearchCompact(org.springframework.data.rest.webmvc.RootResourceInformation,org.springframework.http.HttpHeaders,org.springframework.util.MultiValueMap<java.lang.String, java.lang.Object>,java.lang.String,java.lang.String,org.springframework.data.rest.webmvc.support.DefaultedPageable,org.springframework.data.domain.Sort,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler)
2017-09-12 22:33:08.401  INFO 2996 --- [restartedMain] o.s.d.r.w.RepositoryRestHandlerMapping   : Mapped "{[/ || ],methods=[GET],produces=[application/hal+json || application/json]}" onto public org.springframework.http.HttpEntity<org.springframework.data.rest.webmvc.RepositoryLinksResource> org.springframework.data.rest.webmvc.RepositoryController.listRepositories()
2017-09-12 22:33:08.401  INFO 2996 --- [restartedMain] o.s.d.r.w.RepositoryRestHandlerMapping   : Mapped "{[/ || ],methods=[OPTIONS],produces=[application/hal+json || application/json]}" onto public org.springframework.http.HttpEntity<?> org.springframework.data.rest.webmvc.RepositoryController.optionsForRepositories()
2017-09-12 22:33:08.402  INFO 2996 --- [restartedMain] o.s.d.r.w.RepositoryRestHandlerMapping   : Mapped "{[/ || ],methods=[HEAD],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.data.rest.webmvc.RepositoryController.headForRepositories()
2017-09-12 22:33:08.403  INFO 2996 --- [restartedMain] o.s.d.r.w.RepositoryRestHandlerMapping   : Mapped "{[/{repository}/{id}],methods=[PUT],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<? extends org.springframework.hateoas.ResourceSupport> org.springframework.data.rest.webmvc.RepositoryEntityController.putItemResource(org.springframework.data.rest.webmvc.RootResourceInformation,org.springframework.data.rest.webmvc.PersistentEntityResource,java.io.Serializable,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler,org.springframework.data.rest.webmvc.support.ETag,java.lang.String) throws org.springframework.web.HttpRequestMethodNotSupportedException
2017-09-12 22:33:08.404  INFO 2996 --- [restartedMain] o.s.d.r.w.RepositoryRestHandlerMapping   : Mapped "{[/{repository}/{id}],methods=[GET],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<org.springframework.hateoas.Resource<?>> org.springframework.data.rest.webmvc.RepositoryEntityController.getItemResource(org.springframework.data.rest.webmvc.RootResourceInformation,java.io.Serializable,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler,org.springframework.http.HttpHeaders) throws org.springframework.web.HttpRequestMethodNotSupportedException
2017-09-12 22:33:08.404  INFO 2996 --- [restartedMain] o.s.d.r.w.RepositoryRestHandlerMapping   : Mapped "{[/{repository}],methods=[OPTIONS],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.data.rest.webmvc.RepositoryEntityController.optionsForCollectionResource(org.springframework.data.rest.webmvc.RootResourceInformation)
2017-09-12 22:33:08.405  INFO 2996 --- [restartedMain] o.s.d.r.w.RepositoryRestHandlerMapping   : Mapped "{[/{repository}],methods=[HEAD],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.data.rest.webmvc.RepositoryEntityController.headCollectionResource(org.springframework.data.rest.webmvc.RootResourceInformation,org.springframework.data.rest.webmvc.support.DefaultedPageable) throws org.springframework.web.HttpRequestMethodNotSupportedException
2017-09-12 22:33:08.405  INFO 2996 --- [restartedMain] o.s.d.r.w.RepositoryRestHandlerMapping   : Mapped "{[/{repository}],methods=[GET],produces=[application/hal+json || application/json]}" onto public org.springframework.hateoas.Resources<?> org.springframework.data.rest.webmvc.RepositoryEntityController.getCollectionResource(org.springframework.data.rest.webmvc.RootResourceInformation,org.springframework.data.rest.webmvc.support.DefaultedPageable,org.springframework.data.domain.Sort,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler) throws org.springframework.data.rest.webmvc.ResourceNotFoundException,org.springframework.web.HttpRequestMethodNotSupportedException
2017-09-12 22:33:08.405  INFO 2996 --- [restartedMain] o.s.d.r.w.RepositoryRestHandlerMapping   : Mapped "{[/{repository}],methods=[GET],produces=[application/x-spring-data-compact+json || text/uri-list]}" onto public org.springframework.hateoas.Resources<?> org.springframework.data.rest.webmvc.RepositoryEntityController.getCollectionResourceCompact(org.springframework.data.rest.webmvc.RootResourceInformation,org.springframework.data.rest.webmvc.support.DefaultedPageable,org.springframework.data.domain.Sort,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler) throws org.springframework.data.rest.webmvc.ResourceNotFoundException,org.springframework.web.HttpRequestMethodNotSupportedException
2017-09-12 22:33:08.406  INFO 2996 --- [restartedMain] o.s.d.r.w.RepositoryRestHandlerMapping   : Mapped "{[/{repository}],methods=[POST],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<org.springframework.hateoas.ResourceSupport> org.springframework.data.rest.webmvc.RepositoryEntityController.postCollectionResource(org.springframework.data.rest.webmvc.RootResourceInformation,org.springframework.data.rest.webmvc.PersistentEntityResource,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler,java.lang.String) throws org.springframework.web.HttpRequestMethodNotSupportedException
2017-09-12 22:33:08.406  INFO 2996 --- [restartedMain] o.s.d.r.w.RepositoryRestHandlerMapping   : Mapped "{[/{repository}/{id}],methods=[OPTIONS],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.data.rest.webmvc.RepositoryEntityController.optionsForItemResource(org.springframework.data.rest.webmvc.RootResourceInformation)
2017-09-12 22:33:08.406  INFO 2996 --- [restartedMain] o.s.d.r.w.RepositoryRestHandlerMapping   : Mapped "{[/{repository}/{id}],methods=[HEAD],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.data.rest.webmvc.RepositoryEntityController.headForItemResource(org.springframework.data.rest.webmvc.RootResourceInformation,java.io.Serializable,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler) throws org.springframework.web.HttpRequestMethodNotSupportedException
2017-09-12 22:33:08.407  INFO 2996 --- [restartedMain] o.s.d.r.w.RepositoryRestHandlerMapping   : Mapped "{[/{repository}/{id}],methods=[PATCH],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<org.springframework.hateoas.ResourceSupport> org.springframework.data.rest.webmvc.RepositoryEntityController.patchItemResource(org.springframework.data.rest.webmvc.RootResourceInformation,org.springframework.data.rest.webmvc.PersistentEntityResource,java.io.Serializable,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler,org.springframework.data.rest.webmvc.support.ETag,java.lang.String) throws org.springframework.web.HttpRequestMethodNotSupportedException,org.springframework.data.rest.webmvc.ResourceNotFoundException
2017-09-12 22:33:08.407  INFO 2996 --- [restartedMain] o.s.d.r.w.RepositoryRestHandlerMapping   : Mapped "{[/{repository}/{id}],methods=[DELETE],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.data.rest.webmvc.RepositoryEntityController.deleteItemResource(org.springframework.data.rest.webmvc.RootResourceInformation,java.io.Serializable,org.springframework.data.rest.webmvc.support.ETag) throws org.springframework.data.rest.webmvc.ResourceNotFoundException,org.springframework.web.HttpRequestMethodNotSupportedException
2017-09-12 22:33:08.411  INFO 2996 --- [restartedMain] o.s.d.r.w.BasePathAwareHandlerMapping    : Mapped "{[/profile],methods=[OPTIONS]}" onto public org.springframework.http.HttpEntity<?> org.springframework.data.rest.webmvc.ProfileController.profileOptions()
2017-09-12 22:33:08.411  INFO 2996 --- [restartedMain] o.s.d.r.w.BasePathAwareHandlerMapping    : Mapped "{[/profile],methods=[GET]}" onto org.springframework.http.HttpEntity<org.springframework.hateoas.ResourceSupport> org.springframework.data.rest.webmvc.ProfileController.listAllFormsOfMetadata()
2017-09-12 22:33:08.411  INFO 2996 --- [restartedMain] o.s.d.r.w.BasePathAwareHandlerMapping    : Mapped "{[/profile/{repository}],methods=[GET],produces=[application/schema+json]}" onto public org.springframework.http.HttpEntity<org.springframework.data.rest.webmvc.json.JsonSchema> org.springframework.data.rest.webmvc.RepositorySchemaController.schema(org.springframework.data.rest.webmvc.RootResourceInformation)
2017-09-12 22:33:08.412  INFO 2996 --- [restartedMain] o.s.d.r.w.BasePathAwareHandlerMapping    : Mapped "{[/profile/{repository}],methods=[GET],produces=[application/alps+json || */*]}" onto org.springframework.http.HttpEntity<org.springframework.data.rest.webmvc.RootResourceInformation> org.springframework.data.rest.webmvc.alps.AlpsController.descriptor(org.springframework.data.rest.webmvc.RootResourceInformation)
2017-09-12 22:33:08.412  INFO 2996 --- [restartedMain] o.s.d.r.w.BasePathAwareHandlerMapping    : Mapped "{[/profile/{repository}],methods=[OPTIONS],produces=[application/alps+json]}" onto org.springframework.http.HttpEntity<?> org.springframework.data.rest.webmvc.alps.AlpsController.alpsOptions()
2017-09-12 22:33:08.943  INFO 2996 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2017-09-12 22:33:09.410  INFO 2996 --- [restartedMain] o.s.j.e.a.AnnotationMBeanExporter        : Registering beans for JMX exposure on startup
2017-09-12 22:33:09.411  INFO 2996 --- [restartedMain] o.s.j.e.a.AnnotationMBeanExporter        : Bean with name 'statFilter' has been autodetected for JMX exposure
2017-09-12 22:33:09.411  INFO 2996 --- [restartedMain] o.s.j.e.a.AnnotationMBeanExporter        : Bean with name 'dataSource' has been autodetected for JMX exposure
2017-09-12 22:33:09.413  INFO 2996 --- [restartedMain] o.s.j.e.a.AnnotationMBeanExporter        : Bean with name 'rabbitConnectionFactory' has been autodetected for JMX exposure
2017-09-12 22:33:09.415  INFO 2996 --- [restartedMain] o.s.j.e.a.AnnotationMBeanExporter        : Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2017-09-12 22:33:09.416  INFO 2996 --- [restartedMain] o.s.j.e.a.AnnotationMBeanExporter        : Located managed bean 'rabbitConnectionFactory': registering with JMX server as MBean [org.springframework.amqp.rabbit.connection:name=rabbitConnectionFactory,type=CachingConnectionFactory]
2017-09-12 22:33:09.424  INFO 2996 --- [restartedMain] o.s.j.e.a.AnnotationMBeanExporter        : Located MBean 'statFilter': registering with JMX server as MBean [com.alibaba.druid.filter.stat:name=statFilter,type=StatFilter]
2017-09-12 22:33:09.426  INFO 2996 --- [restartedMain] o.s.c.support.DefaultLifecycleProcessor  : Starting beans in phase -2147482648
2017-09-12 22:33:09.426  INFO 2996 --- [restartedMain] o.s.c.support.DefaultLifecycleProcessor  : Starting beans in phase 2147483647
2017-09-12 22:33:09.439  INFO 2996 --- [restartedMain] s.b.c.e.t.TomcatEmbeddedServletContainer : Tomcat started on port(s): 8080 (http)
2017-09-12 22:33:09.442  INFO 2996 --- [restartedMain] pers.platform.blog.Application           : Started Application in 5.558 seconds (JVM running for 194.381)
2017-09-13 21:30:21.177  INFO 7176 --- [restartedMain] pers.platform.blog.Application           : Starting Application on PC-20160914JGKD with PID 7176 (E:\workspace\pers-cc-platform\pers-platform-blog-web\target\classes started by Administrator in E:\workspace\pers-cc-platform\pers-platform-blog-web)
2017-09-13 21:30:21.189 DEBUG 7176 --- [restartedMain] pers.platform.blog.Application           : Running with Spring Boot v1.5.2.RELEASE, Spring v4.3.7.RELEASE
2017-09-13 21:30:21.190  INFO 7176 --- [restartedMain] pers.platform.blog.Application           : The following profiles are active: test
2017-09-13 21:30:22.068  INFO 7176 --- [restartedMain] ationConfigEmbeddedWebApplicationContext : Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@63295398: startup date [Wed Sep 13 21:30:22 CST 2017]; root of context hierarchy
2017-09-13 21:30:25.695  INFO 7176 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2017-09-13 21:30:25.801  INFO 7176 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2017-09-13 21:30:25.874  INFO 7176 --- [restartedMain] o.s.b.f.s.DefaultListableBeanFactory     : Overriding bean definition for bean 'httpRequestHandlerAdapter' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.boot.autoconfigure.web.WebMvcAutoConfiguration$EnableWebMvcConfiguration; factoryMethodName=httpRequestHandlerAdapter; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/boot/autoconfigure/web/WebMvcAutoConfiguration$EnableWebMvcConfiguration.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.data.rest.webmvc.config.RepositoryRestMvcConfiguration; factoryMethodName=httpRequestHandlerAdapter; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/data/rest/webmvc/config/RepositoryRestMvcConfiguration.class]]
2017-09-13 21:30:26.205  INFO 7176 --- [restartedMain] o.s.b.f.s.DefaultListableBeanFactory     : Overriding bean definition for bean 'dataSource' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure; factoryMethodName=dataSource; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/alibaba/druid/spring/boot/autoconfigure/DruidDataSourceAutoConfigure.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=true; factoryBeanName=spring.datasource-pers.platform.blog.config.DruidDBConfig; factoryMethodName=dataSource; initMethodName=null; destroyMethodName=(inferred); defined in pers.platform.blog.config.DruidDBConfig]
2017-09-13 21:30:27.082  INFO 7176 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.amqp.rabbit.annotation.RabbitBootstrapConfiguration' of type [org.springframework.amqp.rabbit.annotation.RabbitBootstrapConfiguration$$EnhancerBySpringCGLIB$$df39b8e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017-09-13 21:30:27.205  INFO 7176 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$4787dd60] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017-09-13 21:30:27.298  INFO 7176 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'reidsConfig' of type [pers.platform.blog.config.ReidsConfig$$EnhancerBySpringCGLIB$$fcfa7909] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017-09-13 21:30:27.316  INFO 7176 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'keyGenerator' of type [pers.platform.blog.config.ReidsConfig$1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017-09-13 21:30:27.317  INFO 7176 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.cache.annotation.ProxyCachingConfiguration' of type [org.springframework.cache.annotation.ProxyCachingConfiguration$$EnhancerBySpringCGLIB$$909a137e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017-09-13 21:30:27.392  INFO 7176 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'shiroConfig' of type [pers.platform.blog.config.ShiroConfig$$EnhancerBySpringCGLIB$$519413d5] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017-09-13 21:30:27.865  INFO 7176 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'myShiroRealm' of type [pers.platform.blog.realm.MyRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017-09-13 21:30:27.966  INFO 7176 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017-09-13 21:30:27.999  INFO 7176 --- [restartedMain] pers.platform.blog.config.ShiroConfig    : 注入Shiro的Web过滤器-->shiroFilter
2017-09-13 21:30:28.866  INFO 7176 --- [restartedMain] s.b.c.e.t.TomcatEmbeddedServletContainer : Tomcat initialized with port(s): 8080 (http)
2017-09-13 21:30:29.079  INFO 7176 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service Tomcat
2017-09-13 21:30:29.081  INFO 7176 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet Engine: Apache Tomcat/8.5.11
2017-09-13 21:30:29.433  INFO 7176 --- [localhost-startStop-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2017-09-13 21:30:29.434  INFO 7176 --- [localhost-startStop-1] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 7372 ms
2017-09-13 21:30:30.218  INFO 7176 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'characterEncodingFilter' to: [/*]
2017-09-13 21:30:30.219  INFO 7176 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2017-09-13 21:30:30.219  INFO 7176 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'httpPutFormContentFilter' to: [/*]
2017-09-13 21:30:30.220  INFO 7176 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'requestContextFilter' to: [/*]
2017-09-13 21:30:30.220  INFO 7176 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'delegatingFilterProxy' to: [/*]
2017-09-13 21:30:30.220  INFO 7176 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'webStatFilter' to urls: [/*]
2017-09-13 21:30:30.220  INFO 7176 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Filter webStatFilter was not registered (possibly already registered?)
2017-09-13 21:30:30.220  INFO 7176 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'shiroFilter' to: [/*]
2017-09-13 21:30:30.220  INFO 7176 --- [localhost-startStop-1] o.s.b.w.servlet.ServletRegistrationBean  : Mapping servlet: 'statViewServlet' to [/druid/*]
2017-09-13 21:30:30.223  INFO 7176 --- [localhost-startStop-1] o.s.b.w.servlet.ServletRegistrationBean  : Mapping servlet: 'dispatcherServlet' to [/]
2017-09-13 21:30:30.224  INFO 7176 --- [localhost-startStop-1] o.s.b.w.servlet.ServletRegistrationBean  : Mapping servlet: 'statViewServlet' to [/druid/*]
2017-09-13 21:30:30.226  INFO 7176 --- [localhost-startStop-1] o.s.b.w.servlet.ServletRegistrationBean  : Servlet statViewServlet was not registered (possibly already registered?)
2017-09-13 21:30:31.944  INFO 7176 --- [localhost-startStop-1] com.alibaba.druid.pool.DruidDataSource   : {dataSource-1} inited
2017-09-13 21:30:31.953 DEBUG 7176 --- [localhost-startStop-1] p.p.blog.repository.BloggerRepo.find     : ==>  Preparing: select * from t_blogger where id=? 
2017-09-13 21:30:32.231 DEBUG 7176 --- [localhost-startStop-1] p.p.blog.repository.BloggerRepo.find     : ==> Parameters: 1(String)
2017-09-13 21:30:32.279 DEBUG 7176 --- [localhost-startStop-1] p.p.blog.repository.BloggerRepo.find     : <==      Total: 1
2017-09-13 21:30:32.373 DEBUG 7176 --- [localhost-startStop-1] p.p.blog.repository.LinkRepo.list        : ==>  Preparing: select * from t_link order by orderNo 
2017-09-13 21:30:32.377 DEBUG 7176 --- [localhost-startStop-1] p.p.blog.repository.LinkRepo.list        : ==> Parameters: 
2017-09-13 21:30:32.384 DEBUG 7176 --- [localhost-startStop-1] p.p.blog.repository.LinkRepo.list        : <==      Total: 2
2017-09-13 21:30:32.434 DEBUG 7176 --- [localhost-startStop-1] p.p.b.repository.BlogTypeRepo.countList  : ==>  Preparing: SELECT t2.id,t2.`typeName`,COUNT(t1.id) AS blogCount FROM t_blog t1 RIGHT JOIN t_blogType t2 ON t1.typeId=t2.id GROUP BY t2.id,t2.typeName ORDER BY t2.orderNo; 
2017-09-13 21:30:32.518 DEBUG 7176 --- [localhost-startStop-1] p.p.b.repository.BlogTypeRepo.countList  : ==> Parameters: 
2017-09-13 21:30:32.535 DEBUG 7176 --- [localhost-startStop-1] p.p.b.repository.BlogTypeRepo.countList  : <==      Total: 17
2017-09-13 21:30:32.573 DEBUG 7176 --- [localhost-startStop-1] p.p.blog.repository.BlogRepo.countList   : ==>  Preparing: SELECT DATE_FORMAT (releaseDate,'%Y年%m月') AS releaseDateStr,COUNT(*) AS blogCount FROM t_blog GROUP BY DATE_FORMAT (releaseDate,'%Y年%m月') ORDER BY DATE_FORMAT (releaseDate,'%Y年%m月') DESC 
2017-09-13 21:30:32.580 DEBUG 7176 --- [localhost-startStop-1] p.p.blog.repository.BlogRepo.countList   : ==> Parameters: 
2017-09-13 21:30:32.599 DEBUG 7176 --- [localhost-startStop-1] p.p.blog.repository.BlogRepo.countList   : <==      Total: 12
2017-09-13 21:30:33.111  INFO 7176 --- [restartedMain] j.LocalContainerEntityManagerFactoryBean : Building JPA container EntityManagerFactory for persistence unit 'default'
2017-09-13 21:30:33.145  INFO 7176 --- [restartedMain] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
2017-09-13 21:30:33.457  INFO 7176 --- [restartedMain] org.hibernate.Version                    : HHH000412: Hibernate Core {5.0.12.Final}
2017-09-13 21:30:33.460  INFO 7176 --- [restartedMain] org.hibernate.cfg.Environment            : HHH000206: hibernate.properties not found
2017-09-13 21:30:33.463  INFO 7176 --- [restartedMain] org.hibernate.cfg.Environment            : HHH000021: Bytecode provider name : javassist
2017-09-13 21:30:33.589  INFO 7176 --- [restartedMain] o.hibernate.annotations.common.Version   : HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
2017-09-13 21:30:34.330  INFO 7176 --- [restartedMain] org.hibernate.dialect.Dialect            : HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
2017-09-13 21:30:34.868  INFO 7176 --- [restartedMain] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2017-09-13 21:30:38.358  INFO 7176 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerAdapter : Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@63295398: startup date [Wed Sep 13 21:30:22 CST 2017]; root of context hierarchy
2017-09-13 21:30:39.409  INFO 7176 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/],methods=[GET]}" onto public java.lang.String pers.platform.blog.Application.index()
2017-09-13 21:30:39.411  INFO 7176 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/blog/q]}" onto public org.springframework.web.servlet.ModelAndView pers.platform.blog.controller.BlogController.search(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2017-09-13 21:30:39.412  INFO 7176 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/blog/articles/{id}.html]}" onto private org.springframework.web.servlet.ModelAndView pers.platform.blog.controller.BlogController.details(java.lang.String,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2017-09-13 21:30:39.413  INFO 7176 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cc/login.html]}" onto public java.lang.String pers.platform.blog.controller.BloggerController.login(pers.platform.blog.model.Blogger,javax.servlet.http.HttpServletRequest)
2017-09-13 21:30:39.413  INFO 7176 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/blogger/aboutMe.html]}" onto public org.springframework.web.servlet.ModelAndView pers.platform.blog.controller.BloggerController.aboutMe() throws java.lang.Exception
2017-09-13 21:30:39.416  INFO 7176 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cc/blog/delete.html]}" onto public java.lang.String pers.platform.blog.controller.cc.BlogCcController.delete(java.lang.String,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2017-09-13 21:30:39.417  INFO 7176 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cc/blog/list.html]}" onto public java.lang.String pers.platform.blog.controller.cc.BlogCcController.list(java.lang.String,java.lang.String,pers.platform.blog.model.Blog,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2017-09-13 21:30:39.417  INFO 7176 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cc/blog/save.html]}" onto public java.lang.String pers.platform.blog.controller.cc.BlogCcController.save(pers.platform.blog.model.Blog,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2017-09-13 21:30:39.417  INFO 7176 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cc/blog/uploadPastImage]}" onto public java.lang.String pers.platform.blog.controller.cc.BlogCcController.uploadPastImage(javax.servlet.http.HttpServletRequest,java.lang.String) throws java.lang.Exception
2017-09-13 21:30:39.417  INFO 7176 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cc/blog/ckeditorUpload]}" onto public java.lang.String pers.platform.blog.controller.cc.BlogCcController.upLoadImage(javax.servlet.http.HttpServletRequest,org.springframework.web.multipart.MultipartFile,java.lang.String) throws java.lang.Exception
2017-09-13 21:30:39.417  INFO 7176 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cc/blog/modifyBlog.html]}" onto public org.springframework.web.servlet.ModelAndView pers.platform.blog.controller.cc.BlogCcController.modifyBlog(java.lang.String,javax.servlet.http.HttpServletResponse)
2017-09-13 21:30:39.418  INFO 7176 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cc/blog/findById.html]}" onto public java.lang.String pers.platform.blog.controller.cc.BlogCcController.findById(java.lang.String,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2017-09-13 21:30:39.422  INFO 7176 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cc/blogger/find.html]}" onto public java.lang.String pers.platform.blog.controller.cc.BloggerCcController.find(javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2017-09-13 21:30:39.423  INFO 7176 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cc/blogger/save.html]}" onto public java.lang.String pers.platform.blog.controller.cc.BloggerCcController.save(org.springframework.web.multipart.MultipartFile,pers.platform.blog.model.Blogger,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2017-09-13 21:30:39.423  INFO 7176 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cc/blogger/modifyPassword.html]}" onto public java.lang.String pers.platform.blog.controller.cc.BloggerCcController.modifyPassword(java.lang.String,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2017-09-13 21:30:39.440  INFO 7176 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cc/blogger/logout.html]}" onto public java.lang.String pers.platform.blog.controller.cc.BloggerCcController.logout() throws java.lang.Exception
2017-09-13 21:30:39.443  INFO 7176 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cc/blogType/delete.html]}" onto public java.lang.String pers.platform.blog.controller.cc.BlogTypeCcController.delete(java.lang.String,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2017-09-13 21:30:39.443  INFO 7176 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cc/blogType/list.html]}" onto public java.lang.String pers.platform.blog.controller.cc.BlogTypeCcController.list(java.lang.String,java.lang.String,pers.platform.blog.model.BlogType,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2017-09-13 21:30:39.443  INFO 7176 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cc/blogType/save.html]}" onto public java.lang.String pers.platform.blog.controller.cc.BlogTypeCcController.save(pers.platform.blog.model.BlogType,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2017-09-13 21:30:39.444  INFO 7176 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cc/blogType/findById.html]}" onto public java.lang.String pers.platform.blog.controller.cc.BlogTypeCcController.findById(java.lang.String,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2017-09-13 21:30:39.445  INFO 7176 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cc/comment/delete.html]}" onto public java.lang.String pers.platform.blog.controller.cc.CommentCcController.delete(java.lang.String,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2017-09-13 21:30:39.445  INFO 7176 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cc/comment/review.html]}" onto public java.lang.String pers.platform.blog.controller.cc.CommentCcController.delete(java.lang.String,java.lang.Integer,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2017-09-13 21:30:39.445  INFO 7176 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cc/comment/list.html]}" onto public java.lang.String pers.platform.blog.controller.cc.CommentCcController.list(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2017-09-13 21:30:39.446  INFO 7176 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cc/link/delete.html]}" onto public java.lang.String pers.platform.blog.controller.cc.LinkCcController.delete(java.lang.String,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2017-09-13 21:30:39.447  INFO 7176 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cc/link/list.html]}" onto public java.lang.String pers.platform.blog.controller.cc.LinkCcController.list(java.lang.String,java.lang.String,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2017-09-13 21:30:39.447  INFO 7176 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cc/link/save.html]}" onto public java.lang.String pers.platform.blog.controller.cc.LinkCcController.save(pers.platform.blog.model.Link,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2017-09-13 21:30:39.450  INFO 7176 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cc/system/refreshSystem.html]}" onto public java.lang.String pers.platform.blog.controller.cc.SystemCcController.refreshSystem(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2017-09-13 21:30:39.450  INFO 7176 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/comment/save.html]}" onto public java.lang.String pers.platform.blog.controller.CommentController.save(pers.platform.blog.model.Comment,java.lang.String,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpSession) throws java.lang.Exception
2017-09-13 21:30:39.451  INFO 7176 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/index]}" onto public org.springframework.web.servlet.ModelAndView pers.platform.blog.controller.IndexContrller.index(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2017-09-13 21:30:39.451  INFO 7176 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/download.html]}" onto public org.springframework.web.servlet.ModelAndView pers.platform.blog.controller.IndexContrller.download() throws java.lang.Exception
2017-09-13 21:30:39.454  INFO 7176 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2017-09-13 21:30:39.454  INFO 7176 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2017-09-13 21:30:39.639  INFO 7176 --- [restartedMain] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/cc/main.html] onto handler of type [class org.springframework.web.servlet.mvc.ParameterizableViewController]
2017-09-13 21:30:39.639  INFO 7176 --- [restartedMain] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/cc/blog.html] onto handler of type [class org.springframework.web.servlet.mvc.ParameterizableViewController]
2017-09-13 21:30:39.640  INFO 7176 --- [restartedMain] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/cc/commentReview.html] onto handler of type [class org.springframework.web.servlet.mvc.ParameterizableViewController]
2017-09-13 21:30:39.640  INFO 7176 --- [restartedMain] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/cc/blogManage.html] onto handler of type [class org.springframework.web.servlet.mvc.ParameterizableViewController]
2017-09-13 21:30:39.640  INFO 7176 --- [restartedMain] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/cc/blogTypeManage.html] onto handler of type [class org.springframework.web.servlet.mvc.ParameterizableViewController]
2017-09-13 21:30:39.640  INFO 7176 --- [restartedMain] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/cc/commentManage.html] onto handler of type [class org.springframework.web.servlet.mvc.ParameterizableViewController]
2017-09-13 21:30:39.640  INFO 7176 --- [restartedMain] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/cc/modifyInfo.html] onto handler of type [class org.springframework.web.servlet.mvc.ParameterizableViewController]
2017-09-13 21:30:39.641  INFO 7176 --- [restartedMain] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/cc/linkManage.html] onto handler of type [class org.springframework.web.servlet.mvc.ParameterizableViewController]
2017-09-13 21:30:39.690  INFO 7176 --- [restartedMain] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2017-09-13 21:30:39.690  INFO 7176 --- [restartedMain] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2017-09-13 21:30:39.737  INFO 7176 --- [restartedMain] .m.m.a.ExceptionHandlerExceptionResolver : Detected @ExceptionHandler methods in repositoryRestExceptionHandler
2017-09-13 21:30:39.933  INFO 7176 --- [restartedMain] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2017-09-13 21:30:44.089  INFO 7176 --- [restartedMain] o.s.d.r.w.RepositoryRestHandlerAdapter   : Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@63295398: startup date [Wed Sep 13 21:30:22 CST 2017]; root of context hierarchy
2017-09-13 21:30:44.123  INFO 7176 --- [restartedMain] o.s.d.r.w.RepositoryRestHandlerMapping   : Mapped "{[/{repository}/{id}/{property}],methods=[GET],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<org.springframework.hateoas.ResourceSupport> org.springframework.data.rest.webmvc.RepositoryPropertyReferenceController.followPropertyReference(org.springframework.data.rest.webmvc.RootResourceInformation,java.io.Serializable,java.lang.String,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler) throws java.lang.Exception
2017-09-13 21:30:44.124  INFO 7176 --- [restartedMain] o.s.d.r.w.RepositoryRestHandlerMapping   : Mapped "{[/{repository}/{id}/{property}/{propertyId}],methods=[GET],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<org.springframework.hateoas.ResourceSupport> org.springframework.data.rest.webmvc.RepositoryPropertyReferenceController.followPropertyReference(org.springframework.data.rest.webmvc.RootResourceInformation,java.io.Serializable,java.lang.String,java.lang.String,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler) throws java.lang.Exception
2017-09-13 21:30:44.125  INFO 7176 --- [restartedMain] o.s.d.r.w.RepositoryRestHandlerMapping   : Mapped "{[/{repository}/{id}/{property}],methods=[DELETE],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<? extends org.springframework.hateoas.ResourceSupport> org.springframework.data.rest.webmvc.RepositoryPropertyReferenceController.deletePropertyReference(org.springframework.data.rest.webmvc.RootResourceInformation,java.io.Serializable,java.lang.String) throws java.lang.Exception
2017-09-13 21:30:44.127  INFO 7176 --- [restartedMain] o.s.d.r.w.RepositoryRestHandlerMapping   : Mapped "{[/{repository}/{id}/{property}],methods=[GET],produces=[application/x-spring-data-compact+json || text/uri-list]}" onto public org.springframework.http.ResponseEntity<org.springframework.hateoas.ResourceSupport> org.springframework.data.rest.webmvc.RepositoryPropertyReferenceController.followPropertyReferenceCompact(org.springframework.data.rest.webmvc.RootResourceInformation,java.io.Serializable,java.lang.String,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler) throws java.lang.Exception
2017-09-13 21:30:44.130  INFO 7176 --- [restartedMain] o.s.d.r.w.RepositoryRestHandlerMapping   : Mapped "{[/{repository}/{id}/{property}],methods=[PATCH || PUT || POST],consumes=[application/json || application/x-spring-data-compact+json || text/uri-list],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<? extends org.springframework.hateoas.ResourceSupport> org.springframework.data.rest.webmvc.RepositoryPropertyReferenceController.createPropertyReference(org.springframework.data.rest.webmvc.RootResourceInformation,org.springframework.http.HttpMethod,org.springframework.hateoas.Resources<java.lang.Object>,java.io.Serializable,java.lang.String) throws java.lang.Exception
2017-09-13 21:30:44.131  INFO 7176 --- [restartedMain] o.s.d.r.w.RepositoryRestHandlerMapping   : Mapped "{[/{repository}/{id}/{property}/{propertyId}],methods=[DELETE],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<org.springframework.hateoas.ResourceSupport> org.springframework.data.rest.webmvc.RepositoryPropertyReferenceController.deletePropertyReferenceId(org.springframework.data.rest.webmvc.RootResourceInformation,java.io.Serializable,java.lang.String,java.lang.String) throws java.lang.Exception
2017-09-13 21:30:44.133  INFO 7176 --- [restartedMain] o.s.d.r.w.RepositoryRestHandlerMapping   : Mapped "{[/{repository}/search],methods=[OPTIONS],produces=[application/hal+json || application/json]}" onto public org.springframework.http.HttpEntity<?> org.springframework.data.rest.webmvc.RepositorySearchController.optionsForSearches(org.springframework.data.rest.webmvc.RootResourceInformation)
2017-09-13 21:30:44.135  INFO 7176 --- [restartedMain] o.s.d.r.w.RepositoryRestHandlerMapping   : Mapped "{[/{repository}/search/{search}],methods=[GET],produces=[application/x-spring-data-compact+json]}" onto public org.springframework.hateoas.ResourceSupport org.springframework.data.rest.webmvc.RepositorySearchController.executeSearchCompact(org.springframework.data.rest.webmvc.RootResourceInformation,org.springframework.http.HttpHeaders,org.springframework.util.MultiValueMap<java.lang.String, java.lang.Object>,java.lang.String,java.lang.String,org.springframework.data.rest.webmvc.support.DefaultedPageable,org.springframework.data.domain.Sort,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler)
2017-09-13 21:30:44.274  INFO 7176 --- [restartedMain] o.s.d.r.w.RepositoryRestHandlerMapping   : Mapped "{[/{repository}/search],methods=[HEAD],produces=[application/hal+json || application/json]}" onto public org.springframework.http.HttpEntity<?> org.springframework.data.rest.webmvc.RepositorySearchController.headForSearches(org.springframework.data.rest.webmvc.RootResourceInformation)
2017-09-13 21:30:44.276  INFO 7176 --- [restartedMain] o.s.d.r.w.RepositoryRestHandlerMapping   : Mapped "{[/{repository}/search/{search}],methods=[GET],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.data.rest.webmvc.RepositorySearchController.executeSearch(org.springframework.data.rest.webmvc.RootResourceInformation,org.springframework.util.MultiValueMap<java.lang.String, java.lang.Object>,java.lang.String,org.springframework.data.rest.webmvc.support.DefaultedPageable,org.springframework.data.domain.Sort,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler,org.springframework.http.HttpHeaders)
2017-09-13 21:30:44.277  INFO 7176 --- [restartedMain] o.s.d.r.w.RepositoryRestHandlerMapping   : Mapped "{[/{repository}/search],methods=[GET],produces=[application/hal+json || application/json]}" onto public org.springframework.data.rest.webmvc.RepositorySearchesResource org.springframework.data.rest.webmvc.RepositorySearchController.listSearches(org.springframework.data.rest.webmvc.RootResourceInformation)
2017-09-13 21:30:44.277  INFO 7176 --- [restartedMain] o.s.d.r.w.RepositoryRestHandlerMapping   : Mapped "{[/{repository}/search/{search}],methods=[OPTIONS],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<java.lang.Object> org.springframework.data.rest.webmvc.RepositorySearchController.optionsForSearch(org.springframework.data.rest.webmvc.RootResourceInformation,java.lang.String)
2017-09-13 21:30:44.278  INFO 7176 --- [restartedMain] o.s.d.r.w.RepositoryRestHandlerMapping   : Mapped "{[/{repository}/search/{search}],methods=[HEAD],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<java.lang.Object> org.springframework.data.rest.webmvc.RepositorySearchController.headForSearch(org.springframework.data.rest.webmvc.RootResourceInformation,java.lang.String)
2017-09-13 21:30:44.278  INFO 7176 --- [restartedMain] o.s.d.r.w.RepositoryRestHandlerMapping   : Mapped "{[/ || ],methods=[OPTIONS],produces=[application/hal+json || application/json]}" onto public org.springframework.http.HttpEntity<?> org.springframework.data.rest.webmvc.RepositoryController.optionsForRepositories()
2017-09-13 21:30:44.279  INFO 7176 --- [restartedMain] o.s.d.r.w.RepositoryRestHandlerMapping   : Mapped "{[/ || ],methods=[HEAD],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.data.rest.webmvc.RepositoryController.headForRepositories()
2017-09-13 21:30:44.279  INFO 7176 --- [restartedMain] o.s.d.r.w.RepositoryRestHandlerMapping   : Mapped "{[/ || ],methods=[GET],produces=[application/hal+json || application/json]}" onto public org.springframework.http.HttpEntity<org.springframework.data.rest.webmvc.RepositoryLinksResource> org.springframework.data.rest.webmvc.RepositoryController.listRepositories()
2017-09-13 21:30:44.281  INFO 7176 --- [restartedMain] o.s.d.r.w.RepositoryRestHandlerMapping   : Mapped "{[/{repository}],methods=[OPTIONS],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.data.rest.webmvc.RepositoryEntityController.optionsForCollectionResource(org.springframework.data.rest.webmvc.RootResourceInformation)
2017-09-13 21:30:44.282  INFO 7176 --- [restartedMain] o.s.d.r.w.RepositoryRestHandlerMapping   : Mapped "{[/{repository}],methods=[HEAD],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.data.rest.webmvc.RepositoryEntityController.headCollectionResource(org.springframework.data.rest.webmvc.RootResourceInformation,org.springframework.data.rest.webmvc.support.DefaultedPageable) throws org.springframework.web.HttpRequestMethodNotSupportedException
2017-09-13 21:30:44.282  INFO 7176 --- [restartedMain] o.s.d.r.w.RepositoryRestHandlerMapping   : Mapped "{[/{repository}],methods=[GET],produces=[application/hal+json || application/json]}" onto public org.springframework.hateoas.Resources<?> org.springframework.data.rest.webmvc.RepositoryEntityController.getCollectionResource(org.springframework.data.rest.webmvc.RootResourceInformation,org.springframework.data.rest.webmvc.support.DefaultedPageable,org.springframework.data.domain.Sort,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler) throws org.springframework.data.rest.webmvc.ResourceNotFoundException,org.springframework.web.HttpRequestMethodNotSupportedException
2017-09-13 21:30:44.282  INFO 7176 --- [restartedMain] o.s.d.r.w.RepositoryRestHandlerMapping   : Mapped "{[/{repository}],methods=[GET],produces=[application/x-spring-data-compact+json || text/uri-list]}" onto public org.springframework.hateoas.Resources<?> org.springframework.data.rest.webmvc.RepositoryEntityController.getCollectionResourceCompact(org.springframework.data.rest.webmvc.RootResourceInformation,org.springframework.data.rest.webmvc.support.DefaultedPageable,org.springframework.data.domain.Sort,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler) throws org.springframework.data.rest.webmvc.ResourceNotFoundException,org.springframework.web.HttpRequestMethodNotSupportedException
2017-09-13 21:30:44.284  INFO 7176 --- [restartedMain] o.s.d.r.w.RepositoryRestHandlerMapping   : Mapped "{[/{repository}],methods=[POST],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<org.springframework.hateoas.ResourceSupport> org.springframework.data.rest.webmvc.RepositoryEntityController.postCollectionResource(org.springframework.data.rest.webmvc.RootResourceInformation,org.springframework.data.rest.webmvc.PersistentEntityResource,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler,java.lang.String) throws org.springframework.web.HttpRequestMethodNotSupportedException
2017-09-13 21:30:44.284  INFO 7176 --- [restartedMain] o.s.d.r.w.RepositoryRestHandlerMapping   : Mapped "{[/{repository}/{id}],methods=[OPTIONS],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.data.rest.webmvc.RepositoryEntityController.optionsForItemResource(org.springframework.data.rest.webmvc.RootResourceInformation)
2017-09-13 21:30:44.285  INFO 7176 --- [restartedMain] o.s.d.r.w.RepositoryRestHandlerMapping   : Mapped "{[/{repository}/{id}],methods=[HEAD],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.data.rest.webmvc.RepositoryEntityController.headForItemResource(org.springframework.data.rest.webmvc.RootResourceInformation,java.io.Serializable,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler) throws org.springframework.web.HttpRequestMethodNotSupportedException
2017-09-13 21:30:44.285  INFO 7176 --- [restartedMain] o.s.d.r.w.RepositoryRestHandlerMapping   : Mapped "{[/{repository}/{id}],methods=[PATCH],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<org.springframework.hateoas.ResourceSupport> org.springframework.data.rest.webmvc.RepositoryEntityController.patchItemResource(org.springframework.data.rest.webmvc.RootResourceInformation,org.springframework.data.rest.webmvc.PersistentEntityResource,java.io.Serializable,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler,org.springframework.data.rest.webmvc.support.ETag,java.lang.String) throws org.springframework.web.HttpRequestMethodNotSupportedException,org.springframework.data.rest.webmvc.ResourceNotFoundException
2017-09-13 21:30:44.286  INFO 7176 --- [restartedMain] o.s.d.r.w.RepositoryRestHandlerMapping   : Mapped "{[/{repository}/{id}],methods=[DELETE],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.data.rest.webmvc.RepositoryEntityController.deleteItemResource(org.springframework.data.rest.webmvc.RootResourceInformation,java.io.Serializable,org.springframework.data.rest.webmvc.support.ETag) throws org.springframework.data.rest.webmvc.ResourceNotFoundException,org.springframework.web.HttpRequestMethodNotSupportedException
2017-09-13 21:30:44.287  INFO 7176 --- [restartedMain] o.s.d.r.w.RepositoryRestHandlerMapping   : Mapped "{[/{repository}/{id}],methods=[PUT],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<? extends org.springframework.hateoas.ResourceSupport> org.springframework.data.rest.webmvc.RepositoryEntityController.putItemResource(org.springframework.data.rest.webmvc.RootResourceInformation,org.springframework.data.rest.webmvc.PersistentEntityResource,java.io.Serializable,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler,org.springframework.data.rest.webmvc.support.ETag,java.lang.String) throws org.springframework.web.HttpRequestMethodNotSupportedException
2017-09-13 21:30:44.293  INFO 7176 --- [restartedMain] o.s.d.r.w.RepositoryRestHandlerMapping   : Mapped "{[/{repository}/{id}],methods=[GET],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<org.springframework.hateoas.Resource<?>> org.springframework.data.rest.webmvc.RepositoryEntityController.getItemResource(org.springframework.data.rest.webmvc.RootResourceInformation,java.io.Serializable,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler,org.springframework.http.HttpHeaders) throws org.springframework.web.HttpRequestMethodNotSupportedException
2017-09-13 21:30:44.303  INFO 7176 --- [restartedMain] o.s.d.r.w.BasePathAwareHandlerMapping    : Mapped "{[/profile],methods=[GET]}" onto org.springframework.http.HttpEntity<org.springframework.hateoas.ResourceSupport> org.springframework.data.rest.webmvc.ProfileController.listAllFormsOfMetadata()
2017-09-13 21:30:44.304  INFO 7176 --- [restartedMain] o.s.d.r.w.BasePathAwareHandlerMapping    : Mapped "{[/profile],methods=[OPTIONS]}" onto public org.springframework.http.HttpEntity<?> org.springframework.data.rest.webmvc.ProfileController.profileOptions()
2017-09-13 21:30:44.314  INFO 7176 --- [restartedMain] o.s.d.r.w.BasePathAwareHandlerMapping    : Mapped "{[/profile/{repository}],methods=[GET],produces=[application/schema+json]}" onto public org.springframework.http.HttpEntity<org.springframework.data.rest.webmvc.json.JsonSchema> org.springframework.data.rest.webmvc.RepositorySchemaController.schema(org.springframework.data.rest.webmvc.RootResourceInformation)
2017-09-13 21:30:44.315  INFO 7176 --- [restartedMain] o.s.d.r.w.BasePathAwareHandlerMapping    : Mapped "{[/profile/{repository}],methods=[GET],produces=[application/alps+json || */*]}" onto org.springframework.http.HttpEntity<org.springframework.data.rest.webmvc.RootResourceInformation> org.springframework.data.rest.webmvc.alps.AlpsController.descriptor(org.springframework.data.rest.webmvc.RootResourceInformation)
2017-09-13 21:30:44.315  INFO 7176 --- [restartedMain] o.s.d.r.w.BasePathAwareHandlerMapping    : Mapped "{[/profile/{repository}],methods=[OPTIONS],produces=[application/alps+json]}" onto org.springframework.http.HttpEntity<?> org.springframework.data.rest.webmvc.alps.AlpsController.alpsOptions()
2017-09-13 21:30:45.394  INFO 7176 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2017-09-13 21:30:45.915  INFO 7176 --- [restartedMain] o.s.j.e.a.AnnotationMBeanExporter        : Registering beans for JMX exposure on startup
2017-09-13 21:30:45.918  INFO 7176 --- [restartedMain] o.s.j.e.a.AnnotationMBeanExporter        : Bean with name 'statFilter' has been autodetected for JMX exposure
2017-09-13 21:30:45.918  INFO 7176 --- [restartedMain] o.s.j.e.a.AnnotationMBeanExporter        : Bean with name 'dataSource' has been autodetected for JMX exposure
2017-09-13 21:30:45.934  INFO 7176 --- [restartedMain] o.s.j.e.a.AnnotationMBeanExporter        : Bean with name 'rabbitConnectionFactory' has been autodetected for JMX exposure
2017-09-13 21:30:45.938  INFO 7176 --- [restartedMain] o.s.j.e.a.AnnotationMBeanExporter        : Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2017-09-13 21:30:45.941  INFO 7176 --- [restartedMain] o.s.j.e.a.AnnotationMBeanExporter        : Located managed bean 'rabbitConnectionFactory': registering with JMX server as MBean [org.springframework.amqp.rabbit.connection:name=rabbitConnectionFactory,type=CachingConnectionFactory]
2017-09-13 21:30:46.059  INFO 7176 --- [restartedMain] o.s.j.e.a.AnnotationMBeanExporter        : Located MBean 'statFilter': registering with JMX server as MBean [com.alibaba.druid.filter.stat:name=statFilter,type=StatFilter]
2017-09-13 21:30:46.121  INFO 7176 --- [restartedMain] o.s.c.support.DefaultLifecycleProcessor  : Starting beans in phase -2147482648
2017-09-13 21:30:46.122  INFO 7176 --- [restartedMain] o.s.c.support.DefaultLifecycleProcessor  : Starting beans in phase 2147483647
2017-09-13 21:30:46.524  INFO 7176 --- [restartedMain] s.b.c.e.t.TomcatEmbeddedServletContainer : Tomcat started on port(s): 8080 (http)
2017-09-13 21:30:46.622  INFO 7176 --- [restartedMain] pers.platform.blog.Application           : Started Application in 26.564 seconds (JVM running for 30.927)
2017-09-13 23:21:37.501  INFO 6420 --- [restartedMain] pers.platform.blog.Application           : Starting Application on PC-20160914JGKD with PID 6420 (E:\workspace\pers-cc-platform\pers-platform-blog-web\target\classes started by Administrator in E:\workspace\pers-cc-platform\pers-platform-blog-web)
2017-09-13 23:21:37.512 DEBUG 6420 --- [restartedMain] pers.platform.blog.Application           : Running with Spring Boot v1.5.2.RELEASE, Spring v4.3.7.RELEASE
2017-09-13 23:21:37.512  INFO 6420 --- [restartedMain] pers.platform.blog.Application           : The following profiles are active: test
2017-09-13 23:21:38.708  INFO 6420 --- [restartedMain] ationConfigEmbeddedWebApplicationContext : Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@78b1aec1: startup date [Wed Sep 13 23:21:38 CST 2017]; root of context hierarchy
2017-09-13 23:21:43.973  INFO 6420 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2017-09-13 23:21:44.112  INFO 6420 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2017-09-13 23:21:44.236  INFO 6420 --- [restartedMain] o.s.b.f.s.DefaultListableBeanFactory     : Overriding bean definition for bean 'httpRequestHandlerAdapter' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.boot.autoconfigure.web.WebMvcAutoConfiguration$EnableWebMvcConfiguration; factoryMethodName=httpRequestHandlerAdapter; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/boot/autoconfigure/web/WebMvcAutoConfiguration$EnableWebMvcConfiguration.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.data.rest.webmvc.config.RepositoryRestMvcConfiguration; factoryMethodName=httpRequestHandlerAdapter; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/data/rest/webmvc/config/RepositoryRestMvcConfiguration.class]]
2017-09-13 23:21:44.620  INFO 6420 --- [restartedMain] o.s.b.f.s.DefaultListableBeanFactory     : Overriding bean definition for bean 'dataSource' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure; factoryMethodName=dataSource; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/alibaba/druid/spring/boot/autoconfigure/DruidDataSourceAutoConfigure.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=true; factoryBeanName=spring.datasource-pers.platform.blog.config.DruidDBConfig; factoryMethodName=dataSource; initMethodName=null; destroyMethodName=(inferred); defined in pers.platform.blog.config.DruidDBConfig]
2017-09-13 23:21:46.155  INFO 6420 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.amqp.rabbit.annotation.RabbitBootstrapConfiguration' of type [org.springframework.amqp.rabbit.annotation.RabbitBootstrapConfiguration$$EnhancerBySpringCGLIB$$4ddcc236] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017-09-13 23:21:46.380  INFO 6420 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$87710408] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017-09-13 23:21:46.552  INFO 6420 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'reidsConfig' of type [pers.platform.blog.config.ReidsConfig$$EnhancerBySpringCGLIB$$3ce39fb1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017-09-13 23:21:46.611  INFO 6420 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'keyGenerator' of type [pers.platform.blog.config.ReidsConfig$1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017-09-13 23:21:46.612  INFO 6420 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.cache.annotation.ProxyCachingConfiguration' of type [org.springframework.cache.annotation.ProxyCachingConfiguration$$EnhancerBySpringCGLIB$$d0833a26] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017-09-13 23:21:46.713  INFO 6420 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'shiroConfig' of type [pers.platform.blog.config.ShiroConfig$$EnhancerBySpringCGLIB$$917d3a7d] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017-09-13 23:21:47.544  INFO 6420 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'myShiroRealm' of type [pers.platform.blog.realm.MyRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017-09-13 23:21:47.599  INFO 6420 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017-09-13 23:21:47.642  INFO 6420 --- [restartedMain] pers.platform.blog.config.ShiroConfig    : 注入Shiro的Web过滤器-->shiroFilter
2017-09-13 23:21:49.302  INFO 6420 --- [restartedMain] s.b.c.e.t.TomcatEmbeddedServletContainer : Tomcat initialized with port(s): 8080 (http)
2017-09-13 23:21:49.345  INFO 6420 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service Tomcat
2017-09-13 23:21:49.358  INFO 6420 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet Engine: Apache Tomcat/8.5.11
2017-09-13 23:21:49.772  INFO 6420 --- [localhost-startStop-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2017-09-13 23:21:49.774  INFO 6420 --- [localhost-startStop-1] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 11071 ms
2017-09-13 23:21:51.262  INFO 6420 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'characterEncodingFilter' to: [/*]
2017-09-13 23:21:51.264  INFO 6420 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2017-09-13 23:21:51.265  INFO 6420 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'httpPutFormContentFilter' to: [/*]
2017-09-13 23:21:51.265  INFO 6420 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'requestContextFilter' to: [/*]
2017-09-13 23:21:51.265  INFO 6420 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'delegatingFilterProxy' to: [/*]
2017-09-13 23:21:51.265  INFO 6420 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'webStatFilter' to urls: [/*]
2017-09-13 23:21:51.266  INFO 6420 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Filter webStatFilter was not registered (possibly already registered?)
2017-09-13 23:21:51.266  INFO 6420 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'shiroFilter' to: [/*]
2017-09-13 23:21:51.266  INFO 6420 --- [localhost-startStop-1] o.s.b.w.servlet.ServletRegistrationBean  : Mapping servlet: 'statViewServlet' to [/druid/*]
2017-09-13 23:21:51.288  INFO 6420 --- [localhost-startStop-1] o.s.b.w.servlet.ServletRegistrationBean  : Mapping servlet: 'dispatcherServlet' to [/]
2017-09-13 23:21:51.289  INFO 6420 --- [localhost-startStop-1] o.s.b.w.servlet.ServletRegistrationBean  : Mapping servlet: 'statViewServlet' to [/druid/*]
2017-09-13 23:21:51.289  INFO 6420 --- [localhost-startStop-1] o.s.b.w.servlet.ServletRegistrationBean  : Servlet statViewServlet was not registered (possibly already registered?)
2017-09-13 23:21:53.751  INFO 6420 --- [localhost-startStop-1] com.alibaba.druid.pool.DruidDataSource   : {dataSource-1} inited
2017-09-13 23:21:53.765 DEBUG 6420 --- [localhost-startStop-1] p.p.blog.repository.BloggerRepo.find     : ==>  Preparing: select * from t_blogger where id=? 
2017-09-13 23:21:54.083 DEBUG 6420 --- [localhost-startStop-1] p.p.blog.repository.BloggerRepo.find     : ==> Parameters: 1(String)
2017-09-13 23:21:54.125 DEBUG 6420 --- [localhost-startStop-1] p.p.blog.repository.BloggerRepo.find     : <==      Total: 1
2017-09-13 23:21:54.209 DEBUG 6420 --- [localhost-startStop-1] p.p.blog.repository.LinkRepo.list        : ==>  Preparing: select * from t_link order by orderNo 
2017-09-13 23:21:54.214 DEBUG 6420 --- [localhost-startStop-1] p.p.blog.repository.LinkRepo.list        : ==> Parameters: 
2017-09-13 23:21:54.217 DEBUG 6420 --- [localhost-startStop-1] p.p.blog.repository.LinkRepo.list        : <==      Total: 2
2017-09-13 23:21:54.262 DEBUG 6420 --- [localhost-startStop-1] p.p.b.repository.BlogTypeRepo.countList  : ==>  Preparing: SELECT t2.id,t2.`typeName`,COUNT(t1.id) AS blogCount FROM t_blog t1 RIGHT JOIN t_blogType t2 ON t1.typeId=t2.id GROUP BY t2.id,t2.typeName ORDER BY t2.orderNo; 
2017-09-13 23:21:54.329 DEBUG 6420 --- [localhost-startStop-1] p.p.b.repository.BlogTypeRepo.countList  : ==> Parameters: 
2017-09-13 23:21:54.336 DEBUG 6420 --- [localhost-startStop-1] p.p.b.repository.BlogTypeRepo.countList  : <==      Total: 17
2017-09-13 23:21:54.370 DEBUG 6420 --- [localhost-startStop-1] p.p.blog.repository.BlogRepo.countList   : ==>  Preparing: SELECT DATE_FORMAT (releaseDate,'%Y年%m月') AS releaseDateStr,COUNT(*) AS blogCount FROM t_blog GROUP BY DATE_FORMAT (releaseDate,'%Y年%m月') ORDER BY DATE_FORMAT (releaseDate,'%Y年%m月') DESC 
2017-09-13 23:21:54.378 DEBUG 6420 --- [localhost-startStop-1] p.p.blog.repository.BlogRepo.countList   : ==> Parameters: 
2017-09-13 23:21:54.400 DEBUG 6420 --- [localhost-startStop-1] p.p.blog.repository.BlogRepo.countList   : <==      Total: 12
2017-09-13 23:21:55.026  INFO 6420 --- [restartedMain] j.LocalContainerEntityManagerFactoryBean : Building JPA container EntityManagerFactory for persistence unit 'default'
2017-09-13 23:21:55.074  INFO 6420 --- [restartedMain] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
2017-09-13 23:21:55.477  INFO 6420 --- [restartedMain] org.hibernate.Version                    : HHH000412: Hibernate Core {5.0.12.Final}
2017-09-13 23:21:55.482  INFO 6420 --- [restartedMain] org.hibernate.cfg.Environment            : HHH000206: hibernate.properties not found
2017-09-13 23:21:55.485  INFO 6420 --- [restartedMain] org.hibernate.cfg.Environment            : HHH000021: Bytecode provider name : javassist
2017-09-13 23:21:55.634  INFO 6420 --- [restartedMain] o.hibernate.annotations.common.Version   : HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
2017-09-13 23:21:56.254  INFO 6420 --- [restartedMain] org.hibernate.dialect.Dialect            : HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
2017-09-13 23:21:56.905  INFO 6420 --- [restartedMain] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2017-09-13 23:21:59.692  INFO 6420 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerAdapter : Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@78b1aec1: startup date [Wed Sep 13 23:21:38 CST 2017]; root of context hierarchy
2017-09-13 23:22:00.053  INFO 6420 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/],methods=[GET]}" onto public java.lang.String pers.platform.blog.Application.index()
2017-09-13 23:22:00.057  INFO 6420 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/blog/q]}" onto public org.springframework.web.servlet.ModelAndView pers.platform.blog.controller.BlogController.search(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2017-09-13 23:22:00.057  INFO 6420 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/blog/articles/{id}.html]}" onto private org.springframework.web.servlet.ModelAndView pers.platform.blog.controller.BlogController.details(java.lang.String,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2017-09-13 23:22:00.059  INFO 6420 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cc/login.html]}" onto public java.lang.String pers.platform.blog.controller.BloggerController.login(pers.platform.blog.model.Blogger,javax.servlet.http.HttpServletRequest)
2017-09-13 23:22:00.060  INFO 6420 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/blogger/aboutMe.html]}" onto public org.springframework.web.servlet.ModelAndView pers.platform.blog.controller.BloggerController.aboutMe() throws java.lang.Exception
2017-09-13 23:22:00.071  INFO 6420 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cc/blog/delete.html]}" onto public java.lang.String pers.platform.blog.controller.cc.BlogCcController.delete(java.lang.String,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2017-09-13 23:22:00.072  INFO 6420 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cc/blog/list.html]}" onto public java.lang.String pers.platform.blog.controller.cc.BlogCcController.list(java.lang.String,java.lang.String,pers.platform.blog.model.Blog,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2017-09-13 23:22:00.075  INFO 6420 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cc/blog/save.html]}" onto public java.lang.String pers.platform.blog.controller.cc.BlogCcController.save(pers.platform.blog.model.Blog,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2017-09-13 23:22:00.075  INFO 6420 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cc/blog/findById.html]}" onto public java.lang.String pers.platform.blog.controller.cc.BlogCcController.findById(java.lang.String,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2017-09-13 23:22:00.077  INFO 6420 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cc/blog/uploadPastImage]}" onto public java.lang.String pers.platform.blog.controller.cc.BlogCcController.uploadPastImage(javax.servlet.http.HttpServletRequest,java.lang.String) throws java.lang.Exception
2017-09-13 23:22:00.078  INFO 6420 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cc/blog/ckeditorUpload]}" onto public java.lang.String pers.platform.blog.controller.cc.BlogCcController.upLoadImage(javax.servlet.http.HttpServletRequest,org.springframework.web.multipart.MultipartFile,java.lang.String) throws java.lang.Exception
2017-09-13 23:22:00.078  INFO 6420 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cc/blog/modifyBlog.html]}" onto public org.springframework.web.servlet.ModelAndView pers.platform.blog.controller.cc.BlogCcController.modifyBlog(java.lang.String,javax.servlet.http.HttpServletResponse)
2017-09-13 23:22:00.083  INFO 6420 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cc/blogger/find.html]}" onto public java.lang.String pers.platform.blog.controller.cc.BloggerCcController.find(javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2017-09-13 23:22:00.084  INFO 6420 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cc/blogger/save.html]}" onto public java.lang.String pers.platform.blog.controller.cc.BloggerCcController.save(org.springframework.web.multipart.MultipartFile,pers.platform.blog.model.Blogger,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2017-09-13 23:22:00.086  INFO 6420 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cc/blogger/logout.html]}" onto public java.lang.String pers.platform.blog.controller.cc.BloggerCcController.logout() throws java.lang.Exception
2017-09-13 23:22:00.087  INFO 6420 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cc/blogger/modifyPassword.html]}" onto public java.lang.String pers.platform.blog.controller.cc.BloggerCcController.modifyPassword(java.lang.String,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2017-09-13 23:22:00.091  INFO 6420 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cc/blogType/delete.html]}" onto public java.lang.String pers.platform.blog.controller.cc.BlogTypeCcController.delete(java.lang.String,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2017-09-13 23:22:00.092  INFO 6420 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cc/blogType/list.html]}" onto public java.lang.String pers.platform.blog.controller.cc.BlogTypeCcController.list(java.lang.String,java.lang.String,pers.platform.blog.model.BlogType,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2017-09-13 23:22:00.094  INFO 6420 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cc/blogType/save.html]}" onto public java.lang.String pers.platform.blog.controller.cc.BlogTypeCcController.save(pers.platform.blog.model.BlogType,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2017-09-13 23:22:00.095  INFO 6420 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cc/blogType/findById.html]}" onto public java.lang.String pers.platform.blog.controller.cc.BlogTypeCcController.findById(java.lang.String,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2017-09-13 23:22:00.099  INFO 6420 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cc/comment/delete.html]}" onto public java.lang.String pers.platform.blog.controller.cc.CommentCcController.delete(java.lang.String,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2017-09-13 23:22:00.101  INFO 6420 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cc/comment/review.html]}" onto public java.lang.String pers.platform.blog.controller.cc.CommentCcController.delete(java.lang.String,java.lang.Integer,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2017-09-13 23:22:00.101  INFO 6420 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cc/comment/list.html]}" onto public java.lang.String pers.platform.blog.controller.cc.CommentCcController.list(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2017-09-13 23:22:00.104  INFO 6420 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cc/link/delete.html]}" onto public java.lang.String pers.platform.blog.controller.cc.LinkCcController.delete(java.lang.String,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2017-09-13 23:22:00.104  INFO 6420 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cc/link/list.html]}" onto public java.lang.String pers.platform.blog.controller.cc.LinkCcController.list(java.lang.String,java.lang.String,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2017-09-13 23:22:00.105  INFO 6420 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cc/link/save.html]}" onto public java.lang.String pers.platform.blog.controller.cc.LinkCcController.save(pers.platform.blog.model.Link,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2017-09-13 23:22:00.110  INFO 6420 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cc/system/refreshSystem.html]}" onto public java.lang.String pers.platform.blog.controller.cc.SystemCcController.refreshSystem(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2017-09-13 23:22:00.111  INFO 6420 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/comment/save.html]}" onto public java.lang.String pers.platform.blog.controller.CommentController.save(pers.platform.blog.model.Comment,java.lang.String,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpSession) throws java.lang.Exception
2017-09-13 23:22:00.115  INFO 6420 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/index]}" onto public org.springframework.web.servlet.ModelAndView pers.platform.blog.controller.IndexContrller.index(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2017-09-13 23:22:00.115  INFO 6420 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/download.html]}" onto public org.springframework.web.servlet.ModelAndView pers.platform.blog.controller.IndexContrller.download() throws java.lang.Exception
2017-09-13 23:22:00.120  INFO 6420 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2017-09-13 23:22:00.122  INFO 6420 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2017-09-13 23:22:00.213  INFO 6420 --- [restartedMain] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/cc/main.html] onto handler of type [class org.springframework.web.servlet.mvc.ParameterizableViewController]
2017-09-13 23:22:00.214  INFO 6420 --- [restartedMain] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/cc/blog.html] onto handler of type [class org.springframework.web.servlet.mvc.ParameterizableViewController]
2017-09-13 23:22:00.214  INFO 6420 --- [restartedMain] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/cc/commentReview.html] onto handler of type [class org.springframework.web.servlet.mvc.ParameterizableViewController]
2017-09-13 23:22:00.214  INFO 6420 --- [restartedMain] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/cc/blogManage.html] onto handler of type [class org.springframework.web.servlet.mvc.ParameterizableViewController]
2017-09-13 23:22:00.214  INFO 6420 --- [restartedMain] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/cc/blogTypeManage.html] onto handler of type [class org.springframework.web.servlet.mvc.ParameterizableViewController]
2017-09-13 23:22:00.214  INFO 6420 --- [restartedMain] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/cc/commentManage.html] onto handler of type [class org.springframework.web.servlet.mvc.ParameterizableViewController]
2017-09-13 23:22:00.214  INFO 6420 --- [restartedMain] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/cc/modifyInfo.html] onto handler of type [class org.springframework.web.servlet.mvc.ParameterizableViewController]
2017-09-13 23:22:00.214  INFO 6420 --- [restartedMain] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/cc/linkManage.html] onto handler of type [class org.springframework.web.servlet.mvc.ParameterizableViewController]
2017-09-13 23:22:00.279  INFO 6420 --- [restartedMain] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2017-09-13 23:22:00.280  INFO 6420 --- [restartedMain] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2017-09-13 23:22:00.388  INFO 6420 --- [restartedMain] .m.m.a.ExceptionHandlerExceptionResolver : Detected @ExceptionHandler methods in repositoryRestExceptionHandler
2017-09-13 23:22:00.792  INFO 6420 --- [restartedMain] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2017-09-13 23:22:04.566  INFO 6420 --- [restartedMain] o.s.d.r.w.RepositoryRestHandlerAdapter   : Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@78b1aec1: startup date [Wed Sep 13 23:21:38 CST 2017]; root of context hierarchy
2017-09-13 23:22:04.631  INFO 6420 --- [restartedMain] o.s.d.r.w.RepositoryRestHandlerMapping   : Mapped "{[/{repository}/{id}/{property}],methods=[GET],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<org.springframework.hateoas.ResourceSupport> org.springframework.data.rest.webmvc.RepositoryPropertyReferenceController.followPropertyReference(org.springframework.data.rest.webmvc.RootResourceInformation,java.io.Serializable,java.lang.String,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler) throws java.lang.Exception
2017-09-13 23:22:04.633  INFO 6420 --- [restartedMain] o.s.d.r.w.RepositoryRestHandlerMapping   : Mapped "{[/{repository}/{id}/{property}/{propertyId}],methods=[GET],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<org.springframework.hateoas.ResourceSupport> org.springframework.data.rest.webmvc.RepositoryPropertyReferenceController.followPropertyReference(org.springframework.data.rest.webmvc.RootResourceInformation,java.io.Serializable,java.lang.String,java.lang.String,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler) throws java.lang.Exception
2017-09-13 23:22:04.634  INFO 6420 --- [restartedMain] o.s.d.r.w.RepositoryRestHandlerMapping   : Mapped "{[/{repository}/{id}/{property}],methods=[DELETE],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<? extends org.springframework.hateoas.ResourceSupport> org.springframework.data.rest.webmvc.RepositoryPropertyReferenceController.deletePropertyReference(org.springframework.data.rest.webmvc.RootResourceInformation,java.io.Serializable,java.lang.String) throws java.lang.Exception
2017-09-13 23:22:04.634  INFO 6420 --- [restartedMain] o.s.d.r.w.RepositoryRestHandlerMapping   : Mapped "{[/{repository}/{id}/{property}],methods=[GET],produces=[application/x-spring-data-compact+json || text/uri-list]}" onto public org.springframework.http.ResponseEntity<org.springframework.hateoas.ResourceSupport> org.springframework.data.rest.webmvc.RepositoryPropertyReferenceController.followPropertyReferenceCompact(org.springframework.data.rest.webmvc.RootResourceInformation,java.io.Serializable,java.lang.String,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler) throws java.lang.Exception
2017-09-13 23:22:04.635  INFO 6420 --- [restartedMain] o.s.d.r.w.RepositoryRestHandlerMapping   : Mapped "{[/{repository}/{id}/{property}],methods=[PATCH || PUT || POST],consumes=[application/json || application/x-spring-data-compact+json || text/uri-list],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<? extends org.springframework.hateoas.ResourceSupport> org.springframework.data.rest.webmvc.RepositoryPropertyReferenceController.createPropertyReference(org.springframework.data.rest.webmvc.RootResourceInformation,org.springframework.http.HttpMethod,org.springframework.hateoas.Resources<java.lang.Object>,java.io.Serializable,java.lang.String) throws java.lang.Exception
2017-09-13 23:22:04.635  INFO 6420 --- [restartedMain] o.s.d.r.w.RepositoryRestHandlerMapping   : Mapped "{[/{repository}/{id}/{property}/{propertyId}],methods=[DELETE],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<org.springframework.hateoas.ResourceSupport> org.springframework.data.rest.webmvc.RepositoryPropertyReferenceController.deletePropertyReferenceId(org.springframework.data.rest.webmvc.RootResourceInformation,java.io.Serializable,java.lang.String,java.lang.String) throws java.lang.Exception
2017-09-13 23:22:04.638  INFO 6420 --- [restartedMain] o.s.d.r.w.RepositoryRestHandlerMapping   : Mapped "{[/{repository}/search],methods=[OPTIONS],produces=[application/hal+json || application/json]}" onto public org.springframework.http.HttpEntity<?> org.springframework.data.rest.webmvc.RepositorySearchController.optionsForSearches(org.springframework.data.rest.webmvc.RootResourceInformation)
2017-09-13 23:22:04.639  INFO 6420 --- [restartedMain] o.s.d.r.w.RepositoryRestHandlerMapping   : Mapped "{[/{repository}/search/{search}],methods=[GET],produces=[application/x-spring-data-compact+json]}" onto public org.springframework.hateoas.ResourceSupport org.springframework.data.rest.webmvc.RepositorySearchController.executeSearchCompact(org.springframework.data.rest.webmvc.RootResourceInformation,org.springframework.http.HttpHeaders,org.springframework.util.MultiValueMap<java.lang.String, java.lang.Object>,java.lang.String,java.lang.String,org.springframework.data.rest.webmvc.support.DefaultedPageable,org.springframework.data.domain.Sort,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler)
2017-09-13 23:22:04.640  INFO 6420 --- [restartedMain] o.s.d.r.w.RepositoryRestHandlerMapping   : Mapped "{[/{repository}/search],methods=[HEAD],produces=[application/hal+json || application/json]}" onto public org.springframework.http.HttpEntity<?> org.springframework.data.rest.webmvc.RepositorySearchController.headForSearches(org.springframework.data.rest.webmvc.RootResourceInformation)
2017-09-13 23:22:04.641  INFO 6420 --- [restartedMain] o.s.d.r.w.RepositoryRestHandlerMapping   : Mapped "{[/{repository}/search/{search}],methods=[GET],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.data.rest.webmvc.RepositorySearchController.executeSearch(org.springframework.data.rest.webmvc.RootResourceInformation,org.springframework.util.MultiValueMap<java.lang.String, java.lang.Object>,java.lang.String,org.springframework.data.rest.webmvc.support.DefaultedPageable,org.springframework.data.domain.Sort,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler,org.springframework.http.HttpHeaders)
2017-09-13 23:22:04.642  INFO 6420 --- [restartedMain] o.s.d.r.w.RepositoryRestHandlerMapping   : Mapped "{[/{repository}/search],methods=[GET],produces=[application/hal+json || application/json]}" onto public org.springframework.data.rest.webmvc.RepositorySearchesResource org.springframework.data.rest.webmvc.RepositorySearchController.listSearches(org.springframework.data.rest.webmvc.RootResourceInformation)
2017-09-13 23:22:04.642  INFO 6420 --- [restartedMain] o.s.d.r.w.RepositoryRestHandlerMapping   : Mapped "{[/{repository}/search/{search}],methods=[OPTIONS],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<java.lang.Object> org.springframework.data.rest.webmvc.RepositorySearchController.optionsForSearch(org.springframework.data.rest.webmvc.RootResourceInformation,java.lang.String)
2017-09-13 23:22:04.643  INFO 6420 --- [restartedMain] o.s.d.r.w.RepositoryRestHandlerMapping   : Mapped "{[/{repository}/search/{search}],methods=[HEAD],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<java.lang.Object> org.springframework.data.rest.webmvc.RepositorySearchController.headForSearch(org.springframework.data.rest.webmvc.RootResourceInformation,java.lang.String)
2017-09-13 23:22:04.644  INFO 6420 --- [restartedMain] o.s.d.r.w.RepositoryRestHandlerMapping   : Mapped "{[/ || ],methods=[OPTIONS],produces=[application/hal+json || application/json]}" onto public org.springframework.http.HttpEntity<?> org.springframework.data.rest.webmvc.RepositoryController.optionsForRepositories()
2017-09-13 23:22:04.644  INFO 6420 --- [restartedMain] o.s.d.r.w.RepositoryRestHandlerMapping   : Mapped "{[/ || ],methods=[HEAD],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.data.rest.webmvc.RepositoryController.headForRepositories()
2017-09-13 23:22:04.645  INFO 6420 --- [restartedMain] o.s.d.r.w.RepositoryRestHandlerMapping   : Mapped "{[/ || ],methods=[GET],produces=[application/hal+json || application/json]}" onto public org.springframework.http.HttpEntity<org.springframework.data.rest.webmvc.RepositoryLinksResource> org.springframework.data.rest.webmvc.RepositoryController.listRepositories()
2017-09-13 23:22:04.647  INFO 6420 --- [restartedMain] o.s.d.r.w.RepositoryRestHandlerMapping   : Mapped "{[/{repository}],methods=[OPTIONS],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.data.rest.webmvc.RepositoryEntityController.optionsForCollectionResource(org.springframework.data.rest.webmvc.RootResourceInformation)
2017-09-13 23:22:04.648  INFO 6420 --- [restartedMain] o.s.d.r.w.RepositoryRestHandlerMapping   : Mapped "{[/{repository}],methods=[HEAD],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.data.rest.webmvc.RepositoryEntityController.headCollectionResource(org.springframework.data.rest.webmvc.RootResourceInformation,org.springframework.data.rest.webmvc.support.DefaultedPageable) throws org.springframework.web.HttpRequestMethodNotSupportedException
2017-09-13 23:22:04.648  INFO 6420 --- [restartedMain] o.s.d.r.w.RepositoryRestHandlerMapping   : Mapped "{[/{repository}],methods=[GET],produces=[application/hal+json || application/json]}" onto public org.springframework.hateoas.Resources<?> org.springframework.data.rest.webmvc.RepositoryEntityController.getCollectionResource(org.springframework.data.rest.webmvc.RootResourceInformation,org.springframework.data.rest.webmvc.support.DefaultedPageable,org.springframework.data.domain.Sort,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler) throws org.springframework.data.rest.webmvc.ResourceNotFoundException,org.springframework.web.HttpRequestMethodNotSupportedException
2017-09-13 23:22:04.676  INFO 6420 --- [restartedMain] o.s.d.r.w.RepositoryRestHandlerMapping   : Mapped "{[/{repository}],methods=[GET],produces=[application/x-spring-data-compact+json || text/uri-list]}" onto public org.springframework.hateoas.Resources<?> org.springframework.data.rest.webmvc.RepositoryEntityController.getCollectionResourceCompact(org.springframework.data.rest.webmvc.RootResourceInformation,org.springframework.data.rest.webmvc.support.DefaultedPageable,org.springframework.data.domain.Sort,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler) throws org.springframework.data.rest.webmvc.ResourceNotFoundException,org.springframework.web.HttpRequestMethodNotSupportedException
2017-09-13 23:22:04.678  INFO 6420 --- [restartedMain] o.s.d.r.w.RepositoryRestHandlerMapping   : Mapped "{[/{repository}],methods=[POST],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<org.springframework.hateoas.ResourceSupport> org.springframework.data.rest.webmvc.RepositoryEntityController.postCollectionResource(org.springframework.data.rest.webmvc.RootResourceInformation,org.springframework.data.rest.webmvc.PersistentEntityResource,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler,java.lang.String) throws org.springframework.web.HttpRequestMethodNotSupportedException
2017-09-13 23:22:04.679  INFO 6420 --- [restartedMain] o.s.d.r.w.RepositoryRestHandlerMapping   : Mapped "{[/{repository}/{id}],methods=[OPTIONS],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.data.rest.webmvc.RepositoryEntityController.optionsForItemResource(org.springframework.data.rest.webmvc.RootResourceInformation)
2017-09-13 23:22:04.680  INFO 6420 --- [restartedMain] o.s.d.r.w.RepositoryRestHandlerMapping   : Mapped "{[/{repository}/{id}],methods=[HEAD],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.data.rest.webmvc.RepositoryEntityController.headForItemResource(org.springframework.data.rest.webmvc.RootResourceInformation,java.io.Serializable,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler) throws org.springframework.web.HttpRequestMethodNotSupportedException
2017-09-13 23:22:04.710  INFO 6420 --- [restartedMain] o.s.d.r.w.RepositoryRestHandlerMapping   : Mapped "{[/{repository}/{id}],methods=[PATCH],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<org.springframework.hateoas.ResourceSupport> org.springframework.data.rest.webmvc.RepositoryEntityController.patchItemResource(org.springframework.data.rest.webmvc.RootResourceInformation,org.springframework.data.rest.webmvc.PersistentEntityResource,java.io.Serializable,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler,org.springframework.data.rest.webmvc.support.ETag,java.lang.String) throws org.springframework.web.HttpRequestMethodNotSupportedException,org.springframework.data.rest.webmvc.ResourceNotFoundException
2017-09-13 23:22:04.711  INFO 6420 --- [restartedMain] o.s.d.r.w.RepositoryRestHandlerMapping   : Mapped "{[/{repository}/{id}],methods=[DELETE],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.data.rest.webmvc.RepositoryEntityController.deleteItemResource(org.springframework.data.rest.webmvc.RootResourceInformation,java.io.Serializable,org.springframework.data.rest.webmvc.support.ETag) throws org.springframework.data.rest.webmvc.ResourceNotFoundException,org.springframework.web.HttpRequestMethodNotSupportedException
2017-09-13 23:22:04.712  INFO 6420 --- [restartedMain] o.s.d.r.w.RepositoryRestHandlerMapping   : Mapped "{[/{repository}/{id}],methods=[PUT],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<? extends org.springframework.hateoas.ResourceSupport> org.springframework.data.rest.webmvc.RepositoryEntityController.putItemResource(org.springframework.data.rest.webmvc.RootResourceInformation,org.springframework.data.rest.webmvc.PersistentEntityResource,java.io.Serializable,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler,org.springframework.data.rest.webmvc.support.ETag,java.lang.String) throws org.springframework.web.HttpRequestMethodNotSupportedException
2017-09-13 23:22:04.720  INFO 6420 --- [restartedMain] o.s.d.r.w.RepositoryRestHandlerMapping   : Mapped "{[/{repository}/{id}],methods=[GET],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<org.springframework.hateoas.Resource<?>> org.springframework.data.rest.webmvc.RepositoryEntityController.getItemResource(org.springframework.data.rest.webmvc.RootResourceInformation,java.io.Serializable,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler,org.springframework.http.HttpHeaders) throws org.springframework.web.HttpRequestMethodNotSupportedException
2017-09-13 23:22:04.729  INFO 6420 --- [restartedMain] o.s.d.r.w.BasePathAwareHandlerMapping    : Mapped "{[/profile],methods=[GET]}" onto org.springframework.http.HttpEntity<org.springframework.hateoas.ResourceSupport> org.springframework.data.rest.webmvc.ProfileController.listAllFormsOfMetadata()
2017-09-13 23:22:04.729  INFO 6420 --- [restartedMain] o.s.d.r.w.BasePathAwareHandlerMapping    : Mapped "{[/profile],methods=[OPTIONS]}" onto public org.springframework.http.HttpEntity<?> org.springframework.data.rest.webmvc.ProfileController.profileOptions()
2017-09-13 23:22:04.730  INFO 6420 --- [restartedMain] o.s.d.r.w.BasePathAwareHandlerMapping    : Mapped "{[/profile/{repository}],methods=[GET],produces=[application/schema+json]}" onto public org.springframework.http.HttpEntity<org.springframework.data.rest.webmvc.json.JsonSchema> org.springframework.data.rest.webmvc.RepositorySchemaController.schema(org.springframework.data.rest.webmvc.RootResourceInformation)
2017-09-13 23:22:04.732  INFO 6420 --- [restartedMain] o.s.d.r.w.BasePathAwareHandlerMapping    : Mapped "{[/profile/{repository}],methods=[GET],produces=[application/alps+json || */*]}" onto org.springframework.http.HttpEntity<org.springframework.data.rest.webmvc.RootResourceInformation> org.springframework.data.rest.webmvc.alps.AlpsController.descriptor(org.springframework.data.rest.webmvc.RootResourceInformation)
2017-09-13 23:22:04.741  INFO 6420 --- [restartedMain] o.s.d.r.w.BasePathAwareHandlerMapping    : Mapped "{[/profile/{repository}],methods=[OPTIONS],produces=[application/alps+json]}" onto org.springframework.http.HttpEntity<?> org.springframework.data.rest.webmvc.alps.AlpsController.alpsOptions()
2017-09-13 23:22:06.103  INFO 6420 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2017-09-13 23:22:06.770  INFO 6420 --- [restartedMain] o.s.j.e.a.AnnotationMBeanExporter        : Registering beans for JMX exposure on startup
2017-09-13 23:22:06.776  INFO 6420 --- [restartedMain] o.s.j.e.a.AnnotationMBeanExporter        : Bean with name 'statFilter' has been autodetected for JMX exposure
2017-09-13 23:22:06.777  INFO 6420 --- [restartedMain] o.s.j.e.a.AnnotationMBeanExporter        : Bean with name 'dataSource' has been autodetected for JMX exposure
2017-09-13 23:22:06.797  INFO 6420 --- [restartedMain] o.s.j.e.a.AnnotationMBeanExporter        : Bean with name 'rabbitConnectionFactory' has been autodetected for JMX exposure
2017-09-13 23:22:06.802  INFO 6420 --- [restartedMain] o.s.j.e.a.AnnotationMBeanExporter        : Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2017-09-13 23:22:06.813  INFO 6420 --- [restartedMain] o.s.j.e.a.AnnotationMBeanExporter        : Located managed bean 'rabbitConnectionFactory': registering with JMX server as MBean [org.springframework.amqp.rabbit.connection:name=rabbitConnectionFactory,type=CachingConnectionFactory]
2017-09-13 23:22:06.889  INFO 6420 --- [restartedMain] o.s.j.e.a.AnnotationMBeanExporter        : Located MBean 'statFilter': registering with JMX server as MBean [com.alibaba.druid.filter.stat:name=statFilter,type=StatFilter]
2017-09-13 23:22:06.910  INFO 6420 --- [restartedMain] o.s.c.support.DefaultLifecycleProcessor  : Starting beans in phase -2147482648
2017-09-13 23:22:06.910  INFO 6420 --- [restartedMain] o.s.c.support.DefaultLifecycleProcessor  : Starting beans in phase 2147483647
2017-09-13 23:22:07.053  INFO 6420 --- [restartedMain] s.b.c.e.t.TomcatEmbeddedServletContainer : Tomcat started on port(s): 8080 (http)
2017-09-13 23:22:07.066  INFO 6420 --- [restartedMain] pers.platform.blog.Application           : Started Application in 30.624 seconds (JVM running for 32.377)
2017-09-13 23:22:14.760  INFO 6420 --- [http-nio-8080-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring FrameworkServlet 'dispatcherServlet'
2017-09-13 23:22:14.760  INFO 6420 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : FrameworkServlet 'dispatcherServlet': initialization started
2017-09-13 23:22:14.811  INFO 6420 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : FrameworkServlet 'dispatcherServlet': initialization completed in 51 ms
2017-09-13 23:22:15.224 DEBUG 6420 --- [http-nio-8080-exec-1] p.p.blog.repository.BlogRepo.list        : ==>  Preparing: select * from t_blog order by releaseDate desc limit ?,? 
2017-09-13 23:22:15.229 DEBUG 6420 --- [http-nio-8080-exec-1] p.p.blog.repository.BlogRepo.list        : ==> Parameters: 0(Integer), 10(Integer)
2017-09-13 23:22:15.237 DEBUG 6420 --- [http-nio-8080-exec-1] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-13 23:22:15.239 DEBUG 6420 --- [http-nio-8080-exec-1] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 11(String)
2017-09-13 23:22:15.244 DEBUG 6420 --- [http-nio-8080-exec-1] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-13 23:22:15.245 DEBUG 6420 --- [http-nio-8080-exec-1] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-13 23:22:15.245 DEBUG 6420 --- [http-nio-8080-exec-1] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 1(String)
2017-09-13 23:22:15.247 DEBUG 6420 --- [http-nio-8080-exec-1] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-13 23:22:15.249 DEBUG 6420 --- [http-nio-8080-exec-1] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-13 23:22:15.249 DEBUG 6420 --- [http-nio-8080-exec-1] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 12(String)
2017-09-13 23:22:15.251 DEBUG 6420 --- [http-nio-8080-exec-1] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-13 23:22:15.255 DEBUG 6420 --- [http-nio-8080-exec-1] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-13 23:22:15.255 DEBUG 6420 --- [http-nio-8080-exec-1] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 32(String)
2017-09-13 23:22:15.258 DEBUG 6420 --- [http-nio-8080-exec-1] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-13 23:22:15.261 DEBUG 6420 --- [http-nio-8080-exec-1] p.p.blog.repository.BlogRepo.list        : <==      Total: 10
2017-09-13 23:22:15.421 DEBUG 6420 --- [http-nio-8080-exec-1] p.p.blog.repository.BlogRepo.getTotal    : ==>  Preparing: select count(*) from t_blog 
2017-09-13 23:22:15.422 DEBUG 6420 --- [http-nio-8080-exec-1] p.p.blog.repository.BlogRepo.getTotal    : ==> Parameters: 
2017-09-13 23:22:15.425 DEBUG 6420 --- [http-nio-8080-exec-1] p.p.blog.repository.BlogRepo.getTotal    : <==      Total: 1
2017-09-13 23:22:20.387 DEBUG 6420 --- [http-nio-8080-exec-7] p.p.blog.repository.BlogRepo.update      : ==>  Preparing: update t_blog SET title=?, summary=?, typeId=?, content=?, clickHit=?, replyHit=?, keyWord=? where id=? 
2017-09-13 23:22:20.399 DEBUG 6420 --- [http-nio-8080-exec-7] p.p.blog.repository.BlogRepo.update      : ==> Parameters: 1111111(String),  111111111(String), 11(String), <p><img src="/userImages/201709/20170910031116.jpg" />&nbsp;111111111</p>
(String), 6(Integer), 0(Integer), 111 11(String), 1fb7d927cf3a4f1fb7fb0c60ffc528c5(String)
2017-09-13 23:22:20.404 DEBUG 6420 --- [http-nio-8080-exec-7] p.p.blog.repository.BlogRepo.update      : <==    Updates: 1
2017-09-13 23:22:20.476 DEBUG 6420 --- [http-nio-8080-exec-7] p.p.blog.repository.CommentRepo.list     : ==>  Preparing: select * from t_comment WHERE blogId=? and state=? order by commentDate desc 
2017-09-13 23:22:20.477 DEBUG 6420 --- [http-nio-8080-exec-7] p.p.blog.repository.CommentRepo.list     : ==> Parameters: 1fb7d927cf3a4f1fb7fb0c60ffc528c5(String), 1(Integer)
2017-09-13 23:22:20.483 DEBUG 6420 --- [http-nio-8080-exec-7] p.p.blog.repository.CommentRepo.list     : <==      Total: 0
2017-09-13 23:22:20.497 DEBUG 6420 --- [http-nio-8080-exec-7] p.p.b.repository.BlogRepo.getNextBlog    : ==>  Preparing: select * from t_blog t where t.releaseDate > ? order by releaseDate asc limit 1 
2017-09-13 23:22:20.519 DEBUG 6420 --- [http-nio-8080-exec-7] p.p.b.repository.BlogRepo.getNextBlog    : ==> Parameters: 2017-09-10 15:11:30.0(Timestamp)
2017-09-13 23:22:20.524 DEBUG 6420 --- [http-nio-8080-exec-7] p.p.b.repository.BlogRepo.getNextBlog    : <==      Total: 0
2017-09-13 23:22:45.000 DEBUG 6420 --- [http-nio-8080-exec-1] p.p.blog.repository.BlogRepo.update      : ==>  Preparing: update t_blog SET title=?, summary=?, typeId=?, content=?, clickHit=?, replyHit=?, keyWord=? where id=? 
2017-09-13 23:22:45.001 DEBUG 6420 --- [http-nio-8080-exec-1] p.p.blog.repository.BlogRepo.update      : ==> Parameters: creating server tcp listening socket 127.0.0.1:6379: bind No error(String), window下安装redis报错：creating server tcp listening socket 127.0.0.1:6379: bind No error的解决方案如下按顺序输入如下命令就可以连接成功1. Redis-cli.exe2. shutdown3. exit4. redis-server(String), 12(String), <h2 style="margin: 10px 0px 0px; padding: 0px; color: rgb(51, 51, 51); white-space: normal; background-color: rgb(255, 255, 255); font-size: 1em; font-family: Verdana, Geneva, Arial, Helvetica, sans-serif; line-height: 20px;"><span style="font-size: 13.3333px; line-height: 1.8;">window下安装redis报错：</span></h2><p style="margin: 10px auto; padding: 0px;">creating server tcp listening socket 127.0.0.1:6379: bind No error</p><p style="margin: 10px auto; padding: 0px;">的解决方案如下按顺序输入如下命令就可以连接成功</p><p style="margin: 10px auto; padding: 0px;">1.&nbsp;<a href="http://lib.csdn.net/base/redis" class="replace_word" title="Redis知识库" target="_blank" style="text-decoration-line: none; color: rgb(223, 52, 52); font-weight: bold;">Redis</a>-cli.exe<br/>2.&nbsp;shutdown<br/>3.&nbsp;exit<br/>4.&nbsp;<a href="http://lib.csdn.net/base/redis" class="replace_word" title="Redis知识库" target="_blank" style="text-decoration-line: none; color: rgb(223, 52, 52); font-weight: bold;">redis</a>-server.exe&nbsp;redis.windows.conf</p><p><br/></p><p> 转自:&nbsp;&nbsp;&nbsp;&nbsp;<a href="http://blog.csdn.net/fengzhihen2007/article/details/52211048" target="_blank" title="D的专栏">D的专栏</a> <br/></p>(String), 125(Integer), 0(Integer), redis (String), 317(String)
2017-09-13 23:22:45.007 DEBUG 6420 --- [http-nio-8080-exec-1] p.p.blog.repository.BlogRepo.update      : <==    Updates: 1
2017-09-13 23:22:45.010 DEBUG 6420 --- [http-nio-8080-exec-1] p.p.blog.repository.CommentRepo.list     : ==>  Preparing: select * from t_comment WHERE blogId=? and state=? order by commentDate desc 
2017-09-13 23:22:45.011 DEBUG 6420 --- [http-nio-8080-exec-1] p.p.blog.repository.CommentRepo.list     : ==> Parameters: 317(String), 1(Integer)
2017-09-13 23:22:45.013 DEBUG 6420 --- [http-nio-8080-exec-1] p.p.blog.repository.CommentRepo.list     : <==      Total: 0
2017-09-13 23:23:17.382 DEBUG 6420 --- [http-nio-8080-exec-4] p.p.blog.repository.BlogRepo.update      : ==>  Preparing: update t_blog SET title=?, summary=?, typeId=?, content=?, clickHit=?, replyHit=?, keyWord=? where id=? 
2017-09-13 23:23:17.384 DEBUG 6420 --- [http-nio-8080-exec-4] p.p.blog.repository.BlogRepo.update      : ==> Parameters: creating server tcp listening socket 127.0.0.1:6379: bind No error(String), window下安装redis报错：creating server tcp listening socket 127.0.0.1:6379: bind No error的解决方案如下按顺序输入如下命令就可以连接成功1. Redis-cli.exe2. shutdown3. exit4. redis-server(String), 12(String), <h2 style="margin: 10px 0px 0px; padding: 0px; color: rgb(51, 51, 51); white-space: normal; background-color: rgb(255, 255, 255); font-size: 1em; font-family: Verdana, Geneva, Arial, Helvetica, sans-serif; line-height: 20px;"><span style="font-size: 13.3333px; line-height: 1.8;">window下安装redis报错：</span></h2><p style="margin: 10px auto; padding: 0px;">creating server tcp listening socket 127.0.0.1:6379: bind No error</p><p style="margin: 10px auto; padding: 0px;">的解决方案如下按顺序输入如下命令就可以连接成功</p><p style="margin: 10px auto; padding: 0px;">1.&nbsp;<a href="http://lib.csdn.net/base/redis" class="replace_word" title="Redis知识库" target="_blank" style="text-decoration-line: none; color: rgb(223, 52, 52); font-weight: bold;">Redis</a>-cli.exe<br/>2.&nbsp;shutdown<br/>3.&nbsp;exit<br/>4.&nbsp;<a href="http://lib.csdn.net/base/redis" class="replace_word" title="Redis知识库" target="_blank" style="text-decoration-line: none; color: rgb(223, 52, 52); font-weight: bold;">redis</a>-server.exe&nbsp;redis.windows.conf</p><p><br/></p><p> 转自:&nbsp;&nbsp;&nbsp;&nbsp;<a href="http://blog.csdn.net/fengzhihen2007/article/details/52211048" target="_blank" title="D的专栏">D的专栏</a> <br/></p>(String), 126(Integer), 0(Integer), redis (String), 317(String)
2017-09-13 23:23:17.391 DEBUG 6420 --- [http-nio-8080-exec-4] p.p.blog.repository.BlogRepo.update      : <==    Updates: 1
2017-09-13 23:23:17.397 DEBUG 6420 --- [http-nio-8080-exec-4] p.p.blog.repository.CommentRepo.list     : ==>  Preparing: select * from t_comment WHERE blogId=? and state=? order by commentDate desc 
2017-09-13 23:23:17.397 DEBUG 6420 --- [http-nio-8080-exec-4] p.p.blog.repository.CommentRepo.list     : ==> Parameters: 317(String), 1(Integer)
2017-09-13 23:23:17.399 DEBUG 6420 --- [http-nio-8080-exec-4] p.p.blog.repository.CommentRepo.list     : <==      Total: 0
2017-09-13 23:23:17.503 DEBUG 6420 --- [http-nio-8080-exec-9] p.p.blog.repository.BlogRepo.update      : ==>  Preparing: update t_blog SET title=?, summary=?, typeId=?, content=?, clickHit=?, replyHit=?, keyWord=? where id=? 
2017-09-13 23:23:17.504 DEBUG 6420 --- [http-nio-8080-exec-9] p.p.blog.repository.BlogRepo.update      : ==> Parameters: creating server tcp listening socket 127.0.0.1:6379: bind No error(String), window下安装redis报错：creating server tcp listening socket 127.0.0.1:6379: bind No error的解决方案如下按顺序输入如下命令就可以连接成功1. Redis-cli.exe2. shutdown3. exit4. redis-server(String), 12(String), <h2 style="margin: 10px 0px 0px; padding: 0px; color: rgb(51, 51, 51); white-space: normal; background-color: rgb(255, 255, 255); font-size: 1em; font-family: Verdana, Geneva, Arial, Helvetica, sans-serif; line-height: 20px;"><span style="font-size: 13.3333px; line-height: 1.8;">window下安装redis报错：</span></h2><p style="margin: 10px auto; padding: 0px;">creating server tcp listening socket 127.0.0.1:6379: bind No error</p><p style="margin: 10px auto; padding: 0px;">的解决方案如下按顺序输入如下命令就可以连接成功</p><p style="margin: 10px auto; padding: 0px;">1.&nbsp;<a href="http://lib.csdn.net/base/redis" class="replace_word" title="Redis知识库" target="_blank" style="text-decoration-line: none; color: rgb(223, 52, 52); font-weight: bold;">Redis</a>-cli.exe<br/>2.&nbsp;shutdown<br/>3.&nbsp;exit<br/>4.&nbsp;<a href="http://lib.csdn.net/base/redis" class="replace_word" title="Redis知识库" target="_blank" style="text-decoration-line: none; color: rgb(223, 52, 52); font-weight: bold;">redis</a>-server.exe&nbsp;redis.windows.conf</p><p><br/></p><p> 转自:&nbsp;&nbsp;&nbsp;&nbsp;<a href="http://blog.csdn.net/fengzhihen2007/article/details/52211048" target="_blank" title="D的专栏">D的专栏</a> <br/></p>(String), 127(Integer), 0(Integer), redis (String), 317(String)
2017-09-13 23:23:17.506 DEBUG 6420 --- [http-nio-8080-exec-9] p.p.blog.repository.BlogRepo.update      : <==    Updates: 1
2017-09-13 23:23:17.510 DEBUG 6420 --- [http-nio-8080-exec-9] p.p.blog.repository.CommentRepo.list     : ==>  Preparing: select * from t_comment WHERE blogId=? and state=? order by commentDate desc 
2017-09-13 23:23:17.510 DEBUG 6420 --- [http-nio-8080-exec-9] p.p.blog.repository.CommentRepo.list     : ==> Parameters: 317(String), 1(Integer)
2017-09-13 23:23:17.511 DEBUG 6420 --- [http-nio-8080-exec-9] p.p.blog.repository.CommentRepo.list     : <==      Total: 0
2017-09-13 23:23:43.900 DEBUG 6420 --- [http-nio-8080-exec-10] p.p.blog.repository.BlogRepo.update      : ==>  Preparing: update t_blog SET title=?, summary=?, typeId=?, content=?, clickHit=?, replyHit=?, keyWord=? where id=? 
2017-09-13 23:23:43.902 DEBUG 6420 --- [http-nio-8080-exec-10] p.p.blog.repository.BlogRepo.update      : ==> Parameters: creating server tcp listening socket 127.0.0.1:6379: bind No error(String), window下安装redis报错：creating server tcp listening socket 127.0.0.1:6379: bind No error的解决方案如下按顺序输入如下命令就可以连接成功1. Redis-cli.exe2. shutdown3. exit4. redis-server(String), 12(String), <h2 style="margin: 10px 0px 0px; padding: 0px; color: rgb(51, 51, 51); white-space: normal; background-color: rgb(255, 255, 255); font-size: 1em; font-family: Verdana, Geneva, Arial, Helvetica, sans-serif; line-height: 20px;"><span style="font-size: 13.3333px; line-height: 1.8;">window下安装redis报错：</span></h2><p style="margin: 10px auto; padding: 0px;">creating server tcp listening socket 127.0.0.1:6379: bind No error</p><p style="margin: 10px auto; padding: 0px;">的解决方案如下按顺序输入如下命令就可以连接成功</p><p style="margin: 10px auto; padding: 0px;">1.&nbsp;<a href="http://lib.csdn.net/base/redis" class="replace_word" title="Redis知识库" target="_blank" style="text-decoration-line: none; color: rgb(223, 52, 52); font-weight: bold;">Redis</a>-cli.exe<br/>2.&nbsp;shutdown<br/>3.&nbsp;exit<br/>4.&nbsp;<a href="http://lib.csdn.net/base/redis" class="replace_word" title="Redis知识库" target="_blank" style="text-decoration-line: none; color: rgb(223, 52, 52); font-weight: bold;">redis</a>-server.exe&nbsp;redis.windows.conf</p><p><br/></p><p> 转自:&nbsp;&nbsp;&nbsp;&nbsp;<a href="http://blog.csdn.net/fengzhihen2007/article/details/52211048" target="_blank" title="D的专栏">D的专栏</a> <br/></p>(String), 128(Integer), 0(Integer), redis (String), 317(String)
2017-09-13 23:23:43.907 DEBUG 6420 --- [http-nio-8080-exec-10] p.p.blog.repository.BlogRepo.update      : <==    Updates: 1
2017-09-13 23:23:43.910 DEBUG 6420 --- [http-nio-8080-exec-10] p.p.blog.repository.CommentRepo.list     : ==>  Preparing: select * from t_comment WHERE blogId=? and state=? order by commentDate desc 
2017-09-13 23:23:43.910 DEBUG 6420 --- [http-nio-8080-exec-10] p.p.blog.repository.CommentRepo.list     : ==> Parameters: 317(String), 1(Integer)
2017-09-13 23:23:43.913 DEBUG 6420 --- [http-nio-8080-exec-10] p.p.blog.repository.CommentRepo.list     : <==      Total: 0
2017-09-13 23:23:48.067 DEBUG 6420 --- [http-nio-8080-exec-2] p.p.blog.repository.BlogRepo.update      : ==>  Preparing: update t_blog SET title=?, summary=?, typeId=?, content=?, clickHit=?, replyHit=?, keyWord=? where id=? 
2017-09-13 23:23:48.068 DEBUG 6420 --- [http-nio-8080-exec-2] p.p.blog.repository.BlogRepo.update      : ==> Parameters: creating server tcp listening socket 127.0.0.1:6379: bind No error(String), window下安装redis报错：creating server tcp listening socket 127.0.0.1:6379: bind No error的解决方案如下按顺序输入如下命令就可以连接成功1. Redis-cli.exe2. shutdown3. exit4. redis-server(String), 12(String), <h2 style="margin: 10px 0px 0px; padding: 0px; color: rgb(51, 51, 51); white-space: normal; background-color: rgb(255, 255, 255); font-size: 1em; font-family: Verdana, Geneva, Arial, Helvetica, sans-serif; line-height: 20px;"><span style="font-size: 13.3333px; line-height: 1.8;">window下安装redis报错：</span></h2><p style="margin: 10px auto; padding: 0px;">creating server tcp listening socket 127.0.0.1:6379: bind No error</p><p style="margin: 10px auto; padding: 0px;">的解决方案如下按顺序输入如下命令就可以连接成功</p><p style="margin: 10px auto; padding: 0px;">1.&nbsp;<a href="http://lib.csdn.net/base/redis" class="replace_word" title="Redis知识库" target="_blank" style="text-decoration-line: none; color: rgb(223, 52, 52); font-weight: bold;">Redis</a>-cli.exe<br/>2.&nbsp;shutdown<br/>3.&nbsp;exit<br/>4.&nbsp;<a href="http://lib.csdn.net/base/redis" class="replace_word" title="Redis知识库" target="_blank" style="text-decoration-line: none; color: rgb(223, 52, 52); font-weight: bold;">redis</a>-server.exe&nbsp;redis.windows.conf</p><p><br/></p><p> 转自:&nbsp;&nbsp;&nbsp;&nbsp;<a href="http://blog.csdn.net/fengzhihen2007/article/details/52211048" target="_blank" title="D的专栏">D的专栏</a> <br/></p>(String), 129(Integer), 0(Integer), redis (String), 317(String)
2017-09-13 23:23:48.077 DEBUG 6420 --- [http-nio-8080-exec-2] p.p.blog.repository.BlogRepo.update      : <==    Updates: 1
2017-09-13 23:23:48.080 DEBUG 6420 --- [http-nio-8080-exec-2] p.p.blog.repository.CommentRepo.list     : ==>  Preparing: select * from t_comment WHERE blogId=? and state=? order by commentDate desc 
2017-09-13 23:23:48.080 DEBUG 6420 --- [http-nio-8080-exec-2] p.p.blog.repository.CommentRepo.list     : ==> Parameters: 317(String), 1(Integer)
2017-09-13 23:23:48.083 DEBUG 6420 --- [http-nio-8080-exec-2] p.p.blog.repository.CommentRepo.list     : <==      Total: 0
2017-09-13 23:24:09.536 DEBUG 6420 --- [http-nio-8080-exec-3] p.p.blog.repository.BlogRepo.update      : ==>  Preparing: update t_blog SET title=?, summary=?, typeId=?, content=?, clickHit=?, replyHit=?, keyWord=? where id=? 
2017-09-13 23:24:09.536 DEBUG 6420 --- [http-nio-8080-exec-3] p.p.blog.repository.BlogRepo.update      : ==> Parameters: creating server tcp listening socket 127.0.0.1:6379: bind No error(String), window下安装redis报错：creating server tcp listening socket 127.0.0.1:6379: bind No error的解决方案如下按顺序输入如下命令就可以连接成功1. Redis-cli.exe2. shutdown3. exit4. redis-server(String), 12(String), <h2 style="margin: 10px 0px 0px; padding: 0px; color: rgb(51, 51, 51); white-space: normal; background-color: rgb(255, 255, 255); font-size: 1em; font-family: Verdana, Geneva, Arial, Helvetica, sans-serif; line-height: 20px;"><span style="font-size: 13.3333px; line-height: 1.8;">window下安装redis报错：</span></h2><p style="margin: 10px auto; padding: 0px;">creating server tcp listening socket 127.0.0.1:6379: bind No error</p><p style="margin: 10px auto; padding: 0px;">的解决方案如下按顺序输入如下命令就可以连接成功</p><p style="margin: 10px auto; padding: 0px;">1.&nbsp;<a href="http://lib.csdn.net/base/redis" class="replace_word" title="Redis知识库" target="_blank" style="text-decoration-line: none; color: rgb(223, 52, 52); font-weight: bold;">Redis</a>-cli.exe<br/>2.&nbsp;shutdown<br/>3.&nbsp;exit<br/>4.&nbsp;<a href="http://lib.csdn.net/base/redis" class="replace_word" title="Redis知识库" target="_blank" style="text-decoration-line: none; color: rgb(223, 52, 52); font-weight: bold;">redis</a>-server.exe&nbsp;redis.windows.conf</p><p><br/></p><p> 转自:&nbsp;&nbsp;&nbsp;&nbsp;<a href="http://blog.csdn.net/fengzhihen2007/article/details/52211048" target="_blank" title="D的专栏">D的专栏</a> <br/></p>(String), 130(Integer), 0(Integer), redis (String), 317(String)
2017-09-13 23:24:09.541 DEBUG 6420 --- [http-nio-8080-exec-3] p.p.blog.repository.BlogRepo.update      : <==    Updates: 1
2017-09-13 23:24:09.543 DEBUG 6420 --- [http-nio-8080-exec-3] p.p.blog.repository.CommentRepo.list     : ==>  Preparing: select * from t_comment WHERE blogId=? and state=? order by commentDate desc 
2017-09-13 23:24:09.543 DEBUG 6420 --- [http-nio-8080-exec-3] p.p.blog.repository.CommentRepo.list     : ==> Parameters: 317(String), 1(Integer)
2017-09-13 23:24:09.544 DEBUG 6420 --- [http-nio-8080-exec-3] p.p.blog.repository.CommentRepo.list     : <==      Total: 0
2017-09-13 23:24:12.902 DEBUG 6420 --- [http-nio-8080-exec-7] p.p.blog.repository.BlogRepo.update      : ==>  Preparing: update t_blog SET title=?, summary=?, typeId=?, content=?, clickHit=?, replyHit=?, keyWord=? where id=? 
2017-09-13 23:24:12.902 DEBUG 6420 --- [http-nio-8080-exec-7] p.p.blog.repository.BlogRepo.update      : ==> Parameters: creating server tcp listening socket 127.0.0.1:6379: bind No error(String), window下安装redis报错：creating server tcp listening socket 127.0.0.1:6379: bind No error的解决方案如下按顺序输入如下命令就可以连接成功1. Redis-cli.exe2. shutdown3. exit4. redis-server(String), 12(String), <h2 style="margin: 10px 0px 0px; padding: 0px; color: rgb(51, 51, 51); white-space: normal; background-color: rgb(255, 255, 255); font-size: 1em; font-family: Verdana, Geneva, Arial, Helvetica, sans-serif; line-height: 20px;"><span style="font-size: 13.3333px; line-height: 1.8;">window下安装redis报错：</span></h2><p style="margin: 10px auto; padding: 0px;">creating server tcp listening socket 127.0.0.1:6379: bind No error</p><p style="margin: 10px auto; padding: 0px;">的解决方案如下按顺序输入如下命令就可以连接成功</p><p style="margin: 10px auto; padding: 0px;">1.&nbsp;<a href="http://lib.csdn.net/base/redis" class="replace_word" title="Redis知识库" target="_blank" style="text-decoration-line: none; color: rgb(223, 52, 52); font-weight: bold;">Redis</a>-cli.exe<br/>2.&nbsp;shutdown<br/>3.&nbsp;exit<br/>4.&nbsp;<a href="http://lib.csdn.net/base/redis" class="replace_word" title="Redis知识库" target="_blank" style="text-decoration-line: none; color: rgb(223, 52, 52); font-weight: bold;">redis</a>-server.exe&nbsp;redis.windows.conf</p><p><br/></p><p> 转自:&nbsp;&nbsp;&nbsp;&nbsp;<a href="http://blog.csdn.net/fengzhihen2007/article/details/52211048" target="_blank" title="D的专栏">D的专栏</a> <br/></p>(String), 131(Integer), 0(Integer), redis (String), 317(String)
2017-09-13 23:24:12.908 DEBUG 6420 --- [http-nio-8080-exec-7] p.p.blog.repository.BlogRepo.update      : <==    Updates: 1
2017-09-13 23:24:12.943 DEBUG 6420 --- [http-nio-8080-exec-7] p.p.blog.repository.CommentRepo.list     : ==>  Preparing: select * from t_comment WHERE blogId=? and state=? order by commentDate desc 
2017-09-13 23:24:12.943 DEBUG 6420 --- [http-nio-8080-exec-7] p.p.blog.repository.CommentRepo.list     : ==> Parameters: 317(String), 1(Integer)
2017-09-13 23:24:12.945 DEBUG 6420 --- [http-nio-8080-exec-7] p.p.blog.repository.CommentRepo.list     : <==      Total: 0
2017-09-13 23:24:26.035 DEBUG 6420 --- [http-nio-8080-exec-2] p.p.blog.repository.BlogRepo.list        : ==>  Preparing: select * from t_blog order by releaseDate desc limit ?,? 
2017-09-13 23:24:26.036 DEBUG 6420 --- [http-nio-8080-exec-2] p.p.blog.repository.BlogRepo.list        : ==> Parameters: 0(Integer), 10(Integer)
2017-09-13 23:24:26.039 DEBUG 6420 --- [http-nio-8080-exec-2] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-13 23:24:26.040 DEBUG 6420 --- [http-nio-8080-exec-2] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 11(String)
2017-09-13 23:24:26.042 DEBUG 6420 --- [http-nio-8080-exec-2] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-13 23:24:26.043 DEBUG 6420 --- [http-nio-8080-exec-2] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-13 23:24:26.044 DEBUG 6420 --- [http-nio-8080-exec-2] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 1(String)
2017-09-13 23:24:26.046 DEBUG 6420 --- [http-nio-8080-exec-2] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-13 23:24:26.047 DEBUG 6420 --- [http-nio-8080-exec-2] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-13 23:24:26.048 DEBUG 6420 --- [http-nio-8080-exec-2] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 12(String)
2017-09-13 23:24:26.050 DEBUG 6420 --- [http-nio-8080-exec-2] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-13 23:24:26.051 DEBUG 6420 --- [http-nio-8080-exec-2] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-13 23:24:26.052 DEBUG 6420 --- [http-nio-8080-exec-2] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 32(String)
2017-09-13 23:24:26.053 DEBUG 6420 --- [http-nio-8080-exec-2] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-13 23:24:26.056 DEBUG 6420 --- [http-nio-8080-exec-2] p.p.blog.repository.BlogRepo.list        : <==      Total: 10
2017-09-13 23:24:26.073 DEBUG 6420 --- [http-nio-8080-exec-2] p.p.blog.repository.BlogRepo.getTotal    : ==>  Preparing: select count(*) from t_blog 
2017-09-13 23:24:26.074 DEBUG 6420 --- [http-nio-8080-exec-2] p.p.blog.repository.BlogRepo.getTotal    : ==> Parameters: 
2017-09-13 23:24:26.076 DEBUG 6420 --- [http-nio-8080-exec-2] p.p.blog.repository.BlogRepo.getTotal    : <==      Total: 1
2017-09-13 23:24:31.938 DEBUG 6420 --- [http-nio-8080-exec-5] p.p.blog.repository.BlogRepo.update      : ==>  Preparing: update t_blog SET title=?, summary=?, typeId=?, content=?, clickHit=?, replyHit=?, keyWord=? where id=? 
2017-09-13 23:24:31.939 DEBUG 6420 --- [http-nio-8080-exec-5] p.p.blog.repository.BlogRepo.update      : ==> Parameters: 1111111(String),  111111111(String), 11(String), <p><img src="/userImages/201709/20170910031116.jpg" />&nbsp;111111111</p>
(String), 7(Integer), 0(Integer), 111 11(String), 1fb7d927cf3a4f1fb7fb0c60ffc528c5(String)
2017-09-13 23:24:31.943 DEBUG 6420 --- [http-nio-8080-exec-5] p.p.blog.repository.BlogRepo.update      : <==    Updates: 1
2017-09-13 23:24:31.945 DEBUG 6420 --- [http-nio-8080-exec-5] p.p.blog.repository.CommentRepo.list     : ==>  Preparing: select * from t_comment WHERE blogId=? and state=? order by commentDate desc 
2017-09-13 23:24:31.945 DEBUG 6420 --- [http-nio-8080-exec-5] p.p.blog.repository.CommentRepo.list     : ==> Parameters: 1fb7d927cf3a4f1fb7fb0c60ffc528c5(String), 1(Integer)
2017-09-13 23:24:31.947 DEBUG 6420 --- [http-nio-8080-exec-5] p.p.blog.repository.CommentRepo.list     : <==      Total: 0
2017-09-13 23:24:31.951 DEBUG 6420 --- [http-nio-8080-exec-5] p.p.b.repository.BlogRepo.getNextBlog    : ==>  Preparing: select * from t_blog t where t.releaseDate > ? order by releaseDate asc limit 1 
2017-09-13 23:24:31.951 DEBUG 6420 --- [http-nio-8080-exec-5] p.p.b.repository.BlogRepo.getNextBlog    : ==> Parameters: 2017-09-10 15:11:30.0(Timestamp)
2017-09-13 23:24:31.954 DEBUG 6420 --- [http-nio-8080-exec-5] p.p.b.repository.BlogRepo.getNextBlog    : <==      Total: 0
2017-09-13 23:25:08.004  INFO 6420 --- [Thread-8] ationConfigEmbeddedWebApplicationContext : Closing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@78b1aec1: startup date [Wed Sep 13 23:21:38 CST 2017]; root of context hierarchy
2017-09-13 23:25:08.013  INFO 6420 --- [Thread-8] o.s.c.support.DefaultLifecycleProcessor  : Stopping beans in phase 2147483647
2017-09-13 23:25:08.013  INFO 6420 --- [Thread-8] o.s.c.support.DefaultLifecycleProcessor  : Stopping beans in phase -2147482648
2017-09-13 23:25:08.017  INFO 6420 --- [Thread-8] o.s.j.e.a.AnnotationMBeanExporter        : Unregistering JMX-exposed beans on shutdown
2017-09-13 23:25:08.124  INFO 6420 --- [Thread-8] o.s.j.e.a.AnnotationMBeanExporter        : Unregistering JMX-exposed beans
2017-09-13 23:25:08.129  INFO 6420 --- [Thread-8] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2017-09-13 23:25:08.135  INFO 6420 --- [Thread-8] com.alibaba.druid.pool.DruidDataSource   : {dataSource-1} closed
2017-09-13 23:25:08.363  INFO 6420 --- [localhost-startStop-2] p.p.blog.controller.InitComponent        : deregistering jdbc driver: com.alibaba.druid.mock.MockDriver@6eaf9654
2017-09-13 23:25:08.363  INFO 6420 --- [localhost-startStop-2] p.p.blog.controller.InitComponent        : deregistering jdbc driver: com.mysql.jdbc.Driver@859a7d9
2017-09-13 23:25:08.364  INFO 6420 --- [localhost-startStop-2] p.p.blog.controller.InitComponent        : deregistering jdbc driver: com.mysql.fabric.jdbc.FabricMySQLDriver@14d75fae
2017-09-13 23:25:08.364  INFO 6420 --- [localhost-startStop-2] p.p.blog.controller.InitComponent        : deregistering jdbc driver: com.alibaba.druid.proxy.DruidDriver@7bc6b1bd
2017-09-13 23:25:09.112  INFO 6420 --- [restartedMain] pers.platform.blog.Application           : Starting Application on PC-20160914JGKD with PID 6420 (E:\workspace\pers-cc-platform\pers-platform-blog-web\target\classes started by Administrator in E:\workspace\pers-cc-platform\pers-platform-blog-web)
2017-09-13 23:25:09.112 DEBUG 6420 --- [restartedMain] pers.platform.blog.Application           : Running with Spring Boot v1.5.2.RELEASE, Spring v4.3.7.RELEASE
2017-09-13 23:25:09.112  INFO 6420 --- [restartedMain] pers.platform.blog.Application           : The following profiles are active: test
2017-09-13 23:25:09.120  INFO 6420 --- [restartedMain] ationConfigEmbeddedWebApplicationContext : Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@499523e2: startup date [Wed Sep 13 23:25:09 CST 2017]; root of context hierarchy
2017-09-13 23:25:11.029  INFO 6420 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2017-09-13 23:25:11.063  INFO 6420 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2017-09-13 23:25:11.105  INFO 6420 --- [restartedMain] o.s.b.f.s.DefaultListableBeanFactory     : Overriding bean definition for bean 'httpRequestHandlerAdapter' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.boot.autoconfigure.web.WebMvcAutoConfiguration$EnableWebMvcConfiguration; factoryMethodName=httpRequestHandlerAdapter; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/boot/autoconfigure/web/WebMvcAutoConfiguration$EnableWebMvcConfiguration.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.data.rest.webmvc.config.RepositoryRestMvcConfiguration; factoryMethodName=httpRequestHandlerAdapter; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/data/rest/webmvc/config/RepositoryRestMvcConfiguration.class]]
2017-09-13 23:25:11.181  INFO 6420 --- [restartedMain] o.s.b.f.s.DefaultListableBeanFactory     : Overriding bean definition for bean 'dataSource' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure; factoryMethodName=dataSource; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/alibaba/druid/spring/boot/autoconfigure/DruidDataSourceAutoConfigure.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=true; factoryBeanName=spring.datasource-pers.platform.blog.config.DruidDBConfig; factoryMethodName=dataSource; initMethodName=null; destroyMethodName=(inferred); defined in pers.platform.blog.config.DruidDBConfig]
2017-09-13 23:25:11.253  INFO 6420 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.amqp.rabbit.annotation.RabbitBootstrapConfiguration' of type [org.springframework.amqp.rabbit.annotation.RabbitBootstrapConfiguration$$EnhancerBySpringCGLIB$$4ddcc236] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017-09-13 23:25:11.272  INFO 6420 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$87710408] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017-09-13 23:25:11.306  INFO 6420 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'reidsConfig' of type [pers.platform.blog.config.ReidsConfig$$EnhancerBySpringCGLIB$$3ce39fb1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017-09-13 23:25:11.322  INFO 6420 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'keyGenerator' of type [pers.platform.blog.config.ReidsConfig$1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017-09-13 23:25:11.323  INFO 6420 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.cache.annotation.ProxyCachingConfiguration' of type [org.springframework.cache.annotation.ProxyCachingConfiguration$$EnhancerBySpringCGLIB$$d0833a26] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017-09-13 23:25:11.350  INFO 6420 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'shiroConfig' of type [pers.platform.blog.config.ShiroConfig$$EnhancerBySpringCGLIB$$917d3a7d] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017-09-13 23:25:11.399  INFO 6420 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'myShiroRealm' of type [pers.platform.blog.realm.MyRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017-09-13 23:25:11.460  INFO 6420 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017-09-13 23:25:11.490  INFO 6420 --- [restartedMain] pers.platform.blog.config.ShiroConfig    : 注入Shiro的Web过滤器-->shiroFilter
2017-09-13 23:25:11.706  INFO 6420 --- [restartedMain] s.b.c.e.t.TomcatEmbeddedServletContainer : Tomcat initialized with port(s): 8080 (http)
2017-09-13 23:25:11.707  INFO 6420 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service Tomcat
2017-09-13 23:25:11.707  INFO 6420 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet Engine: Apache Tomcat/8.5.11
2017-09-13 23:25:11.735  INFO 6420 --- [localhost-startStop-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2017-09-13 23:25:11.736  INFO 6420 --- [localhost-startStop-1] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 2616 ms
2017-09-13 23:25:11.964  INFO 6420 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'characterEncodingFilter' to: [/*]
2017-09-13 23:25:11.964  INFO 6420 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2017-09-13 23:25:11.964  INFO 6420 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'httpPutFormContentFilter' to: [/*]
2017-09-13 23:25:11.964  INFO 6420 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'requestContextFilter' to: [/*]
2017-09-13 23:25:11.964  INFO 6420 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'delegatingFilterProxy' to: [/*]
2017-09-13 23:25:11.965  INFO 6420 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'webStatFilter' to urls: [/*]
2017-09-13 23:25:11.965  INFO 6420 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Filter webStatFilter was not registered (possibly already registered?)
2017-09-13 23:25:11.965  INFO 6420 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'shiroFilter' to: [/*]
2017-09-13 23:25:11.965  INFO 6420 --- [localhost-startStop-1] o.s.b.w.servlet.ServletRegistrationBean  : Mapping servlet: 'statViewServlet' to [/druid/*]
2017-09-13 23:25:11.965  INFO 6420 --- [localhost-startStop-1] o.s.b.w.servlet.ServletRegistrationBean  : Mapping servlet: 'dispatcherServlet' to [/]
2017-09-13 23:25:11.966  INFO 6420 --- [localhost-startStop-1] o.s.b.w.servlet.ServletRegistrationBean  : Mapping servlet: 'statViewServlet' to [/druid/*]
2017-09-13 23:25:11.966  INFO 6420 --- [localhost-startStop-1] o.s.b.w.servlet.ServletRegistrationBean  : Servlet statViewServlet was not registered (possibly already registered?)
2017-09-13 23:25:12.464  INFO 6420 --- [localhost-startStop-1] com.alibaba.druid.pool.DruidDataSource   : {dataSource-2} inited
2017-09-13 23:25:12.464 DEBUG 6420 --- [localhost-startStop-1] p.p.blog.repository.BloggerRepo.find     : ==>  Preparing: select * from t_blogger where id=? 
2017-09-13 23:25:12.467 DEBUG 6420 --- [localhost-startStop-1] p.p.blog.repository.BloggerRepo.find     : ==> Parameters: 1(String)
2017-09-13 23:25:12.478 DEBUG 6420 --- [localhost-startStop-1] p.p.blog.repository.BloggerRepo.find     : <==      Total: 1
2017-09-13 23:25:12.511 DEBUG 6420 --- [localhost-startStop-1] p.p.blog.repository.LinkRepo.list        : ==>  Preparing: select * from t_link order by orderNo 
2017-09-13 23:25:12.512 DEBUG 6420 --- [localhost-startStop-1] p.p.blog.repository.LinkRepo.list        : ==> Parameters: 
2017-09-13 23:25:12.521 DEBUG 6420 --- [localhost-startStop-1] p.p.blog.repository.LinkRepo.list        : <==      Total: 2
2017-09-13 23:25:12.570 DEBUG 6420 --- [localhost-startStop-1] p.p.b.repository.BlogTypeRepo.countList  : ==>  Preparing: SELECT t2.id,t2.`typeName`,COUNT(t1.id) AS blogCount FROM t_blog t1 RIGHT JOIN t_blogType t2 ON t1.typeId=t2.id GROUP BY t2.id,t2.typeName ORDER BY t2.orderNo; 
2017-09-13 23:25:12.585 DEBUG 6420 --- [localhost-startStop-1] p.p.b.repository.BlogTypeRepo.countList  : ==> Parameters: 
2017-09-13 23:25:12.621 DEBUG 6420 --- [localhost-startStop-1] p.p.b.repository.BlogTypeRepo.countList  : <==      Total: 17
2017-09-13 23:25:12.658 DEBUG 6420 --- [localhost-startStop-1] p.p.blog.repository.BlogRepo.countList   : ==>  Preparing: SELECT DATE_FORMAT (releaseDate,'%Y年%m月') AS releaseDateStr,COUNT(*) AS blogCount FROM t_blog GROUP BY DATE_FORMAT (releaseDate,'%Y年%m月') ORDER BY DATE_FORMAT (releaseDate,'%Y年%m月') DESC 
2017-09-13 23:25:12.660 DEBUG 6420 --- [localhost-startStop-1] p.p.blog.repository.BlogRepo.countList   : ==> Parameters: 
2017-09-13 23:25:12.677 DEBUG 6420 --- [localhost-startStop-1] p.p.blog.repository.BlogRepo.countList   : <==      Total: 12
2017-09-13 23:25:12.753  INFO 6420 --- [restartedMain] j.LocalContainerEntityManagerFactoryBean : Building JPA container EntityManagerFactory for persistence unit 'default'
2017-09-13 23:25:12.754  INFO 6420 --- [restartedMain] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
2017-09-13 23:25:13.001  INFO 6420 --- [restartedMain] org.hibernate.dialect.Dialect            : HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
2017-09-13 23:25:13.019  INFO 6420 --- [restartedMain] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2017-09-13 23:25:14.357  INFO 6420 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerAdapter : Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@499523e2: startup date [Wed Sep 13 23:25:09 CST 2017]; root of context hierarchy
2017-09-13 23:25:14.415  INFO 6420 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/],methods=[GET]}" onto public java.lang.String pers.platform.blog.Application.index()
2017-09-13 23:25:14.416  INFO 6420 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/blog/q]}" onto public org.springframework.web.servlet.ModelAndView pers.platform.blog.controller.BlogController.search(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2017-09-13 23:25:14.417  INFO 6420 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/blog/articles/{id}.html]}" onto private org.springframework.web.servlet.ModelAndView pers.platform.blog.controller.BlogController.details(java.lang.String,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2017-09-13 23:25:14.417  INFO 6420 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cc/login.html]}" onto public java.lang.String pers.platform.blog.controller.BloggerController.login(pers.platform.blog.model.Blogger,javax.servlet.http.HttpServletRequest)
2017-09-13 23:25:14.417  INFO 6420 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/blogger/aboutMe.html]}" onto public org.springframework.web.servlet.ModelAndView pers.platform.blog.controller.BloggerController.aboutMe() throws java.lang.Exception
2017-09-13 23:25:14.418  INFO 6420 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cc/blog/delete.html]}" onto public java.lang.String pers.platform.blog.controller.cc.BlogCcController.delete(java.lang.String,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2017-09-13 23:25:14.419  INFO 6420 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cc/blog/list.html]}" onto public java.lang.String pers.platform.blog.controller.cc.BlogCcController.list(java.lang.String,java.lang.String,pers.platform.blog.model.Blog,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2017-09-13 23:25:14.419  INFO 6420 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cc/blog/save.html]}" onto public java.lang.String pers.platform.blog.controller.cc.BlogCcController.save(pers.platform.blog.model.Blog,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2017-09-13 23:25:14.419  INFO 6420 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cc/blog/findById.html]}" onto public java.lang.String pers.platform.blog.controller.cc.BlogCcController.findById(java.lang.String,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2017-09-13 23:25:14.419  INFO 6420 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cc/blog/uploadPastImage]}" onto public java.lang.String pers.platform.blog.controller.cc.BlogCcController.uploadPastImage(javax.servlet.http.HttpServletRequest,java.lang.String) throws java.lang.Exception
2017-09-13 23:25:14.420  INFO 6420 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cc/blog/ckeditorUpload]}" onto public java.lang.String pers.platform.blog.controller.cc.BlogCcController.upLoadImage(javax.servlet.http.HttpServletRequest,org.springframework.web.multipart.MultipartFile,java.lang.String) throws java.lang.Exception
2017-09-13 23:25:14.420  INFO 6420 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cc/blog/modifyBlog.html]}" onto public org.springframework.web.servlet.ModelAndView pers.platform.blog.controller.cc.BlogCcController.modifyBlog(java.lang.String,javax.servlet.http.HttpServletResponse)
2017-09-13 23:25:14.421  INFO 6420 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cc/blogger/find.html]}" onto public java.lang.String pers.platform.blog.controller.cc.BloggerCcController.find(javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2017-09-13 23:25:14.421  INFO 6420 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cc/blogger/save.html]}" onto public java.lang.String pers.platform.blog.controller.cc.BloggerCcController.save(org.springframework.web.multipart.MultipartFile,pers.platform.blog.model.Blogger,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2017-09-13 23:25:14.421  INFO 6420 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cc/blogger/logout.html]}" onto public java.lang.String pers.platform.blog.controller.cc.BloggerCcController.logout() throws java.lang.Exception
2017-09-13 23:25:14.422  INFO 6420 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cc/blogger/modifyPassword.html]}" onto public java.lang.String pers.platform.blog.controller.cc.BloggerCcController.modifyPassword(java.lang.String,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2017-09-13 23:25:14.422  INFO 6420 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cc/blogType/delete.html]}" onto public java.lang.String pers.platform.blog.controller.cc.BlogTypeCcController.delete(java.lang.String,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2017-09-13 23:25:14.423  INFO 6420 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cc/blogType/list.html]}" onto public java.lang.String pers.platform.blog.controller.cc.BlogTypeCcController.list(java.lang.String,java.lang.String,pers.platform.blog.model.BlogType,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2017-09-13 23:25:14.423  INFO 6420 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cc/blogType/save.html]}" onto public java.lang.String pers.platform.blog.controller.cc.BlogTypeCcController.save(pers.platform.blog.model.BlogType,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2017-09-13 23:25:14.423  INFO 6420 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cc/blogType/findById.html]}" onto public java.lang.String pers.platform.blog.controller.cc.BlogTypeCcController.findById(java.lang.String,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2017-09-13 23:25:14.426  INFO 6420 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cc/comment/delete.html]}" onto public java.lang.String pers.platform.blog.controller.cc.CommentCcController.delete(java.lang.String,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2017-09-13 23:25:14.426  INFO 6420 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cc/comment/review.html]}" onto public java.lang.String pers.platform.blog.controller.cc.CommentCcController.delete(java.lang.String,java.lang.Integer,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2017-09-13 23:25:14.426  INFO 6420 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cc/comment/list.html]}" onto public java.lang.String pers.platform.blog.controller.cc.CommentCcController.list(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2017-09-13 23:25:14.427  INFO 6420 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cc/link/delete.html]}" onto public java.lang.String pers.platform.blog.controller.cc.LinkCcController.delete(java.lang.String,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2017-09-13 23:25:14.427  INFO 6420 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cc/link/list.html]}" onto public java.lang.String pers.platform.blog.controller.cc.LinkCcController.list(java.lang.String,java.lang.String,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2017-09-13 23:25:14.427  INFO 6420 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cc/link/save.html]}" onto public java.lang.String pers.platform.blog.controller.cc.LinkCcController.save(pers.platform.blog.model.Link,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2017-09-13 23:25:14.427  INFO 6420 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cc/system/refreshSystem.html]}" onto public java.lang.String pers.platform.blog.controller.cc.SystemCcController.refreshSystem(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2017-09-13 23:25:14.428  INFO 6420 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/comment/save.html]}" onto public java.lang.String pers.platform.blog.controller.CommentController.save(pers.platform.blog.model.Comment,java.lang.String,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpSession) throws java.lang.Exception
2017-09-13 23:25:14.428  INFO 6420 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/index]}" onto public org.springframework.web.servlet.ModelAndView pers.platform.blog.controller.IndexContrller.index(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2017-09-13 23:25:14.428  INFO 6420 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/download.html]}" onto public org.springframework.web.servlet.ModelAndView pers.platform.blog.controller.IndexContrller.download() throws java.lang.Exception
2017-09-13 23:25:14.430  INFO 6420 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2017-09-13 23:25:14.431  INFO 6420 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2017-09-13 23:25:14.485  INFO 6420 --- [restartedMain] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/cc/main.html] onto handler of type [class org.springframework.web.servlet.mvc.ParameterizableViewController]
2017-09-13 23:25:14.485  INFO 6420 --- [restartedMain] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/cc/blog.html] onto handler of type [class org.springframework.web.servlet.mvc.ParameterizableViewController]
2017-09-13 23:25:14.485  INFO 6420 --- [restartedMain] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/cc/commentReview.html] onto handler of type [class org.springframework.web.servlet.mvc.ParameterizableViewController]
2017-09-13 23:25:14.485  INFO 6420 --- [restartedMain] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/cc/blogManage.html] onto handler of type [class org.springframework.web.servlet.mvc.ParameterizableViewController]
2017-09-13 23:25:14.485  INFO 6420 --- [restartedMain] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/cc/blogTypeManage.html] onto handler of type [class org.springframework.web.servlet.mvc.ParameterizableViewController]
2017-09-13 23:25:14.485  INFO 6420 --- [restartedMain] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/cc/commentManage.html] onto handler of type [class org.springframework.web.servlet.mvc.ParameterizableViewController]
2017-09-13 23:25:14.485  INFO 6420 --- [restartedMain] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/cc/modifyInfo.html] onto handler of type [class org.springframework.web.servlet.mvc.ParameterizableViewController]
2017-09-13 23:25:14.485  INFO 6420 --- [restartedMain] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/cc/linkManage.html] onto handler of type [class org.springframework.web.servlet.mvc.ParameterizableViewController]
2017-09-13 23:25:14.574  INFO 6420 --- [restartedMain] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2017-09-13 23:25:14.575  INFO 6420 --- [restartedMain] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2017-09-13 23:25:14.644  INFO 6420 --- [restartedMain] .m.m.a.ExceptionHandlerExceptionResolver : Detected @ExceptionHandler methods in repositoryRestExceptionHandler
2017-09-13 23:25:14.723  INFO 6420 --- [restartedMain] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2017-09-13 23:25:15.713  INFO 6420 --- [restartedMain] o.s.d.r.w.RepositoryRestHandlerAdapter   : Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@499523e2: startup date [Wed Sep 13 23:25:09 CST 2017]; root of context hierarchy
2017-09-13 23:25:15.748  INFO 6420 --- [restartedMain] o.s.d.r.w.RepositoryRestHandlerMapping   : Mapped "{[/{repository}/{id}/{property}],methods=[GET],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<org.springframework.hateoas.ResourceSupport> org.springframework.data.rest.webmvc.RepositoryPropertyReferenceController.followPropertyReference(org.springframework.data.rest.webmvc.RootResourceInformation,java.io.Serializable,java.lang.String,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler) throws java.lang.Exception
2017-09-13 23:25:15.749  INFO 6420 --- [restartedMain] o.s.d.r.w.RepositoryRestHandlerMapping   : Mapped "{[/{repository}/{id}/{property}/{propertyId}],methods=[GET],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<org.springframework.hateoas.ResourceSupport> org.springframework.data.rest.webmvc.RepositoryPropertyReferenceController.followPropertyReference(org.springframework.data.rest.webmvc.RootResourceInformation,java.io.Serializable,java.lang.String,java.lang.String,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler) throws java.lang.Exception
2017-09-13 23:25:15.749  INFO 6420 --- [restartedMain] o.s.d.r.w.RepositoryRestHandlerMapping   : Mapped "{[/{repository}/{id}/{property}],methods=[DELETE],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<? extends org.springframework.hateoas.ResourceSupport> org.springframework.data.rest.webmvc.RepositoryPropertyReferenceController.deletePropertyReference(org.springframework.data.rest.webmvc.RootResourceInformation,java.io.Serializable,java.lang.String) throws java.lang.Exception
2017-09-13 23:25:15.750  INFO 6420 --- [restartedMain] o.s.d.r.w.RepositoryRestHandlerMapping   : Mapped "{[/{repository}/{id}/{property}],methods=[GET],produces=[application/x-spring-data-compact+json || text/uri-list]}" onto public org.springframework.http.ResponseEntity<org.springframework.hateoas.ResourceSupport> org.springframework.data.rest.webmvc.RepositoryPropertyReferenceController.followPropertyReferenceCompact(org.springframework.data.rest.webmvc.RootResourceInformation,java.io.Serializable,java.lang.String,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler) throws java.lang.Exception
2017-09-13 23:25:15.751  INFO 6420 --- [restartedMain] o.s.d.r.w.RepositoryRestHandlerMapping   : Mapped "{[/{repository}/{id}/{property}],methods=[PATCH || PUT || POST],consumes=[application/json || application/x-spring-data-compact+json || text/uri-list],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<? extends org.springframework.hateoas.ResourceSupport> org.springframework.data.rest.webmvc.RepositoryPropertyReferenceController.createPropertyReference(org.springframework.data.rest.webmvc.RootResourceInformation,org.springframework.http.HttpMethod,org.springframework.hateoas.Resources<java.lang.Object>,java.io.Serializable,java.lang.String) throws java.lang.Exception
2017-09-13 23:25:15.751  INFO 6420 --- [restartedMain] o.s.d.r.w.RepositoryRestHandlerMapping   : Mapped "{[/{repository}/{id}/{property}/{propertyId}],methods=[DELETE],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<org.springframework.hateoas.ResourceSupport> org.springframework.data.rest.webmvc.RepositoryPropertyReferenceController.deletePropertyReferenceId(org.springframework.data.rest.webmvc.RootResourceInformation,java.io.Serializable,java.lang.String,java.lang.String) throws java.lang.Exception
2017-09-13 23:25:15.753  INFO 6420 --- [restartedMain] o.s.d.r.w.RepositoryRestHandlerMapping   : Mapped "{[/{repository}/search],methods=[OPTIONS],produces=[application/hal+json || application/json]}" onto public org.springframework.http.HttpEntity<?> org.springframework.data.rest.webmvc.RepositorySearchController.optionsForSearches(org.springframework.data.rest.webmvc.RootResourceInformation)
2017-09-13 23:25:15.754  INFO 6420 --- [restartedMain] o.s.d.r.w.RepositoryRestHandlerMapping   : Mapped "{[/{repository}/search/{search}],methods=[GET],produces=[application/x-spring-data-compact+json]}" onto public org.springframework.hateoas.ResourceSupport org.springframework.data.rest.webmvc.RepositorySearchController.executeSearchCompact(org.springframework.data.rest.webmvc.RootResourceInformation,org.springframework.http.HttpHeaders,org.springframework.util.MultiValueMap<java.lang.String, java.lang.Object>,java.lang.String,java.lang.String,org.springframework.data.rest.webmvc.support.DefaultedPageable,org.springframework.data.domain.Sort,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler)
2017-09-13 23:25:15.755  INFO 6420 --- [restartedMain] o.s.d.r.w.RepositoryRestHandlerMapping   : Mapped "{[/{repository}/search],methods=[HEAD],produces=[application/hal+json || application/json]}" onto public org.springframework.http.HttpEntity<?> org.springframework.data.rest.webmvc.RepositorySearchController.headForSearches(org.springframework.data.rest.webmvc.RootResourceInformation)
2017-09-13 23:25:15.756  INFO 6420 --- [restartedMain] o.s.d.r.w.RepositoryRestHandlerMapping   : Mapped "{[/{repository}/search/{search}],methods=[GET],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.data.rest.webmvc.RepositorySearchController.executeSearch(org.springframework.data.rest.webmvc.RootResourceInformation,org.springframework.util.MultiValueMap<java.lang.String, java.lang.Object>,java.lang.String,org.springframework.data.rest.webmvc.support.DefaultedPageable,org.springframework.data.domain.Sort,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler,org.springframework.http.HttpHeaders)
2017-09-13 23:25:15.756  INFO 6420 --- [restartedMain] o.s.d.r.w.RepositoryRestHandlerMapping   : Mapped "{[/{repository}/search],methods=[GET],produces=[application/hal+json || application/json]}" onto public org.springframework.data.rest.webmvc.RepositorySearchesResource org.springframework.data.rest.webmvc.RepositorySearchController.listSearches(org.springframework.data.rest.webmvc.RootResourceInformation)
2017-09-13 23:25:15.757  INFO 6420 --- [restartedMain] o.s.d.r.w.RepositoryRestHandlerMapping   : Mapped "{[/{repository}/search/{search}],methods=[OPTIONS],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<java.lang.Object> org.springframework.data.rest.webmvc.RepositorySearchController.optionsForSearch(org.springframework.data.rest.webmvc.RootResourceInformation,java.lang.String)
2017-09-13 23:25:15.758  INFO 6420 --- [restartedMain] o.s.d.r.w.RepositoryRestHandlerMapping   : Mapped "{[/{repository}/search/{search}],methods=[HEAD],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<java.lang.Object> org.springframework.data.rest.webmvc.RepositorySearchController.headForSearch(org.springframework.data.rest.webmvc.RootResourceInformation,java.lang.String)
2017-09-13 23:25:15.759  INFO 6420 --- [restartedMain] o.s.d.r.w.RepositoryRestHandlerMapping   : Mapped "{[/ || ],methods=[OPTIONS],produces=[application/hal+json || application/json]}" onto public org.springframework.http.HttpEntity<?> org.springframework.data.rest.webmvc.RepositoryController.optionsForRepositories()
2017-09-13 23:25:15.760  INFO 6420 --- [restartedMain] o.s.d.r.w.RepositoryRestHandlerMapping   : Mapped "{[/ || ],methods=[HEAD],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.data.rest.webmvc.RepositoryController.headForRepositories()
2017-09-13 23:25:15.760  INFO 6420 --- [restartedMain] o.s.d.r.w.RepositoryRestHandlerMapping   : Mapped "{[/ || ],methods=[GET],produces=[application/hal+json || application/json]}" onto public org.springframework.http.HttpEntity<org.springframework.data.rest.webmvc.RepositoryLinksResource> org.springframework.data.rest.webmvc.RepositoryController.listRepositories()
2017-09-13 23:25:15.762  INFO 6420 --- [restartedMain] o.s.d.r.w.RepositoryRestHandlerMapping   : Mapped "{[/{repository}],methods=[OPTIONS],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.data.rest.webmvc.RepositoryEntityController.optionsForCollectionResource(org.springframework.data.rest.webmvc.RootResourceInformation)
2017-09-13 23:25:15.763  INFO 6420 --- [restartedMain] o.s.d.r.w.RepositoryRestHandlerMapping   : Mapped "{[/{repository}],methods=[HEAD],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.data.rest.webmvc.RepositoryEntityController.headCollectionResource(org.springframework.data.rest.webmvc.RootResourceInformation,org.springframework.data.rest.webmvc.support.DefaultedPageable) throws org.springframework.web.HttpRequestMethodNotSupportedException
2017-09-13 23:25:15.763  INFO 6420 --- [restartedMain] o.s.d.r.w.RepositoryRestHandlerMapping   : Mapped "{[/{repository}],methods=[GET],produces=[application/hal+json || application/json]}" onto public org.springframework.hateoas.Resources<?> org.springframework.data.rest.webmvc.RepositoryEntityController.getCollectionResource(org.springframework.data.rest.webmvc.RootResourceInformation,org.springframework.data.rest.webmvc.support.DefaultedPageable,org.springframework.data.domain.Sort,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler) throws org.springframework.data.rest.webmvc.ResourceNotFoundException,org.springframework.web.HttpRequestMethodNotSupportedException
2017-09-13 23:25:15.764  INFO 6420 --- [restartedMain] o.s.d.r.w.RepositoryRestHandlerMapping   : Mapped "{[/{repository}],methods=[GET],produces=[application/x-spring-data-compact+json || text/uri-list]}" onto public org.springframework.hateoas.Resources<?> org.springframework.data.rest.webmvc.RepositoryEntityController.getCollectionResourceCompact(org.springframework.data.rest.webmvc.RootResourceInformation,org.springframework.data.rest.webmvc.support.DefaultedPageable,org.springframework.data.domain.Sort,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler) throws org.springframework.data.rest.webmvc.ResourceNotFoundException,org.springframework.web.HttpRequestMethodNotSupportedException
2017-09-13 23:25:15.765  INFO 6420 --- [restartedMain] o.s.d.r.w.RepositoryRestHandlerMapping   : Mapped "{[/{repository}],methods=[POST],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<org.springframework.hateoas.ResourceSupport> org.springframework.data.rest.webmvc.RepositoryEntityController.postCollectionResource(org.springframework.data.rest.webmvc.RootResourceInformation,org.springframework.data.rest.webmvc.PersistentEntityResource,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler,java.lang.String) throws org.springframework.web.HttpRequestMethodNotSupportedException
2017-09-13 23:25:15.766  INFO 6420 --- [restartedMain] o.s.d.r.w.RepositoryRestHandlerMapping   : Mapped "{[/{repository}/{id}],methods=[OPTIONS],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.data.rest.webmvc.RepositoryEntityController.optionsForItemResource(org.springframework.data.rest.webmvc.RootResourceInformation)
2017-09-13 23:25:15.767  INFO 6420 --- [restartedMain] o.s.d.r.w.RepositoryRestHandlerMapping   : Mapped "{[/{repository}/{id}],methods=[HEAD],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.data.rest.webmvc.RepositoryEntityController.headForItemResource(org.springframework.data.rest.webmvc.RootResourceInformation,java.io.Serializable,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler) throws org.springframework.web.HttpRequestMethodNotSupportedException
2017-09-13 23:25:15.768  INFO 6420 --- [restartedMain] o.s.d.r.w.RepositoryRestHandlerMapping   : Mapped "{[/{repository}/{id}],methods=[PATCH],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<org.springframework.hateoas.ResourceSupport> org.springframework.data.rest.webmvc.RepositoryEntityController.patchItemResource(org.springframework.data.rest.webmvc.RootResourceInformation,org.springframework.data.rest.webmvc.PersistentEntityResource,java.io.Serializable,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler,org.springframework.data.rest.webmvc.support.ETag,java.lang.String) throws org.springframework.web.HttpRequestMethodNotSupportedException,org.springframework.data.rest.webmvc.ResourceNotFoundException
2017-09-13 23:25:15.769  INFO 6420 --- [restartedMain] o.s.d.r.w.RepositoryRestHandlerMapping   : Mapped "{[/{repository}/{id}],methods=[DELETE],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.data.rest.webmvc.RepositoryEntityController.deleteItemResource(org.springframework.data.rest.webmvc.RootResourceInformation,java.io.Serializable,org.springframework.data.rest.webmvc.support.ETag) throws org.springframework.data.rest.webmvc.ResourceNotFoundException,org.springframework.web.HttpRequestMethodNotSupportedException
2017-09-13 23:25:15.769  INFO 6420 --- [restartedMain] o.s.d.r.w.RepositoryRestHandlerMapping   : Mapped "{[/{repository}/{id}],methods=[PUT],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<? extends org.springframework.hateoas.ResourceSupport> org.springframework.data.rest.webmvc.RepositoryEntityController.putItemResource(org.springframework.data.rest.webmvc.RootResourceInformation,org.springframework.data.rest.webmvc.PersistentEntityResource,java.io.Serializable,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler,org.springframework.data.rest.webmvc.support.ETag,java.lang.String) throws org.springframework.web.HttpRequestMethodNotSupportedException
2017-09-13 23:25:15.769  INFO 6420 --- [restartedMain] o.s.d.r.w.RepositoryRestHandlerMapping   : Mapped "{[/{repository}/{id}],methods=[GET],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<org.springframework.hateoas.Resource<?>> org.springframework.data.rest.webmvc.RepositoryEntityController.getItemResource(org.springframework.data.rest.webmvc.RootResourceInformation,java.io.Serializable,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler,org.springframework.http.HttpHeaders) throws org.springframework.web.HttpRequestMethodNotSupportedException
2017-09-13 23:25:15.773  INFO 6420 --- [restartedMain] o.s.d.r.w.BasePathAwareHandlerMapping    : Mapped "{[/profile],methods=[GET]}" onto org.springframework.http.HttpEntity<org.springframework.hateoas.ResourceSupport> org.springframework.data.rest.webmvc.ProfileController.listAllFormsOfMetadata()
2017-09-13 23:25:15.774  INFO 6420 --- [restartedMain] o.s.d.r.w.BasePathAwareHandlerMapping    : Mapped "{[/profile],methods=[OPTIONS]}" onto public org.springframework.http.HttpEntity<?> org.springframework.data.rest.webmvc.ProfileController.profileOptions()
2017-09-13 23:25:15.774  INFO 6420 --- [restartedMain] o.s.d.r.w.BasePathAwareHandlerMapping    : Mapped "{[/profile/{repository}],methods=[GET],produces=[application/schema+json]}" onto public org.springframework.http.HttpEntity<org.springframework.data.rest.webmvc.json.JsonSchema> org.springframework.data.rest.webmvc.RepositorySchemaController.schema(org.springframework.data.rest.webmvc.RootResourceInformation)
2017-09-13 23:25:15.775  INFO 6420 --- [restartedMain] o.s.d.r.w.BasePathAwareHandlerMapping    : Mapped "{[/profile/{repository}],methods=[GET],produces=[application/alps+json || */*]}" onto org.springframework.http.HttpEntity<org.springframework.data.rest.webmvc.RootResourceInformation> org.springframework.data.rest.webmvc.alps.AlpsController.descriptor(org.springframework.data.rest.webmvc.RootResourceInformation)
2017-09-13 23:25:15.775  INFO 6420 --- [restartedMain] o.s.d.r.w.BasePathAwareHandlerMapping    : Mapped "{[/profile/{repository}],methods=[OPTIONS],produces=[application/alps+json]}" onto org.springframework.http.HttpEntity<?> org.springframework.data.rest.webmvc.alps.AlpsController.alpsOptions()
2017-09-13 23:25:16.260  INFO 6420 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2017-09-13 23:25:16.878  INFO 6420 --- [restartedMain] o.s.j.e.a.AnnotationMBeanExporter        : Registering beans for JMX exposure on startup
2017-09-13 23:25:16.879  INFO 6420 --- [restartedMain] o.s.j.e.a.AnnotationMBeanExporter        : Bean with name 'statFilter' has been autodetected for JMX exposure
2017-09-13 23:25:16.880  INFO 6420 --- [restartedMain] o.s.j.e.a.AnnotationMBeanExporter        : Bean with name 'dataSource' has been autodetected for JMX exposure
2017-09-13 23:25:16.883  INFO 6420 --- [restartedMain] o.s.j.e.a.AnnotationMBeanExporter        : Bean with name 'rabbitConnectionFactory' has been autodetected for JMX exposure
2017-09-13 23:25:16.885  INFO 6420 --- [restartedMain] o.s.j.e.a.AnnotationMBeanExporter        : Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2017-09-13 23:25:16.886  INFO 6420 --- [restartedMain] o.s.j.e.a.AnnotationMBeanExporter        : Located managed bean 'rabbitConnectionFactory': registering with JMX server as MBean [org.springframework.amqp.rabbit.connection:name=rabbitConnectionFactory,type=CachingConnectionFactory]
2017-09-13 23:25:16.897  INFO 6420 --- [restartedMain] o.s.j.e.a.AnnotationMBeanExporter        : Located MBean 'statFilter': registering with JMX server as MBean [com.alibaba.druid.filter.stat:name=statFilter,type=StatFilter]
2017-09-13 23:25:16.903  INFO 6420 --- [restartedMain] o.s.c.support.DefaultLifecycleProcessor  : Starting beans in phase -2147482648
2017-09-13 23:25:16.905  INFO 6420 --- [restartedMain] o.s.c.support.DefaultLifecycleProcessor  : Starting beans in phase 2147483647
2017-09-13 23:25:16.998  INFO 6420 --- [restartedMain] s.b.c.e.t.TomcatEmbeddedServletContainer : Tomcat started on port(s): 8080 (http)
2017-09-13 23:25:17.012  INFO 6420 --- [restartedMain] pers.platform.blog.Application           : Started Application in 8.092 seconds (JVM running for 222.319)
2017-09-13 23:25:17.042  INFO 6420 --- [http-nio-8080-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring FrameworkServlet 'dispatcherServlet'
2017-09-13 23:25:17.042  INFO 6420 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : FrameworkServlet 'dispatcherServlet': initialization started
2017-09-13 23:25:17.083  INFO 6420 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : FrameworkServlet 'dispatcherServlet': initialization completed in 41 ms
2017-09-13 23:25:17.147 DEBUG 6420 --- [http-nio-8080-exec-1] p.p.blog.repository.BlogRepo.list        : ==>  Preparing: select * from t_blog order by releaseDate desc limit ?,? 
2017-09-13 23:25:17.148 DEBUG 6420 --- [http-nio-8080-exec-1] p.p.blog.repository.BlogRepo.list        : ==> Parameters: 0(Integer), 10(Integer)
2017-09-13 23:25:17.154 DEBUG 6420 --- [http-nio-8080-exec-1] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-13 23:25:17.159 DEBUG 6420 --- [http-nio-8080-exec-1] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 11(String)
2017-09-13 23:25:17.165 DEBUG 6420 --- [http-nio-8080-exec-1] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-13 23:25:17.166 DEBUG 6420 --- [http-nio-8080-exec-1] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-13 23:25:17.166 DEBUG 6420 --- [http-nio-8080-exec-1] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 1(String)
2017-09-13 23:25:17.173 DEBUG 6420 --- [http-nio-8080-exec-1] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-13 23:25:17.174 DEBUG 6420 --- [http-nio-8080-exec-1] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-13 23:25:17.174 DEBUG 6420 --- [http-nio-8080-exec-1] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 12(String)
2017-09-13 23:25:17.177 DEBUG 6420 --- [http-nio-8080-exec-1] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-13 23:25:17.179 DEBUG 6420 --- [http-nio-8080-exec-1] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-13 23:25:17.179 DEBUG 6420 --- [http-nio-8080-exec-1] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 32(String)
2017-09-13 23:25:17.181 DEBUG 6420 --- [http-nio-8080-exec-1] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-13 23:25:17.192 DEBUG 6420 --- [http-nio-8080-exec-1] p.p.blog.repository.BlogRepo.list        : <==      Total: 10
2017-09-13 23:25:17.418 DEBUG 6420 --- [http-nio-8080-exec-1] p.p.blog.repository.BlogRepo.getTotal    : ==>  Preparing: select count(*) from t_blog 
2017-09-13 23:25:17.421 DEBUG 6420 --- [http-nio-8080-exec-1] p.p.blog.repository.BlogRepo.getTotal    : ==> Parameters: 
2017-09-13 23:25:17.424 DEBUG 6420 --- [http-nio-8080-exec-1] p.p.blog.repository.BlogRepo.getTotal    : <==      Total: 1
2017-09-13 23:25:18.900  INFO 6420 --- [Thread-16] ationConfigEmbeddedWebApplicationContext : Closing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@499523e2: startup date [Wed Sep 13 23:25:09 CST 2017]; root of context hierarchy
2017-09-13 23:25:19.126  INFO 6420 --- [Thread-16] o.s.c.support.DefaultLifecycleProcessor  : Stopping beans in phase 2147483647
2017-09-13 23:25:19.126  INFO 6420 --- [Thread-16] o.s.c.support.DefaultLifecycleProcessor  : Stopping beans in phase -2147482648
2017-09-13 23:25:19.127  INFO 6420 --- [Thread-16] o.s.j.e.a.AnnotationMBeanExporter        : Unregistering JMX-exposed beans on shutdown
2017-09-13 23:25:19.133  INFO 6420 --- [Thread-16] o.s.j.e.a.AnnotationMBeanExporter        : Unregistering JMX-exposed beans
2017-09-13 23:25:19.134  INFO 6420 --- [Thread-16] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2017-09-13 23:25:19.137  INFO 6420 --- [Thread-16] com.alibaba.druid.pool.DruidDataSource   : {dataSource-2} closed
2017-09-13 23:25:21.880  INFO 6420 --- [restartedMain] pers.platform.blog.Application           : Starting Application on PC-20160914JGKD with PID 6420 (E:\workspace\pers-cc-platform\pers-platform-blog-web\target\classes started by Administrator in E:\workspace\pers-cc-platform\pers-platform-blog-web)
2017-09-13 23:25:21.880 DEBUG 6420 --- [restartedMain] pers.platform.blog.Application           : Running with Spring Boot v1.5.2.RELEASE, Spring v4.3.7.RELEASE
2017-09-13 23:25:21.880  INFO 6420 --- [restartedMain] pers.platform.blog.Application           : The following profiles are active: test
2017-09-13 23:25:21.887  INFO 6420 --- [restartedMain] ationConfigEmbeddedWebApplicationContext : Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@20de5199: startup date [Wed Sep 13 23:25:21 CST 2017]; root of context hierarchy
2017-09-13 23:25:24.097  INFO 6420 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2017-09-13 23:25:24.124  INFO 6420 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2017-09-13 23:25:24.144  INFO 6420 --- [restartedMain] o.s.b.f.s.DefaultListableBeanFactory     : Overriding bean definition for bean 'httpRequestHandlerAdapter' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.boot.autoconfigure.web.WebMvcAutoConfiguration$EnableWebMvcConfiguration; factoryMethodName=httpRequestHandlerAdapter; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/boot/autoconfigure/web/WebMvcAutoConfiguration$EnableWebMvcConfiguration.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.data.rest.webmvc.config.RepositoryRestMvcConfiguration; factoryMethodName=httpRequestHandlerAdapter; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/data/rest/webmvc/config/RepositoryRestMvcConfiguration.class]]
2017-09-13 23:25:24.209  INFO 6420 --- [restartedMain] o.s.b.f.s.DefaultListableBeanFactory     : Overriding bean definition for bean 'dataSource' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure; factoryMethodName=dataSource; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/alibaba/druid/spring/boot/autoconfigure/DruidDataSourceAutoConfigure.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=true; factoryBeanName=spring.datasource-pers.platform.blog.config.DruidDBConfig; factoryMethodName=dataSource; initMethodName=null; destroyMethodName=(inferred); defined in pers.platform.blog.config.DruidDBConfig]
2017-09-13 23:25:24.334  INFO 6420 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.amqp.rabbit.annotation.RabbitBootstrapConfiguration' of type [org.springframework.amqp.rabbit.annotation.RabbitBootstrapConfiguration$$EnhancerBySpringCGLIB$$4ddcc236] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017-09-13 23:25:24.351  INFO 6420 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$87710408] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017-09-13 23:25:24.383  INFO 6420 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'reidsConfig' of type [pers.platform.blog.config.ReidsConfig$$EnhancerBySpringCGLIB$$3ce39fb1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017-09-13 23:25:24.411  INFO 6420 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'keyGenerator' of type [pers.platform.blog.config.ReidsConfig$1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017-09-13 23:25:24.412  INFO 6420 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.cache.annotation.ProxyCachingConfiguration' of type [org.springframework.cache.annotation.ProxyCachingConfiguration$$EnhancerBySpringCGLIB$$d0833a26] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017-09-13 23:25:24.456  INFO 6420 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'shiroConfig' of type [pers.platform.blog.config.ShiroConfig$$EnhancerBySpringCGLIB$$917d3a7d] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017-09-13 23:25:24.503  INFO 6420 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'myShiroRealm' of type [pers.platform.blog.realm.MyRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017-09-13 23:25:24.521  INFO 6420 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017-09-13 23:25:24.620  INFO 6420 --- [restartedMain] pers.platform.blog.config.ShiroConfig    : 注入Shiro的Web过滤器-->shiroFilter
2017-09-13 23:25:25.046  INFO 6420 --- [restartedMain] s.b.c.e.t.TomcatEmbeddedServletContainer : Tomcat initialized with port(s): 8080 (http)
2017-09-13 23:25:25.047  INFO 6420 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service Tomcat
2017-09-13 23:25:25.048  INFO 6420 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet Engine: Apache Tomcat/8.5.11
2017-09-13 23:25:25.074  INFO 6420 --- [localhost-startStop-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2017-09-13 23:25:25.075  INFO 6420 --- [localhost-startStop-1] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 3188 ms
2017-09-13 23:25:25.351  INFO 6420 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'characterEncodingFilter' to: [/*]
2017-09-13 23:25:25.351  INFO 6420 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2017-09-13 23:25:25.351  INFO 6420 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'httpPutFormContentFilter' to: [/*]
2017-09-13 23:25:25.352  INFO 6420 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'requestContextFilter' to: [/*]
2017-09-13 23:25:25.352  INFO 6420 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'delegatingFilterProxy' to: [/*]
2017-09-13 23:25:25.352  INFO 6420 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'webStatFilter' to urls: [/*]
2017-09-13 23:25:25.352  INFO 6420 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Filter webStatFilter was not registered (possibly already registered?)
2017-09-13 23:25:25.352  INFO 6420 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'shiroFilter' to: [/*]
2017-09-13 23:25:25.352  INFO 6420 --- [localhost-startStop-1] o.s.b.w.servlet.ServletRegistrationBean  : Mapping servlet: 'statViewServlet' to [/druid/*]
2017-09-13 23:25:25.352  INFO 6420 --- [localhost-startStop-1] o.s.b.w.servlet.ServletRegistrationBean  : Mapping servlet: 'dispatcherServlet' to [/]
2017-09-13 23:25:25.353  INFO 6420 --- [localhost-startStop-1] o.s.b.w.servlet.ServletRegistrationBean  : Mapping servlet: 'statViewServlet' to [/druid/*]
2017-09-13 23:25:25.353  INFO 6420 --- [localhost-startStop-1] o.s.b.w.servlet.ServletRegistrationBean  : Servlet statViewServlet was not registered (possibly already registered?)
2017-09-13 23:25:25.909  INFO 6420 --- [localhost-startStop-1] com.alibaba.druid.pool.DruidDataSource   : {dataSource-3} inited
2017-09-13 23:25:25.912 DEBUG 6420 --- [localhost-startStop-1] p.p.blog.repository.BloggerRepo.find     : ==>  Preparing: select * from t_blogger where id=? 
2017-09-13 23:25:25.919 DEBUG 6420 --- [localhost-startStop-1] p.p.blog.repository.BloggerRepo.find     : ==> Parameters: 1(String)
2017-09-13 23:25:25.922 DEBUG 6420 --- [localhost-startStop-1] p.p.blog.repository.BloggerRepo.find     : <==      Total: 1
2017-09-13 23:25:25.981 DEBUG 6420 --- [localhost-startStop-1] p.p.blog.repository.LinkRepo.list        : ==>  Preparing: select * from t_link order by orderNo 
2017-09-13 23:25:25.982 DEBUG 6420 --- [localhost-startStop-1] p.p.blog.repository.LinkRepo.list        : ==> Parameters: 
2017-09-13 23:25:25.996 DEBUG 6420 --- [localhost-startStop-1] p.p.blog.repository.LinkRepo.list        : <==      Total: 2
2017-09-13 23:25:26.054 DEBUG 6420 --- [localhost-startStop-1] p.p.b.repository.BlogTypeRepo.countList  : ==>  Preparing: SELECT t2.id,t2.`typeName`,COUNT(t1.id) AS blogCount FROM t_blog t1 RIGHT JOIN t_blogType t2 ON t1.typeId=t2.id GROUP BY t2.id,t2.typeName ORDER BY t2.orderNo; 
2017-09-13 23:25:26.056 DEBUG 6420 --- [localhost-startStop-1] p.p.b.repository.BlogTypeRepo.countList  : ==> Parameters: 
2017-09-13 23:25:26.066 DEBUG 6420 --- [localhost-startStop-1] p.p.b.repository.BlogTypeRepo.countList  : <==      Total: 17
2017-09-13 23:25:26.111 DEBUG 6420 --- [localhost-startStop-1] p.p.blog.repository.BlogRepo.countList   : ==>  Preparing: SELECT DATE_FORMAT (releaseDate,'%Y年%m月') AS releaseDateStr,COUNT(*) AS blogCount FROM t_blog GROUP BY DATE_FORMAT (releaseDate,'%Y年%m月') ORDER BY DATE_FORMAT (releaseDate,'%Y年%m月') DESC 
2017-09-13 23:25:26.112 DEBUG 6420 --- [localhost-startStop-1] p.p.blog.repository.BlogRepo.countList   : ==> Parameters: 
2017-09-13 23:25:26.128 DEBUG 6420 --- [localhost-startStop-1] p.p.blog.repository.BlogRepo.countList   : <==      Total: 12
2017-09-13 23:25:26.238  INFO 6420 --- [restartedMain] j.LocalContainerEntityManagerFactoryBean : Building JPA container EntityManagerFactory for persistence unit 'default'
2017-09-13 23:25:26.238  INFO 6420 --- [restartedMain] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
2017-09-13 23:25:26.453  INFO 6420 --- [restartedMain] org.hibernate.dialect.Dialect            : HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
2017-09-13 23:25:26.478  INFO 6420 --- [restartedMain] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2017-09-13 23:25:27.336  INFO 6420 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerAdapter : Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@20de5199: startup date [Wed Sep 13 23:25:21 CST 2017]; root of context hierarchy
2017-09-13 23:25:27.382  INFO 6420 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/],methods=[GET]}" onto public java.lang.String pers.platform.blog.Application.index()
2017-09-13 23:25:27.383  INFO 6420 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/blog/q]}" onto public org.springframework.web.servlet.ModelAndView pers.platform.blog.controller.BlogController.search(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2017-09-13 23:25:27.383  INFO 6420 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/blog/articles/{id}.html]}" onto private org.springframework.web.servlet.ModelAndView pers.platform.blog.controller.BlogController.details(java.lang.String,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2017-09-13 23:25:27.383  INFO 6420 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cc/login.html]}" onto public java.lang.String pers.platform.blog.controller.BloggerController.login(pers.platform.blog.model.Blogger,javax.servlet.http.HttpServletRequest)
2017-09-13 23:25:27.383  INFO 6420 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/blogger/aboutMe.html]}" onto public org.springframework.web.servlet.ModelAndView pers.platform.blog.controller.BloggerController.aboutMe() throws java.lang.Exception
2017-09-13 23:25:27.385  INFO 6420 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cc/blog/delete.html]}" onto public java.lang.String pers.platform.blog.controller.cc.BlogCcController.delete(java.lang.String,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2017-09-13 23:25:27.385  INFO 6420 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cc/blog/list.html]}" onto public java.lang.String pers.platform.blog.controller.cc.BlogCcController.list(java.lang.String,java.lang.String,pers.platform.blog.model.Blog,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2017-09-13 23:25:27.385  INFO 6420 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cc/blog/save.html]}" onto public java.lang.String pers.platform.blog.controller.cc.BlogCcController.save(pers.platform.blog.model.Blog,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2017-09-13 23:25:27.386  INFO 6420 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cc/blog/findById.html]}" onto public java.lang.String pers.platform.blog.controller.cc.BlogCcController.findById(java.lang.String,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2017-09-13 23:25:27.386  INFO 6420 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cc/blog/uploadPastImage]}" onto public java.lang.String pers.platform.blog.controller.cc.BlogCcController.uploadPastImage(javax.servlet.http.HttpServletRequest,java.lang.String) throws java.lang.Exception
2017-09-13 23:25:27.386  INFO 6420 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cc/blog/ckeditorUpload]}" onto public java.lang.String pers.platform.blog.controller.cc.BlogCcController.upLoadImage(javax.servlet.http.HttpServletRequest,org.springframework.web.multipart.MultipartFile,java.lang.String) throws java.lang.Exception
2017-09-13 23:25:27.387  INFO 6420 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cc/blog/modifyBlog.html]}" onto public org.springframework.web.servlet.ModelAndView pers.platform.blog.controller.cc.BlogCcController.modifyBlog(java.lang.String,javax.servlet.http.HttpServletResponse)
2017-09-13 23:25:27.387  INFO 6420 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cc/blogger/find.html]}" onto public java.lang.String pers.platform.blog.controller.cc.BloggerCcController.find(javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2017-09-13 23:25:27.387  INFO 6420 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cc/blogger/save.html]}" onto public java.lang.String pers.platform.blog.controller.cc.BloggerCcController.save(org.springframework.web.multipart.MultipartFile,pers.platform.blog.model.Blogger,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2017-09-13 23:25:27.388  INFO 6420 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cc/blogger/logout.html]}" onto public java.lang.String pers.platform.blog.controller.cc.BloggerCcController.logout() throws java.lang.Exception
2017-09-13 23:25:27.388  INFO 6420 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cc/blogger/modifyPassword.html]}" onto public java.lang.String pers.platform.blog.controller.cc.BloggerCcController.modifyPassword(java.lang.String,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2017-09-13 23:25:27.388  INFO 6420 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cc/blogType/delete.html]}" onto public java.lang.String pers.platform.blog.controller.cc.BlogTypeCcController.delete(java.lang.String,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2017-09-13 23:25:27.391  INFO 6420 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cc/blogType/list.html]}" onto public java.lang.String pers.platform.blog.controller.cc.BlogTypeCcController.list(java.lang.String,java.lang.String,pers.platform.blog.model.BlogType,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2017-09-13 23:25:27.393  INFO 6420 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cc/blogType/save.html]}" onto public java.lang.String pers.platform.blog.controller.cc.BlogTypeCcController.save(pers.platform.blog.model.BlogType,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2017-09-13 23:25:27.393  INFO 6420 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cc/blogType/findById.html]}" onto public java.lang.String pers.platform.blog.controller.cc.BlogTypeCcController.findById(java.lang.String,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2017-09-13 23:25:27.394  INFO 6420 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cc/comment/delete.html]}" onto public java.lang.String pers.platform.blog.controller.cc.CommentCcController.delete(java.lang.String,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2017-09-13 23:25:27.394  INFO 6420 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cc/comment/review.html]}" onto public java.lang.String pers.platform.blog.controller.cc.CommentCcController.delete(java.lang.String,java.lang.Integer,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2017-09-13 23:25:27.394  INFO 6420 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cc/comment/list.html]}" onto public java.lang.String pers.platform.blog.controller.cc.CommentCcController.list(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2017-09-13 23:25:27.395  INFO 6420 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cc/link/delete.html]}" onto public java.lang.String pers.platform.blog.controller.cc.LinkCcController.delete(java.lang.String,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2017-09-13 23:25:27.397  INFO 6420 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cc/link/list.html]}" onto public java.lang.String pers.platform.blog.controller.cc.LinkCcController.list(java.lang.String,java.lang.String,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2017-09-13 23:25:27.397  INFO 6420 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cc/link/save.html]}" onto public java.lang.String pers.platform.blog.controller.cc.LinkCcController.save(pers.platform.blog.model.Link,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2017-09-13 23:25:27.398  INFO 6420 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cc/system/refreshSystem.html]}" onto public java.lang.String pers.platform.blog.controller.cc.SystemCcController.refreshSystem(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2017-09-13 23:25:27.398  INFO 6420 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/comment/save.html]}" onto public java.lang.String pers.platform.blog.controller.CommentController.save(pers.platform.blog.model.Comment,java.lang.String,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpSession) throws java.lang.Exception
2017-09-13 23:25:27.398  INFO 6420 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/index]}" onto public org.springframework.web.servlet.ModelAndView pers.platform.blog.controller.IndexContrller.index(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2017-09-13 23:25:27.398  INFO 6420 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/download.html]}" onto public org.springframework.web.servlet.ModelAndView pers.platform.blog.controller.IndexContrller.download() throws java.lang.Exception
2017-09-13 23:25:27.432  INFO 6420 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2017-09-13 23:25:27.434  INFO 6420 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2017-09-13 23:25:27.473  INFO 6420 --- [restartedMain] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/cc/main.html] onto handler of type [class org.springframework.web.servlet.mvc.ParameterizableViewController]
2017-09-13 23:25:27.473  INFO 6420 --- [restartedMain] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/cc/blog.html] onto handler of type [class org.springframework.web.servlet.mvc.ParameterizableViewController]
2017-09-13 23:25:27.473  INFO 6420 --- [restartedMain] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/cc/commentReview.html] onto handler of type [class org.springframework.web.servlet.mvc.ParameterizableViewController]
2017-09-13 23:25:27.473  INFO 6420 --- [restartedMain] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/cc/blogManage.html] onto handler of type [class org.springframework.web.servlet.mvc.ParameterizableViewController]
2017-09-13 23:25:27.477  INFO 6420 --- [restartedMain] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/cc/blogTypeManage.html] onto handler of type [class org.springframework.web.servlet.mvc.ParameterizableViewController]
2017-09-13 23:25:27.477  INFO 6420 --- [restartedMain] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/cc/commentManage.html] onto handler of type [class org.springframework.web.servlet.mvc.ParameterizableViewController]
2017-09-13 23:25:27.477  INFO 6420 --- [restartedMain] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/cc/modifyInfo.html] onto handler of type [class org.springframework.web.servlet.mvc.ParameterizableViewController]
2017-09-13 23:25:27.477  INFO 6420 --- [restartedMain] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/cc/linkManage.html] onto handler of type [class org.springframework.web.servlet.mvc.ParameterizableViewController]
2017-09-13 23:25:27.519  INFO 6420 --- [restartedMain] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2017-09-13 23:25:27.519  INFO 6420 --- [restartedMain] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2017-09-13 23:25:27.546  INFO 6420 --- [restartedMain] .m.m.a.ExceptionHandlerExceptionResolver : Detected @ExceptionHandler methods in repositoryRestExceptionHandler
2017-09-13 23:25:27.807  INFO 6420 --- [restartedMain] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2017-09-13 23:25:28.450  INFO 6420 --- [restartedMain] o.s.d.r.w.RepositoryRestHandlerAdapter   : Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@20de5199: startup date [Wed Sep 13 23:25:21 CST 2017]; root of context hierarchy
2017-09-13 23:25:28.478  INFO 6420 --- [restartedMain] o.s.d.r.w.RepositoryRestHandlerMapping   : Mapped "{[/{repository}/{id}/{property}],methods=[GET],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<org.springframework.hateoas.ResourceSupport> org.springframework.data.rest.webmvc.RepositoryPropertyReferenceController.followPropertyReference(org.springframework.data.rest.webmvc.RootResourceInformation,java.io.Serializable,java.lang.String,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler) throws java.lang.Exception
2017-09-13 23:25:28.479  INFO 6420 --- [restartedMain] o.s.d.r.w.RepositoryRestHandlerMapping   : Mapped "{[/{repository}/{id}/{property}/{propertyId}],methods=[GET],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<org.springframework.hateoas.ResourceSupport> org.springframework.data.rest.webmvc.RepositoryPropertyReferenceController.followPropertyReference(org.springframework.data.rest.webmvc.RootResourceInformation,java.io.Serializable,java.lang.String,java.lang.String,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler) throws java.lang.Exception
2017-09-13 23:25:28.479  INFO 6420 --- [restartedMain] o.s.d.r.w.RepositoryRestHandlerMapping   : Mapped "{[/{repository}/{id}/{property}],methods=[DELETE],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<? extends org.springframework.hateoas.ResourceSupport> org.springframework.data.rest.webmvc.RepositoryPropertyReferenceController.deletePropertyReference(org.springframework.data.rest.webmvc.RootResourceInformation,java.io.Serializable,java.lang.String) throws java.lang.Exception
2017-09-13 23:25:28.480  INFO 6420 --- [restartedMain] o.s.d.r.w.RepositoryRestHandlerMapping   : Mapped "{[/{repository}/{id}/{property}],methods=[GET],produces=[application/x-spring-data-compact+json || text/uri-list]}" onto public org.springframework.http.ResponseEntity<org.springframework.hateoas.ResourceSupport> org.springframework.data.rest.webmvc.RepositoryPropertyReferenceController.followPropertyReferenceCompact(org.springframework.data.rest.webmvc.RootResourceInformation,java.io.Serializable,java.lang.String,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler) throws java.lang.Exception
2017-09-13 23:25:28.480  INFO 6420 --- [restartedMain] o.s.d.r.w.RepositoryRestHandlerMapping   : Mapped "{[/{repository}/{id}/{property}],methods=[PATCH || PUT || POST],consumes=[application/json || application/x-spring-data-compact+json || text/uri-list],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<? extends org.springframework.hateoas.ResourceSupport> org.springframework.data.rest.webmvc.RepositoryPropertyReferenceController.createPropertyReference(org.springframework.data.rest.webmvc.RootResourceInformation,org.springframework.http.HttpMethod,org.springframework.hateoas.Resources<java.lang.Object>,java.io.Serializable,java.lang.String) throws java.lang.Exception
2017-09-13 23:25:28.480  INFO 6420 --- [restartedMain] o.s.d.r.w.RepositoryRestHandlerMapping   : Mapped "{[/{repository}/{id}/{property}/{propertyId}],methods=[DELETE],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<org.springframework.hateoas.ResourceSupport> org.springframework.data.rest.webmvc.RepositoryPropertyReferenceController.deletePropertyReferenceId(org.springframework.data.rest.webmvc.RootResourceInformation,java.io.Serializable,java.lang.String,java.lang.String) throws java.lang.Exception
2017-09-13 23:25:28.481  INFO 6420 --- [restartedMain] o.s.d.r.w.RepositoryRestHandlerMapping   : Mapped "{[/{repository}/search],methods=[OPTIONS],produces=[application/hal+json || application/json]}" onto public org.springframework.http.HttpEntity<?> org.springframework.data.rest.webmvc.RepositorySearchController.optionsForSearches(org.springframework.data.rest.webmvc.RootResourceInformation)
2017-09-13 23:25:28.482  INFO 6420 --- [restartedMain] o.s.d.r.w.RepositoryRestHandlerMapping   : Mapped "{[/{repository}/search/{search}],methods=[GET],produces=[application/x-spring-data-compact+json]}" onto public org.springframework.hateoas.ResourceSupport org.springframework.data.rest.webmvc.RepositorySearchController.executeSearchCompact(org.springframework.data.rest.webmvc.RootResourceInformation,org.springframework.http.HttpHeaders,org.springframework.util.MultiValueMap<java.lang.String, java.lang.Object>,java.lang.String,java.lang.String,org.springframework.data.rest.webmvc.support.DefaultedPageable,org.springframework.data.domain.Sort,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler)
2017-09-13 23:25:28.482  INFO 6420 --- [restartedMain] o.s.d.r.w.RepositoryRestHandlerMapping   : Mapped "{[/{repository}/search],methods=[HEAD],produces=[application/hal+json || application/json]}" onto public org.springframework.http.HttpEntity<?> org.springframework.data.rest.webmvc.RepositorySearchController.headForSearches(org.springframework.data.rest.webmvc.RootResourceInformation)
2017-09-13 23:25:28.483  INFO 6420 --- [restartedMain] o.s.d.r.w.RepositoryRestHandlerMapping   : Mapped "{[/{repository}/search/{search}],methods=[GET],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.data.rest.webmvc.RepositorySearchController.executeSearch(org.springframework.data.rest.webmvc.RootResourceInformation,org.springframework.util.MultiValueMap<java.lang.String, java.lang.Object>,java.lang.String,org.springframework.data.rest.webmvc.support.DefaultedPageable,org.springframework.data.domain.Sort,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler,org.springframework.http.HttpHeaders)
2017-09-13 23:25:28.483  INFO 6420 --- [restartedMain] o.s.d.r.w.RepositoryRestHandlerMapping   : Mapped "{[/{repository}/search],methods=[GET],produces=[application/hal+json || application/json]}" onto public org.springframework.data.rest.webmvc.RepositorySearchesResource org.springframework.data.rest.webmvc.RepositorySearchController.listSearches(org.springframework.data.rest.webmvc.RootResourceInformation)
2017-09-13 23:25:28.483  INFO 6420 --- [restartedMain] o.s.d.r.w.RepositoryRestHandlerMapping   : Mapped "{[/{repository}/search/{search}],methods=[OPTIONS],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<java.lang.Object> org.springframework.data.rest.webmvc.RepositorySearchController.optionsForSearch(org.springframework.data.rest.webmvc.RootResourceInformation,java.lang.String)
2017-09-13 23:25:28.483  INFO 6420 --- [restartedMain] o.s.d.r.w.RepositoryRestHandlerMapping   : Mapped "{[/{repository}/search/{search}],methods=[HEAD],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<java.lang.Object> org.springframework.data.rest.webmvc.RepositorySearchController.headForSearch(org.springframework.data.rest.webmvc.RootResourceInformation,java.lang.String)
2017-09-13 23:25:28.484  INFO 6420 --- [restartedMain] o.s.d.r.w.RepositoryRestHandlerMapping   : Mapped "{[/ || ],methods=[OPTIONS],produces=[application/hal+json || application/json]}" onto public org.springframework.http.HttpEntity<?> org.springframework.data.rest.webmvc.RepositoryController.optionsForRepositories()
2017-09-13 23:25:28.484  INFO 6420 --- [restartedMain] o.s.d.r.w.RepositoryRestHandlerMapping   : Mapped "{[/ || ],methods=[HEAD],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.data.rest.webmvc.RepositoryController.headForRepositories()
2017-09-13 23:25:28.484  INFO 6420 --- [restartedMain] o.s.d.r.w.RepositoryRestHandlerMapping   : Mapped "{[/ || ],methods=[GET],produces=[application/hal+json || application/json]}" onto public org.springframework.http.HttpEntity<org.springframework.data.rest.webmvc.RepositoryLinksResource> org.springframework.data.rest.webmvc.RepositoryController.listRepositories()
2017-09-13 23:25:28.485  INFO 6420 --- [restartedMain] o.s.d.r.w.RepositoryRestHandlerMapping   : Mapped "{[/{repository}],methods=[OPTIONS],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.data.rest.webmvc.RepositoryEntityController.optionsForCollectionResource(org.springframework.data.rest.webmvc.RootResourceInformation)
2017-09-13 23:25:28.486  INFO 6420 --- [restartedMain] o.s.d.r.w.RepositoryRestHandlerMapping   : Mapped "{[/{repository}],methods=[HEAD],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.data.rest.webmvc.RepositoryEntityController.headCollectionResource(org.springframework.data.rest.webmvc.RootResourceInformation,org.springframework.data.rest.webmvc.support.DefaultedPageable) throws org.springframework.web.HttpRequestMethodNotSupportedException
2017-09-13 23:25:28.486  INFO 6420 --- [restartedMain] o.s.d.r.w.RepositoryRestHandlerMapping   : Mapped "{[/{repository}],methods=[GET],produces=[application/hal+json || application/json]}" onto public org.springframework.hateoas.Resources<?> org.springframework.data.rest.webmvc.RepositoryEntityController.getCollectionResource(org.springframework.data.rest.webmvc.RootResourceInformation,org.springframework.data.rest.webmvc.support.DefaultedPageable,org.springframework.data.domain.Sort,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler) throws org.springframework.data.rest.webmvc.ResourceNotFoundException,org.springframework.web.HttpRequestMethodNotSupportedException
2017-09-13 23:25:28.486  INFO 6420 --- [restartedMain] o.s.d.r.w.RepositoryRestHandlerMapping   : Mapped "{[/{repository}],methods=[GET],produces=[application/x-spring-data-compact+json || text/uri-list]}" onto public org.springframework.hateoas.Resources<?> org.springframework.data.rest.webmvc.RepositoryEntityController.getCollectionResourceCompact(org.springframework.data.rest.webmvc.RootResourceInformation,org.springframework.data.rest.webmvc.support.DefaultedPageable,org.springframework.data.domain.Sort,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler) throws org.springframework.data.rest.webmvc.ResourceNotFoundException,org.springframework.web.HttpRequestMethodNotSupportedException
2017-09-13 23:25:28.486  INFO 6420 --- [restartedMain] o.s.d.r.w.RepositoryRestHandlerMapping   : Mapped "{[/{repository}],methods=[POST],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<org.springframework.hateoas.ResourceSupport> org.springframework.data.rest.webmvc.RepositoryEntityController.postCollectionResource(org.springframework.data.rest.webmvc.RootResourceInformation,org.springframework.data.rest.webmvc.PersistentEntityResource,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler,java.lang.String) throws org.springframework.web.HttpRequestMethodNotSupportedException
2017-09-13 23:25:28.487  INFO 6420 --- [restartedMain] o.s.d.r.w.RepositoryRestHandlerMapping   : Mapped "{[/{repository}/{id}],methods=[OPTIONS],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.data.rest.webmvc.RepositoryEntityController.optionsForItemResource(org.springframework.data.rest.webmvc.RootResourceInformation)
2017-09-13 23:25:28.487  INFO 6420 --- [restartedMain] o.s.d.r.w.RepositoryRestHandlerMapping   : Mapped "{[/{repository}/{id}],methods=[HEAD],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.data.rest.webmvc.RepositoryEntityController.headForItemResource(org.springframework.data.rest.webmvc.RootResourceInformation,java.io.Serializable,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler) throws org.springframework.web.HttpRequestMethodNotSupportedException
2017-09-13 23:25:28.487  INFO 6420 --- [restartedMain] o.s.d.r.w.RepositoryRestHandlerMapping   : Mapped "{[/{repository}/{id}],methods=[PATCH],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<org.springframework.hateoas.ResourceSupport> org.springframework.data.rest.webmvc.RepositoryEntityController.patchItemResource(org.springframework.data.rest.webmvc.RootResourceInformation,org.springframework.data.rest.webmvc.PersistentEntityResource,java.io.Serializable,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler,org.springframework.data.rest.webmvc.support.ETag,java.lang.String) throws org.springframework.web.HttpRequestMethodNotSupportedException,org.springframework.data.rest.webmvc.ResourceNotFoundException
2017-09-13 23:25:28.487  INFO 6420 --- [restartedMain] o.s.d.r.w.RepositoryRestHandlerMapping   : Mapped "{[/{repository}/{id}],methods=[DELETE],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.data.rest.webmvc.RepositoryEntityController.deleteItemResource(org.springframework.data.rest.webmvc.RootResourceInformation,java.io.Serializable,org.springframework.data.rest.webmvc.support.ETag) throws org.springframework.data.rest.webmvc.ResourceNotFoundException,org.springframework.web.HttpRequestMethodNotSupportedException
2017-09-13 23:25:28.487  INFO 6420 --- [restartedMain] o.s.d.r.w.RepositoryRestHandlerMapping   : Mapped "{[/{repository}/{id}],methods=[PUT],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<? extends org.springframework.hateoas.ResourceSupport> org.springframework.data.rest.webmvc.RepositoryEntityController.putItemResource(org.springframework.data.rest.webmvc.RootResourceInformation,org.springframework.data.rest.webmvc.PersistentEntityResource,java.io.Serializable,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler,org.springframework.data.rest.webmvc.support.ETag,java.lang.String) throws org.springframework.web.HttpRequestMethodNotSupportedException
2017-09-13 23:25:28.488  INFO 6420 --- [restartedMain] o.s.d.r.w.RepositoryRestHandlerMapping   : Mapped "{[/{repository}/{id}],methods=[GET],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<org.springframework.hateoas.Resource<?>> org.springframework.data.rest.webmvc.RepositoryEntityController.getItemResource(org.springframework.data.rest.webmvc.RootResourceInformation,java.io.Serializable,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler,org.springframework.http.HttpHeaders) throws org.springframework.web.HttpRequestMethodNotSupportedException
2017-09-13 23:25:28.491  INFO 6420 --- [restartedMain] o.s.d.r.w.BasePathAwareHandlerMapping    : Mapped "{[/profile],methods=[GET]}" onto org.springframework.http.HttpEntity<org.springframework.hateoas.ResourceSupport> org.springframework.data.rest.webmvc.ProfileController.listAllFormsOfMetadata()
2017-09-13 23:25:28.491  INFO 6420 --- [restartedMain] o.s.d.r.w.BasePathAwareHandlerMapping    : Mapped "{[/profile],methods=[OPTIONS]}" onto public org.springframework.http.HttpEntity<?> org.springframework.data.rest.webmvc.ProfileController.profileOptions()
2017-09-13 23:25:28.491  INFO 6420 --- [restartedMain] o.s.d.r.w.BasePathAwareHandlerMapping    : Mapped "{[/profile/{repository}],methods=[GET],produces=[application/schema+json]}" onto public org.springframework.http.HttpEntity<org.springframework.data.rest.webmvc.json.JsonSchema> org.springframework.data.rest.webmvc.RepositorySchemaController.schema(org.springframework.data.rest.webmvc.RootResourceInformation)
2017-09-13 23:25:28.492  INFO 6420 --- [restartedMain] o.s.d.r.w.BasePathAwareHandlerMapping    : Mapped "{[/profile/{repository}],methods=[GET],produces=[application/alps+json || */*]}" onto org.springframework.http.HttpEntity<org.springframework.data.rest.webmvc.RootResourceInformation> org.springframework.data.rest.webmvc.alps.AlpsController.descriptor(org.springframework.data.rest.webmvc.RootResourceInformation)
2017-09-13 23:25:28.492  INFO 6420 --- [restartedMain] o.s.d.r.w.BasePathAwareHandlerMapping    : Mapped "{[/profile/{repository}],methods=[OPTIONS],produces=[application/alps+json]}" onto org.springframework.http.HttpEntity<?> org.springframework.data.rest.webmvc.alps.AlpsController.alpsOptions()
2017-09-13 23:25:28.883  INFO 6420 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2017-09-13 23:25:29.325  INFO 6420 --- [restartedMain] o.s.j.e.a.AnnotationMBeanExporter        : Registering beans for JMX exposure on startup
2017-09-13 23:25:29.326  INFO 6420 --- [restartedMain] o.s.j.e.a.AnnotationMBeanExporter        : Bean with name 'statFilter' has been autodetected for JMX exposure
2017-09-13 23:25:29.326  INFO 6420 --- [restartedMain] o.s.j.e.a.AnnotationMBeanExporter        : Bean with name 'dataSource' has been autodetected for JMX exposure
2017-09-13 23:25:29.328  INFO 6420 --- [restartedMain] o.s.j.e.a.AnnotationMBeanExporter        : Bean with name 'rabbitConnectionFactory' has been autodetected for JMX exposure
2017-09-13 23:25:29.330  INFO 6420 --- [restartedMain] o.s.j.e.a.AnnotationMBeanExporter        : Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2017-09-13 23:25:29.331  INFO 6420 --- [restartedMain] o.s.j.e.a.AnnotationMBeanExporter        : Located managed bean 'rabbitConnectionFactory': registering with JMX server as MBean [org.springframework.amqp.rabbit.connection:name=rabbitConnectionFactory,type=CachingConnectionFactory]
2017-09-13 23:25:29.338  INFO 6420 --- [restartedMain] o.s.j.e.a.AnnotationMBeanExporter        : Located MBean 'statFilter': registering with JMX server as MBean [com.alibaba.druid.filter.stat:name=statFilter,type=StatFilter]
2017-09-13 23:25:29.341  INFO 6420 --- [restartedMain] o.s.c.support.DefaultLifecycleProcessor  : Starting beans in phase -2147482648
2017-09-13 23:25:29.341  INFO 6420 --- [restartedMain] o.s.c.support.DefaultLifecycleProcessor  : Starting beans in phase 2147483647
2017-09-13 23:25:29.396  INFO 6420 --- [restartedMain] s.b.c.e.t.TomcatEmbeddedServletContainer : Tomcat started on port(s): 8080 (http)
2017-09-13 23:25:29.401  INFO 6420 --- [restartedMain] pers.platform.blog.Application           : Started Application in 8.028 seconds (JVM running for 234.708)
2017-09-13 23:25:29.404  INFO 6420 --- [http-nio-8080-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring FrameworkServlet 'dispatcherServlet'
2017-09-13 23:25:29.404  INFO 6420 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : FrameworkServlet 'dispatcherServlet': initialization started
2017-09-13 23:25:29.414  INFO 6420 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : FrameworkServlet 'dispatcherServlet': initialization completed in 10 ms
2017-09-13 23:25:29.421 DEBUG 6420 --- [http-nio-8080-exec-1] p.p.blog.repository.BlogRepo.list        : ==>  Preparing: select * from t_blog order by releaseDate desc limit ?,? 
2017-09-13 23:25:29.423 DEBUG 6420 --- [http-nio-8080-exec-1] p.p.blog.repository.BlogRepo.list        : ==> Parameters: 0(Integer), 10(Integer)
2017-09-13 23:25:29.426 DEBUG 6420 --- [http-nio-8080-exec-1] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-13 23:25:29.427 DEBUG 6420 --- [http-nio-8080-exec-1] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 11(String)
2017-09-13 23:25:29.428 DEBUG 6420 --- [http-nio-8080-exec-1] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-13 23:25:29.429 DEBUG 6420 --- [http-nio-8080-exec-1] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-13 23:25:29.429 DEBUG 6420 --- [http-nio-8080-exec-1] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 1(String)
2017-09-13 23:25:29.435 DEBUG 6420 --- [http-nio-8080-exec-1] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-13 23:25:29.436 DEBUG 6420 --- [http-nio-8080-exec-1] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-13 23:25:29.436 DEBUG 6420 --- [http-nio-8080-exec-1] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 12(String)
2017-09-13 23:25:29.438 DEBUG 6420 --- [http-nio-8080-exec-1] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-13 23:25:29.440 DEBUG 6420 --- [http-nio-8080-exec-1] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-13 23:25:29.440 DEBUG 6420 --- [http-nio-8080-exec-1] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 32(String)
2017-09-13 23:25:29.442 DEBUG 6420 --- [http-nio-8080-exec-1] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-13 23:25:29.443 DEBUG 6420 --- [http-nio-8080-exec-1] p.p.blog.repository.BlogRepo.list        : <==      Total: 10
2017-09-13 23:25:29.452 DEBUG 6420 --- [http-nio-8080-exec-1] p.p.blog.repository.BlogRepo.getTotal    : ==>  Preparing: select count(*) from t_blog 
2017-09-13 23:25:29.458 DEBUG 6420 --- [http-nio-8080-exec-1] p.p.blog.repository.BlogRepo.getTotal    : ==> Parameters: 
2017-09-13 23:25:29.465 DEBUG 6420 --- [http-nio-8080-exec-1] p.p.blog.repository.BlogRepo.getTotal    : <==      Total: 1
2017-09-13 23:26:44.790  INFO 6420 --- [Thread-24] ationConfigEmbeddedWebApplicationContext : Closing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@20de5199: startup date [Wed Sep 13 23:25:21 CST 2017]; root of context hierarchy
2017-09-13 23:26:44.793  INFO 6420 --- [Thread-24] o.s.c.support.DefaultLifecycleProcessor  : Stopping beans in phase 2147483647
2017-09-13 23:26:44.793  INFO 6420 --- [Thread-24] o.s.c.support.DefaultLifecycleProcessor  : Stopping beans in phase -2147482648
2017-09-13 23:26:44.794  INFO 6420 --- [Thread-24] o.s.j.e.a.AnnotationMBeanExporter        : Unregistering JMX-exposed beans on shutdown
2017-09-13 23:26:44.794  INFO 6420 --- [Thread-24] o.s.j.e.a.AnnotationMBeanExporter        : Unregistering JMX-exposed beans
2017-09-13 23:26:44.796  INFO 6420 --- [Thread-24] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2017-09-13 23:26:44.806  INFO 6420 --- [Thread-24] com.alibaba.druid.pool.DruidDataSource   : {dataSource-3} closed
2017-09-13 23:30:26.157  INFO 6420 --- [restartedMain] pers.platform.blog.Application           : Starting Application on PC-20160914JGKD with PID 6420 (E:\workspace\pers-cc-platform\pers-platform-blog-web\target\classes started by Administrator in E:\workspace\pers-cc-platform\pers-platform-blog-web)
2017-09-13 23:30:26.158 DEBUG 6420 --- [restartedMain] pers.platform.blog.Application           : Running with Spring Boot v1.5.2.RELEASE, Spring v4.3.7.RELEASE
2017-09-13 23:30:26.158  INFO 6420 --- [restartedMain] pers.platform.blog.Application           : The following profiles are active: test
2017-09-13 23:30:26.167  INFO 6420 --- [restartedMain] ationConfigEmbeddedWebApplicationContext : Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@7c79ca9f: startup date [Wed Sep 13 23:30:26 CST 2017]; root of context hierarchy
2017-09-13 23:30:27.995  INFO 6420 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2017-09-13 23:30:28.022  INFO 6420 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2017-09-13 23:30:28.046  INFO 6420 --- [restartedMain] o.s.b.f.s.DefaultListableBeanFactory     : Overriding bean definition for bean 'httpRequestHandlerAdapter' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.boot.autoconfigure.web.WebMvcAutoConfiguration$EnableWebMvcConfiguration; factoryMethodName=httpRequestHandlerAdapter; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/boot/autoconfigure/web/WebMvcAutoConfiguration$EnableWebMvcConfiguration.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.data.rest.webmvc.config.RepositoryRestMvcConfiguration; factoryMethodName=httpRequestHandlerAdapter; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/data/rest/webmvc/config/RepositoryRestMvcConfiguration.class]]
2017-09-13 23:30:28.111  INFO 6420 --- [restartedMain] o.s.b.f.s.DefaultListableBeanFactory     : Overriding bean definition for bean 'dataSource' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure; factoryMethodName=dataSource; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/alibaba/druid/spring/boot/autoconfigure/DruidDataSourceAutoConfigure.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=true; factoryBeanName=spring.datasource-pers.platform.blog.config.DruidDBConfig; factoryMethodName=dataSource; initMethodName=null; destroyMethodName=(inferred); defined in pers.platform.blog.config.DruidDBConfig]
2017-09-13 23:30:28.184  INFO 6420 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.amqp.rabbit.annotation.RabbitBootstrapConfiguration' of type [org.springframework.amqp.rabbit.annotation.RabbitBootstrapConfiguration$$EnhancerBySpringCGLIB$$4ddcc236] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017-09-13 23:30:28.200  INFO 6420 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$87710408] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017-09-13 23:30:28.233  INFO 6420 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'reidsConfig' of type [pers.platform.blog.config.ReidsConfig$$EnhancerBySpringCGLIB$$3ce39fb1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017-09-13 23:30:28.248  INFO 6420 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'keyGenerator' of type [pers.platform.blog.config.ReidsConfig$1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017-09-13 23:30:28.248  INFO 6420 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.cache.annotation.ProxyCachingConfiguration' of type [org.springframework.cache.annotation.ProxyCachingConfiguration$$EnhancerBySpringCGLIB$$d0833a26] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017-09-13 23:30:28.277  INFO 6420 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'shiroConfig' of type [pers.platform.blog.config.ShiroConfig$$EnhancerBySpringCGLIB$$917d3a7d] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017-09-13 23:30:28.380  INFO 6420 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'myShiroRealm' of type [pers.platform.blog.realm.MyRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017-09-13 23:30:28.396  INFO 6420 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017-09-13 23:30:28.482  INFO 6420 --- [restartedMain] pers.platform.blog.config.ShiroConfig    : 注入Shiro的Web过滤器-->shiroFilter
2017-09-13 23:30:28.745  INFO 6420 --- [restartedMain] s.b.c.e.t.TomcatEmbeddedServletContainer : Tomcat initialized with port(s): 8080 (http)
2017-09-13 23:30:28.746  INFO 6420 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service Tomcat
2017-09-13 23:30:28.746  INFO 6420 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet Engine: Apache Tomcat/8.5.11
2017-09-13 23:30:28.759  INFO 6420 --- [localhost-startStop-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2017-09-13 23:30:28.763  INFO 6420 --- [localhost-startStop-1] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 2596 ms
2017-09-13 23:30:29.194  INFO 6420 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'characterEncodingFilter' to: [/*]
2017-09-13 23:30:29.194  INFO 6420 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2017-09-13 23:30:29.194  INFO 6420 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'httpPutFormContentFilter' to: [/*]
2017-09-13 23:30:29.194  INFO 6420 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'requestContextFilter' to: [/*]
2017-09-13 23:30:29.194  INFO 6420 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'delegatingFilterProxy' to: [/*]
2017-09-13 23:30:29.194  INFO 6420 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'webStatFilter' to urls: [/*]
2017-09-13 23:30:29.194  INFO 6420 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Filter webStatFilter was not registered (possibly already registered?)
2017-09-13 23:30:29.194  INFO 6420 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'shiroFilter' to: [/*]
2017-09-13 23:30:29.194  INFO 6420 --- [localhost-startStop-1] o.s.b.w.servlet.ServletRegistrationBean  : Mapping servlet: 'statViewServlet' to [/druid/*]
2017-09-13 23:30:29.195  INFO 6420 --- [localhost-startStop-1] o.s.b.w.servlet.ServletRegistrationBean  : Mapping servlet: 'dispatcherServlet' to [/]
2017-09-13 23:30:29.195  INFO 6420 --- [localhost-startStop-1] o.s.b.w.servlet.ServletRegistrationBean  : Mapping servlet: 'statViewServlet' to [/druid/*]
2017-09-13 23:30:29.195  INFO 6420 --- [localhost-startStop-1] o.s.b.w.servlet.ServletRegistrationBean  : Servlet statViewServlet was not registered (possibly already registered?)
2017-09-13 23:30:29.619  INFO 6420 --- [localhost-startStop-1] com.alibaba.druid.pool.DruidDataSource   : {dataSource-5} inited
2017-09-13 23:30:29.619 DEBUG 6420 --- [localhost-startStop-1] p.p.blog.repository.BloggerRepo.find     : ==>  Preparing: select * from t_blogger where id=? 
2017-09-13 23:30:29.621 DEBUG 6420 --- [localhost-startStop-1] p.p.blog.repository.BloggerRepo.find     : ==> Parameters: 1(String)
2017-09-13 23:30:29.626 DEBUG 6420 --- [localhost-startStop-1] p.p.blog.repository.BloggerRepo.find     : <==      Total: 1
2017-09-13 23:30:30.084 DEBUG 6420 --- [localhost-startStop-1] p.p.blog.repository.LinkRepo.list        : ==>  Preparing: select * from t_link order by orderNo 
2017-09-13 23:30:30.087 DEBUG 6420 --- [localhost-startStop-1] p.p.blog.repository.LinkRepo.list        : ==> Parameters: 
2017-09-13 23:30:30.091 DEBUG 6420 --- [localhost-startStop-1] p.p.blog.repository.LinkRepo.list        : <==      Total: 2
2017-09-13 23:30:30.175 DEBUG 6420 --- [localhost-startStop-1] p.p.b.repository.BlogTypeRepo.countList  : ==>  Preparing: SELECT t2.id,t2.`typeName`,COUNT(t1.id) AS blogCount FROM t_blog t1 RIGHT JOIN t_blogType t2 ON t1.typeId=t2.id GROUP BY t2.id,t2.typeName ORDER BY t2.orderNo; 
2017-09-13 23:30:30.177 DEBUG 6420 --- [localhost-startStop-1] p.p.b.repository.BlogTypeRepo.countList  : ==> Parameters: 
2017-09-13 23:30:30.253 DEBUG 6420 --- [localhost-startStop-1] p.p.b.repository.BlogTypeRepo.countList  : <==      Total: 17
2017-09-13 23:30:30.286 DEBUG 6420 --- [localhost-startStop-1] p.p.blog.repository.BlogRepo.countList   : ==>  Preparing: SELECT DATE_FORMAT (releaseDate,'%Y年%m月') AS releaseDateStr,COUNT(*) AS blogCount FROM t_blog GROUP BY DATE_FORMAT (releaseDate,'%Y年%m月') ORDER BY DATE_FORMAT (releaseDate,'%Y年%m月') DESC 
2017-09-13 23:30:30.287 DEBUG 6420 --- [localhost-startStop-1] p.p.blog.repository.BlogRepo.countList   : ==> Parameters: 
2017-09-13 23:30:30.312 DEBUG 6420 --- [localhost-startStop-1] p.p.blog.repository.BlogRepo.countList   : <==      Total: 12
2017-09-13 23:30:30.555  INFO 6420 --- [restartedMain] j.LocalContainerEntityManagerFactoryBean : Building JPA container EntityManagerFactory for persistence unit 'default'
2017-09-13 23:30:30.556  INFO 6420 --- [restartedMain] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
2017-09-13 23:30:30.896  INFO 6420 --- [restartedMain] org.hibernate.dialect.Dialect            : HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
2017-09-13 23:30:30.914  INFO 6420 --- [restartedMain] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2017-09-13 23:30:32.156  INFO 6420 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerAdapter : Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@7c79ca9f: startup date [Wed Sep 13 23:30:26 CST 2017]; root of context hierarchy
2017-09-13 23:30:32.203  INFO 6420 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/],methods=[GET]}" onto public java.lang.String pers.platform.blog.Application.index()
2017-09-13 23:30:32.204  INFO 6420 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/blog/q]}" onto public org.springframework.web.servlet.ModelAndView pers.platform.blog.controller.BlogController.search(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2017-09-13 23:30:32.204  INFO 6420 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/blog/articles/{id}.html]}" onto private org.springframework.web.servlet.ModelAndView pers.platform.blog.controller.BlogController.details(java.lang.String,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2017-09-13 23:30:32.205  INFO 6420 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cc/login.html]}" onto public java.lang.String pers.platform.blog.controller.BloggerController.login(pers.platform.blog.model.Blogger,javax.servlet.http.HttpServletRequest)
2017-09-13 23:30:32.205  INFO 6420 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/blogger/aboutMe.html]}" onto public org.springframework.web.servlet.ModelAndView pers.platform.blog.controller.BloggerController.aboutMe() throws java.lang.Exception
2017-09-13 23:30:32.226  INFO 6420 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cc/blog/delete.html]}" onto public java.lang.String pers.platform.blog.controller.cc.BlogCcController.delete(java.lang.String,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2017-09-13 23:30:32.226  INFO 6420 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cc/blog/list.html]}" onto public java.lang.String pers.platform.blog.controller.cc.BlogCcController.list(java.lang.String,java.lang.String,pers.platform.blog.model.Blog,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2017-09-13 23:30:32.226  INFO 6420 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cc/blog/save.html]}" onto public java.lang.String pers.platform.blog.controller.cc.BlogCcController.save(pers.platform.blog.model.Blog,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2017-09-13 23:30:32.227  INFO 6420 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cc/blog/findById.html]}" onto public java.lang.String pers.platform.blog.controller.cc.BlogCcController.findById(java.lang.String,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2017-09-13 23:30:32.227  INFO 6420 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cc/blog/uploadPastImage]}" onto public java.lang.String pers.platform.blog.controller.cc.BlogCcController.uploadPastImage(javax.servlet.http.HttpServletRequest,java.lang.String) throws java.lang.Exception
2017-09-13 23:30:32.227  INFO 6420 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cc/blog/ckeditorUpload]}" onto public java.lang.String pers.platform.blog.controller.cc.BlogCcController.upLoadImage(javax.servlet.http.HttpServletRequest,org.springframework.web.multipart.MultipartFile,java.lang.String) throws java.lang.Exception
2017-09-13 23:30:32.227  INFO 6420 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cc/blog/modifyBlog.html]}" onto public org.springframework.web.servlet.ModelAndView pers.platform.blog.controller.cc.BlogCcController.modifyBlog(java.lang.String,javax.servlet.http.HttpServletResponse)
2017-09-13 23:30:32.228  INFO 6420 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cc/blogger/find.html]}" onto public java.lang.String pers.platform.blog.controller.cc.BloggerCcController.find(javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2017-09-13 23:30:32.228  INFO 6420 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cc/blogger/save.html]}" onto public java.lang.String pers.platform.blog.controller.cc.BloggerCcController.save(org.springframework.web.multipart.MultipartFile,pers.platform.blog.model.Blogger,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2017-09-13 23:30:32.228  INFO 6420 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cc/blogger/logout.html]}" onto public java.lang.String pers.platform.blog.controller.cc.BloggerCcController.logout() throws java.lang.Exception
2017-09-13 23:30:32.228  INFO 6420 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cc/blogger/modifyPassword.html]}" onto public java.lang.String pers.platform.blog.controller.cc.BloggerCcController.modifyPassword(java.lang.String,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2017-09-13 23:30:32.228  INFO 6420 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cc/blogType/delete.html]}" onto public java.lang.String pers.platform.blog.controller.cc.BlogTypeCcController.delete(java.lang.String,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2017-09-13 23:30:32.233  INFO 6420 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cc/blogType/list.html]}" onto public java.lang.String pers.platform.blog.controller.cc.BlogTypeCcController.list(java.lang.String,java.lang.String,pers.platform.blog.model.BlogType,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2017-09-13 23:30:32.233  INFO 6420 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cc/blogType/save.html]}" onto public java.lang.String pers.platform.blog.controller.cc.BlogTypeCcController.save(pers.platform.blog.model.BlogType,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2017-09-13 23:30:32.233  INFO 6420 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cc/blogType/findById.html]}" onto public java.lang.String pers.platform.blog.controller.cc.BlogTypeCcController.findById(java.lang.String,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2017-09-13 23:30:32.234  INFO 6420 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cc/comment/delete.html]}" onto public java.lang.String pers.platform.blog.controller.cc.CommentCcController.delete(java.lang.String,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2017-09-13 23:30:32.234  INFO 6420 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cc/comment/review.html]}" onto public java.lang.String pers.platform.blog.controller.cc.CommentCcController.delete(java.lang.String,java.lang.Integer,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2017-09-13 23:30:32.234  INFO 6420 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cc/comment/list.html]}" onto public java.lang.String pers.platform.blog.controller.cc.CommentCcController.list(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2017-09-13 23:30:32.234  INFO 6420 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cc/link/delete.html]}" onto public java.lang.String pers.platform.blog.controller.cc.LinkCcController.delete(java.lang.String,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2017-09-13 23:30:32.234  INFO 6420 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cc/link/list.html]}" onto public java.lang.String pers.platform.blog.controller.cc.LinkCcController.list(java.lang.String,java.lang.String,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2017-09-13 23:30:32.235  INFO 6420 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cc/link/save.html]}" onto public java.lang.String pers.platform.blog.controller.cc.LinkCcController.save(pers.platform.blog.model.Link,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2017-09-13 23:30:32.235  INFO 6420 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cc/system/refreshSystem.html]}" onto public java.lang.String pers.platform.blog.controller.cc.SystemCcController.refreshSystem(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2017-09-13 23:30:32.235  INFO 6420 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/comment/save.html]}" onto public java.lang.String pers.platform.blog.controller.CommentController.save(pers.platform.blog.model.Comment,java.lang.String,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpSession) throws java.lang.Exception
2017-09-13 23:30:32.235  INFO 6420 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/index]}" onto public org.springframework.web.servlet.ModelAndView pers.platform.blog.controller.IndexContrller.index(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2017-09-13 23:30:32.235  INFO 6420 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/download.html]}" onto public org.springframework.web.servlet.ModelAndView pers.platform.blog.controller.IndexContrller.download() throws java.lang.Exception
2017-09-13 23:30:32.237  INFO 6420 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2017-09-13 23:30:32.237  INFO 6420 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2017-09-13 23:30:32.276  INFO 6420 --- [restartedMain] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/cc/main.html] onto handler of type [class org.springframework.web.servlet.mvc.ParameterizableViewController]
2017-09-13 23:30:32.277  INFO 6420 --- [restartedMain] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/cc/blog.html] onto handler of type [class org.springframework.web.servlet.mvc.ParameterizableViewController]
2017-09-13 23:30:32.277  INFO 6420 --- [restartedMain] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/cc/commentReview.html] onto handler of type [class org.springframework.web.servlet.mvc.ParameterizableViewController]
2017-09-13 23:30:32.277  INFO 6420 --- [restartedMain] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/cc/blogManage.html] onto handler of type [class org.springframework.web.servlet.mvc.ParameterizableViewController]
2017-09-13 23:30:32.277  INFO 6420 --- [restartedMain] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/cc/blogTypeManage.html] onto handler of type [class org.springframework.web.servlet.mvc.ParameterizableViewController]
2017-09-13 23:30:32.277  INFO 6420 --- [restartedMain] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/cc/commentManage.html] onto handler of type [class org.springframework.web.servlet.mvc.ParameterizableViewController]
2017-09-13 23:30:32.277  INFO 6420 --- [restartedMain] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/cc/modifyInfo.html] onto handler of type [class org.springframework.web.servlet.mvc.ParameterizableViewController]
2017-09-13 23:30:32.278  INFO 6420 --- [restartedMain] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/cc/linkManage.html] onto handler of type [class org.springframework.web.servlet.mvc.ParameterizableViewController]
2017-09-13 23:30:32.316  INFO 6420 --- [restartedMain] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2017-09-13 23:30:32.316  INFO 6420 --- [restartedMain] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2017-09-13 23:30:32.344  INFO 6420 --- [restartedMain] .m.m.a.ExceptionHandlerExceptionResolver : Detected @ExceptionHandler methods in repositoryRestExceptionHandler
2017-09-13 23:30:32.419  INFO 6420 --- [restartedMain] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2017-09-13 23:30:33.158  INFO 6420 --- [restartedMain] o.s.d.r.w.RepositoryRestHandlerAdapter   : Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@7c79ca9f: startup date [Wed Sep 13 23:30:26 CST 2017]; root of context hierarchy
2017-09-13 23:30:33.194  INFO 6420 --- [restartedMain] o.s.d.r.w.RepositoryRestHandlerMapping   : Mapped "{[/{repository}/{id}/{property}],methods=[GET],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<org.springframework.hateoas.ResourceSupport> org.springframework.data.rest.webmvc.RepositoryPropertyReferenceController.followPropertyReference(org.springframework.data.rest.webmvc.RootResourceInformation,java.io.Serializable,java.lang.String,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler) throws java.lang.Exception
2017-09-13 23:30:33.195  INFO 6420 --- [restartedMain] o.s.d.r.w.RepositoryRestHandlerMapping   : Mapped "{[/{repository}/{id}/{property}/{propertyId}],methods=[GET],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<org.springframework.hateoas.ResourceSupport> org.springframework.data.rest.webmvc.RepositoryPropertyReferenceController.followPropertyReference(org.springframework.data.rest.webmvc.RootResourceInformation,java.io.Serializable,java.lang.String,java.lang.String,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler) throws java.lang.Exception
2017-09-13 23:30:33.196  INFO 6420 --- [restartedMain] o.s.d.r.w.RepositoryRestHandlerMapping   : Mapped "{[/{repository}/{id}/{property}],methods=[DELETE],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<? extends org.springframework.hateoas.ResourceSupport> org.springframework.data.rest.webmvc.RepositoryPropertyReferenceController.deletePropertyReference(org.springframework.data.rest.webmvc.RootResourceInformation,java.io.Serializable,java.lang.String) throws java.lang.Exception
2017-09-13 23:30:33.196  INFO 6420 --- [restartedMain] o.s.d.r.w.RepositoryRestHandlerMapping   : Mapped "{[/{repository}/{id}/{property}],methods=[GET],produces=[application/x-spring-data-compact+json || text/uri-list]}" onto public org.springframework.http.ResponseEntity<org.springframework.hateoas.ResourceSupport> org.springframework.data.rest.webmvc.RepositoryPropertyReferenceController.followPropertyReferenceCompact(org.springframework.data.rest.webmvc.RootResourceInformation,java.io.Serializable,java.lang.String,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler) throws java.lang.Exception
2017-09-13 23:30:33.196  INFO 6420 --- [restartedMain] o.s.d.r.w.RepositoryRestHandlerMapping   : Mapped "{[/{repository}/{id}/{property}],methods=[PATCH || PUT || POST],consumes=[application/json || application/x-spring-data-compact+json || text/uri-list],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<? extends org.springframework.hateoas.ResourceSupport> org.springframework.data.rest.webmvc.RepositoryPropertyReferenceController.createPropertyReference(org.springframework.data.rest.webmvc.RootResourceInformation,org.springframework.http.HttpMethod,org.springframework.hateoas.Resources<java.lang.Object>,java.io.Serializable,java.lang.String) throws java.lang.Exception
2017-09-13 23:30:33.197  INFO 6420 --- [restartedMain] o.s.d.r.w.RepositoryRestHandlerMapping   : Mapped "{[/{repository}/{id}/{property}/{propertyId}],methods=[DELETE],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<org.springframework.hateoas.ResourceSupport> org.springframework.data.rest.webmvc.RepositoryPropertyReferenceController.deletePropertyReferenceId(org.springframework.data.rest.webmvc.RootResourceInformation,java.io.Serializable,java.lang.String,java.lang.String) throws java.lang.Exception
2017-09-13 23:30:33.198  INFO 6420 --- [restartedMain] o.s.d.r.w.RepositoryRestHandlerMapping   : Mapped "{[/{repository}/search],methods=[OPTIONS],produces=[application/hal+json || application/json]}" onto public org.springframework.http.HttpEntity<?> org.springframework.data.rest.webmvc.RepositorySearchController.optionsForSearches(org.springframework.data.rest.webmvc.RootResourceInformation)
2017-09-13 23:30:33.199  INFO 6420 --- [restartedMain] o.s.d.r.w.RepositoryRestHandlerMapping   : Mapped "{[/{repository}/search/{search}],methods=[GET],produces=[application/x-spring-data-compact+json]}" onto public org.springframework.hateoas.ResourceSupport org.springframework.data.rest.webmvc.RepositorySearchController.executeSearchCompact(org.springframework.data.rest.webmvc.RootResourceInformation,org.springframework.http.HttpHeaders,org.springframework.util.MultiValueMap<java.lang.String, java.lang.Object>,java.lang.String,java.lang.String,org.springframework.data.rest.webmvc.support.DefaultedPageable,org.springframework.data.domain.Sort,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler)
2017-09-13 23:30:33.200  INFO 6420 --- [restartedMain] o.s.d.r.w.RepositoryRestHandlerMapping   : Mapped "{[/{repository}/search],methods=[HEAD],produces=[application/hal+json || application/json]}" onto public org.springframework.http.HttpEntity<?> org.springframework.data.rest.webmvc.RepositorySearchController.headForSearches(org.springframework.data.rest.webmvc.RootResourceInformation)
2017-09-13 23:30:33.201  INFO 6420 --- [restartedMain] o.s.d.r.w.RepositoryRestHandlerMapping   : Mapped "{[/{repository}/search/{search}],methods=[GET],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.data.rest.webmvc.RepositorySearchController.executeSearch(org.springframework.data.rest.webmvc.RootResourceInformation,org.springframework.util.MultiValueMap<java.lang.String, java.lang.Object>,java.lang.String,org.springframework.data.rest.webmvc.support.DefaultedPageable,org.springframework.data.domain.Sort,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler,org.springframework.http.HttpHeaders)
2017-09-13 23:30:33.201  INFO 6420 --- [restartedMain] o.s.d.r.w.RepositoryRestHandlerMapping   : Mapped "{[/{repository}/search],methods=[GET],produces=[application/hal+json || application/json]}" onto public org.springframework.data.rest.webmvc.RepositorySearchesResource org.springframework.data.rest.webmvc.RepositorySearchController.listSearches(org.springframework.data.rest.webmvc.RootResourceInformation)
2017-09-13 23:30:33.202  INFO 6420 --- [restartedMain] o.s.d.r.w.RepositoryRestHandlerMapping   : Mapped "{[/{repository}/search/{search}],methods=[OPTIONS],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<java.lang.Object> org.springframework.data.rest.webmvc.RepositorySearchController.optionsForSearch(org.springframework.data.rest.webmvc.RootResourceInformation,java.lang.String)
2017-09-13 23:30:33.202  INFO 6420 --- [restartedMain] o.s.d.r.w.RepositoryRestHandlerMapping   : Mapped "{[/{repository}/search/{search}],methods=[HEAD],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<java.lang.Object> org.springframework.data.rest.webmvc.RepositorySearchController.headForSearch(org.springframework.data.rest.webmvc.RootResourceInformation,java.lang.String)
2017-09-13 23:30:33.203  INFO 6420 --- [restartedMain] o.s.d.r.w.RepositoryRestHandlerMapping   : Mapped "{[/ || ],methods=[OPTIONS],produces=[application/hal+json || application/json]}" onto public org.springframework.http.HttpEntity<?> org.springframework.data.rest.webmvc.RepositoryController.optionsForRepositories()
2017-09-13 23:30:33.204  INFO 6420 --- [restartedMain] o.s.d.r.w.RepositoryRestHandlerMapping   : Mapped "{[/ || ],methods=[HEAD],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.data.rest.webmvc.RepositoryController.headForRepositories()
2017-09-13 23:30:33.204  INFO 6420 --- [restartedMain] o.s.d.r.w.RepositoryRestHandlerMapping   : Mapped "{[/ || ],methods=[GET],produces=[application/hal+json || application/json]}" onto public org.springframework.http.HttpEntity<org.springframework.data.rest.webmvc.RepositoryLinksResource> org.springframework.data.rest.webmvc.RepositoryController.listRepositories()
2017-09-13 23:30:33.205  INFO 6420 --- [restartedMain] o.s.d.r.w.RepositoryRestHandlerMapping   : Mapped "{[/{repository}],methods=[OPTIONS],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.data.rest.webmvc.RepositoryEntityController.optionsForCollectionResource(org.springframework.data.rest.webmvc.RootResourceInformation)
2017-09-13 23:30:33.206  INFO 6420 --- [restartedMain] o.s.d.r.w.RepositoryRestHandlerMapping   : Mapped "{[/{repository}],methods=[HEAD],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.data.rest.webmvc.RepositoryEntityController.headCollectionResource(org.springframework.data.rest.webmvc.RootResourceInformation,org.springframework.data.rest.webmvc.support.DefaultedPageable) throws org.springframework.web.HttpRequestMethodNotSupportedException
2017-09-13 23:30:33.206  INFO 6420 --- [restartedMain] o.s.d.r.w.RepositoryRestHandlerMapping   : Mapped "{[/{repository}],methods=[GET],produces=[application/hal+json || application/json]}" onto public org.springframework.hateoas.Resources<?> org.springframework.data.rest.webmvc.RepositoryEntityController.getCollectionResource(org.springframework.data.rest.webmvc.RootResourceInformation,org.springframework.data.rest.webmvc.support.DefaultedPageable,org.springframework.data.domain.Sort,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler) throws org.springframework.data.rest.webmvc.ResourceNotFoundException,org.springframework.web.HttpRequestMethodNotSupportedException
2017-09-13 23:30:33.206  INFO 6420 --- [restartedMain] o.s.d.r.w.RepositoryRestHandlerMapping   : Mapped "{[/{repository}],methods=[GET],produces=[application/x-spring-data-compact+json || text/uri-list]}" onto public org.springframework.hateoas.Resources<?> org.springframework.data.rest.webmvc.RepositoryEntityController.getCollectionResourceCompact(org.springframework.data.rest.webmvc.RootResourceInformation,org.springframework.data.rest.webmvc.support.DefaultedPageable,org.springframework.data.domain.Sort,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler) throws org.springframework.data.rest.webmvc.ResourceNotFoundException,org.springframework.web.HttpRequestMethodNotSupportedException
2017-09-13 23:30:33.207  INFO 6420 --- [restartedMain] o.s.d.r.w.RepositoryRestHandlerMapping   : Mapped "{[/{repository}],methods=[POST],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<org.springframework.hateoas.ResourceSupport> org.springframework.data.rest.webmvc.RepositoryEntityController.postCollectionResource(org.springframework.data.rest.webmvc.RootResourceInformation,org.springframework.data.rest.webmvc.PersistentEntityResource,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler,java.lang.String) throws org.springframework.web.HttpRequestMethodNotSupportedException
2017-09-13 23:30:33.207  INFO 6420 --- [restartedMain] o.s.d.r.w.RepositoryRestHandlerMapping   : Mapped "{[/{repository}/{id}],methods=[OPTIONS],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.data.rest.webmvc.RepositoryEntityController.optionsForItemResource(org.springframework.data.rest.webmvc.RootResourceInformation)
2017-09-13 23:30:33.207  INFO 6420 --- [restartedMain] o.s.d.r.w.RepositoryRestHandlerMapping   : Mapped "{[/{repository}/{id}],methods=[HEAD],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.data.rest.webmvc.RepositoryEntityController.headForItemResource(org.springframework.data.rest.webmvc.RootResourceInformation,java.io.Serializable,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler) throws org.springframework.web.HttpRequestMethodNotSupportedException
2017-09-13 23:30:33.208  INFO 6420 --- [restartedMain] o.s.d.r.w.RepositoryRestHandlerMapping   : Mapped "{[/{repository}/{id}],methods=[PATCH],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<org.springframework.hateoas.ResourceSupport> org.springframework.data.rest.webmvc.RepositoryEntityController.patchItemResource(org.springframework.data.rest.webmvc.RootResourceInformation,org.springframework.data.rest.webmvc.PersistentEntityResource,java.io.Serializable,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler,org.springframework.data.rest.webmvc.support.ETag,java.lang.String) throws org.springframework.web.HttpRequestMethodNotSupportedException,org.springframework.data.rest.webmvc.ResourceNotFoundException
2017-09-13 23:30:33.208  INFO 6420 --- [restartedMain] o.s.d.r.w.RepositoryRestHandlerMapping   : Mapped "{[/{repository}/{id}],methods=[DELETE],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.data.rest.webmvc.RepositoryEntityController.deleteItemResource(org.springframework.data.rest.webmvc.RootResourceInformation,java.io.Serializable,org.springframework.data.rest.webmvc.support.ETag) throws org.springframework.data.rest.webmvc.ResourceNotFoundException,org.springframework.web.HttpRequestMethodNotSupportedException
2017-09-13 23:30:33.210  INFO 6420 --- [restartedMain] o.s.d.r.w.RepositoryRestHandlerMapping   : Mapped "{[/{repository}/{id}],methods=[PUT],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<? extends org.springframework.hateoas.ResourceSupport> org.springframework.data.rest.webmvc.RepositoryEntityController.putItemResource(org.springframework.data.rest.webmvc.RootResourceInformation,org.springframework.data.rest.webmvc.PersistentEntityResource,java.io.Serializable,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler,org.springframework.data.rest.webmvc.support.ETag,java.lang.String) throws org.springframework.web.HttpRequestMethodNotSupportedException
2017-09-13 23:30:33.211  INFO 6420 --- [restartedMain] o.s.d.r.w.RepositoryRestHandlerMapping   : Mapped "{[/{repository}/{id}],methods=[GET],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<org.springframework.hateoas.Resource<?>> org.springframework.data.rest.webmvc.RepositoryEntityController.getItemResource(org.springframework.data.rest.webmvc.RootResourceInformation,java.io.Serializable,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler,org.springframework.http.HttpHeaders) throws org.springframework.web.HttpRequestMethodNotSupportedException
2017-09-13 23:30:33.215  INFO 6420 --- [restartedMain] o.s.d.r.w.BasePathAwareHandlerMapping    : Mapped "{[/profile],methods=[GET]}" onto org.springframework.http.HttpEntity<org.springframework.hateoas.ResourceSupport> org.springframework.data.rest.webmvc.ProfileController.listAllFormsOfMetadata()
2017-09-13 23:30:33.215  INFO 6420 --- [restartedMain] o.s.d.r.w.BasePathAwareHandlerMapping    : Mapped "{[/profile],methods=[OPTIONS]}" onto public org.springframework.http.HttpEntity<?> org.springframework.data.rest.webmvc.ProfileController.profileOptions()
2017-09-13 23:30:33.215  INFO 6420 --- [restartedMain] o.s.d.r.w.BasePathAwareHandlerMapping    : Mapped "{[/profile/{repository}],methods=[GET],produces=[application/schema+json]}" onto public org.springframework.http.HttpEntity<org.springframework.data.rest.webmvc.json.JsonSchema> org.springframework.data.rest.webmvc.RepositorySchemaController.schema(org.springframework.data.rest.webmvc.RootResourceInformation)
2017-09-13 23:30:33.216  INFO 6420 --- [restartedMain] o.s.d.r.w.BasePathAwareHandlerMapping    : Mapped "{[/profile/{repository}],methods=[GET],produces=[application/alps+json || */*]}" onto org.springframework.http.HttpEntity<org.springframework.data.rest.webmvc.RootResourceInformation> org.springframework.data.rest.webmvc.alps.AlpsController.descriptor(org.springframework.data.rest.webmvc.RootResourceInformation)
2017-09-13 23:30:33.216  INFO 6420 --- [restartedMain] o.s.d.r.w.BasePathAwareHandlerMapping    : Mapped "{[/profile/{repository}],methods=[OPTIONS],produces=[application/alps+json]}" onto org.springframework.http.HttpEntity<?> org.springframework.data.rest.webmvc.alps.AlpsController.alpsOptions()
2017-09-13 23:30:34.180  INFO 6420 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2017-09-13 23:30:34.832  INFO 6420 --- [restartedMain] o.s.j.e.a.AnnotationMBeanExporter        : Registering beans for JMX exposure on startup
2017-09-13 23:30:34.833  INFO 6420 --- [restartedMain] o.s.j.e.a.AnnotationMBeanExporter        : Bean with name 'statFilter' has been autodetected for JMX exposure
2017-09-13 23:30:34.833  INFO 6420 --- [restartedMain] o.s.j.e.a.AnnotationMBeanExporter        : Bean with name 'dataSource' has been autodetected for JMX exposure
2017-09-13 23:30:34.836  INFO 6420 --- [restartedMain] o.s.j.e.a.AnnotationMBeanExporter        : Bean with name 'rabbitConnectionFactory' has been autodetected for JMX exposure
2017-09-13 23:30:34.838  INFO 6420 --- [restartedMain] o.s.j.e.a.AnnotationMBeanExporter        : Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2017-09-13 23:30:34.840  INFO 6420 --- [restartedMain] o.s.j.e.a.AnnotationMBeanExporter        : Located managed bean 'rabbitConnectionFactory': registering with JMX server as MBean [org.springframework.amqp.rabbit.connection:name=rabbitConnectionFactory,type=CachingConnectionFactory]
2017-09-13 23:30:34.850  INFO 6420 --- [restartedMain] o.s.j.e.a.AnnotationMBeanExporter        : Located MBean 'statFilter': registering with JMX server as MBean [com.alibaba.druid.filter.stat:name=statFilter,type=StatFilter]
2017-09-13 23:30:34.852  INFO 6420 --- [restartedMain] o.s.c.support.DefaultLifecycleProcessor  : Starting beans in phase -2147482648
2017-09-13 23:30:34.852  INFO 6420 --- [restartedMain] o.s.c.support.DefaultLifecycleProcessor  : Starting beans in phase 2147483647
2017-09-13 23:30:34.975  INFO 6420 --- [restartedMain] s.b.c.e.t.TomcatEmbeddedServletContainer : Tomcat started on port(s): 8080 (http)
2017-09-13 23:30:34.981  INFO 6420 --- [restartedMain] pers.platform.blog.Application           : Started Application in 8.959 seconds (JVM running for 540.28)
2017-09-13 23:30:35.118  INFO 6420 --- [http-nio-8080-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring FrameworkServlet 'dispatcherServlet'
2017-09-13 23:30:35.118  INFO 6420 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : FrameworkServlet 'dispatcherServlet': initialization started
2017-09-13 23:30:35.124  INFO 6420 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : FrameworkServlet 'dispatcherServlet': initialization completed in 6 ms
2017-09-13 23:30:35.141 DEBUG 6420 --- [http-nio-8080-exec-1] p.p.blog.repository.BlogRepo.list        : ==>  Preparing: select * from t_blog order by releaseDate desc limit ?,? 
2017-09-13 23:30:35.148 DEBUG 6420 --- [http-nio-8080-exec-1] p.p.blog.repository.BlogRepo.list        : ==> Parameters: 0(Integer), 10(Integer)
2017-09-13 23:30:35.154 DEBUG 6420 --- [http-nio-8080-exec-1] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-13 23:30:35.155 DEBUG 6420 --- [http-nio-8080-exec-1] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 11(String)
2017-09-13 23:30:35.157 DEBUG 6420 --- [http-nio-8080-exec-1] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-13 23:30:35.158 DEBUG 6420 --- [http-nio-8080-exec-1] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-13 23:30:35.158 DEBUG 6420 --- [http-nio-8080-exec-1] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 1(String)
2017-09-13 23:30:35.159 DEBUG 6420 --- [http-nio-8080-exec-1] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-13 23:30:35.165 DEBUG 6420 --- [http-nio-8080-exec-1] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-13 23:30:35.166 DEBUG 6420 --- [http-nio-8080-exec-1] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 12(String)
2017-09-13 23:30:35.167 DEBUG 6420 --- [http-nio-8080-exec-1] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-13 23:30:35.168 DEBUG 6420 --- [http-nio-8080-exec-1] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-13 23:30:35.169 DEBUG 6420 --- [http-nio-8080-exec-1] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 32(String)
2017-09-13 23:30:35.170 DEBUG 6420 --- [http-nio-8080-exec-1] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-13 23:30:35.171 DEBUG 6420 --- [http-nio-8080-exec-1] p.p.blog.repository.BlogRepo.list        : <==      Total: 10
2017-09-13 23:30:35.247 DEBUG 6420 --- [http-nio-8080-exec-1] p.p.blog.repository.BlogRepo.getTotal    : ==>  Preparing: select count(*) from t_blog 
2017-09-13 23:30:35.248 DEBUG 6420 --- [http-nio-8080-exec-1] p.p.blog.repository.BlogRepo.getTotal    : ==> Parameters: 
2017-09-13 23:30:35.413 DEBUG 6420 --- [http-nio-8080-exec-1] p.p.blog.repository.BlogRepo.getTotal    : <==      Total: 1
2017-09-13 23:30:54.575  INFO 6420 --- [Thread-42] ationConfigEmbeddedWebApplicationContext : Closing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@7c79ca9f: startup date [Wed Sep 13 23:30:26 CST 2017]; root of context hierarchy
2017-09-13 23:30:54.579  INFO 6420 --- [Thread-42] o.s.c.support.DefaultLifecycleProcessor  : Stopping beans in phase 2147483647
2017-09-13 23:30:54.580  INFO 6420 --- [Thread-42] o.s.c.support.DefaultLifecycleProcessor  : Stopping beans in phase -2147482648
2017-09-13 23:30:54.581  INFO 6420 --- [Thread-42] o.s.j.e.a.AnnotationMBeanExporter        : Unregistering JMX-exposed beans on shutdown
2017-09-13 23:30:54.581  INFO 6420 --- [Thread-42] o.s.j.e.a.AnnotationMBeanExporter        : Unregistering JMX-exposed beans
2017-09-13 23:30:54.583  INFO 6420 --- [Thread-42] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2017-09-13 23:30:54.593  INFO 6420 --- [Thread-42] com.alibaba.druid.pool.DruidDataSource   : {dataSource-5} closed
2017-09-13 23:30:56.044  INFO 6420 --- [restartedMain] pers.platform.blog.Application           : Starting Application on PC-20160914JGKD with PID 6420 (E:\workspace\pers-cc-platform\pers-platform-blog-web\target\classes started by Administrator in E:\workspace\pers-cc-platform\pers-platform-blog-web)
2017-09-13 23:30:56.044 DEBUG 6420 --- [restartedMain] pers.platform.blog.Application           : Running with Spring Boot v1.5.2.RELEASE, Spring v4.3.7.RELEASE
2017-09-13 23:30:56.044  INFO 6420 --- [restartedMain] pers.platform.blog.Application           : The following profiles are active: test
2017-09-13 23:30:56.054  INFO 6420 --- [restartedMain] ationConfigEmbeddedWebApplicationContext : Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@60e2a503: startup date [Wed Sep 13 23:30:56 CST 2017]; root of context hierarchy
2017-09-13 23:30:57.835  INFO 6420 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2017-09-13 23:30:57.862  INFO 6420 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2017-09-13 23:30:57.904  INFO 6420 --- [restartedMain] o.s.b.f.s.DefaultListableBeanFactory     : Overriding bean definition for bean 'httpRequestHandlerAdapter' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.boot.autoconfigure.web.WebMvcAutoConfiguration$EnableWebMvcConfiguration; factoryMethodName=httpRequestHandlerAdapter; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/boot/autoconfigure/web/WebMvcAutoConfiguration$EnableWebMvcConfiguration.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.data.rest.webmvc.config.RepositoryRestMvcConfiguration; factoryMethodName=httpRequestHandlerAdapter; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/data/rest/webmvc/config/RepositoryRestMvcConfiguration.class]]
2017-09-13 23:30:58.021  INFO 6420 --- [restartedMain] o.s.b.f.s.DefaultListableBeanFactory     : Overriding bean definition for bean 'dataSource' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure; factoryMethodName=dataSource; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/alibaba/druid/spring/boot/autoconfigure/DruidDataSourceAutoConfigure.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=true; factoryBeanName=spring.datasource-pers.platform.blog.config.DruidDBConfig; factoryMethodName=dataSource; initMethodName=null; destroyMethodName=(inferred); defined in pers.platform.blog.config.DruidDBConfig]
2017-09-13 23:30:58.204  INFO 6420 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.amqp.rabbit.annotation.RabbitBootstrapConfiguration' of type [org.springframework.amqp.rabbit.annotation.RabbitBootstrapConfiguration$$EnhancerBySpringCGLIB$$4ddcc236] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017-09-13 23:30:58.219  INFO 6420 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$87710408] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017-09-13 23:30:58.250  INFO 6420 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'reidsConfig' of type [pers.platform.blog.config.ReidsConfig$$EnhancerBySpringCGLIB$$3ce39fb1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017-09-13 23:30:58.271  INFO 6420 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'keyGenerator' of type [pers.platform.blog.config.ReidsConfig$1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017-09-13 23:30:58.272  INFO 6420 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.cache.annotation.ProxyCachingConfiguration' of type [org.springframework.cache.annotation.ProxyCachingConfiguration$$EnhancerBySpringCGLIB$$d0833a26] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017-09-13 23:30:58.302  INFO 6420 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'shiroConfig' of type [pers.platform.blog.config.ShiroConfig$$EnhancerBySpringCGLIB$$917d3a7d] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017-09-13 23:30:58.396  INFO 6420 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'myShiroRealm' of type [pers.platform.blog.realm.MyRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017-09-13 23:30:58.412  INFO 6420 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017-09-13 23:30:58.450  INFO 6420 --- [restartedMain] pers.platform.blog.config.ShiroConfig    : 注入Shiro的Web过滤器-->shiroFilter
2017-09-13 23:30:58.675  INFO 6420 --- [restartedMain] s.b.c.e.t.TomcatEmbeddedServletContainer : Tomcat initialized with port(s): 8080 (http)
2017-09-13 23:30:58.675  INFO 6420 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service Tomcat
2017-09-13 23:30:58.676  INFO 6420 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet Engine: Apache Tomcat/8.5.11
2017-09-13 23:30:58.764  INFO 6420 --- [localhost-startStop-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2017-09-13 23:30:58.765  INFO 6420 --- [localhost-startStop-1] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 2711 ms
2017-09-13 23:30:59.042  INFO 6420 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'characterEncodingFilter' to: [/*]
2017-09-13 23:30:59.043  INFO 6420 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2017-09-13 23:30:59.043  INFO 6420 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'httpPutFormContentFilter' to: [/*]
2017-09-13 23:30:59.043  INFO 6420 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'requestContextFilter' to: [/*]
2017-09-13 23:30:59.043  INFO 6420 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'delegatingFilterProxy' to: [/*]
2017-09-13 23:30:59.043  INFO 6420 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'webStatFilter' to urls: [/*]
2017-09-13 23:30:59.043  INFO 6420 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Filter webStatFilter was not registered (possibly already registered?)
2017-09-13 23:30:59.043  INFO 6420 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'shiroFilter' to: [/*]
2017-09-13 23:30:59.043  INFO 6420 --- [localhost-startStop-1] o.s.b.w.servlet.ServletRegistrationBean  : Mapping servlet: 'statViewServlet' to [/druid/*]
2017-09-13 23:30:59.044  INFO 6420 --- [localhost-startStop-1] o.s.b.w.servlet.ServletRegistrationBean  : Mapping servlet: 'dispatcherServlet' to [/]
2017-09-13 23:30:59.044  INFO 6420 --- [localhost-startStop-1] o.s.b.w.servlet.ServletRegistrationBean  : Mapping servlet: 'statViewServlet' to [/druid/*]
2017-09-13 23:30:59.044  INFO 6420 --- [localhost-startStop-1] o.s.b.w.servlet.ServletRegistrationBean  : Servlet statViewServlet was not registered (possibly already registered?)
2017-09-13 23:30:59.588  INFO 6420 --- [localhost-startStop-1] com.alibaba.druid.pool.DruidDataSource   : {dataSource-6} inited
2017-09-13 23:30:59.623 DEBUG 6420 --- [localhost-startStop-1] p.p.blog.repository.BloggerRepo.find     : ==>  Preparing: select * from t_blogger where id=? 
2017-09-13 23:30:59.625 DEBUG 6420 --- [localhost-startStop-1] p.p.blog.repository.BloggerRepo.find     : ==> Parameters: 1(String)
2017-09-13 23:30:59.627 DEBUG 6420 --- [localhost-startStop-1] p.p.blog.repository.BloggerRepo.find     : <==      Total: 1
2017-09-13 23:30:59.738 DEBUG 6420 --- [localhost-startStop-1] p.p.blog.repository.LinkRepo.list        : ==>  Preparing: select * from t_link order by orderNo 
2017-09-13 23:30:59.739 DEBUG 6420 --- [localhost-startStop-1] p.p.blog.repository.LinkRepo.list        : ==> Parameters: 
2017-09-13 23:30:59.740 DEBUG 6420 --- [localhost-startStop-1] p.p.blog.repository.LinkRepo.list        : <==      Total: 2
2017-09-13 23:30:59.796 DEBUG 6420 --- [localhost-startStop-1] p.p.b.repository.BlogTypeRepo.countList  : ==>  Preparing: SELECT t2.id,t2.`typeName`,COUNT(t1.id) AS blogCount FROM t_blog t1 RIGHT JOIN t_blogType t2 ON t1.typeId=t2.id GROUP BY t2.id,t2.typeName ORDER BY t2.orderNo; 
2017-09-13 23:30:59.798 DEBUG 6420 --- [localhost-startStop-1] p.p.b.repository.BlogTypeRepo.countList  : ==> Parameters: 
2017-09-13 23:30:59.808 DEBUG 6420 --- [localhost-startStop-1] p.p.b.repository.BlogTypeRepo.countList  : <==      Total: 17
2017-09-13 23:30:59.888 DEBUG 6420 --- [localhost-startStop-1] p.p.blog.repository.BlogRepo.countList   : ==>  Preparing: SELECT DATE_FORMAT (releaseDate,'%Y年%m月') AS releaseDateStr,COUNT(*) AS blogCount FROM t_blog GROUP BY DATE_FORMAT (releaseDate,'%Y年%m月') ORDER BY DATE_FORMAT (releaseDate,'%Y年%m月') DESC 
2017-09-13 23:30:59.890 DEBUG 6420 --- [localhost-startStop-1] p.p.blog.repository.BlogRepo.countList   : ==> Parameters: 
2017-09-13 23:30:59.898 DEBUG 6420 --- [localhost-startStop-1] p.p.blog.repository.BlogRepo.countList   : <==      Total: 12
2017-09-13 23:31:00.141  INFO 6420 --- [restartedMain] j.LocalContainerEntityManagerFactoryBean : Building JPA container EntityManagerFactory for persistence unit 'default'
2017-09-13 23:31:00.141  INFO 6420 --- [restartedMain] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
2017-09-13 23:31:00.401  INFO 6420 --- [restartedMain] org.hibernate.dialect.Dialect            : HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
2017-09-13 23:31:00.442  INFO 6420 --- [restartedMain] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2017-09-14 21:22:43.682  INFO 8388 --- [restartedMain] pers.platform.blog.Application           : Starting Application on PC-20160914JGKD with PID 8388 (E:\workspace\pers-cc-platform\pers-platform-blog-web\target\classes started by Administrator in E:\workspace\pers-cc-platform\pers-platform-blog-web)
2017-09-14 21:22:43.698 DEBUG 8388 --- [restartedMain] pers.platform.blog.Application           : Running with Spring Boot v1.5.2.RELEASE, Spring v4.3.7.RELEASE
2017-09-14 21:22:43.698  INFO 8388 --- [restartedMain] pers.platform.blog.Application           : The following profiles are active: test
2017-09-14 21:22:44.666  INFO 8388 --- [restartedMain] ationConfigEmbeddedWebApplicationContext : Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@79e5987d: startup date [Thu Sep 14 21:22:44 CST 2017]; root of context hierarchy
2017-09-14 21:22:49.097  INFO 8388 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2017-09-14 21:22:49.238  INFO 8388 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2017-09-14 21:22:49.332  INFO 8388 --- [restartedMain] o.s.b.f.s.DefaultListableBeanFactory     : Overriding bean definition for bean 'httpRequestHandlerAdapter' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.boot.autoconfigure.web.WebMvcAutoConfiguration$EnableWebMvcConfiguration; factoryMethodName=httpRequestHandlerAdapter; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/boot/autoconfigure/web/WebMvcAutoConfiguration$EnableWebMvcConfiguration.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.data.rest.webmvc.config.RepositoryRestMvcConfiguration; factoryMethodName=httpRequestHandlerAdapter; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/data/rest/webmvc/config/RepositoryRestMvcConfiguration.class]]
2017-09-14 21:22:49.768  INFO 8388 --- [restartedMain] o.s.b.f.s.DefaultListableBeanFactory     : Overriding bean definition for bean 'dataSource' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure; factoryMethodName=dataSource; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/alibaba/druid/spring/boot/autoconfigure/DruidDataSourceAutoConfigure.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=true; factoryBeanName=spring.datasource-pers.platform.blog.config.DruidDBConfig; factoryMethodName=dataSource; initMethodName=null; destroyMethodName=(inferred); defined in pers.platform.blog.config.DruidDBConfig]
2017-09-14 21:22:50.611  INFO 8388 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.amqp.rabbit.annotation.RabbitBootstrapConfiguration' of type [org.springframework.amqp.rabbit.annotation.RabbitBootstrapConfiguration$$EnhancerBySpringCGLIB$$dfe2eb2b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017-09-14 21:22:50.752  INFO 8388 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$19772cfd] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017-09-14 21:22:50.924  INFO 8388 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'reidsConfig' of type [pers.platform.blog.config.ReidsConfig$$EnhancerBySpringCGLIB$$cee9c8a6] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017-09-14 21:22:50.939  INFO 8388 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'keyGenerator' of type [pers.platform.blog.config.ReidsConfig$1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017-09-14 21:22:50.939  INFO 8388 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.cache.annotation.ProxyCachingConfiguration' of type [org.springframework.cache.annotation.ProxyCachingConfiguration$$EnhancerBySpringCGLIB$$6289631b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017-09-14 21:22:51.033  INFO 8388 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'shiroConfig' of type [pers.platform.blog.config.ShiroConfig$$EnhancerBySpringCGLIB$$23836372] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017-09-14 21:22:51.673  INFO 8388 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'myShiroRealm' of type [pers.platform.blog.realm.MyRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017-09-14 21:22:51.737  INFO 8388 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017-09-14 21:22:51.768  INFO 8388 --- [restartedMain] pers.platform.blog.config.ShiroConfig    : 注入Shiro的Web过滤器-->shiroFilter
2017-09-14 21:22:52.876  INFO 8388 --- [restartedMain] s.b.c.e.t.TomcatEmbeddedServletContainer : Tomcat initialized with port(s): 8080 (http)
2017-09-14 21:22:52.923  INFO 8388 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service Tomcat
2017-09-14 21:22:52.923  INFO 8388 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet Engine: Apache Tomcat/8.5.11
2017-09-14 21:22:53.204  INFO 8388 --- [localhost-startStop-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2017-09-14 21:22:53.204  INFO 8388 --- [localhost-startStop-1] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 8538 ms
2017-09-14 21:22:54.047  INFO 8388 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'characterEncodingFilter' to: [/*]
2017-09-14 21:22:54.047  INFO 8388 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2017-09-14 21:22:54.047  INFO 8388 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'httpPutFormContentFilter' to: [/*]
2017-09-14 21:22:54.047  INFO 8388 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'requestContextFilter' to: [/*]
2017-09-14 21:22:54.047  INFO 8388 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'delegatingFilterProxy' to: [/*]
2017-09-14 21:22:54.047  INFO 8388 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'webStatFilter' to urls: [/*]
2017-09-14 21:22:54.047  INFO 8388 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Filter webStatFilter was not registered (possibly already registered?)
2017-09-14 21:22:54.047  INFO 8388 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'shiroFilter' to: [/*]
2017-09-14 21:22:54.047  INFO 8388 --- [localhost-startStop-1] o.s.b.w.servlet.ServletRegistrationBean  : Mapping servlet: 'statViewServlet' to [/druid/*]
2017-09-14 21:22:54.047  INFO 8388 --- [localhost-startStop-1] o.s.b.w.servlet.ServletRegistrationBean  : Mapping servlet: 'dispatcherServlet' to [/]
2017-09-14 21:22:54.047  INFO 8388 --- [localhost-startStop-1] o.s.b.w.servlet.ServletRegistrationBean  : Mapping servlet: 'statViewServlet' to [/druid/*]
2017-09-14 21:22:54.047  INFO 8388 --- [localhost-startStop-1] o.s.b.w.servlet.ServletRegistrationBean  : Servlet statViewServlet was not registered (possibly already registered?)
2017-09-14 21:22:56.394  INFO 8388 --- [localhost-startStop-1] com.alibaba.druid.pool.DruidDataSource   : {dataSource-1} inited
2017-09-14 21:22:56.407 DEBUG 8388 --- [localhost-startStop-1] p.p.blog.repository.BloggerRepo.find     : ==>  Preparing: select * from t_blogger where id=? 
2017-09-14 21:22:56.762 DEBUG 8388 --- [localhost-startStop-1] p.p.blog.repository.BloggerRepo.find     : ==> Parameters: 1(String)
2017-09-14 21:22:56.812 DEBUG 8388 --- [localhost-startStop-1] p.p.blog.repository.BloggerRepo.find     : <==      Total: 1
2017-09-14 21:22:56.974 DEBUG 8388 --- [localhost-startStop-1] p.p.blog.repository.LinkRepo.list        : ==>  Preparing: select * from t_link order by orderNo 
2017-09-14 21:22:56.980 DEBUG 8388 --- [localhost-startStop-1] p.p.blog.repository.LinkRepo.list        : ==> Parameters: 
2017-09-14 21:22:56.989 DEBUG 8388 --- [localhost-startStop-1] p.p.blog.repository.LinkRepo.list        : <==      Total: 2
2017-09-14 21:22:57.027 DEBUG 8388 --- [localhost-startStop-1] p.p.b.repository.BlogTypeRepo.countList  : ==>  Preparing: SELECT t2.id,t2.`typeName`,COUNT(t1.id) AS blogCount FROM t_blog t1 RIGHT JOIN t_blogType t2 ON t1.typeId=t2.id GROUP BY t2.id,t2.typeName ORDER BY t2.orderNo; 
2017-09-14 21:22:57.118 DEBUG 8388 --- [localhost-startStop-1] p.p.b.repository.BlogTypeRepo.countList  : ==> Parameters: 
2017-09-14 21:22:57.132 DEBUG 8388 --- [localhost-startStop-1] p.p.b.repository.BlogTypeRepo.countList  : <==      Total: 17
2017-09-14 21:22:57.171 DEBUG 8388 --- [localhost-startStop-1] p.p.blog.repository.BlogRepo.countList   : ==>  Preparing: SELECT DATE_FORMAT (releaseDate,'%Y年%m月') AS releaseDateStr,COUNT(*) AS blogCount FROM t_blog GROUP BY DATE_FORMAT (releaseDate,'%Y年%m月') ORDER BY DATE_FORMAT (releaseDate,'%Y年%m月') DESC 
2017-09-14 21:22:57.182 DEBUG 8388 --- [localhost-startStop-1] p.p.blog.repository.BlogRepo.countList   : ==> Parameters: 
2017-09-14 21:22:57.206 DEBUG 8388 --- [localhost-startStop-1] p.p.blog.repository.BlogRepo.countList   : <==      Total: 12
2017-09-14 21:22:57.773  INFO 8388 --- [restartedMain] j.LocalContainerEntityManagerFactoryBean : Building JPA container EntityManagerFactory for persistence unit 'default'
2017-09-14 21:22:57.827  INFO 8388 --- [restartedMain] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
2017-09-14 21:22:58.889  INFO 8388 --- [restartedMain] org.hibernate.Version                    : HHH000412: Hibernate Core {5.0.12.Final}
2017-09-14 21:22:58.889  INFO 8388 --- [restartedMain] org.hibernate.cfg.Environment            : HHH000206: hibernate.properties not found
2017-09-14 21:22:58.905  INFO 8388 --- [restartedMain] org.hibernate.cfg.Environment            : HHH000021: Bytecode provider name : javassist
2017-09-14 21:22:59.093  INFO 8388 --- [restartedMain] o.hibernate.annotations.common.Version   : HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
2017-09-14 21:23:00.170  INFO 8388 --- [restartedMain] org.hibernate.dialect.Dialect            : HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
2017-09-14 21:23:01.051  INFO 8388 --- [restartedMain] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2017-09-14 21:23:04.832  INFO 8388 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerAdapter : Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@79e5987d: startup date [Thu Sep 14 21:22:44 CST 2017]; root of context hierarchy
2017-09-14 21:23:05.173  INFO 8388 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/],methods=[GET]}" onto public java.lang.String pers.platform.blog.Application.index()
2017-09-14 21:23:05.173  INFO 8388 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/blog/q]}" onto public org.springframework.web.servlet.ModelAndView pers.platform.blog.controller.BlogController.search(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2017-09-14 21:23:05.173  INFO 8388 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/blog/articles/{id}.html]}" onto private org.springframework.web.servlet.ModelAndView pers.platform.blog.controller.BlogController.details(java.lang.String,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2017-09-14 21:23:05.173  INFO 8388 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cc/login.html]}" onto public java.lang.String pers.platform.blog.controller.BloggerController.login(pers.platform.blog.model.Blogger,javax.servlet.http.HttpServletRequest)
2017-09-14 21:23:05.173  INFO 8388 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/blogger/aboutMe.html]}" onto public org.springframework.web.servlet.ModelAndView pers.platform.blog.controller.BloggerController.aboutMe() throws java.lang.Exception
2017-09-14 21:23:05.173  INFO 8388 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cc/blog/delete.html]}" onto public java.lang.String pers.platform.blog.controller.cc.BlogCcController.delete(java.lang.String,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2017-09-14 21:23:05.173  INFO 8388 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cc/blog/list.html]}" onto public java.lang.String pers.platform.blog.controller.cc.BlogCcController.list(java.lang.String,java.lang.String,pers.platform.blog.model.Blog,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2017-09-14 21:23:05.173  INFO 8388 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cc/blog/save.html]}" onto public java.lang.String pers.platform.blog.controller.cc.BlogCcController.save(pers.platform.blog.model.Blog,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2017-09-14 21:23:05.173  INFO 8388 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cc/blog/findById.html]}" onto public java.lang.String pers.platform.blog.controller.cc.BlogCcController.findById(java.lang.String,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2017-09-14 21:23:05.173  INFO 8388 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cc/blog/uploadPastImage]}" onto public java.lang.String pers.platform.blog.controller.cc.BlogCcController.uploadPastImage(javax.servlet.http.HttpServletRequest,java.lang.String) throws java.lang.Exception
2017-09-14 21:23:05.173  INFO 8388 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cc/blog/ckeditorUpload]}" onto public java.lang.String pers.platform.blog.controller.cc.BlogCcController.upLoadImage(javax.servlet.http.HttpServletRequest,org.springframework.web.multipart.MultipartFile,java.lang.String) throws java.lang.Exception
2017-09-14 21:23:05.189  INFO 8388 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cc/blog/modifyBlog.html]}" onto public org.springframework.web.servlet.ModelAndView pers.platform.blog.controller.cc.BlogCcController.modifyBlog(java.lang.String,javax.servlet.http.HttpServletResponse)
2017-09-14 21:23:05.195  INFO 8388 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cc/blogger/find.html]}" onto public java.lang.String pers.platform.blog.controller.cc.BloggerCcController.find(javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2017-09-14 21:23:05.196  INFO 8388 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cc/blogger/save.html]}" onto public java.lang.String pers.platform.blog.controller.cc.BloggerCcController.save(org.springframework.web.multipart.MultipartFile,pers.platform.blog.model.Blogger,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2017-09-14 21:23:05.197  INFO 8388 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cc/blogger/logout.html]}" onto public java.lang.String pers.platform.blog.controller.cc.BloggerCcController.logout() throws java.lang.Exception
2017-09-14 21:23:05.197  INFO 8388 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cc/blogger/modifyPassword.html]}" onto public java.lang.String pers.platform.blog.controller.cc.BloggerCcController.modifyPassword(java.lang.String,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2017-09-14 21:23:05.202  INFO 8388 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cc/blogType/delete.html]}" onto public java.lang.String pers.platform.blog.controller.cc.BlogTypeCcController.delete(java.lang.String,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2017-09-14 21:23:05.205  INFO 8388 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cc/blogType/list.html]}" onto public java.lang.String pers.platform.blog.controller.cc.BlogTypeCcController.list(java.lang.String,java.lang.String,pers.platform.blog.model.BlogType,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2017-09-14 21:23:05.205  INFO 8388 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cc/blogType/save.html]}" onto public java.lang.String pers.platform.blog.controller.cc.BlogTypeCcController.save(pers.platform.blog.model.BlogType,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2017-09-14 21:23:05.205  INFO 8388 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cc/blogType/findById.html]}" onto public java.lang.String pers.platform.blog.controller.cc.BlogTypeCcController.findById(java.lang.String,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2017-09-14 21:23:05.205  INFO 8388 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cc/comment/delete.html]}" onto public java.lang.String pers.platform.blog.controller.cc.CommentCcController.delete(java.lang.String,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2017-09-14 21:23:05.205  INFO 8388 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cc/comment/review.html]}" onto public java.lang.String pers.platform.blog.controller.cc.CommentCcController.delete(java.lang.String,java.lang.Integer,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2017-09-14 21:23:05.205  INFO 8388 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cc/comment/list.html]}" onto public java.lang.String pers.platform.blog.controller.cc.CommentCcController.list(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2017-09-14 21:23:05.205  INFO 8388 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cc/link/delete.html]}" onto public java.lang.String pers.platform.blog.controller.cc.LinkCcController.delete(java.lang.String,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2017-09-14 21:23:05.205  INFO 8388 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cc/link/list.html]}" onto public java.lang.String pers.platform.blog.controller.cc.LinkCcController.list(java.lang.String,java.lang.String,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2017-09-14 21:23:05.205  INFO 8388 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cc/link/save.html]}" onto public java.lang.String pers.platform.blog.controller.cc.LinkCcController.save(pers.platform.blog.model.Link,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2017-09-14 21:23:05.205  INFO 8388 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cc/system/refreshSystem.html]}" onto public java.lang.String pers.platform.blog.controller.cc.SystemCcController.refreshSystem(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2017-09-14 21:23:05.205  INFO 8388 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/comment/save.html]}" onto public java.lang.String pers.platform.blog.controller.CommentController.save(pers.platform.blog.model.Comment,java.lang.String,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpSession) throws java.lang.Exception
2017-09-14 21:23:05.205  INFO 8388 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/index]}" onto public org.springframework.web.servlet.ModelAndView pers.platform.blog.controller.IndexContrller.index(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2017-09-14 21:23:05.205  INFO 8388 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/download.html]}" onto public org.springframework.web.servlet.ModelAndView pers.platform.blog.controller.IndexContrller.download() throws java.lang.Exception
2017-09-14 21:23:05.205  INFO 8388 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2017-09-14 21:23:05.205  INFO 8388 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2017-09-14 21:23:05.540  INFO 8388 --- [restartedMain] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/cc/main.html] onto handler of type [class org.springframework.web.servlet.mvc.ParameterizableViewController]
2017-09-14 21:23:05.540  INFO 8388 --- [restartedMain] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/cc/blog.html] onto handler of type [class org.springframework.web.servlet.mvc.ParameterizableViewController]
2017-09-14 21:23:05.540  INFO 8388 --- [restartedMain] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/cc/commentReview.html] onto handler of type [class org.springframework.web.servlet.mvc.ParameterizableViewController]
2017-09-14 21:23:05.540  INFO 8388 --- [restartedMain] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/cc/blogManage.html] onto handler of type [class org.springframework.web.servlet.mvc.ParameterizableViewController]
2017-09-14 21:23:05.541  INFO 8388 --- [restartedMain] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/cc/blogTypeManage.html] onto handler of type [class org.springframework.web.servlet.mvc.ParameterizableViewController]
2017-09-14 21:23:05.541  INFO 8388 --- [restartedMain] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/cc/commentManage.html] onto handler of type [class org.springframework.web.servlet.mvc.ParameterizableViewController]
2017-09-14 21:23:05.541  INFO 8388 --- [restartedMain] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/cc/modifyInfo.html] onto handler of type [class org.springframework.web.servlet.mvc.ParameterizableViewController]
2017-09-14 21:23:05.541  INFO 8388 --- [restartedMain] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/cc/linkManage.html] onto handler of type [class org.springframework.web.servlet.mvc.ParameterizableViewController]
2017-09-14 21:23:05.677  INFO 8388 --- [restartedMain] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2017-09-14 21:23:05.678  INFO 8388 --- [restartedMain] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2017-09-14 21:23:05.742  INFO 8388 --- [restartedMain] .m.m.a.ExceptionHandlerExceptionResolver : Detected @ExceptionHandler methods in repositoryRestExceptionHandler
2017-09-14 21:23:06.031  INFO 8388 --- [restartedMain] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2017-09-14 21:23:09.485  INFO 8388 --- [restartedMain] o.s.d.r.w.RepositoryRestHandlerAdapter   : Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@79e5987d: startup date [Thu Sep 14 21:22:44 CST 2017]; root of context hierarchy
2017-09-14 21:23:09.533  INFO 8388 --- [restartedMain] o.s.d.r.w.RepositoryRestHandlerMapping   : Mapped "{[/{repository}/{id}/{property}],methods=[GET],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<org.springframework.hateoas.ResourceSupport> org.springframework.data.rest.webmvc.RepositoryPropertyReferenceController.followPropertyReference(org.springframework.data.rest.webmvc.RootResourceInformation,java.io.Serializable,java.lang.String,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler) throws java.lang.Exception
2017-09-14 21:23:09.534  INFO 8388 --- [restartedMain] o.s.d.r.w.RepositoryRestHandlerMapping   : Mapped "{[/{repository}/{id}/{property}/{propertyId}],methods=[GET],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<org.springframework.hateoas.ResourceSupport> org.springframework.data.rest.webmvc.RepositoryPropertyReferenceController.followPropertyReference(org.springframework.data.rest.webmvc.RootResourceInformation,java.io.Serializable,java.lang.String,java.lang.String,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler) throws java.lang.Exception
2017-09-14 21:23:09.534  INFO 8388 --- [restartedMain] o.s.d.r.w.RepositoryRestHandlerMapping   : Mapped "{[/{repository}/{id}/{property}],methods=[DELETE],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<? extends org.springframework.hateoas.ResourceSupport> org.springframework.data.rest.webmvc.RepositoryPropertyReferenceController.deletePropertyReference(org.springframework.data.rest.webmvc.RootResourceInformation,java.io.Serializable,java.lang.String) throws java.lang.Exception
2017-09-14 21:23:09.535  INFO 8388 --- [restartedMain] o.s.d.r.w.RepositoryRestHandlerMapping   : Mapped "{[/{repository}/{id}/{property}],methods=[GET],produces=[application/x-spring-data-compact+json || text/uri-list]}" onto public org.springframework.http.ResponseEntity<org.springframework.hateoas.ResourceSupport> org.springframework.data.rest.webmvc.RepositoryPropertyReferenceController.followPropertyReferenceCompact(org.springframework.data.rest.webmvc.RootResourceInformation,java.io.Serializable,java.lang.String,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler) throws java.lang.Exception
2017-09-14 21:23:09.536  INFO 8388 --- [restartedMain] o.s.d.r.w.RepositoryRestHandlerMapping   : Mapped "{[/{repository}/{id}/{property}],methods=[PATCH || PUT || POST],consumes=[application/json || application/x-spring-data-compact+json || text/uri-list],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<? extends org.springframework.hateoas.ResourceSupport> org.springframework.data.rest.webmvc.RepositoryPropertyReferenceController.createPropertyReference(org.springframework.data.rest.webmvc.RootResourceInformation,org.springframework.http.HttpMethod,org.springframework.hateoas.Resources<java.lang.Object>,java.io.Serializable,java.lang.String) throws java.lang.Exception
2017-09-14 21:23:09.536  INFO 8388 --- [restartedMain] o.s.d.r.w.RepositoryRestHandlerMapping   : Mapped "{[/{repository}/{id}/{property}/{propertyId}],methods=[DELETE],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<org.springframework.hateoas.ResourceSupport> org.springframework.data.rest.webmvc.RepositoryPropertyReferenceController.deletePropertyReferenceId(org.springframework.data.rest.webmvc.RootResourceInformation,java.io.Serializable,java.lang.String,java.lang.String) throws java.lang.Exception
2017-09-14 21:23:09.539  INFO 8388 --- [restartedMain] o.s.d.r.w.RepositoryRestHandlerMapping   : Mapped "{[/{repository}/search],methods=[OPTIONS],produces=[application/hal+json || application/json]}" onto public org.springframework.http.HttpEntity<?> org.springframework.data.rest.webmvc.RepositorySearchController.optionsForSearches(org.springframework.data.rest.webmvc.RootResourceInformation)
2017-09-14 21:23:09.540  INFO 8388 --- [restartedMain] o.s.d.r.w.RepositoryRestHandlerMapping   : Mapped "{[/{repository}/search/{search}],methods=[GET],produces=[application/x-spring-data-compact+json]}" onto public org.springframework.hateoas.ResourceSupport org.springframework.data.rest.webmvc.RepositorySearchController.executeSearchCompact(org.springframework.data.rest.webmvc.RootResourceInformation,org.springframework.http.HttpHeaders,org.springframework.util.MultiValueMap<java.lang.String, java.lang.Object>,java.lang.String,java.lang.String,org.springframework.data.rest.webmvc.support.DefaultedPageable,org.springframework.data.domain.Sort,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler)
2017-09-14 21:23:09.541  INFO 8388 --- [restartedMain] o.s.d.r.w.RepositoryRestHandlerMapping   : Mapped "{[/{repository}/search],methods=[HEAD],produces=[application/hal+json || application/json]}" onto public org.springframework.http.HttpEntity<?> org.springframework.data.rest.webmvc.RepositorySearchController.headForSearches(org.springframework.data.rest.webmvc.RootResourceInformation)
2017-09-14 21:23:09.541  INFO 8388 --- [restartedMain] o.s.d.r.w.RepositoryRestHandlerMapping   : Mapped "{[/{repository}/search/{search}],methods=[GET],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.data.rest.webmvc.RepositorySearchController.executeSearch(org.springframework.data.rest.webmvc.RootResourceInformation,org.springframework.util.MultiValueMap<java.lang.String, java.lang.Object>,java.lang.String,org.springframework.data.rest.webmvc.support.DefaultedPageable,org.springframework.data.domain.Sort,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler,org.springframework.http.HttpHeaders)
2017-09-14 21:23:09.541  INFO 8388 --- [restartedMain] o.s.d.r.w.RepositoryRestHandlerMapping   : Mapped "{[/{repository}/search],methods=[GET],produces=[application/hal+json || application/json]}" onto public org.springframework.data.rest.webmvc.RepositorySearchesResource org.springframework.data.rest.webmvc.RepositorySearchController.listSearches(org.springframework.data.rest.webmvc.RootResourceInformation)
2017-09-14 21:23:09.541  INFO 8388 --- [restartedMain] o.s.d.r.w.RepositoryRestHandlerMapping   : Mapped "{[/{repository}/search/{search}],methods=[OPTIONS],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<java.lang.Object> org.springframework.data.rest.webmvc.RepositorySearchController.optionsForSearch(org.springframework.data.rest.webmvc.RootResourceInformation,java.lang.String)
2017-09-14 21:23:09.541  INFO 8388 --- [restartedMain] o.s.d.r.w.RepositoryRestHandlerMapping   : Mapped "{[/{repository}/search/{search}],methods=[HEAD],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<java.lang.Object> org.springframework.data.rest.webmvc.RepositorySearchController.headForSearch(org.springframework.data.rest.webmvc.RootResourceInformation,java.lang.String)
2017-09-14 21:23:09.541  INFO 8388 --- [restartedMain] o.s.d.r.w.RepositoryRestHandlerMapping   : Mapped "{[/ || ],methods=[OPTIONS],produces=[application/hal+json || application/json]}" onto public org.springframework.http.HttpEntity<?> org.springframework.data.rest.webmvc.RepositoryController.optionsForRepositories()
2017-09-14 21:23:09.541  INFO 8388 --- [restartedMain] o.s.d.r.w.RepositoryRestHandlerMapping   : Mapped "{[/ || ],methods=[HEAD],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.data.rest.webmvc.RepositoryController.headForRepositories()
2017-09-14 21:23:09.541  INFO 8388 --- [restartedMain] o.s.d.r.w.RepositoryRestHandlerMapping   : Mapped "{[/ || ],methods=[GET],produces=[application/hal+json || application/json]}" onto public org.springframework.http.HttpEntity<org.springframework.data.rest.webmvc.RepositoryLinksResource> org.springframework.data.rest.webmvc.RepositoryController.listRepositories()
2017-09-14 21:23:09.541  INFO 8388 --- [restartedMain] o.s.d.r.w.RepositoryRestHandlerMapping   : Mapped "{[/{repository}],methods=[OPTIONS],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.data.rest.webmvc.RepositoryEntityController.optionsForCollectionResource(org.springframework.data.rest.webmvc.RootResourceInformation)
2017-09-14 21:23:09.541  INFO 8388 --- [restartedMain] o.s.d.r.w.RepositoryRestHandlerMapping   : Mapped "{[/{repository}],methods=[HEAD],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.data.rest.webmvc.RepositoryEntityController.headCollectionResource(org.springframework.data.rest.webmvc.RootResourceInformation,org.springframework.data.rest.webmvc.support.DefaultedPageable) throws org.springframework.web.HttpRequestMethodNotSupportedException
2017-09-14 21:23:09.557  INFO 8388 --- [restartedMain] o.s.d.r.w.RepositoryRestHandlerMapping   : Mapped "{[/{repository}],methods=[GET],produces=[application/hal+json || application/json]}" onto public org.springframework.hateoas.Resources<?> org.springframework.data.rest.webmvc.RepositoryEntityController.getCollectionResource(org.springframework.data.rest.webmvc.RootResourceInformation,org.springframework.data.rest.webmvc.support.DefaultedPageable,org.springframework.data.domain.Sort,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler) throws org.springframework.data.rest.webmvc.ResourceNotFoundException,org.springframework.web.HttpRequestMethodNotSupportedException
2017-09-14 21:23:09.557  INFO 8388 --- [restartedMain] o.s.d.r.w.RepositoryRestHandlerMapping   : Mapped "{[/{repository}],methods=[GET],produces=[application/x-spring-data-compact+json || text/uri-list]}" onto public org.springframework.hateoas.Resources<?> org.springframework.data.rest.webmvc.RepositoryEntityController.getCollectionResourceCompact(org.springframework.data.rest.webmvc.RootResourceInformation,org.springframework.data.rest.webmvc.support.DefaultedPageable,org.springframework.data.domain.Sort,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler) throws org.springframework.data.rest.webmvc.ResourceNotFoundException,org.springframework.web.HttpRequestMethodNotSupportedException
2017-09-14 21:23:09.557  INFO 8388 --- [restartedMain] o.s.d.r.w.RepositoryRestHandlerMapping   : Mapped "{[/{repository}],methods=[POST],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<org.springframework.hateoas.ResourceSupport> org.springframework.data.rest.webmvc.RepositoryEntityController.postCollectionResource(org.springframework.data.rest.webmvc.RootResourceInformation,org.springframework.data.rest.webmvc.PersistentEntityResource,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler,java.lang.String) throws org.springframework.web.HttpRequestMethodNotSupportedException
2017-09-14 21:23:09.557  INFO 8388 --- [restartedMain] o.s.d.r.w.RepositoryRestHandlerMapping   : Mapped "{[/{repository}/{id}],methods=[OPTIONS],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.data.rest.webmvc.RepositoryEntityController.optionsForItemResource(org.springframework.data.rest.webmvc.RootResourceInformation)
2017-09-14 21:23:09.557  INFO 8388 --- [restartedMain] o.s.d.r.w.RepositoryRestHandlerMapping   : Mapped "{[/{repository}/{id}],methods=[HEAD],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.data.rest.webmvc.RepositoryEntityController.headForItemResource(org.springframework.data.rest.webmvc.RootResourceInformation,java.io.Serializable,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler) throws org.springframework.web.HttpRequestMethodNotSupportedException
2017-09-14 21:23:09.557  INFO 8388 --- [restartedMain] o.s.d.r.w.RepositoryRestHandlerMapping   : Mapped "{[/{repository}/{id}],methods=[PATCH],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<org.springframework.hateoas.ResourceSupport> org.springframework.data.rest.webmvc.RepositoryEntityController.patchItemResource(org.springframework.data.rest.webmvc.RootResourceInformation,org.springframework.data.rest.webmvc.PersistentEntityResource,java.io.Serializable,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler,org.springframework.data.rest.webmvc.support.ETag,java.lang.String) throws org.springframework.web.HttpRequestMethodNotSupportedException,org.springframework.data.rest.webmvc.ResourceNotFoundException
2017-09-14 21:23:09.557  INFO 8388 --- [restartedMain] o.s.d.r.w.RepositoryRestHandlerMapping   : Mapped "{[/{repository}/{id}],methods=[DELETE],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.data.rest.webmvc.RepositoryEntityController.deleteItemResource(org.springframework.data.rest.webmvc.RootResourceInformation,java.io.Serializable,org.springframework.data.rest.webmvc.support.ETag) throws org.springframework.data.rest.webmvc.ResourceNotFoundException,org.springframework.web.HttpRequestMethodNotSupportedException
2017-09-14 21:23:09.557  INFO 8388 --- [restartedMain] o.s.d.r.w.RepositoryRestHandlerMapping   : Mapped "{[/{repository}/{id}],methods=[PUT],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<? extends org.springframework.hateoas.ResourceSupport> org.springframework.data.rest.webmvc.RepositoryEntityController.putItemResource(org.springframework.data.rest.webmvc.RootResourceInformation,org.springframework.data.rest.webmvc.PersistentEntityResource,java.io.Serializable,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler,org.springframework.data.rest.webmvc.support.ETag,java.lang.String) throws org.springframework.web.HttpRequestMethodNotSupportedException
2017-09-14 21:23:09.573  INFO 8388 --- [restartedMain] o.s.d.r.w.RepositoryRestHandlerMapping   : Mapped "{[/{repository}/{id}],methods=[GET],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<org.springframework.hateoas.Resource<?>> org.springframework.data.rest.webmvc.RepositoryEntityController.getItemResource(org.springframework.data.rest.webmvc.RootResourceInformation,java.io.Serializable,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler,org.springframework.http.HttpHeaders) throws org.springframework.web.HttpRequestMethodNotSupportedException
2017-09-14 21:23:09.588  INFO 8388 --- [restartedMain] o.s.d.r.w.BasePathAwareHandlerMapping    : Mapped "{[/profile],methods=[GET]}" onto org.springframework.http.HttpEntity<org.springframework.hateoas.ResourceSupport> org.springframework.data.rest.webmvc.ProfileController.listAllFormsOfMetadata()
2017-09-14 21:23:09.588  INFO 8388 --- [restartedMain] o.s.d.r.w.BasePathAwareHandlerMapping    : Mapped "{[/profile],methods=[OPTIONS]}" onto public org.springframework.http.HttpEntity<?> org.springframework.data.rest.webmvc.ProfileController.profileOptions()
2017-09-14 21:23:09.588  INFO 8388 --- [restartedMain] o.s.d.r.w.BasePathAwareHandlerMapping    : Mapped "{[/profile/{repository}],methods=[GET],produces=[application/schema+json]}" onto public org.springframework.http.HttpEntity<org.springframework.data.rest.webmvc.json.JsonSchema> org.springframework.data.rest.webmvc.RepositorySchemaController.schema(org.springframework.data.rest.webmvc.RootResourceInformation)
2017-09-14 21:23:09.588  INFO 8388 --- [restartedMain] o.s.d.r.w.BasePathAwareHandlerMapping    : Mapped "{[/profile/{repository}],methods=[GET],produces=[application/alps+json || */*]}" onto org.springframework.http.HttpEntity<org.springframework.data.rest.webmvc.RootResourceInformation> org.springframework.data.rest.webmvc.alps.AlpsController.descriptor(org.springframework.data.rest.webmvc.RootResourceInformation)
2017-09-14 21:23:09.588  INFO 8388 --- [restartedMain] o.s.d.r.w.BasePathAwareHandlerMapping    : Mapped "{[/profile/{repository}],methods=[OPTIONS],produces=[application/alps+json]}" onto org.springframework.http.HttpEntity<?> org.springframework.data.rest.webmvc.alps.AlpsController.alpsOptions()
2017-09-14 21:23:10.741  INFO 8388 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2017-09-14 21:23:11.058  INFO 8388 --- [restartedMain] o.s.j.e.a.AnnotationMBeanExporter        : Registering beans for JMX exposure on startup
2017-09-14 21:23:11.058  INFO 8388 --- [restartedMain] o.s.j.e.a.AnnotationMBeanExporter        : Bean with name 'statFilter' has been autodetected for JMX exposure
2017-09-14 21:23:11.058  INFO 8388 --- [restartedMain] o.s.j.e.a.AnnotationMBeanExporter        : Bean with name 'dataSource' has been autodetected for JMX exposure
2017-09-14 21:23:11.089  INFO 8388 --- [restartedMain] o.s.j.e.a.AnnotationMBeanExporter        : Bean with name 'rabbitConnectionFactory' has been autodetected for JMX exposure
2017-09-14 21:23:11.120  INFO 8388 --- [restartedMain] o.s.j.e.a.AnnotationMBeanExporter        : Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2017-09-14 21:23:11.120  INFO 8388 --- [restartedMain] o.s.j.e.a.AnnotationMBeanExporter        : Located managed bean 'rabbitConnectionFactory': registering with JMX server as MBean [org.springframework.amqp.rabbit.connection:name=rabbitConnectionFactory,type=CachingConnectionFactory]
2017-09-14 21:23:11.385  INFO 8388 --- [restartedMain] o.s.j.e.a.AnnotationMBeanExporter        : Located MBean 'statFilter': registering with JMX server as MBean [com.alibaba.druid.filter.stat:name=statFilter,type=StatFilter]
2017-09-14 21:23:11.417  INFO 8388 --- [restartedMain] o.s.c.support.DefaultLifecycleProcessor  : Starting beans in phase -2147482648
2017-09-14 21:23:11.417  INFO 8388 --- [restartedMain] o.s.c.support.DefaultLifecycleProcessor  : Starting beans in phase 2147483647
2017-09-14 21:23:11.666  INFO 8388 --- [restartedMain] s.b.c.e.t.TomcatEmbeddedServletContainer : Tomcat started on port(s): 8080 (http)
2017-09-14 21:23:11.697  INFO 8388 --- [restartedMain] pers.platform.blog.Application           : Started Application in 29.091 seconds (JVM running for 31.372)
2017-09-14 21:23:15.755  INFO 8388 --- [http-nio-8080-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring FrameworkServlet 'dispatcherServlet'
2017-09-14 21:23:15.755  INFO 8388 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : FrameworkServlet 'dispatcherServlet': initialization started
2017-09-14 21:23:15.808  INFO 8388 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : FrameworkServlet 'dispatcherServlet': initialization completed in 53 ms
2017-09-14 21:23:16.299 DEBUG 8388 --- [http-nio-8080-exec-2] p.p.blog.repository.BlogRepo.list        : ==>  Preparing: select * from t_blog order by releaseDate desc limit ?,? 
2017-09-14 21:23:16.306 DEBUG 8388 --- [http-nio-8080-exec-2] p.p.blog.repository.BlogRepo.list        : ==> Parameters: 0(Integer), 10(Integer)
2017-09-14 21:23:16.314 DEBUG 8388 --- [http-nio-8080-exec-2] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 21:23:16.317 DEBUG 8388 --- [http-nio-8080-exec-2] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 11(String)
2017-09-14 21:23:16.319 DEBUG 8388 --- [http-nio-8080-exec-2] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 21:23:16.321 DEBUG 8388 --- [http-nio-8080-exec-2] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 21:23:16.321 DEBUG 8388 --- [http-nio-8080-exec-2] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 1(String)
2017-09-14 21:23:16.323 DEBUG 8388 --- [http-nio-8080-exec-2] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 21:23:16.326 DEBUG 8388 --- [http-nio-8080-exec-2] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 21:23:16.326 DEBUG 8388 --- [http-nio-8080-exec-2] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 12(String)
2017-09-14 21:23:16.328 DEBUG 8388 --- [http-nio-8080-exec-2] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 21:23:16.332 DEBUG 8388 --- [http-nio-8080-exec-2] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 21:23:16.334 DEBUG 8388 --- [http-nio-8080-exec-2] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 32(String)
2017-09-14 21:23:16.339 DEBUG 8388 --- [http-nio-8080-exec-2] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 21:23:16.353 DEBUG 8388 --- [http-nio-8080-exec-2] p.p.blog.repository.BlogRepo.list        : <==      Total: 10
2017-09-14 21:23:16.614 DEBUG 8388 --- [http-nio-8080-exec-2] p.p.blog.repository.BlogRepo.getTotal    : ==>  Preparing: select count(*) from t_blog 
2017-09-14 21:23:16.616 DEBUG 8388 --- [http-nio-8080-exec-2] p.p.blog.repository.BlogRepo.getTotal    : ==> Parameters: 
2017-09-14 21:23:16.624 DEBUG 8388 --- [http-nio-8080-exec-2] p.p.blog.repository.BlogRepo.getTotal    : <==      Total: 1
2017-09-14 21:23:28.524 DEBUG 8388 --- [http-nio-8080-exec-8] p.p.blog.repository.BlogRepo.update      : ==>  Preparing: update t_blog SET title=?, summary=?, typeId=?, content=?, clickHit=?, replyHit=?, keyWord=? where id=? 
2017-09-14 21:23:28.539 DEBUG 8388 --- [http-nio-8080-exec-8] p.p.blog.repository.BlogRepo.update      : ==> Parameters: creating server tcp listening socket 127.0.0.1:6379: bind No error(String), window下安装redis报错：creating server tcp listening socket 127.0.0.1:6379: bind No error的解决方案如下按顺序输入如下命令就可以连接成功1. Redis-cli.exe2. shutdown3. exit4. redis-server(String), 12(String), <h2 style="margin: 10px 0px 0px; padding: 0px; color: rgb(51, 51, 51); white-space: normal; background-color: rgb(255, 255, 255); font-size: 1em; font-family: Verdana, Geneva, Arial, Helvetica, sans-serif; line-height: 20px;"><span style="font-size: 13.3333px; line-height: 1.8;">window下安装redis报错：</span></h2><p style="margin: 10px auto; padding: 0px;">creating server tcp listening socket 127.0.0.1:6379: bind No error</p><p style="margin: 10px auto; padding: 0px;">的解决方案如下按顺序输入如下命令就可以连接成功</p><p style="margin: 10px auto; padding: 0px;">1.&nbsp;<a href="http://lib.csdn.net/base/redis" class="replace_word" title="Redis知识库" target="_blank" style="text-decoration-line: none; color: rgb(223, 52, 52); font-weight: bold;">Redis</a>-cli.exe<br/>2.&nbsp;shutdown<br/>3.&nbsp;exit<br/>4.&nbsp;<a href="http://lib.csdn.net/base/redis" class="replace_word" title="Redis知识库" target="_blank" style="text-decoration-line: none; color: rgb(223, 52, 52); font-weight: bold;">redis</a>-server.exe&nbsp;redis.windows.conf</p><p><br/></p><p> 转自:&nbsp;&nbsp;&nbsp;&nbsp;<a href="http://blog.csdn.net/fengzhihen2007/article/details/52211048" target="_blank" title="D的专栏">D的专栏</a> <br/></p>(String), 132(Integer), 0(Integer), redis (String), 317(String)
2017-09-14 21:23:28.556 DEBUG 8388 --- [http-nio-8080-exec-8] p.p.blog.repository.BlogRepo.update      : <==    Updates: 1
2017-09-14 21:23:28.650 DEBUG 8388 --- [http-nio-8080-exec-8] p.p.blog.repository.CommentRepo.list     : ==>  Preparing: select * from t_comment WHERE blogId=? and state=? order by commentDate desc 
2017-09-14 21:23:28.653 DEBUG 8388 --- [http-nio-8080-exec-8] p.p.blog.repository.CommentRepo.list     : ==> Parameters: 317(String), 1(Integer)
2017-09-14 21:23:28.665 DEBUG 8388 --- [http-nio-8080-exec-8] p.p.blog.repository.CommentRepo.list     : <==      Total: 0
2017-09-14 21:26:13.449 DEBUG 8388 --- [http-nio-8080-exec-3] p.p.blog.repository.BlogRepo.list        : ==>  Preparing: select * from t_blog order by releaseDate desc limit ?,? 
2017-09-14 21:26:13.449 DEBUG 8388 --- [http-nio-8080-exec-3] p.p.blog.repository.BlogRepo.list        : ==> Parameters: 0(Integer), 10(Integer)
2017-09-14 21:26:13.454 DEBUG 8388 --- [http-nio-8080-exec-3] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 21:26:13.455 DEBUG 8388 --- [http-nio-8080-exec-3] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 11(String)
2017-09-14 21:26:13.458 DEBUG 8388 --- [http-nio-8080-exec-3] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 21:26:13.460 DEBUG 8388 --- [http-nio-8080-exec-3] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 21:26:13.461 DEBUG 8388 --- [http-nio-8080-exec-3] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 1(String)
2017-09-14 21:26:13.463 DEBUG 8388 --- [http-nio-8080-exec-3] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 21:26:13.485 DEBUG 8388 --- [http-nio-8080-exec-3] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 21:26:13.486 DEBUG 8388 --- [http-nio-8080-exec-3] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 12(String)
2017-09-14 21:26:13.493 DEBUG 8388 --- [http-nio-8080-exec-3] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 21:26:13.499 DEBUG 8388 --- [http-nio-8080-exec-3] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 21:26:13.502 DEBUG 8388 --- [http-nio-8080-exec-3] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 32(String)
2017-09-14 21:26:13.521 DEBUG 8388 --- [http-nio-8080-exec-3] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 21:26:13.527 DEBUG 8388 --- [http-nio-8080-exec-3] p.p.blog.repository.BlogRepo.list        : <==      Total: 10
2017-09-14 21:26:13.564 DEBUG 8388 --- [http-nio-8080-exec-3] p.p.blog.repository.BlogRepo.getTotal    : ==>  Preparing: select count(*) from t_blog 
2017-09-14 21:26:13.564 DEBUG 8388 --- [http-nio-8080-exec-3] p.p.blog.repository.BlogRepo.getTotal    : ==> Parameters: 
2017-09-14 21:26:13.574 DEBUG 8388 --- [http-nio-8080-exec-3] p.p.blog.repository.BlogRepo.getTotal    : <==      Total: 1
2017-09-14 21:26:29.387 DEBUG 8388 --- [http-nio-8080-exec-5] p.p.blog.repository.BlogRepo.findById    : ==>  Preparing: select * from t_blog where id=? 
2017-09-14 21:26:29.389 DEBUG 8388 --- [http-nio-8080-exec-5] p.p.blog.repository.BlogRepo.findById    : ==> Parameters: 312(String)
2017-09-14 21:26:29.394 DEBUG 8388 --- [http-nio-8080-exec-5] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 21:26:29.394 DEBUG 8388 --- [http-nio-8080-exec-5] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 11(String)
2017-09-14 21:26:29.396 DEBUG 8388 --- [http-nio-8080-exec-5] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 21:26:29.397 DEBUG 8388 --- [http-nio-8080-exec-5] p.p.blog.repository.BlogRepo.findById    : <==      Total: 1
2017-09-14 21:26:29.401 DEBUG 8388 --- [http-nio-8080-exec-5] p.p.blog.repository.BlogRepo.update      : ==>  Preparing: update t_blog SET title=?, summary=?, typeId=?, content=?, clickHit=?, replyHit=?, keyWord=? where id=? 
2017-09-14 21:26:29.403 DEBUG 8388 --- [http-nio-8080-exec-5] p.p.blog.repository.BlogRepo.update      : ==> Parameters: Linux中zip压缩和unzip解压缩命令详解(String), 转自:    mracalele1、把/home目录下面的mydata目录压缩为mydata.zipzip -r mydata.zip mydata #压缩mydata目录2、把/home目录下面的mydata.zip解压到mydatabak目录里面unzip mydata.zip -d mydatabak3(String), 11(String), <p style="margin: 10px auto; padding: 0px; color: rgb(51, 51, 51); font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);">转自:&nbsp;&nbsp;&nbsp;&nbsp;<a href="http://www.cnblogs.com/mracale/p/5911590.html" target="_blank" title="mracalele">mracalele</a></p><p style="margin: 10px auto; padding: 0px; color: rgb(51, 51, 51); font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);">1、把/home目录下面的mydata目录压缩为mydata.zip<br/>zip -r mydata.zip mydata #压缩mydata目录<br/>2、把/home目录下面的mydata.zip解压到mydatabak目录里面<br/>unzip mydata.zip -d mydatabak<br/>3、把/home目录下面的abc文件夹和123.txt压缩成为abc123.zip<br/>zip -r abc123.zip abc 123.txt<br/>4、把/home目录下面的wwwroot.zip直接解压到/home目录里面<br/>unzip wwwroot.zip<br/>5、把/home目录下面的abc12.zip、abc23.zip、abc34.zip同时解压到/home目录里面<br/>unzip abc\*.zip<br/>6、查看把/home目录下面的wwwroot.zip里面的内容<br/>unzip -v wwwroot.zip<br/>7、验证/home目录下面的wwwroot.zip是否完整<br/>unzip -t wwwroot.zip<br/>8、把/home目录下面wwwroot.zip里面的所有文件解压到第一级目录<br/>unzip -j wwwroot.zip</p><p style="margin: 10px auto; padding: 0px; color: rgb(51, 51, 51); font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);"><span style="margin: 0px; padding: 0px; color: rgb(255, 0, 0);">主要参数</span></p><p style="margin: 10px auto; padding: 0px; color: rgb(51, 51, 51); font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);">-c：将解压缩的结果<br/>-l：显示压缩文件内所包含的文件<br/>-p：与-c参数类似，会将解压缩的结果显示到屏幕上，但不会执行任何的转换<br/>-t：检查压缩文件是否正确<br/>-u：与-f参数类似，但是除了更新现有的文件外，也会将压缩文件中的其它文件解压缩到目录中<br/>-v：执行是时显示详细的信息<br/>-z：仅显示压缩文件的备注文字<br/>-a：对文本文件进行必要的字符转换<br/>-b：不要对文本文件进行字符转换<br/>-C：压缩文件中的文件名称区分大小写<br/>-j：不处理压缩文件中原有的目录路径<br/>-L：将压缩文件中的全部文件名改为小写<br/>-M：将输出结果送到more程序处理<br/>-n：解压缩时不要覆盖原有的文件<br/>-o：不必先询问用户，unzip执行后覆盖原有文件<br/>-P：使用zip的密码选项<br/>-q：执行时不显示任何信息<br/>-s：将文件名中的空白字符转换为底线字符<br/>-V：保留VMS的文件版本信息<br/>-X：解压缩时同时回存文件原来的UID/GID</p><p><br/></p><p>如图:</p><p> <img src="/userImages/20170719/1500486386459010336.jpg" title="1500486386459010336.jpg" alt="QQ鎴浘20170720014134.jpg"/> <br/></p>(String), 32(Integer), 0(Integer), linux zip upzip(String), 312(String)
2017-09-14 21:26:29.414 DEBUG 8388 --- [http-nio-8080-exec-5] p.p.blog.repository.BlogRepo.update      : <==    Updates: 1
2017-09-14 21:26:29.417 DEBUG 8388 --- [http-nio-8080-exec-5] p.p.blog.repository.CommentRepo.list     : ==>  Preparing: select * from t_comment WHERE blogId=? and state=? order by commentDate desc 
2017-09-14 21:26:29.418 DEBUG 8388 --- [http-nio-8080-exec-5] p.p.blog.repository.CommentRepo.list     : ==> Parameters: 312(String), 1(Integer)
2017-09-14 21:26:29.420 DEBUG 8388 --- [http-nio-8080-exec-5] p.p.blog.repository.CommentRepo.list     : <==      Total: 0
2017-09-14 21:26:29.424 DEBUG 8388 --- [http-nio-8080-exec-5] p.p.b.repository.BlogRepo.getLastBlog    : ==>  Preparing: select * from t_blog t where ? > t.releaseDate order by releaseDate desc limit 1 
2017-09-14 21:26:29.449 DEBUG 8388 --- [http-nio-8080-exec-5] p.p.b.repository.BlogRepo.getLastBlog    : ==> Parameters: 2017-07-20 01:46:31.0(Timestamp)
2017-09-14 21:26:29.453 DEBUG 8388 --- [http-nio-8080-exec-5] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 21:26:29.453 DEBUG 8388 --- [http-nio-8080-exec-5] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 11(String)
2017-09-14 21:26:29.455 DEBUG 8388 --- [http-nio-8080-exec-5] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 21:26:29.456 DEBUG 8388 --- [http-nio-8080-exec-5] p.p.b.repository.BlogRepo.getLastBlog    : <==      Total: 1
2017-09-14 21:26:29.462 DEBUG 8388 --- [http-nio-8080-exec-5] p.p.b.repository.BlogRepo.getNextBlog    : ==>  Preparing: select * from t_blog t where t.releaseDate > ? order by releaseDate asc limit 1 
2017-09-14 21:26:29.464 DEBUG 8388 --- [http-nio-8080-exec-5] p.p.b.repository.BlogRepo.getNextBlog    : ==> Parameters: 2017-07-20 01:46:31.0(Timestamp)
2017-09-14 21:26:29.470 DEBUG 8388 --- [http-nio-8080-exec-5] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 21:26:29.471 DEBUG 8388 --- [http-nio-8080-exec-5] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 12(String)
2017-09-14 21:26:29.473 DEBUG 8388 --- [http-nio-8080-exec-5] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 21:26:29.474 DEBUG 8388 --- [http-nio-8080-exec-5] p.p.b.repository.BlogRepo.getNextBlog    : <==      Total: 1
2017-09-14 21:27:00.401 DEBUG 8388 --- [http-nio-8080-exec-10] p.p.blog.repository.BlogRepo.list        : ==>  Preparing: select * from t_blog WHERE typeId=? order by releaseDate desc limit ?,? 
2017-09-14 21:27:00.403 DEBUG 8388 --- [http-nio-8080-exec-10] p.p.blog.repository.BlogRepo.list        : ==> Parameters: 31(String), 0(Integer), 10(Integer)
2017-09-14 21:27:00.406 DEBUG 8388 --- [http-nio-8080-exec-10] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 21:27:00.406 DEBUG 8388 --- [http-nio-8080-exec-10] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 31(String)
2017-09-14 21:27:00.411 DEBUG 8388 --- [http-nio-8080-exec-10] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 21:27:00.416 DEBUG 8388 --- [http-nio-8080-exec-10] p.p.blog.repository.BlogRepo.list        : <==      Total: 4
2017-09-14 21:27:00.482 DEBUG 8388 --- [http-nio-8080-exec-10] p.p.blog.repository.BlogRepo.getTotal    : ==>  Preparing: select count(*) from t_blog WHERE typeId=? 
2017-09-14 21:27:00.489 DEBUG 8388 --- [http-nio-8080-exec-10] p.p.blog.repository.BlogRepo.getTotal    : ==> Parameters: 31(String)
2017-09-14 21:27:00.495 DEBUG 8388 --- [http-nio-8080-exec-10] p.p.blog.repository.BlogRepo.getTotal    : <==      Total: 1
2017-09-14 21:27:02.809 DEBUG 8388 --- [http-nio-8080-exec-4] p.p.blog.repository.BlogRepo.findById    : ==>  Preparing: select * from t_blog where id=? 
2017-09-14 21:27:02.811 DEBUG 8388 --- [http-nio-8080-exec-4] p.p.blog.repository.BlogRepo.findById    : ==> Parameters: 306(String)
2017-09-14 21:27:02.814 DEBUG 8388 --- [http-nio-8080-exec-4] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 21:27:02.815 DEBUG 8388 --- [http-nio-8080-exec-4] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 31(String)
2017-09-14 21:27:02.821 DEBUG 8388 --- [http-nio-8080-exec-4] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 21:27:02.822 DEBUG 8388 --- [http-nio-8080-exec-4] p.p.blog.repository.BlogRepo.findById    : <==      Total: 1
2017-09-14 21:27:02.827 DEBUG 8388 --- [http-nio-8080-exec-4] p.p.blog.repository.BlogRepo.update      : ==>  Preparing: update t_blog SET title=?, summary=?, typeId=?, content=?, clickHit=?, replyHit=?, keyWord=? where id=? 
2017-09-14 21:27:02.828 DEBUG 8388 --- [http-nio-8080-exec-4] p.p.blog.repository.BlogRepo.update      : ==> Parameters: Activiti表(String), ACT_RE_*: RE表示repository，这个前缀的表包含了流程定义和流程静态资源ACT_RU_*: RU表示runtime，这些运行时的表，包含流程实例，任务，变量，异步任务等运行中的数据。Activiti只在流程实例执行过程中保存这些数据， 在流程结束时就会删除这些记录。ACT_ID_*: ID表(String), 31(String), <pre class="brush:bash;toolbar:false;">ACT_RE_*:&nbsp;RE表示repository，这个前缀的表包含了流程定义和流程静态资源
ACT_RU_*:&nbsp;RU表示runtime，这些运行时的表，包含流程实例，任务，变量，异步任务等运行中的数据。Activiti只在流程实例执行过程中保存这些数据，&nbsp;在流程结束时就会删除这些记录。
ACT_ID_*:&nbsp;ID表示identity，这些表包含身份信息，比如用户，组等。ACT_HI_*:&nbsp;HI表示history，这些表包含历史数据，比如历史流程实例，&nbsp;变量，任务等。
ACT_GE_*:&nbsp;通用数据，&nbsp;用于不同场景下。ACT_EVT_*:&nbsp;EVT表示EVENT，目前只有一张表ACT_EVT_LOG，存储事件处理日志，方便管理员跟踪处理。</pre><p><br/></p><p>################################</p><p># 部署流程定义涉及到的表</p><p># 流程部署表</p><p>SELECT * FROM act_re_deployment;</p><p><br/></p><p># 流程定义表</p><p>SELECT * FROM act_re_procdef;</p><p><br/></p><p># 资源文件表</p><p>SELECT * FROM act_ge_bytearray;</p><p><br/></p><p># 系统配置表&nbsp;</p><p>SELECT * FROM act_ge_property;</p><p><br/></p><p>################################</p><p># 启动流程实例涉及到的表</p><p># 流程实例运行时 执行对象表</p><p>SELECT * FROM act_ru_execution;</p><p><br/></p><p>&nbsp;# 流程实例运行时 身份联系表</p><p>SELECT * FROM act_ru_identitylink;</p><p><br/></p><p># 流程实例运行时 用户任务表</p><p>SELECT * FROM act_ru_task;</p><p><br/></p><p># 活动节点历史表</p><p>SELECT * FROM act_hi_actinst;</p><p><br/></p><p># 身份联系表 历史</p><p>SELECT * FROM act_hi_identitylink;</p><p><br/></p><p># 流程实例表 历史</p><p>SELECT * FROM act_hi_procinst;</p><p><br/></p><p># 历史任务表&nbsp;</p><p>SELECT * FROM act_hi_taskinst;</p><p><br/></p><p>################################</p><p># 结束流程实例涉及到的表</p><p># 运行时 &nbsp;表数据全部清空</p><p># 历史表 &nbsp;表数据修改 或者增加了数据</p><p><br/></p><p>################################</p><p># 设置流程变量涉及到的表</p><p># 运行时流程变量表</p><p>SELECT * FROM act_ru_variable;</p><p><br/></p><p># 历史流程变量表</p><p>SELECT * FROM act_hi_varinst;</p><p><br/></p>(String), 30(Integer), 0(Integer), Activiti表(String), 306(String)
2017-09-14 21:27:02.833 DEBUG 8388 --- [http-nio-8080-exec-4] p.p.blog.repository.BlogRepo.update      : <==    Updates: 1
2017-09-14 21:27:02.837 DEBUG 8388 --- [http-nio-8080-exec-4] p.p.blog.repository.CommentRepo.list     : ==>  Preparing: select * from t_comment WHERE blogId=? and state=? order by commentDate desc 
2017-09-14 21:27:02.838 DEBUG 8388 --- [http-nio-8080-exec-4] p.p.blog.repository.CommentRepo.list     : ==> Parameters: 306(String), 1(Integer)
2017-09-14 21:27:02.839 DEBUG 8388 --- [http-nio-8080-exec-4] p.p.blog.repository.CommentRepo.list     : <==      Total: 0
2017-09-14 21:27:02.843 DEBUG 8388 --- [http-nio-8080-exec-4] p.p.b.repository.BlogRepo.getLastBlog    : ==>  Preparing: select * from t_blog t where ? > t.releaseDate order by releaseDate desc limit 1 
2017-09-14 21:27:02.844 DEBUG 8388 --- [http-nio-8080-exec-4] p.p.b.repository.BlogRepo.getLastBlog    : ==> Parameters: 2017-07-18 14:48:40.0(Timestamp)
2017-09-14 21:27:02.847 DEBUG 8388 --- [http-nio-8080-exec-4] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 21:27:02.847 DEBUG 8388 --- [http-nio-8080-exec-4] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 27(String)
2017-09-14 21:27:02.851 DEBUG 8388 --- [http-nio-8080-exec-4] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 21:27:02.852 DEBUG 8388 --- [http-nio-8080-exec-4] p.p.b.repository.BlogRepo.getLastBlog    : <==      Total: 1
2017-09-14 21:27:02.858 DEBUG 8388 --- [http-nio-8080-exec-4] p.p.b.repository.BlogRepo.getNextBlog    : ==>  Preparing: select * from t_blog t where t.releaseDate > ? order by releaseDate asc limit 1 
2017-09-14 21:27:02.858 DEBUG 8388 --- [http-nio-8080-exec-4] p.p.b.repository.BlogRepo.getNextBlog    : ==> Parameters: 2017-07-18 14:48:40.0(Timestamp)
2017-09-14 21:27:02.863 DEBUG 8388 --- [http-nio-8080-exec-4] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 21:27:02.864 DEBUG 8388 --- [http-nio-8080-exec-4] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 27(String)
2017-09-14 21:27:02.866 DEBUG 8388 --- [http-nio-8080-exec-4] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 21:27:02.867 DEBUG 8388 --- [http-nio-8080-exec-4] p.p.b.repository.BlogRepo.getNextBlog    : <==      Total: 1
2017-09-14 21:27:20.256 DEBUG 8388 --- [http-nio-8080-exec-6] p.p.blog.repository.BlogRepo.update      : ==>  Preparing: update t_blog SET title=?, summary=?, typeId=?, content=?, clickHit=?, replyHit=?, keyWord=? where id=? 
2017-09-14 21:27:20.262 DEBUG 8388 --- [http-nio-8080-exec-6] p.p.blog.repository.BlogRepo.update      : ==> Parameters: avtiviti学习笔记之=>创建avtiviti依赖表(String), maven加入jar包官方地址:    https://www.activiti.org/community#maven.repositoryactiviti配置官网    https://www.activiti.org/userguide/index.html#configuration 用mysql6的(String), 31(String), <ol class=" list-paddingleft-2" style="list-style-type: decimal;"><li><p>maven加入jar包</p></li></ol><p>官方地址:&nbsp;&nbsp;&nbsp;&nbsp;<a href="https://www.activiti.org/community#maven.repository">https://www.activiti.org/community#maven.repository</a></p><p>activiti配置官网&nbsp;&nbsp;&nbsp;&nbsp;<a href="https://www.activiti.org/userguide/index.html#configuration">https://www.activiti.org/userguide/index.html#configuration</a> </p><p><br/></p><p>用mysql6的jar包会报错,没有找到原因. 用5可以</p><p>pom&nbsp;<br/></p><pre class="brush:xml;toolbar:false">&lt;project&nbsp;xmlns=&quot;http://maven.apache.org/POM/4.0.0&quot;&nbsp;xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;
	xsi:schemaLocation=&quot;http://maven.apache.org/POM/4.0.0&nbsp;http://maven.apache.org/maven-v4_0_0.xsd&quot;&gt;
	&lt;modelVersion&gt;4.0.0&lt;/modelVersion&gt;
	&lt;groupId&gt;pers.cc.activiti&lt;/groupId&gt;
	&lt;artifactId&gt;ActivitiDemo&lt;/artifactId&gt;
	&lt;packaging&gt;war&lt;/packaging&gt;
	&lt;version&gt;0.0.1-SNAPSHOT&lt;/version&gt;
	&lt;name&gt;ActivitiDemo&nbsp;Maven&nbsp;Webapp&lt;/name&gt;
	&lt;url&gt;http://maven.apache.org&lt;/url&gt;

	&lt;properties&gt;
		&lt;avtiviti-version&gt;5.22.0&lt;/avtiviti-version&gt;
	&lt;/properties&gt;
	&lt;dependencies&gt;

		&lt;dependency&gt;
			&lt;groupId&gt;org.activiti&lt;/groupId&gt;
			&lt;artifactId&gt;activiti-engine&lt;/artifactId&gt;
			&lt;version&gt;${avtiviti-version}&lt;/version&gt;
		&lt;/dependency&gt;

		&lt;dependency&gt;
			&lt;groupId&gt;org.activiti&lt;/groupId&gt;
			&lt;artifactId&gt;activiti-spring&lt;/artifactId&gt;
			&lt;version&gt;${avtiviti-version}&lt;/version&gt;
		&lt;/dependency&gt;

		&lt;dependency&gt;
			&lt;groupId&gt;org.activiti&lt;/groupId&gt;
			&lt;artifactId&gt;activiti-bpmn-model&lt;/artifactId&gt;
			&lt;version&gt;${avtiviti-version}&lt;/version&gt;
		&lt;/dependency&gt;

		&lt;dependency&gt;
			&lt;groupId&gt;org.slf4j&lt;/groupId&gt;
			&lt;artifactId&gt;slf4j-api&lt;/artifactId&gt;
			&lt;version&gt;1.7.5&lt;/version&gt;
		&lt;/dependency&gt;
		&lt;dependency&gt;
			&lt;groupId&gt;org.slf4j&lt;/groupId&gt;
			&lt;artifactId&gt;slf4j-log4j12&lt;/artifactId&gt;
			&lt;version&gt;1.7.5&lt;/version&gt;
		&lt;/dependency&gt;
		&lt;dependency&gt;
			&lt;groupId&gt;mysql&lt;/groupId&gt;
			&lt;artifactId&gt;mysql-connector-java&lt;/artifactId&gt;
			&lt;version&gt;5.1.38&lt;/version&gt;
		&lt;/dependency&gt;


	&lt;/dependencies&gt;
	&lt;build&gt;
		&lt;finalName&gt;ActivitiDemo&lt;/finalName&gt;
	&lt;/build&gt;
&lt;/project&gt;</pre><p><br/></p><p>activiti.cfg.xml</p><pre class="brush:xml;toolbar:false">&lt;?xml&nbsp;version=&quot;1.0&quot;&nbsp;encoding=&quot;UTF-8&quot;?&gt;
&lt;beans&nbsp;xmlns=&quot;http://www.springframework.org/schema/beans&quot;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;xsi:schemaLocation=&quot;http://www.springframework.org/schema/beans&nbsp;&nbsp;&nbsp;http://www.springframework.org/schema/beans/spring-beans.xsd&quot;&gt;
&nbsp;
&nbsp;	
&nbsp;&nbsp;&lt;bean&nbsp;id=&quot;processEngineConfiguration&quot;&nbsp;class=&quot;org.activiti.engine.impl.cfg.StandaloneProcessEngineConfiguration&quot;&gt;
&nbsp;
&nbsp;&nbsp;&nbsp;&nbsp;&lt;property&nbsp;name=&quot;jdbcUrl&quot;&nbsp;value=&quot;jdbc:mysql://localhost:3306/db_activiti&quot;/&gt;
&nbsp;&nbsp;&nbsp;&nbsp;&lt;property&nbsp;name=&quot;jdbcDriver&quot;&nbsp;value=&quot;com.mysql.jdbc.Driver&quot;&nbsp;/&gt;
&nbsp;&nbsp;&nbsp;&nbsp;&lt;property&nbsp;name=&quot;jdbcUsername&quot;&nbsp;value=&quot;root&quot;&nbsp;/&gt;
&nbsp;&nbsp;&nbsp;&nbsp;&lt;property&nbsp;name=&quot;jdbcPassword&quot;&nbsp;value=&quot;niubidecc.&quot;&nbsp;/&gt;
&nbsp;&nbsp;&nbsp;&nbsp;&lt;property&nbsp;name=&quot;databaseSchemaUpdate&quot;&nbsp;value=&quot;true&quot;&nbsp;/&gt;
&nbsp;
&nbsp;&nbsp;&lt;/bean&gt;
&nbsp;
&lt;/beans&gt;</pre><p>log4j.properties</p><pre class="brush:xml;toolbar:false">log4j.rootLogger=DEBUG,&nbsp;ACT

log4j.appender.ACT=org.apache.log4j.ConsoleAppender
log4j.appender.ACT.layout=org.apache.log4j.PatternLayout
log4j.appender.ACT.layout.ConversionPattern=&nbsp;%d{hh:mm:ss,SSS}&nbsp;[%t]&nbsp;%-5p&nbsp;%c&nbsp;%x&nbsp;-&nbsp;%m%n</pre><p>创建表</p><pre class="brush:java;toolbar:false">package&nbsp;pers.cc.test;

import&nbsp;org.activiti.engine.ProcessEngine;
import&nbsp;org.activiti.engine.ProcessEngineConfiguration;

public&nbsp;class&nbsp;BuilderEngineDemo&nbsp;{

&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;static&nbsp;void&nbsp;main(String[]&nbsp;args)&nbsp;throws&nbsp;Exception&nbsp;{
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;引擎配置
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ProcessEngineConfiguration&nbsp;cgf&nbsp;=&nbsp;ProcessEngineConfiguration
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;.createProcessEngineConfigurationFromResource(
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&quot;activiti.cfg.xml&quot;);
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;获取流程引擎对象
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ProcessEngine&nbsp;processEngine&nbsp;=&nbsp;cgf.buildProcessEngine();
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;String&nbsp;pName&nbsp;=&nbsp;processEngine.getName();
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;String&nbsp;ver&nbsp;=&nbsp;ProcessEngine.VERSION;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;System.out.println(
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&quot;ProcessEngine&nbsp;[&quot;&nbsp;+&nbsp;pName&nbsp;+&nbsp;&quot;]&nbsp;Version:&nbsp;[&quot;&nbsp;+&nbsp;ver&nbsp;+&nbsp;&quot;]&quot;);
&nbsp;&nbsp;&nbsp;&nbsp;}

}</pre><p><br/></p><p><br/></p>(String), 169(Integer), 0(Integer), avtiviti学习笔记之=>创建avtiviti依赖表(String), 225(String)
2017-09-14 21:27:20.274 DEBUG 8388 --- [http-nio-8080-exec-6] p.p.blog.repository.BlogRepo.update      : <==    Updates: 1
2017-09-14 21:27:20.287 DEBUG 8388 --- [http-nio-8080-exec-6] p.p.blog.repository.CommentRepo.list     : ==>  Preparing: select * from t_comment WHERE blogId=? and state=? order by commentDate desc 
2017-09-14 21:27:20.287 DEBUG 8388 --- [http-nio-8080-exec-6] p.p.blog.repository.CommentRepo.list     : ==> Parameters: 225(String), 1(Integer)
2017-09-14 21:27:20.289 DEBUG 8388 --- [http-nio-8080-exec-6] p.p.blog.repository.CommentRepo.list     : <==      Total: 0
2017-09-14 21:28:10.300 DEBUG 8388 --- [http-nio-8080-exec-4] p.p.blog.repository.BlogRepo.update      : ==>  Preparing: update t_blog SET title=?, summary=?, typeId=?, content=?, clickHit=?, replyHit=?, keyWord=? where id=? 
2017-09-14 21:28:10.301 DEBUG 8388 --- [http-nio-8080-exec-4] p.p.blog.repository.BlogRepo.update      : ==> Parameters: avtiviti学习笔记之=>创建avtiviti依赖表(String), maven加入jar包官方地址:    https://www.activiti.org/community#maven.repositoryactiviti配置官网    https://www.activiti.org/userguide/index.html#configuration 用mysql6的(String), 31(String), <ol class=" list-paddingleft-2" style="list-style-type: decimal;"><li><p>maven加入jar包</p></li></ol><p>官方地址:&nbsp;&nbsp;&nbsp;&nbsp;<a href="https://www.activiti.org/community#maven.repository">https://www.activiti.org/community#maven.repository</a></p><p>activiti配置官网&nbsp;&nbsp;&nbsp;&nbsp;<a href="https://www.activiti.org/userguide/index.html#configuration">https://www.activiti.org/userguide/index.html#configuration</a> </p><p><br/></p><p>用mysql6的jar包会报错,没有找到原因. 用5可以</p><p>pom&nbsp;<br/></p><pre class="brush:xml;toolbar:false">&lt;project&nbsp;xmlns=&quot;http://maven.apache.org/POM/4.0.0&quot;&nbsp;xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;
	xsi:schemaLocation=&quot;http://maven.apache.org/POM/4.0.0&nbsp;http://maven.apache.org/maven-v4_0_0.xsd&quot;&gt;
	&lt;modelVersion&gt;4.0.0&lt;/modelVersion&gt;
	&lt;groupId&gt;pers.cc.activiti&lt;/groupId&gt;
	&lt;artifactId&gt;ActivitiDemo&lt;/artifactId&gt;
	&lt;packaging&gt;war&lt;/packaging&gt;
	&lt;version&gt;0.0.1-SNAPSHOT&lt;/version&gt;
	&lt;name&gt;ActivitiDemo&nbsp;Maven&nbsp;Webapp&lt;/name&gt;
	&lt;url&gt;http://maven.apache.org&lt;/url&gt;

	&lt;properties&gt;
		&lt;avtiviti-version&gt;5.22.0&lt;/avtiviti-version&gt;
	&lt;/properties&gt;
	&lt;dependencies&gt;

		&lt;dependency&gt;
			&lt;groupId&gt;org.activiti&lt;/groupId&gt;
			&lt;artifactId&gt;activiti-engine&lt;/artifactId&gt;
			&lt;version&gt;${avtiviti-version}&lt;/version&gt;
		&lt;/dependency&gt;

		&lt;dependency&gt;
			&lt;groupId&gt;org.activiti&lt;/groupId&gt;
			&lt;artifactId&gt;activiti-spring&lt;/artifactId&gt;
			&lt;version&gt;${avtiviti-version}&lt;/version&gt;
		&lt;/dependency&gt;

		&lt;dependency&gt;
			&lt;groupId&gt;org.activiti&lt;/groupId&gt;
			&lt;artifactId&gt;activiti-bpmn-model&lt;/artifactId&gt;
			&lt;version&gt;${avtiviti-version}&lt;/version&gt;
		&lt;/dependency&gt;

		&lt;dependency&gt;
			&lt;groupId&gt;org.slf4j&lt;/groupId&gt;
			&lt;artifactId&gt;slf4j-api&lt;/artifactId&gt;
			&lt;version&gt;1.7.5&lt;/version&gt;
		&lt;/dependency&gt;
		&lt;dependency&gt;
			&lt;groupId&gt;org.slf4j&lt;/groupId&gt;
			&lt;artifactId&gt;slf4j-log4j12&lt;/artifactId&gt;
			&lt;version&gt;1.7.5&lt;/version&gt;
		&lt;/dependency&gt;
		&lt;dependency&gt;
			&lt;groupId&gt;mysql&lt;/groupId&gt;
			&lt;artifactId&gt;mysql-connector-java&lt;/artifactId&gt;
			&lt;version&gt;5.1.38&lt;/version&gt;
		&lt;/dependency&gt;


	&lt;/dependencies&gt;
	&lt;build&gt;
		&lt;finalName&gt;ActivitiDemo&lt;/finalName&gt;
	&lt;/build&gt;
&lt;/project&gt;</pre><p><br/></p><p>activiti.cfg.xml</p><pre class="brush:xml;toolbar:false">&lt;?xml&nbsp;version=&quot;1.0&quot;&nbsp;encoding=&quot;UTF-8&quot;?&gt;
&lt;beans&nbsp;xmlns=&quot;http://www.springframework.org/schema/beans&quot;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;xsi:schemaLocation=&quot;http://www.springframework.org/schema/beans&nbsp;&nbsp;&nbsp;http://www.springframework.org/schema/beans/spring-beans.xsd&quot;&gt;
&nbsp;
&nbsp;	
&nbsp;&nbsp;&lt;bean&nbsp;id=&quot;processEngineConfiguration&quot;&nbsp;class=&quot;org.activiti.engine.impl.cfg.StandaloneProcessEngineConfiguration&quot;&gt;
&nbsp;
&nbsp;&nbsp;&nbsp;&nbsp;&lt;property&nbsp;name=&quot;jdbcUrl&quot;&nbsp;value=&quot;jdbc:mysql://localhost:3306/db_activiti&quot;/&gt;
&nbsp;&nbsp;&nbsp;&nbsp;&lt;property&nbsp;name=&quot;jdbcDriver&quot;&nbsp;value=&quot;com.mysql.jdbc.Driver&quot;&nbsp;/&gt;
&nbsp;&nbsp;&nbsp;&nbsp;&lt;property&nbsp;name=&quot;jdbcUsername&quot;&nbsp;value=&quot;root&quot;&nbsp;/&gt;
&nbsp;&nbsp;&nbsp;&nbsp;&lt;property&nbsp;name=&quot;jdbcPassword&quot;&nbsp;value=&quot;niubidecc.&quot;&nbsp;/&gt;
&nbsp;&nbsp;&nbsp;&nbsp;&lt;property&nbsp;name=&quot;databaseSchemaUpdate&quot;&nbsp;value=&quot;true&quot;&nbsp;/&gt;
&nbsp;
&nbsp;&nbsp;&lt;/bean&gt;
&nbsp;
&lt;/beans&gt;</pre><p>log4j.properties</p><pre class="brush:xml;toolbar:false">log4j.rootLogger=DEBUG,&nbsp;ACT

log4j.appender.ACT=org.apache.log4j.ConsoleAppender
log4j.appender.ACT.layout=org.apache.log4j.PatternLayout
log4j.appender.ACT.layout.ConversionPattern=&nbsp;%d{hh:mm:ss,SSS}&nbsp;[%t]&nbsp;%-5p&nbsp;%c&nbsp;%x&nbsp;-&nbsp;%m%n</pre><p>创建表</p><pre class="brush:java;toolbar:false">package&nbsp;pers.cc.test;

import&nbsp;org.activiti.engine.ProcessEngine;
import&nbsp;org.activiti.engine.ProcessEngineConfiguration;

public&nbsp;class&nbsp;BuilderEngineDemo&nbsp;{

&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;static&nbsp;void&nbsp;main(String[]&nbsp;args)&nbsp;throws&nbsp;Exception&nbsp;{
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;引擎配置
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ProcessEngineConfiguration&nbsp;cgf&nbsp;=&nbsp;ProcessEngineConfiguration
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;.createProcessEngineConfigurationFromResource(
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&quot;activiti.cfg.xml&quot;);
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;获取流程引擎对象
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ProcessEngine&nbsp;processEngine&nbsp;=&nbsp;cgf.buildProcessEngine();
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;String&nbsp;pName&nbsp;=&nbsp;processEngine.getName();
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;String&nbsp;ver&nbsp;=&nbsp;ProcessEngine.VERSION;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;System.out.println(
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&quot;ProcessEngine&nbsp;[&quot;&nbsp;+&nbsp;pName&nbsp;+&nbsp;&quot;]&nbsp;Version:&nbsp;[&quot;&nbsp;+&nbsp;ver&nbsp;+&nbsp;&quot;]&quot;);
&nbsp;&nbsp;&nbsp;&nbsp;}

}</pre><p><br/></p><p><br/></p>(String), 170(Integer), 0(Integer), avtiviti学习笔记之=>创建avtiviti依赖表(String), 225(String)
2017-09-14 21:28:10.357 DEBUG 8388 --- [http-nio-8080-exec-4] p.p.blog.repository.BlogRepo.update      : <==    Updates: 1
2017-09-14 21:28:10.384 DEBUG 8388 --- [http-nio-8080-exec-4] p.p.blog.repository.CommentRepo.list     : ==>  Preparing: select * from t_comment WHERE blogId=? and state=? order by commentDate desc 
2017-09-14 21:28:10.391 DEBUG 8388 --- [http-nio-8080-exec-4] p.p.blog.repository.CommentRepo.list     : ==> Parameters: 225(String), 1(Integer)
2017-09-14 21:28:10.404 DEBUG 8388 --- [http-nio-8080-exec-4] p.p.blog.repository.CommentRepo.list     : <==      Total: 0
2017-09-14 21:28:29.684 DEBUG 8388 --- [http-nio-8080-exec-10] p.p.blog.repository.BlogRepo.update      : ==>  Preparing: update t_blog SET title=?, summary=?, typeId=?, content=?, clickHit=?, replyHit=?, keyWord=? where id=? 
2017-09-14 21:28:29.686 DEBUG 8388 --- [http-nio-8080-exec-10] p.p.blog.repository.BlogRepo.update      : ==> Parameters: avtiviti学习笔记之=>创建avtiviti依赖表(String), maven加入jar包官方地址:    https://www.activiti.org/community#maven.repositoryactiviti配置官网    https://www.activiti.org/userguide/index.html#configuration 用mysql6的(String), 31(String), <ol class=" list-paddingleft-2" style="list-style-type: decimal;"><li><p>maven加入jar包</p></li></ol><p>官方地址:&nbsp;&nbsp;&nbsp;&nbsp;<a href="https://www.activiti.org/community#maven.repository">https://www.activiti.org/community#maven.repository</a></p><p>activiti配置官网&nbsp;&nbsp;&nbsp;&nbsp;<a href="https://www.activiti.org/userguide/index.html#configuration">https://www.activiti.org/userguide/index.html#configuration</a> </p><p><br/></p><p>用mysql6的jar包会报错,没有找到原因. 用5可以</p><p>pom&nbsp;<br/></p><pre class="brush:xml;toolbar:false">&lt;project&nbsp;xmlns=&quot;http://maven.apache.org/POM/4.0.0&quot;&nbsp;xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;
	xsi:schemaLocation=&quot;http://maven.apache.org/POM/4.0.0&nbsp;http://maven.apache.org/maven-v4_0_0.xsd&quot;&gt;
	&lt;modelVersion&gt;4.0.0&lt;/modelVersion&gt;
	&lt;groupId&gt;pers.cc.activiti&lt;/groupId&gt;
	&lt;artifactId&gt;ActivitiDemo&lt;/artifactId&gt;
	&lt;packaging&gt;war&lt;/packaging&gt;
	&lt;version&gt;0.0.1-SNAPSHOT&lt;/version&gt;
	&lt;name&gt;ActivitiDemo&nbsp;Maven&nbsp;Webapp&lt;/name&gt;
	&lt;url&gt;http://maven.apache.org&lt;/url&gt;

	&lt;properties&gt;
		&lt;avtiviti-version&gt;5.22.0&lt;/avtiviti-version&gt;
	&lt;/properties&gt;
	&lt;dependencies&gt;

		&lt;dependency&gt;
			&lt;groupId&gt;org.activiti&lt;/groupId&gt;
			&lt;artifactId&gt;activiti-engine&lt;/artifactId&gt;
			&lt;version&gt;${avtiviti-version}&lt;/version&gt;
		&lt;/dependency&gt;

		&lt;dependency&gt;
			&lt;groupId&gt;org.activiti&lt;/groupId&gt;
			&lt;artifactId&gt;activiti-spring&lt;/artifactId&gt;
			&lt;version&gt;${avtiviti-version}&lt;/version&gt;
		&lt;/dependency&gt;

		&lt;dependency&gt;
			&lt;groupId&gt;org.activiti&lt;/groupId&gt;
			&lt;artifactId&gt;activiti-bpmn-model&lt;/artifactId&gt;
			&lt;version&gt;${avtiviti-version}&lt;/version&gt;
		&lt;/dependency&gt;

		&lt;dependency&gt;
			&lt;groupId&gt;org.slf4j&lt;/groupId&gt;
			&lt;artifactId&gt;slf4j-api&lt;/artifactId&gt;
			&lt;version&gt;1.7.5&lt;/version&gt;
		&lt;/dependency&gt;
		&lt;dependency&gt;
			&lt;groupId&gt;org.slf4j&lt;/groupId&gt;
			&lt;artifactId&gt;slf4j-log4j12&lt;/artifactId&gt;
			&lt;version&gt;1.7.5&lt;/version&gt;
		&lt;/dependency&gt;
		&lt;dependency&gt;
			&lt;groupId&gt;mysql&lt;/groupId&gt;
			&lt;artifactId&gt;mysql-connector-java&lt;/artifactId&gt;
			&lt;version&gt;5.1.38&lt;/version&gt;
		&lt;/dependency&gt;


	&lt;/dependencies&gt;
	&lt;build&gt;
		&lt;finalName&gt;ActivitiDemo&lt;/finalName&gt;
	&lt;/build&gt;
&lt;/project&gt;</pre><p><br/></p><p>activiti.cfg.xml</p><pre class="brush:xml;toolbar:false">&lt;?xml&nbsp;version=&quot;1.0&quot;&nbsp;encoding=&quot;UTF-8&quot;?&gt;
&lt;beans&nbsp;xmlns=&quot;http://www.springframework.org/schema/beans&quot;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;xsi:schemaLocation=&quot;http://www.springframework.org/schema/beans&nbsp;&nbsp;&nbsp;http://www.springframework.org/schema/beans/spring-beans.xsd&quot;&gt;
&nbsp;
&nbsp;	
&nbsp;&nbsp;&lt;bean&nbsp;id=&quot;processEngineConfiguration&quot;&nbsp;class=&quot;org.activiti.engine.impl.cfg.StandaloneProcessEngineConfiguration&quot;&gt;
&nbsp;
&nbsp;&nbsp;&nbsp;&nbsp;&lt;property&nbsp;name=&quot;jdbcUrl&quot;&nbsp;value=&quot;jdbc:mysql://localhost:3306/db_activiti&quot;/&gt;
&nbsp;&nbsp;&nbsp;&nbsp;&lt;property&nbsp;name=&quot;jdbcDriver&quot;&nbsp;value=&quot;com.mysql.jdbc.Driver&quot;&nbsp;/&gt;
&nbsp;&nbsp;&nbsp;&nbsp;&lt;property&nbsp;name=&quot;jdbcUsername&quot;&nbsp;value=&quot;root&quot;&nbsp;/&gt;
&nbsp;&nbsp;&nbsp;&nbsp;&lt;property&nbsp;name=&quot;jdbcPassword&quot;&nbsp;value=&quot;niubidecc.&quot;&nbsp;/&gt;
&nbsp;&nbsp;&nbsp;&nbsp;&lt;property&nbsp;name=&quot;databaseSchemaUpdate&quot;&nbsp;value=&quot;true&quot;&nbsp;/&gt;
&nbsp;
&nbsp;&nbsp;&lt;/bean&gt;
&nbsp;
&lt;/beans&gt;</pre><p>log4j.properties</p><pre class="brush:xml;toolbar:false">log4j.rootLogger=DEBUG,&nbsp;ACT

log4j.appender.ACT=org.apache.log4j.ConsoleAppender
log4j.appender.ACT.layout=org.apache.log4j.PatternLayout
log4j.appender.ACT.layout.ConversionPattern=&nbsp;%d{hh:mm:ss,SSS}&nbsp;[%t]&nbsp;%-5p&nbsp;%c&nbsp;%x&nbsp;-&nbsp;%m%n</pre><p>创建表</p><pre class="brush:java;toolbar:false">package&nbsp;pers.cc.test;

import&nbsp;org.activiti.engine.ProcessEngine;
import&nbsp;org.activiti.engine.ProcessEngineConfiguration;

public&nbsp;class&nbsp;BuilderEngineDemo&nbsp;{

&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;static&nbsp;void&nbsp;main(String[]&nbsp;args)&nbsp;throws&nbsp;Exception&nbsp;{
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;引擎配置
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ProcessEngineConfiguration&nbsp;cgf&nbsp;=&nbsp;ProcessEngineConfiguration
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;.createProcessEngineConfigurationFromResource(
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&quot;activiti.cfg.xml&quot;);
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;获取流程引擎对象
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ProcessEngine&nbsp;processEngine&nbsp;=&nbsp;cgf.buildProcessEngine();
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;String&nbsp;pName&nbsp;=&nbsp;processEngine.getName();
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;String&nbsp;ver&nbsp;=&nbsp;ProcessEngine.VERSION;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;System.out.println(
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&quot;ProcessEngine&nbsp;[&quot;&nbsp;+&nbsp;pName&nbsp;+&nbsp;&quot;]&nbsp;Version:&nbsp;[&quot;&nbsp;+&nbsp;ver&nbsp;+&nbsp;&quot;]&quot;);
&nbsp;&nbsp;&nbsp;&nbsp;}

}</pre><p><br/></p><p><br/></p>(String), 171(Integer), 0(Integer), avtiviti学习笔记之=>创建avtiviti依赖表(String), 225(String)
2017-09-14 21:28:29.690 DEBUG 8388 --- [http-nio-8080-exec-10] p.p.blog.repository.BlogRepo.update      : <==    Updates: 1
2017-09-14 21:28:29.693 DEBUG 8388 --- [http-nio-8080-exec-10] p.p.blog.repository.CommentRepo.list     : ==>  Preparing: select * from t_comment WHERE blogId=? and state=? order by commentDate desc 
2017-09-14 21:28:29.694 DEBUG 8388 --- [http-nio-8080-exec-10] p.p.blog.repository.CommentRepo.list     : ==> Parameters: 225(String), 1(Integer)
2017-09-14 21:28:29.696 DEBUG 8388 --- [http-nio-8080-exec-10] p.p.blog.repository.CommentRepo.list     : <==      Total: 0
2017-09-14 21:28:45.444 DEBUG 8388 --- [http-nio-8080-exec-5] p.p.blog.repository.BlogRepo.update      : ==>  Preparing: update t_blog SET title=?, summary=?, typeId=?, content=?, clickHit=?, replyHit=?, keyWord=? where id=? 
2017-09-14 21:28:45.446 DEBUG 8388 --- [http-nio-8080-exec-5] p.p.blog.repository.BlogRepo.update      : ==> Parameters: avtiviti学习笔记之=>创建avtiviti依赖表(String), maven加入jar包官方地址:    https://www.activiti.org/community#maven.repositoryactiviti配置官网    https://www.activiti.org/userguide/index.html#configuration 用mysql6的(String), 31(String), <ol class=" list-paddingleft-2" style="list-style-type: decimal;"><li><p>maven加入jar包</p></li></ol><p>官方地址:&nbsp;&nbsp;&nbsp;&nbsp;<a href="https://www.activiti.org/community#maven.repository">https://www.activiti.org/community#maven.repository</a></p><p>activiti配置官网&nbsp;&nbsp;&nbsp;&nbsp;<a href="https://www.activiti.org/userguide/index.html#configuration">https://www.activiti.org/userguide/index.html#configuration</a> </p><p><br/></p><p>用mysql6的jar包会报错,没有找到原因. 用5可以</p><p>pom&nbsp;<br/></p><pre class="brush:xml;toolbar:false">&lt;project&nbsp;xmlns=&quot;http://maven.apache.org/POM/4.0.0&quot;&nbsp;xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;
	xsi:schemaLocation=&quot;http://maven.apache.org/POM/4.0.0&nbsp;http://maven.apache.org/maven-v4_0_0.xsd&quot;&gt;
	&lt;modelVersion&gt;4.0.0&lt;/modelVersion&gt;
	&lt;groupId&gt;pers.cc.activiti&lt;/groupId&gt;
	&lt;artifactId&gt;ActivitiDemo&lt;/artifactId&gt;
	&lt;packaging&gt;war&lt;/packaging&gt;
	&lt;version&gt;0.0.1-SNAPSHOT&lt;/version&gt;
	&lt;name&gt;ActivitiDemo&nbsp;Maven&nbsp;Webapp&lt;/name&gt;
	&lt;url&gt;http://maven.apache.org&lt;/url&gt;

	&lt;properties&gt;
		&lt;avtiviti-version&gt;5.22.0&lt;/avtiviti-version&gt;
	&lt;/properties&gt;
	&lt;dependencies&gt;

		&lt;dependency&gt;
			&lt;groupId&gt;org.activiti&lt;/groupId&gt;
			&lt;artifactId&gt;activiti-engine&lt;/artifactId&gt;
			&lt;version&gt;${avtiviti-version}&lt;/version&gt;
		&lt;/dependency&gt;

		&lt;dependency&gt;
			&lt;groupId&gt;org.activiti&lt;/groupId&gt;
			&lt;artifactId&gt;activiti-spring&lt;/artifactId&gt;
			&lt;version&gt;${avtiviti-version}&lt;/version&gt;
		&lt;/dependency&gt;

		&lt;dependency&gt;
			&lt;groupId&gt;org.activiti&lt;/groupId&gt;
			&lt;artifactId&gt;activiti-bpmn-model&lt;/artifactId&gt;
			&lt;version&gt;${avtiviti-version}&lt;/version&gt;
		&lt;/dependency&gt;

		&lt;dependency&gt;
			&lt;groupId&gt;org.slf4j&lt;/groupId&gt;
			&lt;artifactId&gt;slf4j-api&lt;/artifactId&gt;
			&lt;version&gt;1.7.5&lt;/version&gt;
		&lt;/dependency&gt;
		&lt;dependency&gt;
			&lt;groupId&gt;org.slf4j&lt;/groupId&gt;
			&lt;artifactId&gt;slf4j-log4j12&lt;/artifactId&gt;
			&lt;version&gt;1.7.5&lt;/version&gt;
		&lt;/dependency&gt;
		&lt;dependency&gt;
			&lt;groupId&gt;mysql&lt;/groupId&gt;
			&lt;artifactId&gt;mysql-connector-java&lt;/artifactId&gt;
			&lt;version&gt;5.1.38&lt;/version&gt;
		&lt;/dependency&gt;


	&lt;/dependencies&gt;
	&lt;build&gt;
		&lt;finalName&gt;ActivitiDemo&lt;/finalName&gt;
	&lt;/build&gt;
&lt;/project&gt;</pre><p><br/></p><p>activiti.cfg.xml</p><pre class="brush:xml;toolbar:false">&lt;?xml&nbsp;version=&quot;1.0&quot;&nbsp;encoding=&quot;UTF-8&quot;?&gt;
&lt;beans&nbsp;xmlns=&quot;http://www.springframework.org/schema/beans&quot;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;xsi:schemaLocation=&quot;http://www.springframework.org/schema/beans&nbsp;&nbsp;&nbsp;http://www.springframework.org/schema/beans/spring-beans.xsd&quot;&gt;
&nbsp;
&nbsp;	
&nbsp;&nbsp;&lt;bean&nbsp;id=&quot;processEngineConfiguration&quot;&nbsp;class=&quot;org.activiti.engine.impl.cfg.StandaloneProcessEngineConfiguration&quot;&gt;
&nbsp;
&nbsp;&nbsp;&nbsp;&nbsp;&lt;property&nbsp;name=&quot;jdbcUrl&quot;&nbsp;value=&quot;jdbc:mysql://localhost:3306/db_activiti&quot;/&gt;
&nbsp;&nbsp;&nbsp;&nbsp;&lt;property&nbsp;name=&quot;jdbcDriver&quot;&nbsp;value=&quot;com.mysql.jdbc.Driver&quot;&nbsp;/&gt;
&nbsp;&nbsp;&nbsp;&nbsp;&lt;property&nbsp;name=&quot;jdbcUsername&quot;&nbsp;value=&quot;root&quot;&nbsp;/&gt;
&nbsp;&nbsp;&nbsp;&nbsp;&lt;property&nbsp;name=&quot;jdbcPassword&quot;&nbsp;value=&quot;niubidecc.&quot;&nbsp;/&gt;
&nbsp;&nbsp;&nbsp;&nbsp;&lt;property&nbsp;name=&quot;databaseSchemaUpdate&quot;&nbsp;value=&quot;true&quot;&nbsp;/&gt;
&nbsp;
&nbsp;&nbsp;&lt;/bean&gt;
&nbsp;
&lt;/beans&gt;</pre><p>log4j.properties</p><pre class="brush:xml;toolbar:false">log4j.rootLogger=DEBUG,&nbsp;ACT

log4j.appender.ACT=org.apache.log4j.ConsoleAppender
log4j.appender.ACT.layout=org.apache.log4j.PatternLayout
log4j.appender.ACT.layout.ConversionPattern=&nbsp;%d{hh:mm:ss,SSS}&nbsp;[%t]&nbsp;%-5p&nbsp;%c&nbsp;%x&nbsp;-&nbsp;%m%n</pre><p>创建表</p><pre class="brush:java;toolbar:false">package&nbsp;pers.cc.test;

import&nbsp;org.activiti.engine.ProcessEngine;
import&nbsp;org.activiti.engine.ProcessEngineConfiguration;

public&nbsp;class&nbsp;BuilderEngineDemo&nbsp;{

&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;static&nbsp;void&nbsp;main(String[]&nbsp;args)&nbsp;throws&nbsp;Exception&nbsp;{
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;引擎配置
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ProcessEngineConfiguration&nbsp;cgf&nbsp;=&nbsp;ProcessEngineConfiguration
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;.createProcessEngineConfigurationFromResource(
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&quot;activiti.cfg.xml&quot;);
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;获取流程引擎对象
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ProcessEngine&nbsp;processEngine&nbsp;=&nbsp;cgf.buildProcessEngine();
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;String&nbsp;pName&nbsp;=&nbsp;processEngine.getName();
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;String&nbsp;ver&nbsp;=&nbsp;ProcessEngine.VERSION;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;System.out.println(
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&quot;ProcessEngine&nbsp;[&quot;&nbsp;+&nbsp;pName&nbsp;+&nbsp;&quot;]&nbsp;Version:&nbsp;[&quot;&nbsp;+&nbsp;ver&nbsp;+&nbsp;&quot;]&quot;);
&nbsp;&nbsp;&nbsp;&nbsp;}

}</pre><p><br/></p><p><br/></p>(String), 172(Integer), 0(Integer), avtiviti学习笔记之=>创建avtiviti依赖表(String), 225(String)
2017-09-14 21:28:45.494 DEBUG 8388 --- [http-nio-8080-exec-5] p.p.blog.repository.BlogRepo.update      : <==    Updates: 1
2017-09-14 21:28:45.499 DEBUG 8388 --- [http-nio-8080-exec-5] p.p.blog.repository.CommentRepo.list     : ==>  Preparing: select * from t_comment WHERE blogId=? and state=? order by commentDate desc 
2017-09-14 21:28:45.500 DEBUG 8388 --- [http-nio-8080-exec-5] p.p.blog.repository.CommentRepo.list     : ==> Parameters: 225(String), 1(Integer)
2017-09-14 21:28:45.503 DEBUG 8388 --- [http-nio-8080-exec-5] p.p.blog.repository.CommentRepo.list     : <==      Total: 0
2017-09-14 21:29:31.105  INFO 8388 --- [Thread-8] ationConfigEmbeddedWebApplicationContext : Closing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@79e5987d: startup date [Thu Sep 14 21:22:44 CST 2017]; root of context hierarchy
2017-09-14 21:29:31.105  INFO 8388 --- [Thread-8] o.s.c.support.DefaultLifecycleProcessor  : Stopping beans in phase 2147483647
2017-09-14 21:29:31.105  INFO 8388 --- [Thread-8] o.s.c.support.DefaultLifecycleProcessor  : Stopping beans in phase -2147482648
2017-09-14 21:29:31.105  INFO 8388 --- [Thread-8] o.s.j.e.a.AnnotationMBeanExporter        : Unregistering JMX-exposed beans on shutdown
2017-09-14 21:29:31.105  INFO 8388 --- [Thread-8] o.s.j.e.a.AnnotationMBeanExporter        : Unregistering JMX-exposed beans
2017-09-14 21:29:31.121  INFO 8388 --- [Thread-8] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2017-09-14 21:29:31.121  INFO 8388 --- [Thread-8] com.alibaba.druid.pool.DruidDataSource   : {dataSource-1} closed
2017-09-14 21:29:31.356  INFO 8388 --- [localhost-startStop-2] p.p.blog.controller.InitComponent        : deregistering jdbc driver: com.alibaba.druid.mock.MockDriver@67a2c187
2017-09-14 21:29:31.356  INFO 8388 --- [localhost-startStop-2] p.p.blog.controller.InitComponent        : deregistering jdbc driver: com.mysql.jdbc.Driver@10f794e1
2017-09-14 21:29:31.356  INFO 8388 --- [localhost-startStop-2] p.p.blog.controller.InitComponent        : deregistering jdbc driver: com.mysql.fabric.jdbc.FabricMySQLDriver@3448706
2017-09-14 21:29:31.356  INFO 8388 --- [localhost-startStop-2] p.p.blog.controller.InitComponent        : deregistering jdbc driver: com.alibaba.druid.proxy.DruidDriver@1a037b83
2017-09-14 21:29:32.334  INFO 8388 --- [restartedMain] pers.platform.blog.Application           : Starting Application on PC-20160914JGKD with PID 8388 (E:\workspace\pers-cc-platform\pers-platform-blog-web\target\classes started by Administrator in E:\workspace\pers-cc-platform\pers-platform-blog-web)
2017-09-14 21:29:32.334 DEBUG 8388 --- [restartedMain] pers.platform.blog.Application           : Running with Spring Boot v1.5.2.RELEASE, Spring v4.3.7.RELEASE
2017-09-14 21:29:32.334  INFO 8388 --- [restartedMain] pers.platform.blog.Application           : The following profiles are active: test
2017-09-14 21:29:32.334  INFO 8388 --- [restartedMain] ationConfigEmbeddedWebApplicationContext : Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@650b9170: startup date [Thu Sep 14 21:29:32 CST 2017]; root of context hierarchy
2017-09-14 21:29:35.139  INFO 8388 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2017-09-14 21:29:35.202  INFO 8388 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2017-09-14 21:29:35.246  INFO 8388 --- [restartedMain] o.s.b.f.s.DefaultListableBeanFactory     : Overriding bean definition for bean 'httpRequestHandlerAdapter' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.boot.autoconfigure.web.WebMvcAutoConfiguration$EnableWebMvcConfiguration; factoryMethodName=httpRequestHandlerAdapter; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/boot/autoconfigure/web/WebMvcAutoConfiguration$EnableWebMvcConfiguration.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.data.rest.webmvc.config.RepositoryRestMvcConfiguration; factoryMethodName=httpRequestHandlerAdapter; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/data/rest/webmvc/config/RepositoryRestMvcConfiguration.class]]
2017-09-14 21:29:35.366  INFO 8388 --- [restartedMain] o.s.b.f.s.DefaultListableBeanFactory     : Overriding bean definition for bean 'dataSource' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure; factoryMethodName=dataSource; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/alibaba/druid/spring/boot/autoconfigure/DruidDataSourceAutoConfigure.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=true; factoryBeanName=spring.datasource-pers.platform.blog.config.DruidDBConfig; factoryMethodName=dataSource; initMethodName=null; destroyMethodName=(inferred); defined in pers.platform.blog.config.DruidDBConfig]
2017-09-14 21:29:35.471  INFO 8388 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.amqp.rabbit.annotation.RabbitBootstrapConfiguration' of type [org.springframework.amqp.rabbit.annotation.RabbitBootstrapConfiguration$$EnhancerBySpringCGLIB$$dfe2eb2b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017-09-14 21:29:35.489  INFO 8388 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$19772cfd] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017-09-14 21:29:35.581  INFO 8388 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'reidsConfig' of type [pers.platform.blog.config.ReidsConfig$$EnhancerBySpringCGLIB$$cee9c8a6] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017-09-14 21:29:35.604  INFO 8388 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'keyGenerator' of type [pers.platform.blog.config.ReidsConfig$1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017-09-14 21:29:35.605  INFO 8388 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.cache.annotation.ProxyCachingConfiguration' of type [org.springframework.cache.annotation.ProxyCachingConfiguration$$EnhancerBySpringCGLIB$$6289631b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017-09-14 21:29:35.633  INFO 8388 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'shiroConfig' of type [pers.platform.blog.config.ShiroConfig$$EnhancerBySpringCGLIB$$23836372] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017-09-14 21:29:35.818  INFO 8388 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'myShiroRealm' of type [pers.platform.blog.realm.MyRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017-09-14 21:29:35.890  INFO 8388 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2017-09-14 21:29:35.920  INFO 8388 --- [restartedMain] pers.platform.blog.config.ShiroConfig    : 注入Shiro的Web过滤器-->shiroFilter
2017-09-14 21:29:36.401  INFO 8388 --- [restartedMain] s.b.c.e.t.TomcatEmbeddedServletContainer : Tomcat initialized with port(s): 8080 (http)
2017-09-14 21:29:36.402  INFO 8388 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service Tomcat
2017-09-14 21:29:36.403  INFO 8388 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet Engine: Apache Tomcat/8.5.11
2017-09-14 21:29:36.476  INFO 8388 --- [localhost-startStop-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2017-09-14 21:29:36.479  INFO 8388 --- [localhost-startStop-1] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 4145 ms
2017-09-14 21:29:36.862  INFO 8388 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'characterEncodingFilter' to: [/*]
2017-09-14 21:29:36.862  INFO 8388 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2017-09-14 21:29:36.863  INFO 8388 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'httpPutFormContentFilter' to: [/*]
2017-09-14 21:29:36.863  INFO 8388 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'requestContextFilter' to: [/*]
2017-09-14 21:29:36.863  INFO 8388 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'delegatingFilterProxy' to: [/*]
2017-09-14 21:29:36.863  INFO 8388 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'webStatFilter' to urls: [/*]
2017-09-14 21:29:36.863  INFO 8388 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Filter webStatFilter was not registered (possibly already registered?)
2017-09-14 21:29:36.863  INFO 8388 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'shiroFilter' to: [/*]
2017-09-14 21:29:36.863  INFO 8388 --- [localhost-startStop-1] o.s.b.w.servlet.ServletRegistrationBean  : Mapping servlet: 'statViewServlet' to [/druid/*]
2017-09-14 21:29:36.864  INFO 8388 --- [localhost-startStop-1] o.s.b.w.servlet.ServletRegistrationBean  : Mapping servlet: 'dispatcherServlet' to [/]
2017-09-14 21:29:36.864  INFO 8388 --- [localhost-startStop-1] o.s.b.w.servlet.ServletRegistrationBean  : Mapping servlet: 'statViewServlet' to [/druid/*]
2017-09-14 21:29:36.864  INFO 8388 --- [localhost-startStop-1] o.s.b.w.servlet.ServletRegistrationBean  : Servlet statViewServlet was not registered (possibly already registered?)
2017-09-14 21:29:37.434  INFO 8388 --- [localhost-startStop-1] com.alibaba.druid.pool.DruidDataSource   : {dataSource-2} inited
2017-09-14 21:29:37.444 DEBUG 8388 --- [localhost-startStop-1] p.p.blog.repository.BloggerRepo.find     : ==>  Preparing: select * from t_blogger where id=? 
2017-09-14 21:29:37.446 DEBUG 8388 --- [localhost-startStop-1] p.p.blog.repository.BloggerRepo.find     : ==> Parameters: 1(String)
2017-09-14 21:29:37.454 DEBUG 8388 --- [localhost-startStop-1] p.p.blog.repository.BloggerRepo.find     : <==      Total: 1
2017-09-14 21:29:37.507 DEBUG 8388 --- [localhost-startStop-1] p.p.blog.repository.LinkRepo.list        : ==>  Preparing: select * from t_link order by orderNo 
2017-09-14 21:29:37.518 DEBUG 8388 --- [localhost-startStop-1] p.p.blog.repository.LinkRepo.list        : ==> Parameters: 
2017-09-14 21:29:37.529 DEBUG 8388 --- [localhost-startStop-1] p.p.blog.repository.LinkRepo.list        : <==      Total: 2
2017-09-14 21:29:37.569 DEBUG 8388 --- [localhost-startStop-1] p.p.b.repository.BlogTypeRepo.countList  : ==>  Preparing: SELECT t2.id,t2.`typeName`,COUNT(t1.id) AS blogCount FROM t_blog t1 RIGHT JOIN t_blogType t2 ON t1.typeId=t2.id GROUP BY t2.id,t2.typeName ORDER BY t2.orderNo; 
2017-09-14 21:29:37.572 DEBUG 8388 --- [localhost-startStop-1] p.p.b.repository.BlogTypeRepo.countList  : ==> Parameters: 
2017-09-14 21:29:37.596 DEBUG 8388 --- [localhost-startStop-1] p.p.b.repository.BlogTypeRepo.countList  : <==      Total: 17
2017-09-14 21:29:37.686 DEBUG 8388 --- [localhost-startStop-1] p.p.blog.repository.BlogRepo.countList   : ==>  Preparing: SELECT DATE_FORMAT (releaseDate,'%Y年%m月') AS releaseDateStr,COUNT(*) AS blogCount FROM t_blog GROUP BY DATE_FORMAT (releaseDate,'%Y年%m月') ORDER BY DATE_FORMAT (releaseDate,'%Y年%m月') DESC 
2017-09-14 21:29:37.688 DEBUG 8388 --- [localhost-startStop-1] p.p.blog.repository.BlogRepo.countList   : ==> Parameters: 
2017-09-14 21:29:37.702 DEBUG 8388 --- [localhost-startStop-1] p.p.blog.repository.BlogRepo.countList   : <==      Total: 12
2017-09-14 21:29:37.796  INFO 8388 --- [restartedMain] j.LocalContainerEntityManagerFactoryBean : Building JPA container EntityManagerFactory for persistence unit 'default'
2017-09-14 21:29:37.796  INFO 8388 --- [restartedMain] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
2017-09-14 21:29:38.187  INFO 8388 --- [restartedMain] org.hibernate.dialect.Dialect            : HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
2017-09-14 21:29:38.214  INFO 8388 --- [restartedMain] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2017-09-14 21:29:39.728  INFO 8388 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerAdapter : Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@650b9170: startup date [Thu Sep 14 21:29:32 CST 2017]; root of context hierarchy
2017-09-14 21:29:39.766  INFO 8388 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/],methods=[GET]}" onto public java.lang.String pers.platform.blog.Application.index()
2017-09-14 21:29:39.767  INFO 8388 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/blog/q]}" onto public org.springframework.web.servlet.ModelAndView pers.platform.blog.controller.BlogController.search(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2017-09-14 21:29:39.767  INFO 8388 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/blog/articles/{id}.html]}" onto private org.springframework.web.servlet.ModelAndView pers.platform.blog.controller.BlogController.details(java.lang.String,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2017-09-14 21:29:39.767  INFO 8388 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cc/login.html]}" onto public java.lang.String pers.platform.blog.controller.BloggerController.login(pers.platform.blog.model.Blogger,javax.servlet.http.HttpServletRequest)
2017-09-14 21:29:39.768  INFO 8388 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/blogger/aboutMe.html]}" onto public org.springframework.web.servlet.ModelAndView pers.platform.blog.controller.BloggerController.aboutMe() throws java.lang.Exception
2017-09-14 21:29:39.770  INFO 8388 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cc/blog/delete.html]}" onto public java.lang.String pers.platform.blog.controller.cc.BlogCcController.delete(java.lang.String,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2017-09-14 21:29:39.770  INFO 8388 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cc/blog/list.html]}" onto public java.lang.String pers.platform.blog.controller.cc.BlogCcController.list(java.lang.String,java.lang.String,pers.platform.blog.model.Blog,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2017-09-14 21:29:39.771  INFO 8388 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cc/blog/save.html]}" onto public java.lang.String pers.platform.blog.controller.cc.BlogCcController.save(pers.platform.blog.model.Blog,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2017-09-14 21:29:39.771  INFO 8388 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cc/blog/findById.html]}" onto public java.lang.String pers.platform.blog.controller.cc.BlogCcController.findById(java.lang.String,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2017-09-14 21:29:39.771  INFO 8388 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cc/blog/uploadPastImage]}" onto public java.lang.String pers.platform.blog.controller.cc.BlogCcController.uploadPastImage(javax.servlet.http.HttpServletRequest,java.lang.String) throws java.lang.Exception
2017-09-14 21:29:39.771  INFO 8388 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cc/blog/ckeditorUpload]}" onto public java.lang.String pers.platform.blog.controller.cc.BlogCcController.upLoadImage(javax.servlet.http.HttpServletRequest,org.springframework.web.multipart.MultipartFile,java.lang.String) throws java.lang.Exception
2017-09-14 21:29:39.771  INFO 8388 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cc/blog/modifyBlog.html]}" onto public org.springframework.web.servlet.ModelAndView pers.platform.blog.controller.cc.BlogCcController.modifyBlog(java.lang.String,javax.servlet.http.HttpServletResponse)
2017-09-14 21:29:39.773  INFO 8388 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cc/blogger/find.html]}" onto public java.lang.String pers.platform.blog.controller.cc.BloggerCcController.find(javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2017-09-14 21:29:39.773  INFO 8388 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cc/blogger/save.html]}" onto public java.lang.String pers.platform.blog.controller.cc.BloggerCcController.save(org.springframework.web.multipart.MultipartFile,pers.platform.blog.model.Blogger,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2017-09-14 21:29:39.784  INFO 8388 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cc/blogger/logout.html]}" onto public java.lang.String pers.platform.blog.controller.cc.BloggerCcController.logout() throws java.lang.Exception
2017-09-14 21:29:39.785  INFO 8388 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cc/blogger/modifyPassword.html]}" onto public java.lang.String pers.platform.blog.controller.cc.BloggerCcController.modifyPassword(java.lang.String,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2017-09-14 21:29:39.786  INFO 8388 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cc/blogType/delete.html]}" onto public java.lang.String pers.platform.blog.controller.cc.BlogTypeCcController.delete(java.lang.String,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2017-09-14 21:29:39.787  INFO 8388 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cc/blogType/list.html]}" onto public java.lang.String pers.platform.blog.controller.cc.BlogTypeCcController.list(java.lang.String,java.lang.String,pers.platform.blog.model.BlogType,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2017-09-14 21:29:39.787  INFO 8388 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cc/blogType/save.html]}" onto public java.lang.String pers.platform.blog.controller.cc.BlogTypeCcController.save(pers.platform.blog.model.BlogType,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2017-09-14 21:29:39.788  INFO 8388 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cc/blogType/findById.html]}" onto public java.lang.String pers.platform.blog.controller.cc.BlogTypeCcController.findById(java.lang.String,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2017-09-14 21:29:39.790  INFO 8388 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cc/comment/delete.html]}" onto public java.lang.String pers.platform.blog.controller.cc.CommentCcController.delete(java.lang.String,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2017-09-14 21:29:39.791  INFO 8388 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cc/comment/review.html]}" onto public java.lang.String pers.platform.blog.controller.cc.CommentCcController.delete(java.lang.String,java.lang.Integer,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2017-09-14 21:29:39.791  INFO 8388 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cc/comment/list.html]}" onto public java.lang.String pers.platform.blog.controller.cc.CommentCcController.list(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2017-09-14 21:29:39.792  INFO 8388 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cc/link/delete.html]}" onto public java.lang.String pers.platform.blog.controller.cc.LinkCcController.delete(java.lang.String,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2017-09-14 21:29:39.793  INFO 8388 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cc/link/list.html]}" onto public java.lang.String pers.platform.blog.controller.cc.LinkCcController.list(java.lang.String,java.lang.String,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2017-09-14 21:29:39.793  INFO 8388 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cc/link/save.html]}" onto public java.lang.String pers.platform.blog.controller.cc.LinkCcController.save(pers.platform.blog.model.Link,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2017-09-14 21:29:39.797  INFO 8388 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/cc/system/refreshSystem.html]}" onto public java.lang.String pers.platform.blog.controller.cc.SystemCcController.refreshSystem(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2017-09-14 21:29:39.797  INFO 8388 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/comment/save.html]}" onto public java.lang.String pers.platform.blog.controller.CommentController.save(pers.platform.blog.model.Comment,java.lang.String,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpSession) throws java.lang.Exception
2017-09-14 21:29:39.804  INFO 8388 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/index]}" onto public org.springframework.web.servlet.ModelAndView pers.platform.blog.controller.IndexContrller.index(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2017-09-14 21:29:39.804  INFO 8388 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/download.html]}" onto public org.springframework.web.servlet.ModelAndView pers.platform.blog.controller.IndexContrller.download() throws java.lang.Exception
2017-09-14 21:29:39.807  INFO 8388 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2017-09-14 21:29:39.808  INFO 8388 --- [restartedMain] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2017-09-14 21:29:39.836  INFO 8388 --- [restartedMain] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/cc/main.html] onto handler of type [class org.springframework.web.servlet.mvc.ParameterizableViewController]
2017-09-14 21:29:39.836  INFO 8388 --- [restartedMain] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/cc/blog.html] onto handler of type [class org.springframework.web.servlet.mvc.ParameterizableViewController]
2017-09-14 21:29:39.836  INFO 8388 --- [restartedMain] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/cc/commentReview.html] onto handler of type [class org.springframework.web.servlet.mvc.ParameterizableViewController]
2017-09-14 21:29:39.836  INFO 8388 --- [restartedMain] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/cc/blogManage.html] onto handler of type [class org.springframework.web.servlet.mvc.ParameterizableViewController]
2017-09-14 21:29:39.836  INFO 8388 --- [restartedMain] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/cc/blogTypeManage.html] onto handler of type [class org.springframework.web.servlet.mvc.ParameterizableViewController]
2017-09-14 21:29:39.837  INFO 8388 --- [restartedMain] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/cc/commentManage.html] onto handler of type [class org.springframework.web.servlet.mvc.ParameterizableViewController]
2017-09-14 21:29:39.837  INFO 8388 --- [restartedMain] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/cc/modifyInfo.html] onto handler of type [class org.springframework.web.servlet.mvc.ParameterizableViewController]
2017-09-14 21:29:39.837  INFO 8388 --- [restartedMain] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/cc/linkManage.html] onto handler of type [class org.springframework.web.servlet.mvc.ParameterizableViewController]
2017-09-14 21:29:39.861  INFO 8388 --- [restartedMain] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2017-09-14 21:29:39.862  INFO 8388 --- [restartedMain] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2017-09-14 21:29:39.898  INFO 8388 --- [restartedMain] .m.m.a.ExceptionHandlerExceptionResolver : Detected @ExceptionHandler methods in repositoryRestExceptionHandler
2017-09-14 21:29:39.976  INFO 8388 --- [restartedMain] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2017-09-14 21:29:41.191  INFO 8388 --- [restartedMain] o.s.d.r.w.RepositoryRestHandlerAdapter   : Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@650b9170: startup date [Thu Sep 14 21:29:32 CST 2017]; root of context hierarchy
2017-09-14 21:29:41.216  INFO 8388 --- [restartedMain] o.s.d.r.w.RepositoryRestHandlerMapping   : Mapped "{[/{repository}/{id}/{property}],methods=[GET],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<org.springframework.hateoas.ResourceSupport> org.springframework.data.rest.webmvc.RepositoryPropertyReferenceController.followPropertyReference(org.springframework.data.rest.webmvc.RootResourceInformation,java.io.Serializable,java.lang.String,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler) throws java.lang.Exception
2017-09-14 21:29:41.217  INFO 8388 --- [restartedMain] o.s.d.r.w.RepositoryRestHandlerMapping   : Mapped "{[/{repository}/{id}/{property}/{propertyId}],methods=[GET],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<org.springframework.hateoas.ResourceSupport> org.springframework.data.rest.webmvc.RepositoryPropertyReferenceController.followPropertyReference(org.springframework.data.rest.webmvc.RootResourceInformation,java.io.Serializable,java.lang.String,java.lang.String,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler) throws java.lang.Exception
2017-09-14 21:29:41.217  INFO 8388 --- [restartedMain] o.s.d.r.w.RepositoryRestHandlerMapping   : Mapped "{[/{repository}/{id}/{property}],methods=[DELETE],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<? extends org.springframework.hateoas.ResourceSupport> org.springframework.data.rest.webmvc.RepositoryPropertyReferenceController.deletePropertyReference(org.springframework.data.rest.webmvc.RootResourceInformation,java.io.Serializable,java.lang.String) throws java.lang.Exception
2017-09-14 21:29:41.217  INFO 8388 --- [restartedMain] o.s.d.r.w.RepositoryRestHandlerMapping   : Mapped "{[/{repository}/{id}/{property}],methods=[GET],produces=[application/x-spring-data-compact+json || text/uri-list]}" onto public org.springframework.http.ResponseEntity<org.springframework.hateoas.ResourceSupport> org.springframework.data.rest.webmvc.RepositoryPropertyReferenceController.followPropertyReferenceCompact(org.springframework.data.rest.webmvc.RootResourceInformation,java.io.Serializable,java.lang.String,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler) throws java.lang.Exception
2017-09-14 21:29:41.218  INFO 8388 --- [restartedMain] o.s.d.r.w.RepositoryRestHandlerMapping   : Mapped "{[/{repository}/{id}/{property}],methods=[PATCH || PUT || POST],consumes=[application/json || application/x-spring-data-compact+json || text/uri-list],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<? extends org.springframework.hateoas.ResourceSupport> org.springframework.data.rest.webmvc.RepositoryPropertyReferenceController.createPropertyReference(org.springframework.data.rest.webmvc.RootResourceInformation,org.springframework.http.HttpMethod,org.springframework.hateoas.Resources<java.lang.Object>,java.io.Serializable,java.lang.String) throws java.lang.Exception
2017-09-14 21:29:41.218  INFO 8388 --- [restartedMain] o.s.d.r.w.RepositoryRestHandlerMapping   : Mapped "{[/{repository}/{id}/{property}/{propertyId}],methods=[DELETE],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<org.springframework.hateoas.ResourceSupport> org.springframework.data.rest.webmvc.RepositoryPropertyReferenceController.deletePropertyReferenceId(org.springframework.data.rest.webmvc.RootResourceInformation,java.io.Serializable,java.lang.String,java.lang.String) throws java.lang.Exception
2017-09-14 21:29:41.220  INFO 8388 --- [restartedMain] o.s.d.r.w.RepositoryRestHandlerMapping   : Mapped "{[/{repository}/search],methods=[OPTIONS],produces=[application/hal+json || application/json]}" onto public org.springframework.http.HttpEntity<?> org.springframework.data.rest.webmvc.RepositorySearchController.optionsForSearches(org.springframework.data.rest.webmvc.RootResourceInformation)
2017-09-14 21:29:41.221  INFO 8388 --- [restartedMain] o.s.d.r.w.RepositoryRestHandlerMapping   : Mapped "{[/{repository}/search/{search}],methods=[GET],produces=[application/x-spring-data-compact+json]}" onto public org.springframework.hateoas.ResourceSupport org.springframework.data.rest.webmvc.RepositorySearchController.executeSearchCompact(org.springframework.data.rest.webmvc.RootResourceInformation,org.springframework.http.HttpHeaders,org.springframework.util.MultiValueMap<java.lang.String, java.lang.Object>,java.lang.String,java.lang.String,org.springframework.data.rest.webmvc.support.DefaultedPageable,org.springframework.data.domain.Sort,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler)
2017-09-14 21:29:41.221  INFO 8388 --- [restartedMain] o.s.d.r.w.RepositoryRestHandlerMapping   : Mapped "{[/{repository}/search],methods=[HEAD],produces=[application/hal+json || application/json]}" onto public org.springframework.http.HttpEntity<?> org.springframework.data.rest.webmvc.RepositorySearchController.headForSearches(org.springframework.data.rest.webmvc.RootResourceInformation)
2017-09-14 21:29:41.222  INFO 8388 --- [restartedMain] o.s.d.r.w.RepositoryRestHandlerMapping   : Mapped "{[/{repository}/search/{search}],methods=[GET],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.data.rest.webmvc.RepositorySearchController.executeSearch(org.springframework.data.rest.webmvc.RootResourceInformation,org.springframework.util.MultiValueMap<java.lang.String, java.lang.Object>,java.lang.String,org.springframework.data.rest.webmvc.support.DefaultedPageable,org.springframework.data.domain.Sort,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler,org.springframework.http.HttpHeaders)
2017-09-14 21:29:41.222  INFO 8388 --- [restartedMain] o.s.d.r.w.RepositoryRestHandlerMapping   : Mapped "{[/{repository}/search],methods=[GET],produces=[application/hal+json || application/json]}" onto public org.springframework.data.rest.webmvc.RepositorySearchesResource org.springframework.data.rest.webmvc.RepositorySearchController.listSearches(org.springframework.data.rest.webmvc.RootResourceInformation)
2017-09-14 21:29:41.223  INFO 8388 --- [restartedMain] o.s.d.r.w.RepositoryRestHandlerMapping   : Mapped "{[/{repository}/search/{search}],methods=[OPTIONS],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<java.lang.Object> org.springframework.data.rest.webmvc.RepositorySearchController.optionsForSearch(org.springframework.data.rest.webmvc.RootResourceInformation,java.lang.String)
2017-09-14 21:29:41.223  INFO 8388 --- [restartedMain] o.s.d.r.w.RepositoryRestHandlerMapping   : Mapped "{[/{repository}/search/{search}],methods=[HEAD],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<java.lang.Object> org.springframework.data.rest.webmvc.RepositorySearchController.headForSearch(org.springframework.data.rest.webmvc.RootResourceInformation,java.lang.String)
2017-09-14 21:29:41.224  INFO 8388 --- [restartedMain] o.s.d.r.w.RepositoryRestHandlerMapping   : Mapped "{[/ || ],methods=[OPTIONS],produces=[application/hal+json || application/json]}" onto public org.springframework.http.HttpEntity<?> org.springframework.data.rest.webmvc.RepositoryController.optionsForRepositories()
2017-09-14 21:29:41.225  INFO 8388 --- [restartedMain] o.s.d.r.w.RepositoryRestHandlerMapping   : Mapped "{[/ || ],methods=[HEAD],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.data.rest.webmvc.RepositoryController.headForRepositories()
2017-09-14 21:29:41.225  INFO 8388 --- [restartedMain] o.s.d.r.w.RepositoryRestHandlerMapping   : Mapped "{[/ || ],methods=[GET],produces=[application/hal+json || application/json]}" onto public org.springframework.http.HttpEntity<org.springframework.data.rest.webmvc.RepositoryLinksResource> org.springframework.data.rest.webmvc.RepositoryController.listRepositories()
2017-09-14 21:29:41.228  INFO 8388 --- [restartedMain] o.s.d.r.w.RepositoryRestHandlerMapping   : Mapped "{[/{repository}],methods=[OPTIONS],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.data.rest.webmvc.RepositoryEntityController.optionsForCollectionResource(org.springframework.data.rest.webmvc.RootResourceInformation)
2017-09-14 21:29:41.229  INFO 8388 --- [restartedMain] o.s.d.r.w.RepositoryRestHandlerMapping   : Mapped "{[/{repository}],methods=[HEAD],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.data.rest.webmvc.RepositoryEntityController.headCollectionResource(org.springframework.data.rest.webmvc.RootResourceInformation,org.springframework.data.rest.webmvc.support.DefaultedPageable) throws org.springframework.web.HttpRequestMethodNotSupportedException
2017-09-14 21:29:41.230  INFO 8388 --- [restartedMain] o.s.d.r.w.RepositoryRestHandlerMapping   : Mapped "{[/{repository}],methods=[GET],produces=[application/hal+json || application/json]}" onto public org.springframework.hateoas.Resources<?> org.springframework.data.rest.webmvc.RepositoryEntityController.getCollectionResource(org.springframework.data.rest.webmvc.RootResourceInformation,org.springframework.data.rest.webmvc.support.DefaultedPageable,org.springframework.data.domain.Sort,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler) throws org.springframework.data.rest.webmvc.ResourceNotFoundException,org.springframework.web.HttpRequestMethodNotSupportedException
2017-09-14 21:29:41.231  INFO 8388 --- [restartedMain] o.s.d.r.w.RepositoryRestHandlerMapping   : Mapped "{[/{repository}],methods=[GET],produces=[application/x-spring-data-compact+json || text/uri-list]}" onto public org.springframework.hateoas.Resources<?> org.springframework.data.rest.webmvc.RepositoryEntityController.getCollectionResourceCompact(org.springframework.data.rest.webmvc.RootResourceInformation,org.springframework.data.rest.webmvc.support.DefaultedPageable,org.springframework.data.domain.Sort,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler) throws org.springframework.data.rest.webmvc.ResourceNotFoundException,org.springframework.web.HttpRequestMethodNotSupportedException
2017-09-14 21:29:41.231  INFO 8388 --- [restartedMain] o.s.d.r.w.RepositoryRestHandlerMapping   : Mapped "{[/{repository}],methods=[POST],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<org.springframework.hateoas.ResourceSupport> org.springframework.data.rest.webmvc.RepositoryEntityController.postCollectionResource(org.springframework.data.rest.webmvc.RootResourceInformation,org.springframework.data.rest.webmvc.PersistentEntityResource,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler,java.lang.String) throws org.springframework.web.HttpRequestMethodNotSupportedException
2017-09-14 21:29:41.232  INFO 8388 --- [restartedMain] o.s.d.r.w.RepositoryRestHandlerMapping   : Mapped "{[/{repository}/{id}],methods=[OPTIONS],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.data.rest.webmvc.RepositoryEntityController.optionsForItemResource(org.springframework.data.rest.webmvc.RootResourceInformation)
2017-09-14 21:29:41.232  INFO 8388 --- [restartedMain] o.s.d.r.w.RepositoryRestHandlerMapping   : Mapped "{[/{repository}/{id}],methods=[HEAD],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.data.rest.webmvc.RepositoryEntityController.headForItemResource(org.springframework.data.rest.webmvc.RootResourceInformation,java.io.Serializable,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler) throws org.springframework.web.HttpRequestMethodNotSupportedException
2017-09-14 21:29:41.232  INFO 8388 --- [restartedMain] o.s.d.r.w.RepositoryRestHandlerMapping   : Mapped "{[/{repository}/{id}],methods=[PATCH],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<org.springframework.hateoas.ResourceSupport> org.springframework.data.rest.webmvc.RepositoryEntityController.patchItemResource(org.springframework.data.rest.webmvc.RootResourceInformation,org.springframework.data.rest.webmvc.PersistentEntityResource,java.io.Serializable,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler,org.springframework.data.rest.webmvc.support.ETag,java.lang.String) throws org.springframework.web.HttpRequestMethodNotSupportedException,org.springframework.data.rest.webmvc.ResourceNotFoundException
2017-09-14 21:29:41.232  INFO 8388 --- [restartedMain] o.s.d.r.w.RepositoryRestHandlerMapping   : Mapped "{[/{repository}/{id}],methods=[DELETE],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.data.rest.webmvc.RepositoryEntityController.deleteItemResource(org.springframework.data.rest.webmvc.RootResourceInformation,java.io.Serializable,org.springframework.data.rest.webmvc.support.ETag) throws org.springframework.data.rest.webmvc.ResourceNotFoundException,org.springframework.web.HttpRequestMethodNotSupportedException
2017-09-14 21:29:41.233  INFO 8388 --- [restartedMain] o.s.d.r.w.RepositoryRestHandlerMapping   : Mapped "{[/{repository}/{id}],methods=[PUT],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<? extends org.springframework.hateoas.ResourceSupport> org.springframework.data.rest.webmvc.RepositoryEntityController.putItemResource(org.springframework.data.rest.webmvc.RootResourceInformation,org.springframework.data.rest.webmvc.PersistentEntityResource,java.io.Serializable,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler,org.springframework.data.rest.webmvc.support.ETag,java.lang.String) throws org.springframework.web.HttpRequestMethodNotSupportedException
2017-09-14 21:29:41.233  INFO 8388 --- [restartedMain] o.s.d.r.w.RepositoryRestHandlerMapping   : Mapped "{[/{repository}/{id}],methods=[GET],produces=[application/hal+json || application/json]}" onto public org.springframework.http.ResponseEntity<org.springframework.hateoas.Resource<?>> org.springframework.data.rest.webmvc.RepositoryEntityController.getItemResource(org.springframework.data.rest.webmvc.RootResourceInformation,java.io.Serializable,org.springframework.data.rest.webmvc.PersistentEntityResourceAssembler,org.springframework.http.HttpHeaders) throws org.springframework.web.HttpRequestMethodNotSupportedException
2017-09-14 21:29:41.238  INFO 8388 --- [restartedMain] o.s.d.r.w.BasePathAwareHandlerMapping    : Mapped "{[/profile],methods=[GET]}" onto org.springframework.http.HttpEntity<org.springframework.hateoas.ResourceSupport> org.springframework.data.rest.webmvc.ProfileController.listAllFormsOfMetadata()
2017-09-14 21:29:41.238  INFO 8388 --- [restartedMain] o.s.d.r.w.BasePathAwareHandlerMapping    : Mapped "{[/profile],methods=[OPTIONS]}" onto public org.springframework.http.HttpEntity<?> org.springframework.data.rest.webmvc.ProfileController.profileOptions()
2017-09-14 21:29:41.239  INFO 8388 --- [restartedMain] o.s.d.r.w.BasePathAwareHandlerMapping    : Mapped "{[/profile/{repository}],methods=[GET],produces=[application/schema+json]}" onto public org.springframework.http.HttpEntity<org.springframework.data.rest.webmvc.json.JsonSchema> org.springframework.data.rest.webmvc.RepositorySchemaController.schema(org.springframework.data.rest.webmvc.RootResourceInformation)
2017-09-14 21:29:41.239  INFO 8388 --- [restartedMain] o.s.d.r.w.BasePathAwareHandlerMapping    : Mapped "{[/profile/{repository}],methods=[GET],produces=[application/alps+json || */*]}" onto org.springframework.http.HttpEntity<org.springframework.data.rest.webmvc.RootResourceInformation> org.springframework.data.rest.webmvc.alps.AlpsController.descriptor(org.springframework.data.rest.webmvc.RootResourceInformation)
2017-09-14 21:29:41.240  INFO 8388 --- [restartedMain] o.s.d.r.w.BasePathAwareHandlerMapping    : Mapped "{[/profile/{repository}],methods=[OPTIONS],produces=[application/alps+json]}" onto org.springframework.http.HttpEntity<?> org.springframework.data.rest.webmvc.alps.AlpsController.alpsOptions()
2017-09-14 21:29:42.101  INFO 8388 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2017-09-14 21:29:42.359  INFO 8388 --- [restartedMain] o.s.j.e.a.AnnotationMBeanExporter        : Registering beans for JMX exposure on startup
2017-09-14 21:29:42.360  INFO 8388 --- [restartedMain] o.s.j.e.a.AnnotationMBeanExporter        : Bean with name 'statFilter' has been autodetected for JMX exposure
2017-09-14 21:29:42.361  INFO 8388 --- [restartedMain] o.s.j.e.a.AnnotationMBeanExporter        : Bean with name 'dataSource' has been autodetected for JMX exposure
2017-09-14 21:29:42.366  INFO 8388 --- [restartedMain] o.s.j.e.a.AnnotationMBeanExporter        : Bean with name 'rabbitConnectionFactory' has been autodetected for JMX exposure
2017-09-14 21:29:42.369  INFO 8388 --- [restartedMain] o.s.j.e.a.AnnotationMBeanExporter        : Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2017-09-14 21:29:42.371  INFO 8388 --- [restartedMain] o.s.j.e.a.AnnotationMBeanExporter        : Located managed bean 'rabbitConnectionFactory': registering with JMX server as MBean [org.springframework.amqp.rabbit.connection:name=rabbitConnectionFactory,type=CachingConnectionFactory]
2017-09-14 21:29:42.382  INFO 8388 --- [restartedMain] o.s.j.e.a.AnnotationMBeanExporter        : Located MBean 'statFilter': registering with JMX server as MBean [com.alibaba.druid.filter.stat:name=statFilter,type=StatFilter]
2017-09-14 21:29:42.385  INFO 8388 --- [restartedMain] o.s.c.support.DefaultLifecycleProcessor  : Starting beans in phase -2147482648
2017-09-14 21:29:42.385  INFO 8388 --- [restartedMain] o.s.c.support.DefaultLifecycleProcessor  : Starting beans in phase 2147483647
2017-09-14 21:29:42.406  INFO 8388 --- [restartedMain] s.b.c.e.t.TomcatEmbeddedServletContainer : Tomcat started on port(s): 8080 (http)
2017-09-14 21:29:42.413  INFO 8388 --- [restartedMain] pers.platform.blog.Application           : Started Application in 10.297 seconds (JVM running for 422.068)
2017-09-14 21:29:42.458  INFO 8388 --- [http-nio-8080-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring FrameworkServlet 'dispatcherServlet'
2017-09-14 21:29:42.476  INFO 8388 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : FrameworkServlet 'dispatcherServlet': initialization started
2017-09-14 21:29:42.491  INFO 8388 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : FrameworkServlet 'dispatcherServlet': initialization completed in 13 ms
2017-09-14 21:29:42.536 DEBUG 8388 --- [http-nio-8080-exec-1] p.p.blog.repository.BlogRepo.update      : ==>  Preparing: update t_blog SET title=?, summary=?, typeId=?, content=?, clickHit=?, replyHit=?, keyWord=? where id=? 
2017-09-14 21:29:42.540 DEBUG 8388 --- [http-nio-8080-exec-1] p.p.blog.repository.BlogRepo.update      : ==> Parameters: avtiviti学习笔记之=>创建avtiviti依赖表(String), maven加入jar包官方地址:    https://www.activiti.org/community#maven.repositoryactiviti配置官网    https://www.activiti.org/userguide/index.html#configuration 用mysql6的(String), 31(String), <ol class=" list-paddingleft-2" style="list-style-type: decimal;"><li><p>maven加入jar包</p></li></ol><p>官方地址:&nbsp;&nbsp;&nbsp;&nbsp;<a href="https://www.activiti.org/community#maven.repository">https://www.activiti.org/community#maven.repository</a></p><p>activiti配置官网&nbsp;&nbsp;&nbsp;&nbsp;<a href="https://www.activiti.org/userguide/index.html#configuration">https://www.activiti.org/userguide/index.html#configuration</a> </p><p><br/></p><p>用mysql6的jar包会报错,没有找到原因. 用5可以</p><p>pom&nbsp;<br/></p><pre class="brush:xml;toolbar:false">&lt;project&nbsp;xmlns=&quot;http://maven.apache.org/POM/4.0.0&quot;&nbsp;xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;
	xsi:schemaLocation=&quot;http://maven.apache.org/POM/4.0.0&nbsp;http://maven.apache.org/maven-v4_0_0.xsd&quot;&gt;
	&lt;modelVersion&gt;4.0.0&lt;/modelVersion&gt;
	&lt;groupId&gt;pers.cc.activiti&lt;/groupId&gt;
	&lt;artifactId&gt;ActivitiDemo&lt;/artifactId&gt;
	&lt;packaging&gt;war&lt;/packaging&gt;
	&lt;version&gt;0.0.1-SNAPSHOT&lt;/version&gt;
	&lt;name&gt;ActivitiDemo&nbsp;Maven&nbsp;Webapp&lt;/name&gt;
	&lt;url&gt;http://maven.apache.org&lt;/url&gt;

	&lt;properties&gt;
		&lt;avtiviti-version&gt;5.22.0&lt;/avtiviti-version&gt;
	&lt;/properties&gt;
	&lt;dependencies&gt;

		&lt;dependency&gt;
			&lt;groupId&gt;org.activiti&lt;/groupId&gt;
			&lt;artifactId&gt;activiti-engine&lt;/artifactId&gt;
			&lt;version&gt;${avtiviti-version}&lt;/version&gt;
		&lt;/dependency&gt;

		&lt;dependency&gt;
			&lt;groupId&gt;org.activiti&lt;/groupId&gt;
			&lt;artifactId&gt;activiti-spring&lt;/artifactId&gt;
			&lt;version&gt;${avtiviti-version}&lt;/version&gt;
		&lt;/dependency&gt;

		&lt;dependency&gt;
			&lt;groupId&gt;org.activiti&lt;/groupId&gt;
			&lt;artifactId&gt;activiti-bpmn-model&lt;/artifactId&gt;
			&lt;version&gt;${avtiviti-version}&lt;/version&gt;
		&lt;/dependency&gt;

		&lt;dependency&gt;
			&lt;groupId&gt;org.slf4j&lt;/groupId&gt;
			&lt;artifactId&gt;slf4j-api&lt;/artifactId&gt;
			&lt;version&gt;1.7.5&lt;/version&gt;
		&lt;/dependency&gt;
		&lt;dependency&gt;
			&lt;groupId&gt;org.slf4j&lt;/groupId&gt;
			&lt;artifactId&gt;slf4j-log4j12&lt;/artifactId&gt;
			&lt;version&gt;1.7.5&lt;/version&gt;
		&lt;/dependency&gt;
		&lt;dependency&gt;
			&lt;groupId&gt;mysql&lt;/groupId&gt;
			&lt;artifactId&gt;mysql-connector-java&lt;/artifactId&gt;
			&lt;version&gt;5.1.38&lt;/version&gt;
		&lt;/dependency&gt;


	&lt;/dependencies&gt;
	&lt;build&gt;
		&lt;finalName&gt;ActivitiDemo&lt;/finalName&gt;
	&lt;/build&gt;
&lt;/project&gt;</pre><p><br/></p><p>activiti.cfg.xml</p><pre class="brush:xml;toolbar:false">&lt;?xml&nbsp;version=&quot;1.0&quot;&nbsp;encoding=&quot;UTF-8&quot;?&gt;
&lt;beans&nbsp;xmlns=&quot;http://www.springframework.org/schema/beans&quot;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;xsi:schemaLocation=&quot;http://www.springframework.org/schema/beans&nbsp;&nbsp;&nbsp;http://www.springframework.org/schema/beans/spring-beans.xsd&quot;&gt;
&nbsp;
&nbsp;	
&nbsp;&nbsp;&lt;bean&nbsp;id=&quot;processEngineConfiguration&quot;&nbsp;class=&quot;org.activiti.engine.impl.cfg.StandaloneProcessEngineConfiguration&quot;&gt;
&nbsp;
&nbsp;&nbsp;&nbsp;&nbsp;&lt;property&nbsp;name=&quot;jdbcUrl&quot;&nbsp;value=&quot;jdbc:mysql://localhost:3306/db_activiti&quot;/&gt;
&nbsp;&nbsp;&nbsp;&nbsp;&lt;property&nbsp;name=&quot;jdbcDriver&quot;&nbsp;value=&quot;com.mysql.jdbc.Driver&quot;&nbsp;/&gt;
&nbsp;&nbsp;&nbsp;&nbsp;&lt;property&nbsp;name=&quot;jdbcUsername&quot;&nbsp;value=&quot;root&quot;&nbsp;/&gt;
&nbsp;&nbsp;&nbsp;&nbsp;&lt;property&nbsp;name=&quot;jdbcPassword&quot;&nbsp;value=&quot;niubidecc.&quot;&nbsp;/&gt;
&nbsp;&nbsp;&nbsp;&nbsp;&lt;property&nbsp;name=&quot;databaseSchemaUpdate&quot;&nbsp;value=&quot;true&quot;&nbsp;/&gt;
&nbsp;
&nbsp;&nbsp;&lt;/bean&gt;
&nbsp;
&lt;/beans&gt;</pre><p>log4j.properties</p><pre class="brush:xml;toolbar:false">log4j.rootLogger=DEBUG,&nbsp;ACT

log4j.appender.ACT=org.apache.log4j.ConsoleAppender
log4j.appender.ACT.layout=org.apache.log4j.PatternLayout
log4j.appender.ACT.layout.ConversionPattern=&nbsp;%d{hh:mm:ss,SSS}&nbsp;[%t]&nbsp;%-5p&nbsp;%c&nbsp;%x&nbsp;-&nbsp;%m%n</pre><p>创建表</p><pre class="brush:java;toolbar:false">package&nbsp;pers.cc.test;

import&nbsp;org.activiti.engine.ProcessEngine;
import&nbsp;org.activiti.engine.ProcessEngineConfiguration;

public&nbsp;class&nbsp;BuilderEngineDemo&nbsp;{

&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;static&nbsp;void&nbsp;main(String[]&nbsp;args)&nbsp;throws&nbsp;Exception&nbsp;{
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;引擎配置
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ProcessEngineConfiguration&nbsp;cgf&nbsp;=&nbsp;ProcessEngineConfiguration
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;.createProcessEngineConfigurationFromResource(
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&quot;activiti.cfg.xml&quot;);
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;获取流程引擎对象
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ProcessEngine&nbsp;processEngine&nbsp;=&nbsp;cgf.buildProcessEngine();
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;String&nbsp;pName&nbsp;=&nbsp;processEngine.getName();
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;String&nbsp;ver&nbsp;=&nbsp;ProcessEngine.VERSION;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;System.out.println(
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&quot;ProcessEngine&nbsp;[&quot;&nbsp;+&nbsp;pName&nbsp;+&nbsp;&quot;]&nbsp;Version:&nbsp;[&quot;&nbsp;+&nbsp;ver&nbsp;+&nbsp;&quot;]&quot;);
&nbsp;&nbsp;&nbsp;&nbsp;}

}</pre><p><br/></p><p><br/></p>(String), 173(Integer), 0(Integer), avtiviti学习笔记之=>创建avtiviti依赖表(String), 225(String)
2017-09-14 21:29:42.547 DEBUG 8388 --- [http-nio-8080-exec-1] p.p.blog.repository.BlogRepo.update      : <==    Updates: 1
2017-09-14 21:29:42.598 DEBUG 8388 --- [http-nio-8080-exec-1] p.p.blog.repository.CommentRepo.list     : ==>  Preparing: select * from t_comment WHERE blogId=? and state=? order by commentDate desc 
2017-09-14 21:29:42.600 DEBUG 8388 --- [http-nio-8080-exec-1] p.p.blog.repository.CommentRepo.list     : ==> Parameters: 225(String), 1(Integer)
2017-09-14 21:29:42.604 DEBUG 8388 --- [http-nio-8080-exec-1] p.p.blog.repository.CommentRepo.list     : <==      Total: 0
2017-09-14 21:29:48.869 DEBUG 8388 --- [http-nio-8080-exec-3] p.p.blog.repository.BlogRepo.list        : ==>  Preparing: select * from t_blog WHERE typeId=? order by releaseDate desc limit ?,? 
2017-09-14 21:29:48.872 DEBUG 8388 --- [http-nio-8080-exec-3] p.p.blog.repository.BlogRepo.list        : ==> Parameters: 31(String), 0(Integer), 10(Integer)
2017-09-14 21:29:48.875 DEBUG 8388 --- [http-nio-8080-exec-3] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 21:29:48.877 DEBUG 8388 --- [http-nio-8080-exec-3] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 31(String)
2017-09-14 21:29:48.879 DEBUG 8388 --- [http-nio-8080-exec-3] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 21:29:48.881 DEBUG 8388 --- [http-nio-8080-exec-3] p.p.blog.repository.BlogRepo.list        : <==      Total: 4
2017-09-14 21:29:48.891 DEBUG 8388 --- [http-nio-8080-exec-3] p.p.blog.repository.BlogRepo.getTotal    : ==>  Preparing: select count(*) from t_blog WHERE typeId=? 
2017-09-14 21:29:48.894 DEBUG 8388 --- [http-nio-8080-exec-3] p.p.blog.repository.BlogRepo.getTotal    : ==> Parameters: 31(String)
2017-09-14 21:29:48.898 DEBUG 8388 --- [http-nio-8080-exec-3] p.p.blog.repository.BlogRepo.getTotal    : <==      Total: 1
2017-09-14 21:30:05.288 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.blog.repository.BlogRepo.update      : ==>  Preparing: update t_blog SET title=?, summary=?, typeId=?, content=?, clickHit=?, replyHit=?, keyWord=? where id=? 
2017-09-14 21:30:05.289 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.blog.repository.BlogRepo.update      : ==> Parameters: Activiti表(String), ACT_RE_*: RE表示repository，这个前缀的表包含了流程定义和流程静态资源ACT_RU_*: RU表示runtime，这些运行时的表，包含流程实例，任务，变量，异步任务等运行中的数据。Activiti只在流程实例执行过程中保存这些数据， 在流程结束时就会删除这些记录。ACT_ID_*: ID表(String), 31(String), <pre class="brush:bash;toolbar:false;">ACT_RE_*:&nbsp;RE表示repository，这个前缀的表包含了流程定义和流程静态资源
ACT_RU_*:&nbsp;RU表示runtime，这些运行时的表，包含流程实例，任务，变量，异步任务等运行中的数据。Activiti只在流程实例执行过程中保存这些数据，&nbsp;在流程结束时就会删除这些记录。
ACT_ID_*:&nbsp;ID表示identity，这些表包含身份信息，比如用户，组等。ACT_HI_*:&nbsp;HI表示history，这些表包含历史数据，比如历史流程实例，&nbsp;变量，任务等。
ACT_GE_*:&nbsp;通用数据，&nbsp;用于不同场景下。ACT_EVT_*:&nbsp;EVT表示EVENT，目前只有一张表ACT_EVT_LOG，存储事件处理日志，方便管理员跟踪处理。</pre><p><br/></p><p>################################</p><p># 部署流程定义涉及到的表</p><p># 流程部署表</p><p>SELECT * FROM act_re_deployment;</p><p><br/></p><p># 流程定义表</p><p>SELECT * FROM act_re_procdef;</p><p><br/></p><p># 资源文件表</p><p>SELECT * FROM act_ge_bytearray;</p><p><br/></p><p># 系统配置表&nbsp;</p><p>SELECT * FROM act_ge_property;</p><p><br/></p><p>################################</p><p># 启动流程实例涉及到的表</p><p># 流程实例运行时 执行对象表</p><p>SELECT * FROM act_ru_execution;</p><p><br/></p><p>&nbsp;# 流程实例运行时 身份联系表</p><p>SELECT * FROM act_ru_identitylink;</p><p><br/></p><p># 流程实例运行时 用户任务表</p><p>SELECT * FROM act_ru_task;</p><p><br/></p><p># 活动节点历史表</p><p>SELECT * FROM act_hi_actinst;</p><p><br/></p><p># 身份联系表 历史</p><p>SELECT * FROM act_hi_identitylink;</p><p><br/></p><p># 流程实例表 历史</p><p>SELECT * FROM act_hi_procinst;</p><p><br/></p><p># 历史任务表&nbsp;</p><p>SELECT * FROM act_hi_taskinst;</p><p><br/></p><p>################################</p><p># 结束流程实例涉及到的表</p><p># 运行时 &nbsp;表数据全部清空</p><p># 历史表 &nbsp;表数据修改 或者增加了数据</p><p><br/></p><p>################################</p><p># 设置流程变量涉及到的表</p><p># 运行时流程变量表</p><p>SELECT * FROM act_ru_variable;</p><p><br/></p><p># 历史流程变量表</p><p>SELECT * FROM act_hi_varinst;</p><p><br/></p>(String), 31(Integer), 0(Integer), Activiti表(String), 306(String)
2017-09-14 21:30:05.292 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.blog.repository.BlogRepo.update      : <==    Updates: 1
2017-09-14 21:30:05.295 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.blog.repository.CommentRepo.list     : ==>  Preparing: select * from t_comment WHERE blogId=? and state=? order by commentDate desc 
2017-09-14 21:30:05.296 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.blog.repository.CommentRepo.list     : ==> Parameters: 306(String), 1(Integer)
2017-09-14 21:30:05.298 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.blog.repository.CommentRepo.list     : <==      Total: 0
2017-09-14 21:30:25.783 DEBUG 8388 --- [http-nio-8080-exec-4] p.p.blog.repository.BlogRepo.list        : ==>  Preparing: select * from t_blog WHERE typeId=? order by releaseDate desc limit ?,? 
2017-09-14 21:30:25.786 DEBUG 8388 --- [http-nio-8080-exec-4] p.p.blog.repository.BlogRepo.list        : ==> Parameters: 25(String), 0(Integer), 10(Integer)
2017-09-14 21:30:25.795 DEBUG 8388 --- [http-nio-8080-exec-4] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 21:30:25.795 DEBUG 8388 --- [http-nio-8080-exec-4] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 25(String)
2017-09-14 21:30:25.797 DEBUG 8388 --- [http-nio-8080-exec-4] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 21:30:25.820 DEBUG 8388 --- [http-nio-8080-exec-4] p.p.blog.repository.BlogRepo.list        : <==      Total: 9
2017-09-14 21:30:25.832 DEBUG 8388 --- [http-nio-8080-exec-4] p.p.blog.repository.BlogRepo.getTotal    : ==>  Preparing: select count(*) from t_blog WHERE typeId=? 
2017-09-14 21:30:25.834 DEBUG 8388 --- [http-nio-8080-exec-4] p.p.blog.repository.BlogRepo.getTotal    : ==> Parameters: 25(String)
2017-09-14 21:30:25.837 DEBUG 8388 --- [http-nio-8080-exec-4] p.p.blog.repository.BlogRepo.getTotal    : <==      Total: 1
2017-09-14 21:30:36.210 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.blog.repository.BlogRepo.list        : ==>  Preparing: select * from t_blog WHERE typeId=? order by releaseDate desc limit ?,? 
2017-09-14 21:30:36.210 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.blog.repository.BlogRepo.list        : ==> Parameters: 25(String), 0(Integer), 10(Integer)
2017-09-14 21:30:36.217 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 21:30:36.217 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 25(String)
2017-09-14 21:30:36.219 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 21:30:36.221 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.blog.repository.BlogRepo.list        : <==      Total: 9
2017-09-14 21:30:36.228 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.blog.repository.BlogRepo.getTotal    : ==>  Preparing: select count(*) from t_blog WHERE typeId=? 
2017-09-14 21:30:36.229 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.blog.repository.BlogRepo.getTotal    : ==> Parameters: 25(String)
2017-09-14 21:30:36.242 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.blog.repository.BlogRepo.getTotal    : <==      Total: 1
2017-09-14 21:30:39.974 DEBUG 8388 --- [http-nio-8080-exec-6] p.p.blog.repository.BlogRepo.findById    : ==>  Preparing: select * from t_blog where id=? 
2017-09-14 21:30:39.976 DEBUG 8388 --- [http-nio-8080-exec-6] p.p.blog.repository.BlogRepo.findById    : ==> Parameters: 202(String)
2017-09-14 21:30:39.979 DEBUG 8388 --- [http-nio-8080-exec-6] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 21:30:39.979 DEBUG 8388 --- [http-nio-8080-exec-6] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 25(String)
2017-09-14 21:30:39.981 DEBUG 8388 --- [http-nio-8080-exec-6] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 21:30:39.982 DEBUG 8388 --- [http-nio-8080-exec-6] p.p.blog.repository.BlogRepo.findById    : <==      Total: 1
2017-09-14 21:30:39.986 DEBUG 8388 --- [http-nio-8080-exec-6] p.p.blog.repository.BlogRepo.update      : ==>  Preparing: update t_blog SET title=?, summary=?, typeId=?, content=?, clickHit=?, replyHit=?, keyWord=? where id=? 
2017-09-14 21:30:39.989 DEBUG 8388 --- [http-nio-8080-exec-6] p.p.blog.repository.BlogRepo.update      : ==> Parameters: 数据结构-链表学习总结(String), 顺序表结构的储存方式非常容易理解,操作也十分方便.但是顺序表结构有如下缺点;    1.在插入或者删除节点时,往往需要移动大量的数据.    2.如果比较大,有时比较难以分配足够的连续存储空间,往往导致内存分配失败,而无法存储.为了克服上述顺序表结构的缺点,可以采用链表结构.链表结构是一种动态存储分配的结构形(String), 25(String), <p style="white-space: normal;">顺序表结构的储存方式非常容易理解,操作也十分方便.但是顺序表结构有如下缺点;</p><p style="white-space: normal;">&nbsp; &nbsp; 1.在插入或者删除节点时,往往需要移动大量的数据.<br/></p><p style="white-space: normal;">&nbsp; &nbsp; 2.如果比较大,有时比较难以分配足够的连续存储空间,往往导致内存分配失败,而无法存储.</p><p style="white-space: normal;"><br/></p><p style="white-space: normal;">为了克服上述顺序表结构的缺点,可以采用链表结构.链表结构是一种动态存储分配的结构形式,可以根据需要动态申请所需的内存单元.</p><p style="white-space: normal;"><br/></p><p style="white-space: normal;"><span style="font-style: italic; font-weight: bold; line-height: 18px;">链表（Linked list）</span></p><p style="white-space: normal;">是一种常见的基础数据结构，是一种<a href="https://zh.wikipedia.org/wiki/%E7%BA%BF%E6%80%A7%E8%A1%A8" title="线性表" style="color: rgb(11, 0, 128); background: none rgb(255, 255, 255); font-size: 15.008px;">线性表</a>，但是并不会按线性的顺序存储数据，而是在每一个节点里存到下一个节点的<a href="https://zh.wikipedia.org/wiki/%E6%8C%87%E9%92%88" title="指针" style="color: rgb(11, 0, 128); background: none rgb(255, 255, 255); font-size: 15.008px;">指针</a>(Pointer)。由于不必须按顺序存储，链表在插入的时候可以达到O(1)的<a href="https://zh.wikipedia.org/wiki/%E8%A4%87%E9%9B%9C%E5%BA%A6" title="复杂度" style="color: rgb(11, 0, 128); background: none rgb(255, 255, 255); font-size: 15.008px;">复杂度</a>，比另一种线性表<a href="https://zh.wikipedia.org/wiki/%E9%A1%BA%E5%BA%8F%E8%A1%A8" title="顺序表" style="color: rgb(11, 0, 128); background: none rgb(255, 255, 255); font-size: 15.008px;">顺序表</a>快得多，但是查找一个节点或者访问特定编号的节点则需要O(n)的时间，而顺序表相应的时间复杂度分别是O(logn)和O(1)。</p><p style="white-space: normal;"><br/></p><p style="white-space: normal;">使用链表结构可以克服数组链表需要预先知道数据大小的缺点，链表结构可以充分利用计算机内存空间，实现灵活的内存动态管理。但是链表失去了数组随机读取的优点，同时链表由于增加了结点的指针域，空间开销比较大。</p><p style="white-space: normal;"><br/></p><h3 style="white-space: normal; background: none rgb(255, 255, 255); margin: 0.3em 0px 0px; overflow: hidden; padding-top: 0.5em; padding-bottom: 0px; border-bottom: none; font-size: 1.2em; line-height: 1.6;"><span class="mw-headline">单向链表</span><span class="mw-editsection" style="-webkit-user-select: none; font-size: small; font-weight: normal; margin-left: 1em; vertical-align: baseline; line-height: 1em; display: inline-block; unicode-bidi: isolate;"><span class="mw-editsection-bracket" style="margin-right: 0.25em; color: rgb(85, 85, 85);">[</span><a href="https://zh.wikipedia.org/w/index.php?title=%E9%93%BE%E8%A1%A8&action=edit&section=3" title="编辑小节：单向链表" style="text-decoration: none; color: rgb(11, 0, 128); background: none;">编辑</a><span class="mw-editsection-bracket" style="margin-left: 0.25em; color: rgb(85, 85, 85);">]</span></span></h3><p style="white-space: normal;">主条目：<a href="https://zh.wikipedia.org/wiki/%E5%8D%95%E5%90%91%E9%93%BE%E8%A1%A8" title="单向链表" style="text-decoration: none; color: rgb(11, 0, 128); background-image: none; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;">单向链表</a></p><p style="margin-top: 0.5em; margin-bottom: 0.5em; white-space: normal; line-height: inherit; color: rgb(37, 37, 37); font-size: 15.008px; background-color: rgb(255, 255, 255);">链表中最简单的一种是单向链表，它包含两个域，一个信息域和一个指针域。这个链接指向列表中的下一个节点，而最后一个节点则指向一个空值。</p><p style="margin-top: 0.5em; margin-bottom: 0.5em; white-space: normal; line-height: inherit; color: rgb(37, 37, 37); font-size: 15.008px; background-color: rgb(255, 255, 255);"><img src="http://blogcc.cc/static/userImages/20170103/1483481518264007013.jpg" title="1483481518264007013.jpg" alt="QQ鎴浘20170104061009.jpg"/><br/></p><p style="margin-top: 0.5em; margin-bottom: 0.5em; white-space: normal; line-height: inherit; color: rgb(37, 37, 37); font-size: 15.008px; background-color: rgb(255, 255, 255);"><br/></p><h3 style="white-space: normal; background: none rgb(255, 255, 255); margin: 0.3em 0px 0px; overflow: hidden; padding-top: 0.5em; padding-bottom: 0px; border-bottom: none; font-size: 1.2em; line-height: 1.6;"><span class="mw-headline">双向链表</span><span class="mw-editsection" style="-webkit-user-select: none; font-size: small; font-weight: normal; margin-left: 1em; vertical-align: baseline; line-height: 1em; display: inline-block; unicode-bidi: isolate;"><span class="mw-editsection-bracket" style="margin-right: 0.25em; color: rgb(85, 85, 85);">[</span><a href="https://zh.wikipedia.org/w/index.php?title=%E9%93%BE%E8%A1%A8&action=edit&section=4" title="编辑小节：双向链表" style="text-decoration: none; color: rgb(11, 0, 128); background: none;">编辑</a><span class="mw-editsection-bracket" style="margin-left: 0.25em; color: rgb(85, 85, 85);">]</span></span></h3><p style="white-space: normal;">主条目：<a href="https://zh.wikipedia.org/wiki/%E5%8F%8C%E5%90%91%E9%93%BE%E8%A1%A8" title="双向链表" style="text-decoration: none; color: rgb(11, 0, 128); background-image: none; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;">双向链表</a></p><p style="margin-top: 0.5em; margin-bottom: 0.5em; white-space: normal; line-height: inherit; color: rgb(37, 37, 37); font-size: 15.008px; background-color: rgb(255, 255, 255);">一种更复杂的链表是“双向链表”或“双面链表”。每个节点有两个连接：一个指向前一个节点，（当此“连接”为第一个“连接”时，指向空值或者空列表）；而另一个指向下一个节点，（当此“连接”为最后一个“连接”时，指向空值或者空列表）</p><p style="white-space: normal;"><img src="http://blogcc.cc/static/userImages/20170103/1483481592586028865.jpg" title="1483481592586028865.jpg" alt="QQ鎴浘20170104061017.jpg"/><br/></p><p style="white-space: normal;"><br/></p><h2 style="white-space: normal; background: none rgb(255, 255, 255); font-weight: normal; margin: 1em 0px 0.25em; overflow: hidden; padding: 0px; border-bottom: 1px solid rgb(170, 170, 170); font-family: &quot;Linux Libertine&quot;, Georgia, Times, serif; line-height: 1.3;"><span class="mw-headline">链表的应用</span><span class="mw-editsection" style="-webkit-user-select: none; font-size: small; margin-left: 1em; vertical-align: baseline; line-height: 1em; display: inline-block; unicode-bidi: isolate; font-family: sans-serif;"><span class="mw-editsection-bracket" style="margin-right: 0.25em; color: rgb(85, 85, 85);">[</span><a href="https://zh.wikipedia.org/w/index.php?title=%E9%93%BE%E8%A1%A8&action=edit&section=9" title="编辑小节：链表的应用" style="text-decoration: none; color: rgb(11, 0, 128); background: none;">编辑</a><span class="mw-editsection-bracket" style="margin-left: 0.25em; color: rgb(85, 85, 85);">]</span></span></h2><p style="white-space: normal;">主条目：<a href="https://zh.wikipedia.org/w/index.php?title=%E9%93%BE%E8%A1%A8%E7%9A%84%E5%BA%94%E7%94%A8&action=edit&redlink=1" class="new" title="链表的应用（页面不存在）" style="text-decoration: none; color: rgb(165, 88, 88); background-image: none; background-position: initial; background-size: initial; background-repeat: initial; background-attachment: initial; background-origin: initial; background-clip: initial;">链表的应用</a></p><p style="margin-top: 0.5em; margin-bottom: 0.5em; white-space: normal; line-height: inherit; color: rgb(37, 37, 37); font-size: 15.008px; background-color: rgb(255, 255, 255);">链表用来构建许多其它数据结构，如堆栈，队列和他们的派生。</p><p style="margin-top: 0.5em; margin-bottom: 0.5em; white-space: normal; line-height: inherit; color: rgb(37, 37, 37); font-size: 15.008px; background-color: rgb(255, 255, 255);">节点的数据域也可以成为另一个链表。通过这种手段，我们可以用列表来构建许多链性数据结构；这个实例产生于Lisp编程语言，在Lisp中链表是初级数据结构，并且现在成为了常见的基础编程模式。 有时候，链表用来生成联合数组，在这种情况下我们称之为联合数列。这种情况下用链表会优于其它数据结构，如自平对分查找树（self-balancing binary search trees）甚至是一些小的数据集合。不管怎样，一些时候一个链表在这样一个树中创建一个节点子集，并且以此来更有效率地转换这个集合。</p><p style="margin-top: 0.5em; margin-bottom: 0.5em; white-space: normal; line-height: inherit; color: rgb(37, 37, 37); font-size: 15.008px; background-color: rgb(255, 255, 255);">&nbsp;&nbsp;&nbsp;&nbsp;<br/></p><p style="margin-top: 0.5em; margin-bottom: 0.5em; white-space: normal; line-height: inherit; color: rgb(37, 37, 37); font-size: 15.008px; background-color: rgb(255, 255, 255);"><span style="font-size: 16px; font-style: italic; font-weight: bold; line-height: 18px;">单向链表操作练习</span></p><hr/><pre class="brush:java;toolbar:false">package&nbsp;com.cc.algorithm.LinkedList;

/**
&nbsp;*&nbsp;单向链表操作
&nbsp;*&nbsp;Created&nbsp;by&nbsp;cc&nbsp;on&nbsp;2017/1/4.
&nbsp;*/
public&nbsp;class&nbsp;LinkedlistDemo&nbsp;{


&nbsp;&nbsp;&nbsp;CLType&nbsp;ClAddEnd(CLType&nbsp;head,Data&nbsp;nodeData){&nbsp;&nbsp;//追加节点操作
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;CLType&nbsp;node,htemp;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;((node=new&nbsp;CLType())==null){
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;System.out.println(&quot;申请内存失败!\n&quot;);&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//分配内存失败
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;null;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}else&nbsp;{
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;node.nodeData=nodeData;&nbsp;&nbsp;//保存数据
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;node.nextNode=null;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//设置节点引用为空,即表末尾
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(head==null){
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;head=node;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;head;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;htemp=head;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;while&nbsp;(htemp.nextNode!=null){&nbsp;&nbsp;&nbsp;&nbsp;//查找链表的末尾
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;htemp=htemp.nextNode;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;htemp.nextNode=node;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;head;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}
&nbsp;&nbsp;&nbsp;}

&nbsp;&nbsp;&nbsp;CLType&nbsp;CLAddFirst(CLType&nbsp;head,Data&nbsp;nodeData){
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;CLType&nbsp;node;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;((node=new&nbsp;CLType())==null){
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;System.out.println(&quot;申请内存失败!\n&quot;);
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;null;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}else&nbsp;{
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;node.nodeData=nodeData;&nbsp;&nbsp;//保存数据
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;node.nextNode=head;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//指向头引用所指节点
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;head=node;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//头引用指向新增节点
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;head;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}
&nbsp;&nbsp;&nbsp;}

&nbsp;&nbsp;&nbsp;CLType&nbsp;CLFindNode(CLType&nbsp;head,String&nbsp;key){&nbsp;&nbsp;&nbsp;//查找节点
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;CLType&nbsp;htemp;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;htemp=head;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//保存链表头引用
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;while&nbsp;(htemp!=null){&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//若节点有效,则进行查找
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(htemp.nodeData.key.compareTo(key)==0){&nbsp;&nbsp;&nbsp;//若节点关键字与传入关键字相同
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;htemp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//返回该节点引用
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;htemp=htemp.nextNode;&nbsp;&nbsp;&nbsp;&nbsp;//处理下一节点
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;null;
&nbsp;&nbsp;&nbsp;}


}

class&nbsp;Data{
&nbsp;&nbsp;&nbsp;&nbsp;String&nbsp;key;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//节点关键字
&nbsp;&nbsp;&nbsp;&nbsp;String&nbsp;name;
&nbsp;&nbsp;&nbsp;&nbsp;int&nbsp;age;
}

/*定义了链表数据元素的类Data及链表的类CLType,引用nextNode用来指向下一个指针*/
class&nbsp;CLType{&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//数据节点类型
&nbsp;&nbsp;&nbsp;&nbsp;Data&nbsp;nodeData=new&nbsp;Data();&nbsp;&nbsp;&nbsp;//定义链表结构
&nbsp;&nbsp;&nbsp;&nbsp;CLType&nbsp;nextNode;
}</pre><p style="white-space: normal;"><br/></p><p><br/></p>(String), 98(Integer), 0(Integer), 链表 linkedList(String), 202(String)
2017-09-14 21:30:39.997 DEBUG 8388 --- [http-nio-8080-exec-6] p.p.blog.repository.BlogRepo.update      : <==    Updates: 1
2017-09-14 21:30:40.003 DEBUG 8388 --- [http-nio-8080-exec-6] p.p.blog.repository.CommentRepo.list     : ==>  Preparing: select * from t_comment WHERE blogId=? and state=? order by commentDate desc 
2017-09-14 21:30:40.003 DEBUG 8388 --- [http-nio-8080-exec-6] p.p.blog.repository.CommentRepo.list     : ==> Parameters: 202(String), 1(Integer)
2017-09-14 21:30:40.005 DEBUG 8388 --- [http-nio-8080-exec-6] p.p.blog.repository.CommentRepo.list     : <==      Total: 0
2017-09-14 21:30:40.010 DEBUG 8388 --- [http-nio-8080-exec-6] p.p.b.repository.BlogRepo.getLastBlog    : ==>  Preparing: select * from t_blog t where ? > t.releaseDate order by releaseDate desc limit 1 
2017-09-14 21:30:40.012 DEBUG 8388 --- [http-nio-8080-exec-6] p.p.b.repository.BlogRepo.getLastBlog    : ==> Parameters: 2017-01-04 07:21:12.0(Timestamp)
2017-09-14 21:30:40.015 DEBUG 8388 --- [http-nio-8080-exec-6] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 21:30:40.015 DEBUG 8388 --- [http-nio-8080-exec-6] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 30(String)
2017-09-14 21:30:40.017 DEBUG 8388 --- [http-nio-8080-exec-6] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 21:30:40.017 DEBUG 8388 --- [http-nio-8080-exec-6] p.p.b.repository.BlogRepo.getLastBlog    : <==      Total: 1
2017-09-14 21:30:40.023 DEBUG 8388 --- [http-nio-8080-exec-6] p.p.b.repository.BlogRepo.getNextBlog    : ==>  Preparing: select * from t_blog t where t.releaseDate > ? order by releaseDate asc limit 1 
2017-09-14 21:30:40.025 DEBUG 8388 --- [http-nio-8080-exec-6] p.p.b.repository.BlogRepo.getNextBlog    : ==> Parameters: 2017-01-04 07:21:12.0(Timestamp)
2017-09-14 21:30:40.028 DEBUG 8388 --- [http-nio-8080-exec-6] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 21:30:40.028 DEBUG 8388 --- [http-nio-8080-exec-6] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 23(String)
2017-09-14 21:30:40.030 DEBUG 8388 --- [http-nio-8080-exec-6] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 21:30:40.031 DEBUG 8388 --- [http-nio-8080-exec-6] p.p.b.repository.BlogRepo.getNextBlog    : <==      Total: 1
2017-09-14 21:30:55.465 DEBUG 8388 --- [http-nio-8080-exec-10] p.p.blog.repository.BlogRepo.list        : ==>  Preparing: select * from t_blog WHERE typeId=? order by releaseDate desc limit ?,? 
2017-09-14 21:30:55.465 DEBUG 8388 --- [http-nio-8080-exec-10] p.p.blog.repository.BlogRepo.list        : ==> Parameters: 31(String), 0(Integer), 10(Integer)
2017-09-14 21:30:55.478 DEBUG 8388 --- [http-nio-8080-exec-10] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 21:30:55.479 DEBUG 8388 --- [http-nio-8080-exec-10] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 31(String)
2017-09-14 21:30:55.482 DEBUG 8388 --- [http-nio-8080-exec-10] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 21:30:55.483 DEBUG 8388 --- [http-nio-8080-exec-10] p.p.blog.repository.BlogRepo.list        : <==      Total: 4
2017-09-14 21:30:55.491 DEBUG 8388 --- [http-nio-8080-exec-10] p.p.blog.repository.BlogRepo.getTotal    : ==>  Preparing: select count(*) from t_blog WHERE typeId=? 
2017-09-14 21:30:55.491 DEBUG 8388 --- [http-nio-8080-exec-10] p.p.blog.repository.BlogRepo.getTotal    : ==> Parameters: 31(String)
2017-09-14 21:30:55.493 DEBUG 8388 --- [http-nio-8080-exec-10] p.p.blog.repository.BlogRepo.getTotal    : <==      Total: 1
2017-09-14 21:30:58.625 DEBUG 8388 --- [http-nio-8080-exec-1] p.p.blog.repository.BlogRepo.update      : ==>  Preparing: update t_blog SET title=?, summary=?, typeId=?, content=?, clickHit=?, replyHit=?, keyWord=? where id=? 
2017-09-14 21:30:58.626 DEBUG 8388 --- [http-nio-8080-exec-1] p.p.blog.repository.BlogRepo.update      : ==> Parameters: avtiviti学习笔记之=>创建avtiviti依赖表(String), maven加入jar包官方地址:    https://www.activiti.org/community#maven.repositoryactiviti配置官网    https://www.activiti.org/userguide/index.html#configuration 用mysql6的(String), 31(String), <ol class=" list-paddingleft-2" style="list-style-type: decimal;"><li><p>maven加入jar包</p></li></ol><p>官方地址:&nbsp;&nbsp;&nbsp;&nbsp;<a href="https://www.activiti.org/community#maven.repository">https://www.activiti.org/community#maven.repository</a></p><p>activiti配置官网&nbsp;&nbsp;&nbsp;&nbsp;<a href="https://www.activiti.org/userguide/index.html#configuration">https://www.activiti.org/userguide/index.html#configuration</a> </p><p><br/></p><p>用mysql6的jar包会报错,没有找到原因. 用5可以</p><p>pom&nbsp;<br/></p><pre class="brush:xml;toolbar:false">&lt;project&nbsp;xmlns=&quot;http://maven.apache.org/POM/4.0.0&quot;&nbsp;xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;
	xsi:schemaLocation=&quot;http://maven.apache.org/POM/4.0.0&nbsp;http://maven.apache.org/maven-v4_0_0.xsd&quot;&gt;
	&lt;modelVersion&gt;4.0.0&lt;/modelVersion&gt;
	&lt;groupId&gt;pers.cc.activiti&lt;/groupId&gt;
	&lt;artifactId&gt;ActivitiDemo&lt;/artifactId&gt;
	&lt;packaging&gt;war&lt;/packaging&gt;
	&lt;version&gt;0.0.1-SNAPSHOT&lt;/version&gt;
	&lt;name&gt;ActivitiDemo&nbsp;Maven&nbsp;Webapp&lt;/name&gt;
	&lt;url&gt;http://maven.apache.org&lt;/url&gt;

	&lt;properties&gt;
		&lt;avtiviti-version&gt;5.22.0&lt;/avtiviti-version&gt;
	&lt;/properties&gt;
	&lt;dependencies&gt;

		&lt;dependency&gt;
			&lt;groupId&gt;org.activiti&lt;/groupId&gt;
			&lt;artifactId&gt;activiti-engine&lt;/artifactId&gt;
			&lt;version&gt;${avtiviti-version}&lt;/version&gt;
		&lt;/dependency&gt;

		&lt;dependency&gt;
			&lt;groupId&gt;org.activiti&lt;/groupId&gt;
			&lt;artifactId&gt;activiti-spring&lt;/artifactId&gt;
			&lt;version&gt;${avtiviti-version}&lt;/version&gt;
		&lt;/dependency&gt;

		&lt;dependency&gt;
			&lt;groupId&gt;org.activiti&lt;/groupId&gt;
			&lt;artifactId&gt;activiti-bpmn-model&lt;/artifactId&gt;
			&lt;version&gt;${avtiviti-version}&lt;/version&gt;
		&lt;/dependency&gt;

		&lt;dependency&gt;
			&lt;groupId&gt;org.slf4j&lt;/groupId&gt;
			&lt;artifactId&gt;slf4j-api&lt;/artifactId&gt;
			&lt;version&gt;1.7.5&lt;/version&gt;
		&lt;/dependency&gt;
		&lt;dependency&gt;
			&lt;groupId&gt;org.slf4j&lt;/groupId&gt;
			&lt;artifactId&gt;slf4j-log4j12&lt;/artifactId&gt;
			&lt;version&gt;1.7.5&lt;/version&gt;
		&lt;/dependency&gt;
		&lt;dependency&gt;
			&lt;groupId&gt;mysql&lt;/groupId&gt;
			&lt;artifactId&gt;mysql-connector-java&lt;/artifactId&gt;
			&lt;version&gt;5.1.38&lt;/version&gt;
		&lt;/dependency&gt;


	&lt;/dependencies&gt;
	&lt;build&gt;
		&lt;finalName&gt;ActivitiDemo&lt;/finalName&gt;
	&lt;/build&gt;
&lt;/project&gt;</pre><p><br/></p><p>activiti.cfg.xml</p><pre class="brush:xml;toolbar:false">&lt;?xml&nbsp;version=&quot;1.0&quot;&nbsp;encoding=&quot;UTF-8&quot;?&gt;
&lt;beans&nbsp;xmlns=&quot;http://www.springframework.org/schema/beans&quot;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;xsi:schemaLocation=&quot;http://www.springframework.org/schema/beans&nbsp;&nbsp;&nbsp;http://www.springframework.org/schema/beans/spring-beans.xsd&quot;&gt;
&nbsp;
&nbsp;	
&nbsp;&nbsp;&lt;bean&nbsp;id=&quot;processEngineConfiguration&quot;&nbsp;class=&quot;org.activiti.engine.impl.cfg.StandaloneProcessEngineConfiguration&quot;&gt;
&nbsp;
&nbsp;&nbsp;&nbsp;&nbsp;&lt;property&nbsp;name=&quot;jdbcUrl&quot;&nbsp;value=&quot;jdbc:mysql://localhost:3306/db_activiti&quot;/&gt;
&nbsp;&nbsp;&nbsp;&nbsp;&lt;property&nbsp;name=&quot;jdbcDriver&quot;&nbsp;value=&quot;com.mysql.jdbc.Driver&quot;&nbsp;/&gt;
&nbsp;&nbsp;&nbsp;&nbsp;&lt;property&nbsp;name=&quot;jdbcUsername&quot;&nbsp;value=&quot;root&quot;&nbsp;/&gt;
&nbsp;&nbsp;&nbsp;&nbsp;&lt;property&nbsp;name=&quot;jdbcPassword&quot;&nbsp;value=&quot;niubidecc.&quot;&nbsp;/&gt;
&nbsp;&nbsp;&nbsp;&nbsp;&lt;property&nbsp;name=&quot;databaseSchemaUpdate&quot;&nbsp;value=&quot;true&quot;&nbsp;/&gt;
&nbsp;
&nbsp;&nbsp;&lt;/bean&gt;
&nbsp;
&lt;/beans&gt;</pre><p>log4j.properties</p><pre class="brush:xml;toolbar:false">log4j.rootLogger=DEBUG,&nbsp;ACT

log4j.appender.ACT=org.apache.log4j.ConsoleAppender
log4j.appender.ACT.layout=org.apache.log4j.PatternLayout
log4j.appender.ACT.layout.ConversionPattern=&nbsp;%d{hh:mm:ss,SSS}&nbsp;[%t]&nbsp;%-5p&nbsp;%c&nbsp;%x&nbsp;-&nbsp;%m%n</pre><p>创建表</p><pre class="brush:java;toolbar:false">package&nbsp;pers.cc.test;

import&nbsp;org.activiti.engine.ProcessEngine;
import&nbsp;org.activiti.engine.ProcessEngineConfiguration;

public&nbsp;class&nbsp;BuilderEngineDemo&nbsp;{

&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;static&nbsp;void&nbsp;main(String[]&nbsp;args)&nbsp;throws&nbsp;Exception&nbsp;{
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;引擎配置
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ProcessEngineConfiguration&nbsp;cgf&nbsp;=&nbsp;ProcessEngineConfiguration
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;.createProcessEngineConfigurationFromResource(
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&quot;activiti.cfg.xml&quot;);
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;获取流程引擎对象
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ProcessEngine&nbsp;processEngine&nbsp;=&nbsp;cgf.buildProcessEngine();
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;String&nbsp;pName&nbsp;=&nbsp;processEngine.getName();
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;String&nbsp;ver&nbsp;=&nbsp;ProcessEngine.VERSION;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;System.out.println(
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&quot;ProcessEngine&nbsp;[&quot;&nbsp;+&nbsp;pName&nbsp;+&nbsp;&quot;]&nbsp;Version:&nbsp;[&quot;&nbsp;+&nbsp;ver&nbsp;+&nbsp;&quot;]&quot;);
&nbsp;&nbsp;&nbsp;&nbsp;}

}</pre><p><br/></p><p><br/></p>(String), 174(Integer), 0(Integer), avtiviti学习笔记之=>创建avtiviti依赖表(String), 225(String)
2017-09-14 21:30:58.635 DEBUG 8388 --- [http-nio-8080-exec-1] p.p.blog.repository.BlogRepo.update      : <==    Updates: 1
2017-09-14 21:30:58.638 DEBUG 8388 --- [http-nio-8080-exec-1] p.p.blog.repository.CommentRepo.list     : ==>  Preparing: select * from t_comment WHERE blogId=? and state=? order by commentDate desc 
2017-09-14 21:30:58.638 DEBUG 8388 --- [http-nio-8080-exec-1] p.p.blog.repository.CommentRepo.list     : ==> Parameters: 225(String), 1(Integer)
2017-09-14 21:30:58.640 DEBUG 8388 --- [http-nio-8080-exec-1] p.p.blog.repository.CommentRepo.list     : <==      Total: 0
2017-09-14 21:31:32.211 DEBUG 8388 --- [http-nio-8080-exec-10] p.p.blog.repository.BlogRepo.update      : ==>  Preparing: update t_blog SET title=?, summary=?, typeId=?, content=?, clickHit=?, replyHit=?, keyWord=? where id=? 
2017-09-14 21:31:32.213 DEBUG 8388 --- [http-nio-8080-exec-10] p.p.blog.repository.BlogRepo.update      : ==> Parameters: avtiviti学习笔记之=>创建avtiviti依赖表(String), maven加入jar包官方地址:    https://www.activiti.org/community#maven.repositoryactiviti配置官网    https://www.activiti.org/userguide/index.html#configuration 用mysql6的(String), 31(String), <ol class=" list-paddingleft-2" style="list-style-type: decimal;"><li><p>maven加入jar包</p></li></ol><p>官方地址:&nbsp;&nbsp;&nbsp;&nbsp;<a href="https://www.activiti.org/community#maven.repository">https://www.activiti.org/community#maven.repository</a></p><p>activiti配置官网&nbsp;&nbsp;&nbsp;&nbsp;<a href="https://www.activiti.org/userguide/index.html#configuration">https://www.activiti.org/userguide/index.html#configuration</a> </p><p><br/></p><p>用mysql6的jar包会报错,没有找到原因. 用5可以</p><p>pom&nbsp;<br/></p><pre class="brush:xml;toolbar:false">&lt;project&nbsp;xmlns=&quot;http://maven.apache.org/POM/4.0.0&quot;&nbsp;xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;
	xsi:schemaLocation=&quot;http://maven.apache.org/POM/4.0.0&nbsp;http://maven.apache.org/maven-v4_0_0.xsd&quot;&gt;
	&lt;modelVersion&gt;4.0.0&lt;/modelVersion&gt;
	&lt;groupId&gt;pers.cc.activiti&lt;/groupId&gt;
	&lt;artifactId&gt;ActivitiDemo&lt;/artifactId&gt;
	&lt;packaging&gt;war&lt;/packaging&gt;
	&lt;version&gt;0.0.1-SNAPSHOT&lt;/version&gt;
	&lt;name&gt;ActivitiDemo&nbsp;Maven&nbsp;Webapp&lt;/name&gt;
	&lt;url&gt;http://maven.apache.org&lt;/url&gt;

	&lt;properties&gt;
		&lt;avtiviti-version&gt;5.22.0&lt;/avtiviti-version&gt;
	&lt;/properties&gt;
	&lt;dependencies&gt;

		&lt;dependency&gt;
			&lt;groupId&gt;org.activiti&lt;/groupId&gt;
			&lt;artifactId&gt;activiti-engine&lt;/artifactId&gt;
			&lt;version&gt;${avtiviti-version}&lt;/version&gt;
		&lt;/dependency&gt;

		&lt;dependency&gt;
			&lt;groupId&gt;org.activiti&lt;/groupId&gt;
			&lt;artifactId&gt;activiti-spring&lt;/artifactId&gt;
			&lt;version&gt;${avtiviti-version}&lt;/version&gt;
		&lt;/dependency&gt;

		&lt;dependency&gt;
			&lt;groupId&gt;org.activiti&lt;/groupId&gt;
			&lt;artifactId&gt;activiti-bpmn-model&lt;/artifactId&gt;
			&lt;version&gt;${avtiviti-version}&lt;/version&gt;
		&lt;/dependency&gt;

		&lt;dependency&gt;
			&lt;groupId&gt;org.slf4j&lt;/groupId&gt;
			&lt;artifactId&gt;slf4j-api&lt;/artifactId&gt;
			&lt;version&gt;1.7.5&lt;/version&gt;
		&lt;/dependency&gt;
		&lt;dependency&gt;
			&lt;groupId&gt;org.slf4j&lt;/groupId&gt;
			&lt;artifactId&gt;slf4j-log4j12&lt;/artifactId&gt;
			&lt;version&gt;1.7.5&lt;/version&gt;
		&lt;/dependency&gt;
		&lt;dependency&gt;
			&lt;groupId&gt;mysql&lt;/groupId&gt;
			&lt;artifactId&gt;mysql-connector-java&lt;/artifactId&gt;
			&lt;version&gt;5.1.38&lt;/version&gt;
		&lt;/dependency&gt;


	&lt;/dependencies&gt;
	&lt;build&gt;
		&lt;finalName&gt;ActivitiDemo&lt;/finalName&gt;
	&lt;/build&gt;
&lt;/project&gt;</pre><p><br/></p><p>activiti.cfg.xml</p><pre class="brush:xml;toolbar:false">&lt;?xml&nbsp;version=&quot;1.0&quot;&nbsp;encoding=&quot;UTF-8&quot;?&gt;
&lt;beans&nbsp;xmlns=&quot;http://www.springframework.org/schema/beans&quot;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;xsi:schemaLocation=&quot;http://www.springframework.org/schema/beans&nbsp;&nbsp;&nbsp;http://www.springframework.org/schema/beans/spring-beans.xsd&quot;&gt;
&nbsp;
&nbsp;	
&nbsp;&nbsp;&lt;bean&nbsp;id=&quot;processEngineConfiguration&quot;&nbsp;class=&quot;org.activiti.engine.impl.cfg.StandaloneProcessEngineConfiguration&quot;&gt;
&nbsp;
&nbsp;&nbsp;&nbsp;&nbsp;&lt;property&nbsp;name=&quot;jdbcUrl&quot;&nbsp;value=&quot;jdbc:mysql://localhost:3306/db_activiti&quot;/&gt;
&nbsp;&nbsp;&nbsp;&nbsp;&lt;property&nbsp;name=&quot;jdbcDriver&quot;&nbsp;value=&quot;com.mysql.jdbc.Driver&quot;&nbsp;/&gt;
&nbsp;&nbsp;&nbsp;&nbsp;&lt;property&nbsp;name=&quot;jdbcUsername&quot;&nbsp;value=&quot;root&quot;&nbsp;/&gt;
&nbsp;&nbsp;&nbsp;&nbsp;&lt;property&nbsp;name=&quot;jdbcPassword&quot;&nbsp;value=&quot;niubidecc.&quot;&nbsp;/&gt;
&nbsp;&nbsp;&nbsp;&nbsp;&lt;property&nbsp;name=&quot;databaseSchemaUpdate&quot;&nbsp;value=&quot;true&quot;&nbsp;/&gt;
&nbsp;
&nbsp;&nbsp;&lt;/bean&gt;
&nbsp;
&lt;/beans&gt;</pre><p>log4j.properties</p><pre class="brush:xml;toolbar:false">log4j.rootLogger=DEBUG,&nbsp;ACT

log4j.appender.ACT=org.apache.log4j.ConsoleAppender
log4j.appender.ACT.layout=org.apache.log4j.PatternLayout
log4j.appender.ACT.layout.ConversionPattern=&nbsp;%d{hh:mm:ss,SSS}&nbsp;[%t]&nbsp;%-5p&nbsp;%c&nbsp;%x&nbsp;-&nbsp;%m%n</pre><p>创建表</p><pre class="brush:java;toolbar:false">package&nbsp;pers.cc.test;

import&nbsp;org.activiti.engine.ProcessEngine;
import&nbsp;org.activiti.engine.ProcessEngineConfiguration;

public&nbsp;class&nbsp;BuilderEngineDemo&nbsp;{

&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;static&nbsp;void&nbsp;main(String[]&nbsp;args)&nbsp;throws&nbsp;Exception&nbsp;{
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;引擎配置
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ProcessEngineConfiguration&nbsp;cgf&nbsp;=&nbsp;ProcessEngineConfiguration
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;.createProcessEngineConfigurationFromResource(
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&quot;activiti.cfg.xml&quot;);
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;获取流程引擎对象
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ProcessEngine&nbsp;processEngine&nbsp;=&nbsp;cgf.buildProcessEngine();
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;String&nbsp;pName&nbsp;=&nbsp;processEngine.getName();
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;String&nbsp;ver&nbsp;=&nbsp;ProcessEngine.VERSION;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;System.out.println(
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&quot;ProcessEngine&nbsp;[&quot;&nbsp;+&nbsp;pName&nbsp;+&nbsp;&quot;]&nbsp;Version:&nbsp;[&quot;&nbsp;+&nbsp;ver&nbsp;+&nbsp;&quot;]&quot;);
&nbsp;&nbsp;&nbsp;&nbsp;}

}</pre><p><br/></p><p><br/></p>(String), 175(Integer), 0(Integer), avtiviti学习笔记之=>创建avtiviti依赖表(String), 225(String)
2017-09-14 21:31:32.218 DEBUG 8388 --- [http-nio-8080-exec-10] p.p.blog.repository.BlogRepo.update      : <==    Updates: 1
2017-09-14 21:31:32.221 DEBUG 8388 --- [http-nio-8080-exec-10] p.p.blog.repository.CommentRepo.list     : ==>  Preparing: select * from t_comment WHERE blogId=? and state=? order by commentDate desc 
2017-09-14 21:31:32.222 DEBUG 8388 --- [http-nio-8080-exec-10] p.p.blog.repository.CommentRepo.list     : ==> Parameters: 225(String), 1(Integer)
2017-09-14 21:31:32.223 DEBUG 8388 --- [http-nio-8080-exec-10] p.p.blog.repository.CommentRepo.list     : <==      Total: 0
2017-09-14 21:32:14.053 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.blog.repository.BlogRepo.list        : ==>  Preparing: select * from t_blog order by releaseDate desc limit ?,? 
2017-09-14 21:32:14.054 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.blog.repository.BlogRepo.list        : ==> Parameters: 0(Integer), 10(Integer)
2017-09-14 21:32:14.057 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 21:32:14.058 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 11(String)
2017-09-14 21:32:14.060 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 21:32:14.061 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 21:32:14.061 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 1(String)
2017-09-14 21:32:14.062 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 21:32:14.063 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 21:32:14.063 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 12(String)
2017-09-14 21:32:14.064 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 21:32:14.066 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 21:32:14.067 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 32(String)
2017-09-14 21:32:14.069 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 21:32:14.070 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.blog.repository.BlogRepo.list        : <==      Total: 10
2017-09-14 21:32:14.075 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.blog.repository.BlogRepo.getTotal    : ==>  Preparing: select count(*) from t_blog 
2017-09-14 21:32:14.076 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.blog.repository.BlogRepo.getTotal    : ==> Parameters: 
2017-09-14 21:32:14.078 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.blog.repository.BlogRepo.getTotal    : <==      Total: 1
2017-09-14 21:32:47.497 DEBUG 8388 --- [http-nio-8080-exec-5] p.p.blog.repository.BlogRepo.list        : ==>  Preparing: select * from t_blog order by releaseDate desc limit ?,? 
2017-09-14 21:32:47.497 DEBUG 8388 --- [http-nio-8080-exec-5] p.p.blog.repository.BlogRepo.list        : ==> Parameters: 0(Integer), 10(Integer)
2017-09-14 21:32:47.501 DEBUG 8388 --- [http-nio-8080-exec-5] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 21:32:47.501 DEBUG 8388 --- [http-nio-8080-exec-5] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 11(String)
2017-09-14 21:32:47.504 DEBUG 8388 --- [http-nio-8080-exec-5] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 21:32:47.506 DEBUG 8388 --- [http-nio-8080-exec-5] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 21:32:47.509 DEBUG 8388 --- [http-nio-8080-exec-5] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 1(String)
2017-09-14 21:32:47.512 DEBUG 8388 --- [http-nio-8080-exec-5] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 21:32:47.515 DEBUG 8388 --- [http-nio-8080-exec-5] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 21:32:47.515 DEBUG 8388 --- [http-nio-8080-exec-5] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 12(String)
2017-09-14 21:32:47.518 DEBUG 8388 --- [http-nio-8080-exec-5] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 21:32:47.520 DEBUG 8388 --- [http-nio-8080-exec-5] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 21:32:47.520 DEBUG 8388 --- [http-nio-8080-exec-5] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 32(String)
2017-09-14 21:32:47.522 DEBUG 8388 --- [http-nio-8080-exec-5] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 21:32:47.524 DEBUG 8388 --- [http-nio-8080-exec-5] p.p.blog.repository.BlogRepo.list        : <==      Total: 10
2017-09-14 21:32:47.528 DEBUG 8388 --- [http-nio-8080-exec-5] p.p.blog.repository.BlogRepo.getTotal    : ==>  Preparing: select count(*) from t_blog 
2017-09-14 21:32:47.528 DEBUG 8388 --- [http-nio-8080-exec-5] p.p.blog.repository.BlogRepo.getTotal    : ==> Parameters: 
2017-09-14 21:32:47.531 DEBUG 8388 --- [http-nio-8080-exec-5] p.p.blog.repository.BlogRepo.getTotal    : <==      Total: 1
2017-09-14 21:33:20.391 DEBUG 8388 --- [http-nio-8080-exec-2] p.p.blog.repository.BlogRepo.list        : ==>  Preparing: select * from t_blog order by releaseDate desc limit ?,? 
2017-09-14 21:33:20.391 DEBUG 8388 --- [http-nio-8080-exec-2] p.p.blog.repository.BlogRepo.list        : ==> Parameters: 0(Integer), 10(Integer)
2017-09-14 21:33:20.395 DEBUG 8388 --- [http-nio-8080-exec-2] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 21:33:20.396 DEBUG 8388 --- [http-nio-8080-exec-2] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 11(String)
2017-09-14 21:33:20.397 DEBUG 8388 --- [http-nio-8080-exec-2] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 21:33:20.398 DEBUG 8388 --- [http-nio-8080-exec-2] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 21:33:20.399 DEBUG 8388 --- [http-nio-8080-exec-2] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 1(String)
2017-09-14 21:33:20.400 DEBUG 8388 --- [http-nio-8080-exec-2] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 21:33:20.402 DEBUG 8388 --- [http-nio-8080-exec-2] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 21:33:20.402 DEBUG 8388 --- [http-nio-8080-exec-2] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 12(String)
2017-09-14 21:33:20.403 DEBUG 8388 --- [http-nio-8080-exec-2] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 21:33:20.404 DEBUG 8388 --- [http-nio-8080-exec-2] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 21:33:20.405 DEBUG 8388 --- [http-nio-8080-exec-2] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 32(String)
2017-09-14 21:33:20.406 DEBUG 8388 --- [http-nio-8080-exec-2] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 21:33:20.409 DEBUG 8388 --- [http-nio-8080-exec-2] p.p.blog.repository.BlogRepo.list        : <==      Total: 10
2017-09-14 21:33:20.416 DEBUG 8388 --- [http-nio-8080-exec-2] p.p.blog.repository.BlogRepo.getTotal    : ==>  Preparing: select count(*) from t_blog 
2017-09-14 21:33:20.417 DEBUG 8388 --- [http-nio-8080-exec-2] p.p.blog.repository.BlogRepo.getTotal    : ==> Parameters: 
2017-09-14 21:33:20.419 DEBUG 8388 --- [http-nio-8080-exec-2] p.p.blog.repository.BlogRepo.getTotal    : <==      Total: 1
2017-09-14 21:33:31.749 DEBUG 8388 --- [http-nio-8080-exec-1] p.p.blog.repository.BlogRepo.findById    : ==>  Preparing: select * from t_blog where id=? 
2017-09-14 21:33:31.750 DEBUG 8388 --- [http-nio-8080-exec-1] p.p.blog.repository.BlogRepo.findById    : ==> Parameters: 315(String)
2017-09-14 21:33:31.753 DEBUG 8388 --- [http-nio-8080-exec-1] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 21:33:31.754 DEBUG 8388 --- [http-nio-8080-exec-1] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 32(String)
2017-09-14 21:33:31.756 DEBUG 8388 --- [http-nio-8080-exec-1] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 21:33:31.756 DEBUG 8388 --- [http-nio-8080-exec-1] p.p.blog.repository.BlogRepo.findById    : <==      Total: 1
2017-09-14 21:33:31.763 DEBUG 8388 --- [http-nio-8080-exec-1] p.p.blog.repository.BlogRepo.update      : ==>  Preparing: update t_blog SET title=?, summary=?, typeId=?, content=?, clickHit=?, replyHit=?, keyWord=? where id=? 
2017-09-14 21:33:31.766 DEBUG 8388 --- [http-nio-8080-exec-1] p.p.blog.repository.BlogRepo.update      : ==> Parameters: Mac终端自动补全忽略大小写(String), 转自：胡东东Mac终端自动补全忽略大小写，同样适用于iTerm2.打开终端，输入：nano .inputrc在里面粘贴上以下语句：set completion-ignore-case onset show-all-if-ambiguous onTAB: menu-completeControl+O，回车保存，(String), 32(String), <p style="margin-top: 0px; margin-bottom: 25px; color: rgb(85, 85, 85); font-family: Lato, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, sans-serif; font-size: 15px; text-align: justify; white-space: normal; background-color: rgba(232, 230, 226, 0.8);">转自：<a href="http://www.hudongdong.com/skill/242.html" target="_blank" title="胡东东">胡东东</a></p><p style="margin-top: 0px; margin-bottom: 25px; color: rgb(85, 85, 85); font-family: Lato, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, sans-serif; font-size: 15px; text-align: justify; white-space: normal; background-color: rgba(232, 230, 226, 0.8);">Mac终端自动补全忽略大小写，同样适用于iTerm2.</p><p style="margin-top: 0px; margin-bottom: 25px; color: rgb(85, 85, 85); font-family: Lato, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, sans-serif; font-size: 15px; text-align: justify; white-space: normal; background-color: rgba(232, 230, 226, 0.8);"><br/></p><p style="margin-top: 0px; margin-bottom: 25px; color: rgb(85, 85, 85); font-family: Lato, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, sans-serif; font-size: 15px; text-align: justify; white-space: normal; background-color: rgba(232, 230, 226, 0.8);">打开终端，输入：</p><p style="margin-top: 0px; margin-bottom: 25px; color: rgb(85, 85, 85); font-family: Lato, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, sans-serif; font-size: 15px; text-align: justify; white-space: normal; background-color: rgba(232, 230, 226, 0.8);"><br/></p><pre class="prettyprint lang-bsh linenums prettyprint linenums prettyprinted" style="overflow: auto; font-family: &quot;Input Mono&quot;, &quot;PT Mono&quot;, Consolas, Monaco, Menlo, monospace; font-size: 13px; background-color: rgb(253, 246, 227); margin-top: 20px; margin-bottom: 20px; padding: 5px; color: rgb(77, 77, 76); line-height: 1.6; border: 1px solid rgb(136, 136, 136); text-align: justify;">nano&nbsp;.inputrc</pre><p style="margin-top: 0px; margin-bottom: 25px; color: rgb(85, 85, 85); font-family: Lato, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, sans-serif; font-size: 15px; text-align: justify; white-space: normal; background-color: rgba(232, 230, 226, 0.8);"><br/></p><p style="margin-top: 0px; margin-bottom: 25px; color: rgb(85, 85, 85); font-family: Lato, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, sans-serif; font-size: 15px; text-align: justify; white-space: normal; background-color: rgba(232, 230, 226, 0.8);">在里面粘贴上以下语句：</p><p style="margin-top: 0px; margin-bottom: 25px; color: rgb(85, 85, 85); font-family: Lato, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, sans-serif; font-size: 15px; text-align: justify; white-space: normal; background-color: rgba(232, 230, 226, 0.8);"><br/></p><pre class="prettyprint lang-bsh linenums prettyprint linenums prettyprinted" style="overflow: auto; font-family: &quot;Input Mono&quot;, &quot;PT Mono&quot;, Consolas, Monaco, Menlo, monospace; font-size: 13px; background-color: rgb(253, 246, 227); margin-top: 20px; margin-bottom: 20px; padding: 5px; color: rgb(77, 77, 76); line-height: 1.6; border: 1px solid rgb(136, 136, 136); text-align: justify;">set&nbsp;completion-ignore-case&nbsp;onset&nbsp;show-all-if-ambiguous&nbsp;onTAB:&nbsp;menu-complete</pre><p style="margin-top: 0px; margin-bottom: 25px; color: rgb(85, 85, 85); font-family: Lato, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, sans-serif; font-size: 15px; text-align: justify; white-space: normal; background-color: rgba(232, 230, 226, 0.8);"><br/></p><p style="margin-top: 0px; margin-bottom: 25px; color: rgb(85, 85, 85); font-family: Lato, &quot;PingFang SC&quot;, &quot;Microsoft YaHei&quot;, sans-serif; font-size: 15px; text-align: justify; white-space: normal; background-color: rgba(232, 230, 226, 0.8);">Control+O，回车保存，重启终端，OK！</p><p><br/></p>(String), 27(Integer), 0(Integer), mac (String), 315(String)
2017-09-14 21:33:31.770 DEBUG 8388 --- [http-nio-8080-exec-1] p.p.blog.repository.BlogRepo.update      : <==    Updates: 1
2017-09-14 21:33:31.774 DEBUG 8388 --- [http-nio-8080-exec-1] p.p.blog.repository.CommentRepo.list     : ==>  Preparing: select * from t_comment WHERE blogId=? and state=? order by commentDate desc 
2017-09-14 21:33:31.774 DEBUG 8388 --- [http-nio-8080-exec-1] p.p.blog.repository.CommentRepo.list     : ==> Parameters: 315(String), 1(Integer)
2017-09-14 21:33:31.776 DEBUG 8388 --- [http-nio-8080-exec-1] p.p.blog.repository.CommentRepo.list     : <==      Total: 0
2017-09-14 21:33:31.784 DEBUG 8388 --- [http-nio-8080-exec-1] p.p.b.repository.BlogRepo.getLastBlog    : ==>  Preparing: select * from t_blog t where ? > t.releaseDate order by releaseDate desc limit 1 
2017-09-14 21:33:31.785 DEBUG 8388 --- [http-nio-8080-exec-1] p.p.b.repository.BlogRepo.getLastBlog    : ==> Parameters: 2017-07-23 02:07:08.0(Timestamp)
2017-09-14 21:33:31.789 DEBUG 8388 --- [http-nio-8080-exec-1] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 21:33:31.789 DEBUG 8388 --- [http-nio-8080-exec-1] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 12(String)
2017-09-14 21:33:31.791 DEBUG 8388 --- [http-nio-8080-exec-1] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 21:33:31.792 DEBUG 8388 --- [http-nio-8080-exec-1] p.p.b.repository.BlogRepo.getLastBlog    : <==      Total: 1
2017-09-14 21:33:31.798 DEBUG 8388 --- [http-nio-8080-exec-1] p.p.b.repository.BlogRepo.getNextBlog    : ==>  Preparing: select * from t_blog t where t.releaseDate > ? order by releaseDate asc limit 1 
2017-09-14 21:33:31.798 DEBUG 8388 --- [http-nio-8080-exec-1] p.p.b.repository.BlogRepo.getNextBlog    : ==> Parameters: 2017-07-23 02:07:08.0(Timestamp)
2017-09-14 21:33:31.803 DEBUG 8388 --- [http-nio-8080-exec-1] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 21:33:31.803 DEBUG 8388 --- [http-nio-8080-exec-1] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 1(String)
2017-09-14 21:33:31.805 DEBUG 8388 --- [http-nio-8080-exec-1] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 21:33:31.806 DEBUG 8388 --- [http-nio-8080-exec-1] p.p.b.repository.BlogRepo.getNextBlog    : <==      Total: 1
2017-09-14 21:33:57.975 DEBUG 8388 --- [http-nio-8080-exec-8] p.p.blog.repository.BlogRepo.list        : ==>  Preparing: select * from t_blog order by releaseDate desc limit ?,? 
2017-09-14 21:33:57.975 DEBUG 8388 --- [http-nio-8080-exec-8] p.p.blog.repository.BlogRepo.list        : ==> Parameters: 0(Integer), 10(Integer)
2017-09-14 21:33:57.978 DEBUG 8388 --- [http-nio-8080-exec-8] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 21:33:57.978 DEBUG 8388 --- [http-nio-8080-exec-8] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 11(String)
2017-09-14 21:33:57.984 DEBUG 8388 --- [http-nio-8080-exec-8] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 21:33:57.985 DEBUG 8388 --- [http-nio-8080-exec-8] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 21:33:57.985 DEBUG 8388 --- [http-nio-8080-exec-8] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 1(String)
2017-09-14 21:33:57.986 DEBUG 8388 --- [http-nio-8080-exec-8] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 21:33:57.987 DEBUG 8388 --- [http-nio-8080-exec-8] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 21:33:57.987 DEBUG 8388 --- [http-nio-8080-exec-8] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 12(String)
2017-09-14 21:33:57.992 DEBUG 8388 --- [http-nio-8080-exec-8] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 21:33:57.994 DEBUG 8388 --- [http-nio-8080-exec-8] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 21:33:57.994 DEBUG 8388 --- [http-nio-8080-exec-8] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 32(String)
2017-09-14 21:33:58.001 DEBUG 8388 --- [http-nio-8080-exec-8] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 21:33:58.003 DEBUG 8388 --- [http-nio-8080-exec-8] p.p.blog.repository.BlogRepo.list        : <==      Total: 10
2017-09-14 21:33:58.009 DEBUG 8388 --- [http-nio-8080-exec-8] p.p.blog.repository.BlogRepo.getTotal    : ==>  Preparing: select count(*) from t_blog 
2017-09-14 21:33:58.009 DEBUG 8388 --- [http-nio-8080-exec-8] p.p.blog.repository.BlogRepo.getTotal    : ==> Parameters: 
2017-09-14 21:33:58.013 DEBUG 8388 --- [http-nio-8080-exec-8] p.p.blog.repository.BlogRepo.getTotal    : <==      Total: 1
2017-09-14 21:34:49.457 DEBUG 8388 --- [http-nio-8080-exec-2] p.p.blog.repository.BlogRepo.list        : ==>  Preparing: select * from t_blog order by releaseDate desc limit ?,? 
2017-09-14 21:34:49.458 DEBUG 8388 --- [http-nio-8080-exec-2] p.p.blog.repository.BlogRepo.list        : ==> Parameters: 0(Integer), 10(Integer)
2017-09-14 21:34:49.462 DEBUG 8388 --- [http-nio-8080-exec-2] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 21:34:49.462 DEBUG 8388 --- [http-nio-8080-exec-2] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 11(String)
2017-09-14 21:34:49.464 DEBUG 8388 --- [http-nio-8080-exec-2] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 21:34:49.465 DEBUG 8388 --- [http-nio-8080-exec-2] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 21:34:49.465 DEBUG 8388 --- [http-nio-8080-exec-2] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 1(String)
2017-09-14 21:34:49.467 DEBUG 8388 --- [http-nio-8080-exec-2] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 21:34:49.468 DEBUG 8388 --- [http-nio-8080-exec-2] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 21:34:49.468 DEBUG 8388 --- [http-nio-8080-exec-2] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 12(String)
2017-09-14 21:34:49.469 DEBUG 8388 --- [http-nio-8080-exec-2] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 21:34:49.470 DEBUG 8388 --- [http-nio-8080-exec-2] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 21:34:49.471 DEBUG 8388 --- [http-nio-8080-exec-2] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 32(String)
2017-09-14 21:34:49.472 DEBUG 8388 --- [http-nio-8080-exec-2] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 21:34:49.474 DEBUG 8388 --- [http-nio-8080-exec-2] p.p.blog.repository.BlogRepo.list        : <==      Total: 10
2017-09-14 21:34:49.478 DEBUG 8388 --- [http-nio-8080-exec-2] p.p.blog.repository.BlogRepo.getTotal    : ==>  Preparing: select count(*) from t_blog 
2017-09-14 21:34:49.478 DEBUG 8388 --- [http-nio-8080-exec-2] p.p.blog.repository.BlogRepo.getTotal    : ==> Parameters: 
2017-09-14 21:34:49.481 DEBUG 8388 --- [http-nio-8080-exec-2] p.p.blog.repository.BlogRepo.getTotal    : <==      Total: 1
2017-09-14 21:35:23.273 DEBUG 8388 --- [http-nio-8080-exec-10] p.p.blog.repository.BlogRepo.list        : ==>  Preparing: select * from t_blog order by releaseDate desc limit ?,? 
2017-09-14 21:35:23.273 DEBUG 8388 --- [http-nio-8080-exec-10] p.p.blog.repository.BlogRepo.list        : ==> Parameters: 0(Integer), 10(Integer)
2017-09-14 21:35:23.291 DEBUG 8388 --- [http-nio-8080-exec-10] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 21:35:23.291 DEBUG 8388 --- [http-nio-8080-exec-10] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 11(String)
2017-09-14 21:35:23.298 DEBUG 8388 --- [http-nio-8080-exec-10] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 21:35:23.300 DEBUG 8388 --- [http-nio-8080-exec-10] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 21:35:23.300 DEBUG 8388 --- [http-nio-8080-exec-10] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 1(String)
2017-09-14 21:35:23.302 DEBUG 8388 --- [http-nio-8080-exec-10] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 21:35:23.304 DEBUG 8388 --- [http-nio-8080-exec-10] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 21:35:23.305 DEBUG 8388 --- [http-nio-8080-exec-10] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 12(String)
2017-09-14 21:35:23.307 DEBUG 8388 --- [http-nio-8080-exec-10] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 21:35:23.309 DEBUG 8388 --- [http-nio-8080-exec-10] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 21:35:23.309 DEBUG 8388 --- [http-nio-8080-exec-10] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 32(String)
2017-09-14 21:35:23.312 DEBUG 8388 --- [http-nio-8080-exec-10] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 21:35:23.313 DEBUG 8388 --- [http-nio-8080-exec-10] p.p.blog.repository.BlogRepo.list        : <==      Total: 10
2017-09-14 21:35:23.326 DEBUG 8388 --- [http-nio-8080-exec-10] p.p.blog.repository.BlogRepo.getTotal    : ==>  Preparing: select count(*) from t_blog 
2017-09-14 21:35:23.327 DEBUG 8388 --- [http-nio-8080-exec-10] p.p.blog.repository.BlogRepo.getTotal    : ==> Parameters: 
2017-09-14 21:35:23.329 DEBUG 8388 --- [http-nio-8080-exec-10] p.p.blog.repository.BlogRepo.getTotal    : <==      Total: 1
2017-09-14 21:35:26.431 DEBUG 8388 --- [http-nio-8080-exec-8] p.p.blog.repository.BlogRepo.update      : ==>  Preparing: update t_blog SET title=?, summary=?, typeId=?, content=?, clickHit=?, replyHit=?, keyWord=? where id=? 
2017-09-14 21:35:26.432 DEBUG 8388 --- [http-nio-8080-exec-8] p.p.blog.repository.BlogRepo.update      : ==> Parameters: creating server tcp listening socket 127.0.0.1:6379: bind No error(String), window下安装redis报错：creating server tcp listening socket 127.0.0.1:6379: bind No error的解决方案如下按顺序输入如下命令就可以连接成功1. Redis-cli.exe2. shutdown3. exit4. redis-server(String), 12(String), <h2 style="margin: 10px 0px 0px; padding: 0px; color: rgb(51, 51, 51); white-space: normal; background-color: rgb(255, 255, 255); font-size: 1em; font-family: Verdana, Geneva, Arial, Helvetica, sans-serif; line-height: 20px;"><span style="font-size: 13.3333px; line-height: 1.8;">window下安装redis报错：</span></h2><p style="margin: 10px auto; padding: 0px;">creating server tcp listening socket 127.0.0.1:6379: bind No error</p><p style="margin: 10px auto; padding: 0px;">的解决方案如下按顺序输入如下命令就可以连接成功</p><p style="margin: 10px auto; padding: 0px;">1.&nbsp;<a href="http://lib.csdn.net/base/redis" class="replace_word" title="Redis知识库" target="_blank" style="text-decoration-line: none; color: rgb(223, 52, 52); font-weight: bold;">Redis</a>-cli.exe<br/>2.&nbsp;shutdown<br/>3.&nbsp;exit<br/>4.&nbsp;<a href="http://lib.csdn.net/base/redis" class="replace_word" title="Redis知识库" target="_blank" style="text-decoration-line: none; color: rgb(223, 52, 52); font-weight: bold;">redis</a>-server.exe&nbsp;redis.windows.conf</p><p><br/></p><p> 转自:&nbsp;&nbsp;&nbsp;&nbsp;<a href="http://blog.csdn.net/fengzhihen2007/article/details/52211048" target="_blank" title="D的专栏">D的专栏</a> <br/></p>(String), 133(Integer), 0(Integer), redis (String), 317(String)
2017-09-14 21:35:26.437 DEBUG 8388 --- [http-nio-8080-exec-8] p.p.blog.repository.BlogRepo.update      : <==    Updates: 1
2017-09-14 21:35:26.440 DEBUG 8388 --- [http-nio-8080-exec-8] p.p.blog.repository.CommentRepo.list     : ==>  Preparing: select * from t_comment WHERE blogId=? and state=? order by commentDate desc 
2017-09-14 21:35:26.441 DEBUG 8388 --- [http-nio-8080-exec-8] p.p.blog.repository.CommentRepo.list     : ==> Parameters: 317(String), 1(Integer)
2017-09-14 21:35:26.442 DEBUG 8388 --- [http-nio-8080-exec-8] p.p.blog.repository.CommentRepo.list     : <==      Total: 0
2017-09-14 21:35:32.611 DEBUG 8388 --- [http-nio-8080-exec-6] p.p.blog.repository.BlogRepo.list        : ==>  Preparing: select * from t_blog WHERE DATE_FORMAT(releaseDate,'%Y年%m月')=? order by releaseDate desc limit ?,? 
2017-09-14 21:35:32.613 DEBUG 8388 --- [http-nio-8080-exec-6] p.p.blog.repository.BlogRepo.list        : ==> Parameters: 2017年02月(String), 0(Integer), 10(Integer)
2017-09-14 21:35:32.618 DEBUG 8388 --- [http-nio-8080-exec-6] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 21:35:32.619 DEBUG 8388 --- [http-nio-8080-exec-6] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 12(String)
2017-09-14 21:35:32.621 DEBUG 8388 --- [http-nio-8080-exec-6] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 21:35:32.622 DEBUG 8388 --- [http-nio-8080-exec-6] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 21:35:32.623 DEBUG 8388 --- [http-nio-8080-exec-6] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 5(String)
2017-09-14 21:35:32.625 DEBUG 8388 --- [http-nio-8080-exec-6] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 21:35:32.627 DEBUG 8388 --- [http-nio-8080-exec-6] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 21:35:32.628 DEBUG 8388 --- [http-nio-8080-exec-6] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 1(String)
2017-09-14 21:35:32.629 DEBUG 8388 --- [http-nio-8080-exec-6] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 21:35:32.631 DEBUG 8388 --- [http-nio-8080-exec-6] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 21:35:32.632 DEBUG 8388 --- [http-nio-8080-exec-6] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 23(String)
2017-09-14 21:35:32.634 DEBUG 8388 --- [http-nio-8080-exec-6] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 21:35:32.636 DEBUG 8388 --- [http-nio-8080-exec-6] p.p.blog.repository.BlogRepo.list        : <==      Total: 6
2017-09-14 21:35:32.640 DEBUG 8388 --- [http-nio-8080-exec-6] p.p.blog.repository.BlogRepo.getTotal    : ==>  Preparing: select count(*) from t_blog WHERE DATE_FORMAT (releaseDate,'%Y年%m月')=? 
2017-09-14 21:35:32.643 DEBUG 8388 --- [http-nio-8080-exec-6] p.p.blog.repository.BlogRepo.getTotal    : ==> Parameters: 2017年02月(String)
2017-09-14 21:35:32.645 DEBUG 8388 --- [http-nio-8080-exec-6] p.p.blog.repository.BlogRepo.getTotal    : <==      Total: 1
2017-09-14 21:35:35.020 DEBUG 8388 --- [http-nio-8080-exec-4] p.p.blog.repository.BlogRepo.findById    : ==>  Preparing: select * from t_blog where id=? 
2017-09-14 21:35:35.021 DEBUG 8388 --- [http-nio-8080-exec-4] p.p.blog.repository.BlogRepo.findById    : ==> Parameters: 231(String)
2017-09-14 21:35:35.024 DEBUG 8388 --- [http-nio-8080-exec-4] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 21:35:35.025 DEBUG 8388 --- [http-nio-8080-exec-4] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 1(String)
2017-09-14 21:35:35.030 DEBUG 8388 --- [http-nio-8080-exec-4] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 21:35:35.031 DEBUG 8388 --- [http-nio-8080-exec-4] p.p.blog.repository.BlogRepo.findById    : <==      Total: 1
2017-09-14 21:35:35.038 DEBUG 8388 --- [http-nio-8080-exec-4] p.p.blog.repository.BlogRepo.update      : ==>  Preparing: update t_blog SET title=?, summary=?, typeId=?, content=?, clickHit=?, replyHit=?, keyWord=? where id=? 
2017-09-14 21:35:35.041 DEBUG 8388 --- [http-nio-8080-exec-4] p.p.blog.repository.BlogRepo.update      : ==> Parameters: JAVA动态调用方法（反射）(String), Java反射机制可以让我们在编译期（Compile Time）之外的运行期（Runtime）获得任何一个类的字节码。包括接口、变量、方法等信息。还可以让我们在运行期实例化对象，通过调用get/set方法获取变量的值。下面是一个小例子，让大家感受下Java反射的魔力Method[] methods = MyOb(String), 1(String), <p style="box-sizing: border-box; margin-top: 0px; margin-bottom: 25px; word-break: break-word; color: rgb(47, 47, 47); font-family: -apple-system, &quot;SF UI Text&quot;, Arial, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, &quot;WenQuanYi Micro Hei&quot;, sans-serif; white-space: normal; background-color: rgb(255, 255, 255);">Java反射机制可以让我们在编译期（Compile Time）之外的运行期（Runtime）获得任何一个类的字节码。包括接口、变量、方法等信息。还可以让我们在运行期实例化对象，通过调用get/set方法获取变量的值。</p><p style="box-sizing: border-box; margin-top: 0px; margin-bottom: 25px; word-break: break-word; color: rgb(47, 47, 47); font-family: -apple-system, &quot;SF UI Text&quot;, Arial, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, &quot;WenQuanYi Micro Hei&quot;, sans-serif; white-space: normal; background-color: rgb(255, 255, 255);">下面是一个小例子，让大家感受下Java反射的魔力</p><pre class="hljs oxygene" style="box-sizing: border-box; overflow: auto; font-family: Menlo, Monaco, Consolas, &quot;Courier New&quot;, monospace; font-size: 13px; padding: 15px; margin-top: 0px; margin-bottom: 20px; line-height: 1.42857; word-break: break-word; word-wrap: normal; color: rgb(101, 123, 131); background-color: rgb(246, 246, 246); border: 1px solid rgb(204, 204, 204); border-radius: 0px; text-size-adjust: none;">Method[]&nbsp;methods&nbsp;=&nbsp;MyObject.class.getMethods();for(Method&nbsp;method&nbsp;:&nbsp;methods){
&nbsp;&nbsp;&nbsp;&nbsp;System.out.println(&quot;method&nbsp;=&nbsp;&quot;&nbsp;+&nbsp;method.getName());
}</pre><p style="box-sizing: border-box; margin-top: 0px; margin-bottom: 25px; word-break: break-word; color: rgb(47, 47, 47); font-family: -apple-system, &quot;SF UI Text&quot;, Arial, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, &quot;WenQuanYi Micro Hei&quot;, sans-serif; white-space: normal; background-color: rgb(255, 255, 255);">这个例子通过调用类的class属性获取对应的class对象，通过这个 Class 类的对象获取 MyObject 类中的方法集合</p><pre class="hljs cos" style="box-sizing: border-box; overflow: auto; font-family: Menlo, Monaco, Consolas, &quot;Courier New&quot;, monospace; font-size: 13px; padding: 15px; margin-top: 0px; margin-bottom: 20px; line-height: 1.42857; word-break: break-word; word-wrap: normal; color: rgb(101, 123, 131); background-color: rgb(246, 246, 246); border: 1px solid rgb(204, 204, 204); border-radius: 0px; text-size-adjust: none;">Class&nbsp;myObjectClass&nbsp;=&nbsp;MyObject.class;</pre><p style="box-sizing: border-box; margin-top: 0px; margin-bottom: 25px; word-break: break-word; color: rgb(47, 47, 47); font-family: -apple-system, &quot;SF UI Text&quot;, Arial, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, &quot;WenQuanYi Micro Hei&quot;, sans-serif; white-space: normal; background-color: rgb(255, 255, 255);">使用 Java 反射机制可以在运行时期检查 Java 类的信息，检查 Java 类的信息往往是你在使用 Java 反射机制的时候所做的第一件事情，通过获取类的信息你可以获取以下相关的内容：</p><h2 style="box-sizing: border-box; font-family: -apple-system, &quot;SF UI Text&quot;, Arial, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, &quot;WenQuanYi Micro Hei&quot;, sans-serif; line-height: 1.7; color: rgb(47, 47, 47); margin: 0px 0px 15px; font-size: 24px; text-rendering: optimizeLegibility; white-space: normal; background-color: rgb(255, 255, 255);">1.Class 对象</h2><p style="box-sizing: border-box; margin-top: 0px; margin-bottom: 25px; word-break: break-word; color: rgb(47, 47, 47); font-family: -apple-system, &quot;SF UI Text&quot;, Arial, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, &quot;WenQuanYi Micro Hei&quot;, sans-serif; white-space: normal; background-color: rgb(255, 255, 255);">在你想检查一个类的信息之前，你首先需要获取类的 Class 对象。Java 中的所有类型包括基本类型(int, long, float等等)，即使是数组都有与之关联的 Class 类的对象。如果你在编译期知道一个类的名字的话，那么你可以使用如下的方式获取一个类的 Class 对象。</p><pre class="hljs delphi" style="box-sizing: border-box; overflow: auto; font-family: Menlo, Monaco, Consolas, &quot;Courier New&quot;, monospace; font-size: 13px; padding: 15px; margin-top: 0px; margin-bottom: 20px; line-height: 1.42857; word-break: break-word; word-wrap: normal; color: rgb(101, 123, 131); background-color: rgb(246, 246, 246); border: 1px solid rgb(204, 204, 204); border-radius: 0px; text-size-adjust: none;">String&nbsp;className&nbsp;=&nbsp;...&nbsp;;//在运行期获取的类名字符串Class&nbsp;class&nbsp;=&nbsp;Class.forName(className);</pre><h2 style="box-sizing: border-box; font-family: -apple-system, &quot;SF UI Text&quot;, Arial, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, &quot;WenQuanYi Micro Hei&quot;, sans-serif; line-height: 1.7; color: rgb(47, 47, 47); margin: 0px 0px 15px; font-size: 24px; text-rendering: optimizeLegibility; white-space: normal; background-color: rgb(255, 255, 255);">2.类名</h2><p style="box-sizing: border-box; margin-top: 0px; margin-bottom: 25px; word-break: break-word; color: rgb(47, 47, 47); font-family: -apple-system, &quot;SF UI Text&quot;, Arial, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, &quot;WenQuanYi Micro Hei&quot;, sans-serif; white-space: normal; background-color: rgb(255, 255, 255);">如果你在编译期不知道类的名字，但是你可以在运行期获得到类名的字符串,那么你则可以这么做来获取 Class 对象:<br/>你可以从 Class 对象中获取两个版本的类名。</p><p style="box-sizing: border-box; margin-top: 0px; margin-bottom: 25px; word-break: break-word; color: rgb(47, 47, 47); font-family: -apple-system, &quot;SF UI Text&quot;, Arial, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, &quot;WenQuanYi Micro Hei&quot;, sans-serif; white-space: normal; background-color: rgb(255, 255, 255);">通过 getName() 方法返回类的全限定类名（包含包名）：</p><pre class="hljs coq" style="box-sizing: border-box; overflow: auto; font-family: Menlo, Monaco, Consolas, &quot;Courier New&quot;, monospace; font-size: 13px; padding: 15px; margin-top: 0px; margin-bottom: 20px; line-height: 1.42857; word-break: break-word; word-wrap: normal; color: rgb(101, 123, 131); background-color: rgb(246, 246, 246); border: 1px solid rgb(204, 204, 204); border-radius: 0px; text-size-adjust: none;">Class&nbsp;aClass&nbsp;=&nbsp;...&nbsp;//获取Class对象，具体方式可见Class对象小节
String&nbsp;className&nbsp;=&nbsp;aClass.getName();</pre><p style="box-sizing: border-box; margin-top: 0px; margin-bottom: 25px; word-break: break-word; color: rgb(47, 47, 47); font-family: -apple-system, &quot;SF UI Text&quot;, Arial, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, &quot;WenQuanYi Micro Hei&quot;, sans-serif; white-space: normal; background-color: rgb(255, 255, 255);">如果你仅仅只是想获取类的名字(不包含包名)，那么你可以使用 getSimpleName()方法:</p><pre class="hljs coq" style="box-sizing: border-box; overflow: auto; font-family: Menlo, Monaco, Consolas, &quot;Courier New&quot;, monospace; font-size: 13px; padding: 15px; margin-top: 0px; margin-bottom: 20px; line-height: 1.42857; word-break: break-word; word-wrap: normal; color: rgb(101, 123, 131); background-color: rgb(246, 246, 246); border: 1px solid rgb(204, 204, 204); border-radius: 0px; text-size-adjust: none;">Class&nbsp;aClass&nbsp;=&nbsp;...&nbsp;//获取Class对象，具体方式可见Class对象小节
String&nbsp;simpleClassName&nbsp;=&nbsp;aClass.getSimpleName();</pre><p style="box-sizing: border-box; margin-top: 0px; margin-bottom: 25px; word-break: break-word; color: rgb(47, 47, 47); font-family: -apple-system, &quot;SF UI Text&quot;, Arial, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, &quot;WenQuanYi Micro Hei&quot;, sans-serif; white-space: normal; background-color: rgb(255, 255, 255);">这个方法对读别人（庞大复杂的app）的代码特别有用，就拿安卓来说吧，你可以在Activity 或者是自己定义的BaseActivity中打印该className or simpleClassName</p><pre class="hljs stata" style="box-sizing: border-box; overflow: auto; font-family: Menlo, Monaco, Consolas, &quot;Courier New&quot;, monospace; font-size: 13px; padding: 15px; margin-top: 0px; margin-bottom: 20px; line-height: 1.42857; word-break: break-word; word-wrap: normal; color: rgb(101, 123, 131); background-color: rgb(246, 246, 246); border: 1px solid rgb(204, 204, 204); border-radius: 0px; text-size-adjust: none;">Log.i(simpleClassName,&quot;Someting&quot;);//这样你就知道自己每次打开的是具体哪个activity了，对阅读捋清App功能逻辑很有帮助</pre><h2 style="box-sizing: border-box; font-family: -apple-system, &quot;SF UI Text&quot;, Arial, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, &quot;WenQuanYi Micro Hei&quot;, sans-serif; line-height: 1.7; color: rgb(47, 47, 47); margin: 0px 0px 15px; font-size: 24px; text-rendering: optimizeLegibility; white-space: normal; background-color: rgb(255, 255, 255);">3.修饰符</h2><p style="box-sizing: border-box; margin-top: 0px; margin-bottom: 25px; word-break: break-word; color: rgb(47, 47, 47); font-family: -apple-system, &quot;SF UI Text&quot;, Arial, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, &quot;WenQuanYi Micro Hei&quot;, sans-serif; white-space: normal; background-color: rgb(255, 255, 255);">可以通过 Class 对象来访问一个类的修饰符， 即public,private,static 等等的关键字，你可以使用如下方法来获取类的修饰符：</p><pre class="hljs fortran" style="box-sizing: border-box; overflow: auto; font-family: Menlo, Monaco, Consolas, &quot;Courier New&quot;, monospace; font-size: 13px; padding: 15px; margin-top: 0px; margin-bottom: 20px; line-height: 1.42857; word-break: break-word; word-wrap: normal; color: rgb(101, 123, 131); background-color: rgb(246, 246, 246); border: 1px solid rgb(204, 204, 204); border-radius: 0px; text-size-adjust: none;">Class&nbsp;&nbsp;aClass&nbsp;=&nbsp;...&nbsp;//获取Class对象，具体方式可见Class对象小节int&nbsp;modifiers&nbsp;=&nbsp;aClass.getModifiers();</pre><p style="box-sizing: border-box; margin-top: 0px; margin-bottom: 25px; word-break: break-word; color: rgb(47, 47, 47); font-family: -apple-system, &quot;SF UI Text&quot;, Arial, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, &quot;WenQuanYi Micro Hei&quot;, sans-serif; white-space: normal; background-color: rgb(255, 255, 255);">修饰符都被包装成一个int类型的数字，这样每个修饰符都是一个位标识(flag bit)，这个位标识可以设置和清除修饰符的类型。 可以使用 java.lang.reflect.Modifier 类中的方法来检查修饰符的类型：</p><pre class="hljs abnf" style="box-sizing: border-box; overflow: auto; font-family: Menlo, Monaco, Consolas, &quot;Courier New&quot;, monospace; font-size: 13px; padding: 15px; margin-top: 0px; margin-bottom: 20px; line-height: 1.42857; word-break: break-word; word-wrap: normal; color: rgb(101, 123, 131); background-color: rgb(246, 246, 246); border: 1px solid rgb(204, 204, 204); border-radius: 0px; text-size-adjust: none;">Modifier.isAbstract(int&nbsp;modifiers);Modifier.isFinal(int&nbsp;modifiers);Modifier.isInterface(int&nbsp;modifiers);Modifier.isNative(int&nbsp;modifiers);Modifier.isPrivate(int&nbsp;modifiers);Modifier.isProtected(int&nbsp;modifiers);Modifier.isPublic(int&nbsp;modifiers);Modifier.isStatic(int&nbsp;modifiers);Modifier.isStrict(int&nbsp;modifiers);Modifier.isSynchronized(int&nbsp;modifiers);Modifier.isTransient(int&nbsp;modifiers);Modifier.isVolatile(int&nbsp;modifiers);</pre><h2 style="box-sizing: border-box; font-family: -apple-system, &quot;SF UI Text&quot;, Arial, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, &quot;WenQuanYi Micro Hei&quot;, sans-serif; line-height: 1.7; color: rgb(47, 47, 47); margin: 0px 0px 15px; font-size: 24px; text-rendering: optimizeLegibility; white-space: normal; background-color: rgb(255, 255, 255);">4.包信息</h2><p style="box-sizing: border-box; margin-top: 0px; margin-bottom: 25px; word-break: break-word; color: rgb(47, 47, 47); font-family: -apple-system, &quot;SF UI Text&quot;, Arial, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, &quot;WenQuanYi Micro Hei&quot;, sans-serif; white-space: normal; background-color: rgb(255, 255, 255);">可以使用 Class 对象通过如下的方式获取包信息：</p><pre class="hljs gradle" style="box-sizing: border-box; overflow: auto; font-family: Menlo, Monaco, Consolas, &quot;Courier New&quot;, monospace; font-size: 13px; padding: 15px; margin-top: 0px; margin-bottom: 20px; line-height: 1.42857; word-break: break-word; word-wrap: normal; color: rgb(101, 123, 131); background-color: rgb(246, 246, 246); border: 1px solid rgb(204, 204, 204); border-radius: 0px; text-size-adjust: none;">Class&nbsp;&nbsp;aClass&nbsp;=&nbsp;...&nbsp;//获取Class对象，具体方式可见Class对象小节Package&nbsp;package&nbsp;=&nbsp;aClass.getPackage();</pre><p style="box-sizing: border-box; margin-top: 0px; margin-bottom: 25px; word-break: break-word; color: rgb(47, 47, 47); font-family: -apple-system, &quot;SF UI Text&quot;, Arial, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, &quot;WenQuanYi Micro Hei&quot;, sans-serif; white-space: normal; background-color: rgb(255, 255, 255);">通过 Package 对象你可以获取包的相关信息，比如包名，你也可以通过 Manifest 文件访问位于编译路径下 jar 包的指定信息，比如你可以在 Manifest 文件中指定包的版本编号。更多的 Package 类信息可以阅读 java.lang.Package。</p><h2 style="box-sizing: border-box; font-family: -apple-system, &quot;SF UI Text&quot;, Arial, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, &quot;WenQuanYi Micro Hei&quot;, sans-serif; line-height: 1.7; color: rgb(47, 47, 47); margin: 0px 0px 15px; font-size: 24px; text-rendering: optimizeLegibility; white-space: normal; background-color: rgb(255, 255, 255);">5.父类</h2><p style="box-sizing: border-box; margin-top: 0px; margin-bottom: 25px; word-break: break-word; color: rgb(47, 47, 47); font-family: -apple-system, &quot;SF UI Text&quot;, Arial, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, &quot;WenQuanYi Micro Hei&quot;, sans-serif; white-space: normal; background-color: rgb(255, 255, 255);">通过 Class 对象你可以访问类的父类，如下例：</p><pre class="hljs ebnf" style="box-sizing: border-box; overflow: auto; font-family: Menlo, Monaco, Consolas, &quot;Courier New&quot;, monospace; font-size: 13px; padding: 15px; margin-top: 0px; margin-bottom: 20px; line-height: 1.42857; word-break: break-word; word-wrap: normal; color: rgb(101, 123, 131); background-color: rgb(246, 246, 246); border: 1px solid rgb(204, 204, 204); border-radius: 0px; text-size-adjust: none;">Class&nbsp;superclass&nbsp;=&nbsp;aClass.getSuperclass();</pre><p style="box-sizing: border-box; margin-top: 0px; margin-bottom: 25px; word-break: break-word; color: rgb(47, 47, 47); font-family: -apple-system, &quot;SF UI Text&quot;, Arial, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, &quot;WenQuanYi Micro Hei&quot;, sans-serif; white-space: normal; background-color: rgb(255, 255, 255);">可以看到 superclass 对象其实就是一个 Class 类的实例，所以你可以继续在这个对象上进行反射操作。</p><h2 style="box-sizing: border-box; font-family: -apple-system, &quot;SF UI Text&quot;, Arial, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, &quot;WenQuanYi Micro Hei&quot;, sans-serif; line-height: 1.7; color: rgb(47, 47, 47); margin: 0px 0px 15px; font-size: 24px; text-rendering: optimizeLegibility; white-space: normal; background-color: rgb(255, 255, 255);">6.实现的接口</h2><p style="box-sizing: border-box; margin-top: 0px; margin-bottom: 25px; word-break: break-word; color: rgb(47, 47, 47); font-family: -apple-system, &quot;SF UI Text&quot;, Arial, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, &quot;WenQuanYi Micro Hei&quot;, sans-serif; white-space: normal; background-color: rgb(255, 255, 255);">可以通过如下方式获取指定类所实现的接口集合：</p><pre class="hljs coq" style="box-sizing: border-box; overflow: auto; font-family: Menlo, Monaco, Consolas, &quot;Courier New&quot;, monospace; font-size: 13px; padding: 15px; margin-top: 0px; margin-bottom: 20px; line-height: 1.42857; word-break: break-word; word-wrap: normal; color: rgb(101, 123, 131); background-color: rgb(246, 246, 246); border: 1px solid rgb(204, 204, 204); border-radius: 0px; text-size-adjust: none;">Class&nbsp;&nbsp;aClass&nbsp;=&nbsp;...&nbsp;//获取Class对象，具体方式可见Class对象小节Class[]&nbsp;interfaces&nbsp;=&nbsp;aClass.getInterfaces();</pre><p style="box-sizing: border-box; margin-top: 0px; margin-bottom: 25px; word-break: break-word; color: rgb(47, 47, 47); font-family: -apple-system, &quot;SF UI Text&quot;, Arial, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, &quot;WenQuanYi Micro Hei&quot;, sans-serif; white-space: normal; background-color: rgb(255, 255, 255);">由于一个类可以实现多个接口，因此 getInterfaces(); 方法返回一个 Class 数组，在 Java 中接口同样有对应的 Class 对象。 注意：getInterfaces() 方法仅仅只返回当前类所实现的接口。当前类的父类如果实现了接口，这些接口是不会在返回的 Class 集合中的，尽管实际上当前类其实已经实现了父类接口。</p><h2 style="box-sizing: border-box; font-family: -apple-system, &quot;SF UI Text&quot;, Arial, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, &quot;WenQuanYi Micro Hei&quot;, sans-serif; line-height: 1.7; color: rgb(47, 47, 47); margin: 0px 0px 15px; font-size: 24px; text-rendering: optimizeLegibility; white-space: normal; background-color: rgb(255, 255, 255);">7.构造器</h2><p style="box-sizing: border-box; margin-top: 0px; margin-bottom: 25px; word-break: break-word; color: rgb(47, 47, 47); font-family: -apple-system, &quot;SF UI Text&quot;, Arial, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, &quot;WenQuanYi Micro Hei&quot;, sans-serif; white-space: normal; background-color: rgb(255, 255, 255);">我们可以通 过 Class 对象来获取 Constructor 类的实例：</p><pre class="hljs delphi" style="box-sizing: border-box; overflow: auto; font-family: Menlo, Monaco, Consolas, &quot;Courier New&quot;, monospace; font-size: 13px; padding: 15px; margin-top: 0px; margin-bottom: 20px; line-height: 1.42857; word-break: break-word; word-wrap: normal; color: rgb(101, 123, 131); background-color: rgb(246, 246, 246); border: 1px solid rgb(204, 204, 204); border-radius: 0px; text-size-adjust: none;">Class&nbsp;aClass&nbsp;=&nbsp;...//获取Class对象Constructor[]&nbsp;constructors&nbsp;=&nbsp;aClass.getConstructors();</pre><p style="box-sizing: border-box; margin-top: 0px; margin-bottom: 25px; word-break: break-word; color: rgb(47, 47, 47); font-family: -apple-system, &quot;SF UI Text&quot;, Arial, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, &quot;WenQuanYi Micro Hei&quot;, sans-serif; white-space: normal; background-color: rgb(255, 255, 255);">返回的 Constructor 数组包含每一个声明为公有的（Public）构造方法。 如果你知道你要访问的构造方法的方法参数类型，你可以用下面的方法获取指定的构造方法，这例子返回的构造方法的方法参数为 String 类型：</p><pre class="hljs oxygene" style="box-sizing: border-box; overflow: auto; font-family: Menlo, Monaco, Consolas, &quot;Courier New&quot;, monospace; font-size: 13px; padding: 15px; margin-top: 0px; margin-bottom: 20px; line-height: 1.42857; word-break: break-word; word-wrap: normal; color: rgb(101, 123, 131); background-color: rgb(246, 246, 246); border: 1px solid rgb(204, 204, 204); border-radius: 0px; text-size-adjust: none;">Class&nbsp;aClass&nbsp;=&nbsp;...//获取Class对象Constructor&nbsp;constructor&nbsp;=aClass.getConstructor(new&nbsp;Class[]{String.class});</pre><p style="box-sizing: border-box; margin-top: 0px; margin-bottom: 25px; word-break: break-word; color: rgb(47, 47, 47); font-family: -apple-system, &quot;SF UI Text&quot;, Arial, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, &quot;WenQuanYi Micro Hei&quot;, sans-serif; white-space: normal; background-color: rgb(255, 255, 255);">如果没有指定的构造方法能满足匹配的方法参数则会抛出：NoSuchMethodException。</p><p style="box-sizing: border-box; margin-top: 0px; margin-bottom: 25px; word-break: break-word; color: rgb(47, 47, 47); font-family: -apple-system, &quot;SF UI Text&quot;, Arial, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, &quot;WenQuanYi Micro Hei&quot;, sans-serif; white-space: normal; background-color: rgb(255, 255, 255);">构造方法参数<br/>你可以通过如下方式获取指定构造方法的方法参数信息：</p><pre class="hljs delphi" style="box-sizing: border-box; overflow: auto; font-family: Menlo, Monaco, Consolas, &quot;Courier New&quot;, monospace; font-size: 13px; padding: 15px; margin-top: 0px; margin-bottom: 20px; line-height: 1.42857; word-break: break-word; word-wrap: normal; color: rgb(101, 123, 131); background-color: rgb(246, 246, 246); border: 1px solid rgb(204, 204, 204); border-radius: 0px; text-size-adjust: none;">Constructor&nbsp;constructor&nbsp;=&nbsp;...&nbsp;//获取Constructor对象Class[]&nbsp;parameterTypes&nbsp;=&nbsp;constructor.getParameterTypes();</pre><p style="box-sizing: border-box; margin-top: 0px; margin-bottom: 25px; word-break: break-word; color: rgb(47, 47, 47); font-family: -apple-system, &quot;SF UI Text&quot;, Arial, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, &quot;WenQuanYi Micro Hei&quot;, sans-serif; white-space: normal; background-color: rgb(255, 255, 255);">利用 Constructor 对象实例化一个类<br/>你可以通过如下方法实例化一个类：</p><pre class="hljs delphi" style="box-sizing: border-box; overflow: auto; font-family: Menlo, Monaco, Consolas, &quot;Courier New&quot;, monospace; font-size: 13px; padding: 15px; margin-top: 0px; margin-bottom: 20px; line-height: 1.42857; word-break: break-word; word-wrap: normal; color: rgb(101, 123, 131); background-color: rgb(246, 246, 246); border: 1px solid rgb(204, 204, 204); border-radius: 0px; text-size-adjust: none;">Constructor&nbsp;constructor&nbsp;=&nbsp;MyObject.class.getConstructor(String.class);MyObject&nbsp;myObject&nbsp;=&nbsp;(MyObject)&nbsp;constructor.newInstance(&quot;constructor-arg1&quot;);</pre><p style="box-sizing: border-box; margin-top: 0px; margin-bottom: 25px; word-break: break-word; color: rgb(47, 47, 47); font-family: -apple-system, &quot;SF UI Text&quot;, Arial, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, &quot;WenQuanYi Micro Hei&quot;, sans-serif; white-space: normal; background-color: rgb(255, 255, 255);">constructor.newInstance()方法的方法参数是一个可变参数列表，但是当你调用构造方法的时候你必须提供精确的参数，即形参与实参必须一一对应。在这个例子中构造方法需要一个 String 类型的参数，那我们在调用 newInstance 方法的时候就必须传入一个 String 类型的参数。</p><h2 style="box-sizing: border-box; font-family: -apple-system, &quot;SF UI Text&quot;, Arial, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, &quot;WenQuanYi Micro Hei&quot;, sans-serif; line-height: 1.7; color: rgb(47, 47, 47); margin: 0px 0px 15px; font-size: 24px; text-rendering: optimizeLegibility; white-space: normal; background-color: rgb(255, 255, 255);">8.方法</h2><p style="box-sizing: border-box; margin-top: 0px; margin-bottom: 25px; word-break: break-word; color: rgb(47, 47, 47); font-family: -apple-system, &quot;SF UI Text&quot;, Arial, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, &quot;WenQuanYi Micro Hei&quot;, sans-serif; white-space: normal; background-color: rgb(255, 255, 255);">可以通过 Class 对象获取 Method 对象，如下例：</p><pre class="hljs oxygene" style="box-sizing: border-box; overflow: auto; font-family: Menlo, Monaco, Consolas, &quot;Courier New&quot;, monospace; font-size: 13px; padding: 15px; margin-top: 0px; margin-bottom: 20px; line-height: 1.42857; word-break: break-word; word-wrap: normal; color: rgb(101, 123, 131); background-color: rgb(246, 246, 246); border: 1px solid rgb(204, 204, 204); border-radius: 0px; text-size-adjust: none;">Class&nbsp;aClass&nbsp;=&nbsp;...//获取Class对象Method[]&nbsp;methods&nbsp;=&nbsp;aClass.getMethods();</pre><p style="box-sizing: border-box; margin-top: 0px; margin-bottom: 25px; word-break: break-word; color: rgb(47, 47, 47); font-family: -apple-system, &quot;SF UI Text&quot;, Arial, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, &quot;WenQuanYi Micro Hei&quot;, sans-serif; white-space: normal; background-color: rgb(255, 255, 255);">返回的 Method 对象数组包含了指定类中声明为公有的(public)的所有变量集合。</p><p style="box-sizing: border-box; margin-top: 0px; margin-bottom: 25px; word-break: break-word; color: rgb(47, 47, 47); font-family: -apple-system, &quot;SF UI Text&quot;, Arial, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, &quot;WenQuanYi Micro Hei&quot;, sans-serif; white-space: normal; background-color: rgb(255, 255, 255);">如果你知道你要调用方法的具体参数类型，你就可以直接通过参数类型来获取指定的方法，下面这个例子中返回方法对象名称是“doSomething”，他的方法参数是 String 类型：</p><pre class="hljs oxygene" style="box-sizing: border-box; overflow: auto; font-family: Menlo, Monaco, Consolas, &quot;Courier New&quot;, monospace; font-size: 13px; padding: 15px; margin-top: 0px; margin-bottom: 20px; line-height: 1.42857; word-break: break-word; word-wrap: normal; color: rgb(101, 123, 131); background-color: rgb(246, 246, 246); border: 1px solid rgb(204, 204, 204); border-radius: 0px; text-size-adjust: none;">Class&nbsp;&nbsp;aClass&nbsp;=&nbsp;...//获取Class对象Method&nbsp;method&nbsp;=&nbsp;aClass.getMethod(&quot;doSomething&quot;,&nbsp;new&nbsp;Class[]{String.class});</pre><p style="box-sizing: border-box; margin-top: 0px; margin-bottom: 25px; word-break: break-word; color: rgb(47, 47, 47); font-family: -apple-system, &quot;SF UI Text&quot;, Arial, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, &quot;WenQuanYi Micro Hei&quot;, sans-serif; white-space: normal; background-color: rgb(255, 255, 255);">如果根据给定的方法名称以及参数类型无法匹配到相应的方法，则会抛出 NoSuchMethodException。 如果你想要获取的方法没有参数，那么在调用 getMethod()方法时第二个参数传入 null 即可，就像这样：</p><pre class="hljs oxygene" style="box-sizing: border-box; overflow: auto; font-family: Menlo, Monaco, Consolas, &quot;Courier New&quot;, monospace; font-size: 13px; padding: 15px; margin-top: 0px; margin-bottom: 20px; line-height: 1.42857; word-break: break-word; word-wrap: normal; color: rgb(101, 123, 131); background-color: rgb(246, 246, 246); border: 1px solid rgb(204, 204, 204); border-radius: 0px; text-size-adjust: none;">Class&nbsp;&nbsp;aClass&nbsp;=&nbsp;...//获取Class对象Method&nbsp;method&nbsp;=&nbsp;aClass.getMethod(&quot;doSomething&quot;,&nbsp;null);</pre><p style="box-sizing: border-box; margin-top: 0px; margin-bottom: 25px; word-break: break-word; color: rgb(47, 47, 47); font-family: -apple-system, &quot;SF UI Text&quot;, Arial, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, &quot;WenQuanYi Micro Hei&quot;, sans-serif; white-space: normal; background-color: rgb(255, 255, 255);">方法参数以及返回类型<br/>你可以获取指定方法的方法参数是哪些：</p><pre class="hljs oxygene" style="box-sizing: border-box; overflow: auto; font-family: Menlo, Monaco, Consolas, &quot;Courier New&quot;, monospace; font-size: 13px; padding: 15px; margin-top: 0px; margin-bottom: 20px; line-height: 1.42857; word-break: break-word; word-wrap: normal; color: rgb(101, 123, 131); background-color: rgb(246, 246, 246); border: 1px solid rgb(204, 204, 204); border-radius: 0px; text-size-adjust: none;">Method&nbsp;method&nbsp;=&nbsp;...&nbsp;//获取Class对象Class[]&nbsp;parameterTypes&nbsp;=&nbsp;method.getParameterTypes();</pre><p style="box-sizing: border-box; margin-top: 0px; margin-bottom: 25px; word-break: break-word; color: rgb(47, 47, 47); font-family: -apple-system, &quot;SF UI Text&quot;, Arial, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, &quot;WenQuanYi Micro Hei&quot;, sans-serif; white-space: normal; background-color: rgb(255, 255, 255);">你可以获取指定方法的返回类型：</p><pre class="hljs oxygene" style="box-sizing: border-box; overflow: auto; font-family: Menlo, Monaco, Consolas, &quot;Courier New&quot;, monospace; font-size: 13px; padding: 15px; margin-top: 0px; margin-bottom: 20px; line-height: 1.42857; word-break: break-word; word-wrap: normal; color: rgb(101, 123, 131); background-color: rgb(246, 246, 246); border: 1px solid rgb(204, 204, 204); border-radius: 0px; text-size-adjust: none;">Method&nbsp;method&nbsp;=&nbsp;...&nbsp;//获取Class对象Class&nbsp;returnType&nbsp;=&nbsp;method.getReturnType();</pre><p style="box-sizing: border-box; margin-top: 0px; margin-bottom: 25px; word-break: break-word; color: rgb(47, 47, 47); font-family: -apple-system, &quot;SF UI Text&quot;, Arial, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, &quot;WenQuanYi Micro Hei&quot;, sans-serif; white-space: normal; background-color: rgb(255, 255, 255);">通过 Method 对象调用方法<br/>你可以通过如下方式来调用一个方法：</p><pre class="hljs oxygene" style="box-sizing: border-box; overflow: auto; font-family: Menlo, Monaco, Consolas, &quot;Courier New&quot;, monospace; font-size: 13px; padding: 15px; margin-top: 0px; margin-bottom: 20px; line-height: 1.42857; word-break: break-word; word-wrap: normal; color: rgb(101, 123, 131); background-color: rgb(246, 246, 246); border: 1px solid rgb(204, 204, 204); border-radius: 0px; text-size-adjust: none;">//获取一个方法名为doSomesthing，参数类型为String的方法Method&nbsp;method&nbsp;=&nbsp;MyObject.class.getMethod(&quot;doSomething&quot;,&nbsp;String.class);Object&nbsp;returnValue&nbsp;=&nbsp;method.invoke(null,&nbsp;&quot;parameter-value1&quot;);</pre><p style="box-sizing: border-box; margin-top: 0px; margin-bottom: 25px; word-break: break-word; color: rgb(47, 47, 47); font-family: -apple-system, &quot;SF UI Text&quot;, Arial, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, &quot;WenQuanYi Micro Hei&quot;, sans-serif; white-space: normal; background-color: rgb(255, 255, 255);">传入的 null 参数是你要调用方法的对象，如果是一个静态方法调用的话则可以用 null 代替指定对象作为 invoke()的参数，在上面这个例子中，如果 doSomething 不是静态方法的话，你就要传入有效的 MyObject 实例而不是 null。 Method.invoke(Object target, Object … parameters)方法的第二个参数是一个可变参数列表，但是你必须要传入与你要调用方法的形参一一对应的实参。就像上个例子那样，方法需要 String 类型的参数，那我们必须要传入一个字符串。</p><h2 style="box-sizing: border-box; font-family: -apple-system, &quot;SF UI Text&quot;, Arial, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, &quot;WenQuanYi Micro Hei&quot;, sans-serif; line-height: 1.7; color: rgb(47, 47, 47); margin: 0px 0px 15px; font-size: 24px; text-rendering: optimizeLegibility; white-space: normal; background-color: rgb(255, 255, 255);">9.变量</h2><p style="box-sizing: border-box; margin-top: 0px; margin-bottom: 25px; word-break: break-word; color: rgb(47, 47, 47); font-family: -apple-system, &quot;SF UI Text&quot;, Arial, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, &quot;WenQuanYi Micro Hei&quot;, sans-serif; white-space: normal; background-color: rgb(255, 255, 255);">你可以通过如下方式访问一个类的成员变量：</p><pre class="hljs oxygene" style="box-sizing: border-box; overflow: auto; font-family: Menlo, Monaco, Consolas, &quot;Courier New&quot;, monospace; font-size: 13px; padding: 15px; margin-top: 0px; margin-bottom: 20px; line-height: 1.42857; word-break: break-word; word-wrap: normal; color: rgb(101, 123, 131); background-color: rgb(246, 246, 246); border: 1px solid rgb(204, 204, 204); border-radius: 0px; text-size-adjust: none;">Field[]&nbsp;method&nbsp;=&nbsp;aClass.getFields();</pre><p style="box-sizing: border-box; margin-top: 0px; margin-bottom: 25px; word-break: break-word; color: rgb(47, 47, 47); font-family: -apple-system, &quot;SF UI Text&quot;, Arial, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, &quot;WenQuanYi Micro Hei&quot;, sans-serif; white-space: normal; background-color: rgb(255, 255, 255);">在通常的观点中从对象的外部访问私有变量以及方法是不允许的，但是 Java 反射机制可以做到这一点。使用这个功能并不困难，在进行单元测试时这个功能非常有效。本节会向你展示如何使用这个功能。</p><p style="box-sizing: border-box; margin-top: 0px; margin-bottom: 25px; word-break: break-word; color: rgb(47, 47, 47); font-family: -apple-system, &quot;SF UI Text&quot;, Arial, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, &quot;WenQuanYi Micro Hei&quot;, sans-serif; white-space: normal; background-color: rgb(255, 255, 255);">注意：这个功能只有在代码运行在单机 Java 应用(standalone Java application)中才会有效,就像你做单元测试或者一些常规的应用程序一样。如果你在 Java Applet 中使用这个功能，那么你就要想办法去应付 SecurityManager 对你限制了。但是一般情况下我们是不会这么做的，所以在本节里面我们不会探讨这个问题。</p><p style="box-sizing: border-box; margin-top: 0px; margin-bottom: 25px; word-break: break-word; color: rgb(47, 47, 47); font-family: -apple-system, &quot;SF UI Text&quot;, Arial, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, &quot;WenQuanYi Micro Hei&quot;, sans-serif; white-space: normal; background-color: rgb(255, 255, 255);">访问私有变量<br/>要想获取私有变量你可以调用 Class.getDeclaredField(String name)方法或者 Class.getDeclaredFields()方法。</p><p style="box-sizing: border-box; margin-top: 0px; margin-bottom: 25px; word-break: break-word; color: rgb(47, 47, 47); font-family: -apple-system, &quot;SF UI Text&quot;, Arial, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, &quot;WenQuanYi Micro Hei&quot;, sans-serif; white-space: normal; background-color: rgb(255, 255, 255);">Class.getField(String name)和 Class.getFields()只会返回公有的变量，无法获取私有变量。下面例子定义了一个包含私有变量的类，在它下面是如何通过反射获取私有变量的例子：</p><pre class="hljs haxe" style="box-sizing: border-box; overflow: auto; font-family: Menlo, Monaco, Consolas, &quot;Courier New&quot;, monospace; font-size: 13px; padding: 15px; margin-top: 0px; margin-bottom: 20px; line-height: 1.42857; word-break: break-word; word-wrap: normal; color: rgb(101, 123, 131); background-color: rgb(246, 246, 246); border: 1px solid rgb(204, 204, 204); border-radius: 0px; text-size-adjust: none;">public&nbsp;class&nbsp;PrivateObject&nbsp;{&nbsp;&nbsp;private&nbsp;String&nbsp;privateString&nbsp;=&nbsp;null;&nbsp;&nbsp;public&nbsp;PrivateObject(String&nbsp;privateString)&nbsp;{&nbsp;&nbsp;&nbsp;&nbsp;this.privateString&nbsp;=&nbsp;privateString;
&nbsp;&nbsp;}
}
PrivateObject&nbsp;privateObject&nbsp;=&nbsp;new&nbsp;PrivateObject(&quot;The&nbsp;Private&nbsp;Value&quot;);

Field&nbsp;privateStringField&nbsp;=&nbsp;PrivateObject.class.
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;getDeclaredField(&quot;privateString&quot;);

privateStringField.setAccessible(true);String&nbsp;fieldValue&nbsp;=&nbsp;(String)&nbsp;privateStringField.get(privateObject);
System.out.println(&quot;fieldValue&nbsp;=&nbsp;&quot;&nbsp;+&nbsp;fieldValue);</pre><p style="box-sizing: border-box; margin-top: 0px; margin-bottom: 25px; word-break: break-word; color: rgb(47, 47, 47); font-family: -apple-system, &quot;SF UI Text&quot;, Arial, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, &quot;WenQuanYi Micro Hei&quot;, sans-serif; white-space: normal; background-color: rgb(255, 255, 255);">这个例子会输出”fieldValue = The Private Value”，The Private Value 是 PrivateObject 实例的 privateString 私有变量的值，注意调用 PrivateObject.class.getDeclaredField(“privateString”)方法会返回一个私有变量，这个方法返回的变量是定义在 PrivateObject 类中的而不是在它的父类中定义的变量。 注意 privateStringField.setAccessible(true)这行代码，通过调用 setAccessible()方法会关闭指定类 Field 实例的反射访问检查，这行代码执行之后不论是私有的、受保护的以及包访问的作用域，你都可以在任何地方访问，即使你不在他的访问权限作用域之内。但是你如果你用一般代码来访问这些不在你权限作用域之内的代码依然是不可以的，在编译的时候就会报错。</p><p style="box-sizing: border-box; margin-top: 0px; margin-bottom: 25px; word-break: break-word; color: rgb(47, 47, 47); font-family: -apple-system, &quot;SF UI Text&quot;, Arial, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, &quot;WenQuanYi Micro Hei&quot;, sans-serif; white-space: normal; background-color: rgb(255, 255, 255);">访问私有方法<br/>访问一个私有方法你需要调用 Class.getDeclaredMethod(String name, Class[] parameterTypes)或者 Class.getDeclaredMethods() 方法。 Class.getMethod(String name, Class[] parameterTypes)和 Class.getMethods()方法，只会返回公有的方法，无法获取私有方法。下面例子定义了一个包含私有方法的类，在它下面是如何通过反射获取私有方法的例子：</p><pre class="hljs haxe" style="box-sizing: border-box; overflow: auto; font-family: Menlo, Monaco, Consolas, &quot;Courier New&quot;, monospace; font-size: 13px; padding: 15px; margin-top: 0px; margin-bottom: 20px; line-height: 1.42857; word-break: break-word; word-wrap: normal; color: rgb(101, 123, 131); background-color: rgb(246, 246, 246); border: 1px solid rgb(204, 204, 204); border-radius: 0px; text-size-adjust: none;">public&nbsp;class&nbsp;PrivateObject&nbsp;{&nbsp;&nbsp;private&nbsp;String&nbsp;privateString&nbsp;=&nbsp;null;&nbsp;&nbsp;public&nbsp;PrivateObject(String&nbsp;privateString)&nbsp;{&nbsp;&nbsp;&nbsp;&nbsp;this.privateString&nbsp;=&nbsp;privateString;
&nbsp;&nbsp;}&nbsp;&nbsp;private&nbsp;String&nbsp;getPrivateString(){&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;this.privateString;
&nbsp;&nbsp;}
}
PrivateObject&nbsp;privateObject&nbsp;=&nbsp;new&nbsp;PrivateObject(&quot;The&nbsp;Private&nbsp;Value&quot;);

Method&nbsp;privateStringMethod&nbsp;=&nbsp;PrivateObject.class.
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;getDeclaredMethod(&quot;getPrivateString&quot;,&nbsp;null);

privateStringMethod.setAccessible(true);String&nbsp;returnValue&nbsp;=&nbsp;(String)
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;privateStringMethod.invoke(privateObject,&nbsp;null);

System.out.println(&quot;returnValue&nbsp;=&nbsp;&quot;&nbsp;+&nbsp;returnValue);</pre><p style="box-sizing: border-box; margin-top: 0px; margin-bottom: 25px; word-break: break-word; color: rgb(47, 47, 47); font-family: -apple-system, &quot;SF UI Text&quot;, Arial, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, &quot;WenQuanYi Micro Hei&quot;, sans-serif; white-space: normal; background-color: rgb(255, 255, 255);">这个例子会输出”returnValue = The Private Value”，The Private Value 是 PrivateObject 实例的 getPrivateString()方法的返回值。 PrivateObject.class.getDeclaredMethod(“privateString”)方法会返回一个私有方法，这个方法是定义在 PrivateObject 类中的而不是在它的父类中定义的。 同样的，注意 Method.setAcessible(true)这行代码，通过调用 setAccessible()方法会关闭指定类的 Method 实例的反射访问检查，这行代码执行之后不论是私有的、受保护的以及包访问的作用域，你都可以在任何地方访问，即使你不在他的访问权限作用域之内。但是你如果你用一般代码来访问这些不在你权限作用域之内的代码依然是不可以的，在编译的时候就会报错。</p><h2 style="box-sizing: border-box; font-family: -apple-system, &quot;SF UI Text&quot;, Arial, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, &quot;WenQuanYi Micro Hei&quot;, sans-serif; line-height: 1.7; color: rgb(47, 47, 47); margin: 0px 0px 15px; font-size: 24px; text-rendering: optimizeLegibility; white-space: normal; background-color: rgb(255, 255, 255);">10.泛型</h2><p style="box-sizing: border-box; margin-top: 0px; margin-bottom: 25px; word-break: break-word; color: rgb(47, 47, 47); font-family: -apple-system, &quot;SF UI Text&quot;, Arial, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, &quot;WenQuanYi Micro Hei&quot;, sans-serif; white-space: normal; background-color: rgb(255, 255, 255);">运用泛型反射的经验法则</p><p style="box-sizing: border-box; margin-top: 0px; margin-bottom: 25px; word-break: break-word; color: rgb(47, 47, 47); font-family: -apple-system, &quot;SF UI Text&quot;, Arial, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, &quot;WenQuanYi Micro Hei&quot;, sans-serif; white-space: normal; background-color: rgb(255, 255, 255);">下面是两个典型的使用泛型的场景：<br/>1、声明一个需要被参数化（parameterizable）的类/接口。<br/>2、使用一个参数化类。</p><p style="box-sizing: border-box; margin-top: 0px; margin-bottom: 25px; word-break: break-word; color: rgb(47, 47, 47); font-family: -apple-system, &quot;SF UI Text&quot;, Arial, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, &quot;WenQuanYi Micro Hei&quot;, sans-serif; white-space: normal; background-color: rgb(255, 255, 255);">当你声明一个类或者接口的时候你可以指明这个类或接口可以被参数化， java.util.List 接口就是典型的例子。你可以运用泛型机制创建一个标明存储的是 String 类型 list，这样比你创建一个 Object 的l ist 要更好。<br/>当你想在运行期参数化类型本身，比如你想检查 java.util.List 类的参数化类型，你是没有办法能知道他具体的参数化类型是什么。这样一来这个类型就可以是一个应用中所有的类型。但是，当你检查一个使用了被参数化的类型的变量或者方法，你可以获得这个被参数化类型的具体参数。<br/>总之：<br/>你不能在运行期获知一个被参数化的类型的具体参数类型是什么，但是你可以在用到这个被参数化类型的方法以及变量中找到他们，换句话说就是获知他们具体的参数化类型。 在下面的段落中会向你演示这类情况。<br/>泛型方法返回类型<br/>如果你获得了 java.lang.reflect.Method 对象，那么你就可以获取到这个方法的泛型返回类型信息。如果方法是在一个被参数化类型之中（译者注：如 T fun()）那么你无法获取他的具体类型，但是如果方法返回一个泛型类（译者注：如 List fun()）那么你就可以获得这个泛型类的具体参数化类型。你可以在“<a href="http://tutorials.jenkov.com/java-reflection/generics.html" target="_blank" style="box-sizing: border-box; background-color: transparent; color: rgb(49, 148, 208); text-decoration-line: none; cursor: pointer;">Java Reflection: Methods</a>”中阅读到有关如何获取Method对象的相关内容。下面这个例子定义了一个类这个类中的方法返回类型是一个泛型类型：</p><pre class="hljs kotlin" style="box-sizing: border-box; overflow: auto; font-family: Menlo, Monaco, Consolas, &quot;Courier New&quot;, monospace; font-size: 13px; padding: 15px; margin-top: 0px; margin-bottom: 20px; line-height: 1.42857; word-break: break-word; word-wrap: normal; color: rgb(101, 123, 131); background-color: rgb(246, 246, 246); border: 1px solid rgb(204, 204, 204); border-radius: 0px; text-size-adjust: none;">&nbsp;&nbsp;public&nbsp;class&nbsp;MyClass&nbsp;{&nbsp;&nbsp;protected&nbsp;List&lt;String&gt;&nbsp;stringList&nbsp;=&nbsp;...;&nbsp;&nbsp;public&nbsp;List&lt;String&gt;&nbsp;getStringList(){&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;this.stringList;
&nbsp;&nbsp;}
}</pre><p style="box-sizing: border-box; margin-top: 0px; margin-bottom: 25px; word-break: break-word; color: rgb(47, 47, 47); font-family: -apple-system, &quot;SF UI Text&quot;, Arial, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, &quot;WenQuanYi Micro Hei&quot;, sans-serif; white-space: normal; background-color: rgb(255, 255, 255);">我们可以获取 getStringList()方法的泛型返回类型，换句话说，我们可以检测到 getStringList()方法返回的是 List 而不仅仅只是一个 List。如下例：</p><pre class="hljs oxygene" style="box-sizing: border-box; overflow: auto; font-family: Menlo, Monaco, Consolas, &quot;Courier New&quot;, monospace; font-size: 13px; padding: 15px; margin-top: 0px; margin-bottom: 20px; line-height: 1.42857; word-break: break-word; word-wrap: normal; color: rgb(101, 123, 131); background-color: rgb(246, 246, 246); border: 1px solid rgb(204, 204, 204); border-radius: 0px; text-size-adjust: none;">Method&nbsp;method&nbsp;=&nbsp;MyClass.class.getMethod(&quot;getStringList&quot;,&nbsp;null);Type&nbsp;returnType&nbsp;=&nbsp;method.getGenericReturnType();if(returnType&nbsp;instanceof&nbsp;ParameterizedType){
&nbsp;&nbsp;&nbsp;&nbsp;ParameterizedType&nbsp;type&nbsp;=&nbsp;(ParameterizedType)&nbsp;returnType;
&nbsp;&nbsp;&nbsp;&nbsp;Type[]&nbsp;typeArguments&nbsp;=&nbsp;type.getActualTypeArguments();
&nbsp;&nbsp;&nbsp;&nbsp;for(Type&nbsp;typeArgument&nbsp;:&nbsp;typeArguments){
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Class&nbsp;typeArgClass&nbsp;=&nbsp;(Class)&nbsp;typeArgument;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;System.out.println(&quot;typeArgClass&nbsp;=&nbsp;&quot;&nbsp;+&nbsp;typeArgClass);
&nbsp;&nbsp;&nbsp;&nbsp;}}</pre><p style="box-sizing: border-box; margin-top: 0px; margin-bottom: 25px; word-break: break-word; color: rgb(47, 47, 47); font-family: -apple-system, &quot;SF UI Text&quot;, Arial, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, &quot;WenQuanYi Micro Hei&quot;, sans-serif; white-space: normal; background-color: rgb(255, 255, 255);">这段代码会打印出 “typeArgClass = java.lang.String”，Type[]数组typeArguments 只有一个结果 – 一个代表 java.lang.String 的 Class 类的实例。Class 类实现了 Type 接口。</p><p style="box-sizing: border-box; margin-top: 0px; margin-bottom: 25px; word-break: break-word; color: rgb(47, 47, 47); font-family: -apple-system, &quot;SF UI Text&quot;, Arial, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, &quot;WenQuanYi Micro Hei&quot;, sans-serif; white-space: normal; background-color: rgb(255, 255, 255);">泛型方法参数类型</p><p style="box-sizing: border-box; margin-top: 0px; margin-bottom: 25px; word-break: break-word; color: rgb(47, 47, 47); font-family: -apple-system, &quot;SF UI Text&quot;, Arial, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, &quot;WenQuanYi Micro Hei&quot;, sans-serif; white-space: normal; background-color: rgb(255, 255, 255);">你同样可以通过反射来获取方法参数的泛型类型，下面这个例子定义了一个类，这个类中的方法的参数是一个被参数化的 List：</p><pre class="hljs lasso" style="box-sizing: border-box; overflow: auto; font-family: Menlo, Monaco, Consolas, &quot;Courier New&quot;, monospace; font-size: 13px; padding: 15px; margin-top: 0px; margin-bottom: 20px; line-height: 1.42857; word-break: break-word; word-wrap: normal; color: rgb(101, 123, 131); background-color: rgb(246, 246, 246); border: 1px solid rgb(204, 204, 204); border-radius: 0px; text-size-adjust: none;">public&nbsp;class&nbsp;MyClass&nbsp;{&nbsp;&nbsp;protected&nbsp;List&lt;String&gt;&nbsp;stringList&nbsp;=&nbsp;...;&nbsp;&nbsp;public&nbsp;void&nbsp;setStringList(List&lt;String&gt;&nbsp;list){
&nbsp;&nbsp;&nbsp;&nbsp;this.stringList&nbsp;=&nbsp;list;
&nbsp;&nbsp;}
}</pre><p style="box-sizing: border-box; margin-top: 0px; margin-bottom: 25px; word-break: break-word; color: rgb(47, 47, 47); font-family: -apple-system, &quot;SF UI Text&quot;, Arial, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, &quot;WenQuanYi Micro Hei&quot;, sans-serif; white-space: normal; background-color: rgb(255, 255, 255);">你可以像这样来获取方法的泛型参数：</p><pre class="hljs oxygene" style="box-sizing: border-box; overflow: auto; font-family: Menlo, Monaco, Consolas, &quot;Courier New&quot;, monospace; font-size: 13px; padding: 15px; margin-top: 0px; margin-bottom: 20px; line-height: 1.42857; word-break: break-word; word-wrap: normal; color: rgb(101, 123, 131); background-color: rgb(246, 246, 246); border: 1px solid rgb(204, 204, 204); border-radius: 0px; text-size-adjust: none;">method&nbsp;=&nbsp;Myclass.class.getMethod(&quot;setStringList&quot;,&nbsp;List.class);Type[]&nbsp;genericParameterTypes&nbsp;=&nbsp;method.getGenericParameterTypes();for(Type&nbsp;genericParameterType&nbsp;:&nbsp;genericParameterTypes){
&nbsp;&nbsp;&nbsp;&nbsp;if(genericParameterType&nbsp;instanceof&nbsp;ParameterizedType){
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ParameterizedType&nbsp;aType&nbsp;=&nbsp;(ParameterizedType)&nbsp;genericParameterType;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Type[]&nbsp;parameterArgTypes&nbsp;=&nbsp;aType.getActualTypeArguments();
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for(Type&nbsp;parameterArgType&nbsp;:&nbsp;parameterArgTypes){
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Class&nbsp;parameterArgClass&nbsp;=&nbsp;(Class)&nbsp;parameterArgType;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;System.out.println(&quot;parameterArgClass&nbsp;=&nbsp;&quot;&nbsp;+&nbsp;parameterArgClass);
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}
&nbsp;&nbsp;&nbsp;&nbsp;}
}</pre><p style="box-sizing: border-box; margin-top: 0px; margin-bottom: 25px; word-break: break-word; color: rgb(47, 47, 47); font-family: -apple-system, &quot;SF UI Text&quot;, Arial, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, &quot;WenQuanYi Micro Hei&quot;, sans-serif; white-space: normal; background-color: rgb(255, 255, 255);">这段代码会打印出”parameterArgType = java.lang.String”。Type[]数组 parameterArgTypes 只有一个结果 – 一个代表 java.lang.String 的 Class 类的实例。Class 类实现了Type接口。<br/>泛型变量类型<br/>同样可以通过反射来访问公有（Public）变量的泛型类型，无论这个变量是一个类的静态成员变量或是实例成员变量。你可以在“<a href="http://tutorials.jenkov.com/java-reflection/fields.html" target="_blank" style="box-sizing: border-box; background-color: transparent; color: rgb(49, 148, 208); text-decoration-line: none; cursor: pointer;">Java Reflection: Fields</a>”中阅读到有关如何获取 Field 对象的相关内容。这是之前的一个例子，一个定义了一个名为 stringList 的成员变量的类。</p><pre class="hljs oxygene" style="box-sizing: border-box; overflow: auto; font-family: Menlo, Monaco, Consolas, &quot;Courier New&quot;, monospace; font-size: 13px; padding: 15px; margin-top: 0px; margin-bottom: 20px; line-height: 1.42857; word-break: break-word; word-wrap: normal; color: rgb(101, 123, 131); background-color: rgb(246, 246, 246); border: 1px solid rgb(204, 204, 204); border-radius: 0px; text-size-adjust: none;">method&nbsp;=&nbsp;Myclass.class.getMethod(&quot;setStringList&quot;,&nbsp;List.class);Type[]&nbsp;genericParameterTypes&nbsp;=&nbsp;method.getGenericParameterTypes();for(Type&nbsp;genericParameterType&nbsp;:&nbsp;genericParameterTypes){
&nbsp;&nbsp;&nbsp;&nbsp;if(genericParameterType&nbsp;instanceof&nbsp;ParameterizedType){
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ParameterizedType&nbsp;aType&nbsp;=&nbsp;(ParameterizedType)&nbsp;genericParameterType;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Type[]&nbsp;parameterArgTypes&nbsp;=&nbsp;aType.getActualTypeArguments();
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for(Type&nbsp;parameterArgType&nbsp;:&nbsp;parameterArgTypes){
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Class&nbsp;parameterArgClass&nbsp;=&nbsp;(Class)&nbsp;parameterArgType;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;System.out.println(&quot;parameterArgClass&nbsp;=&nbsp;&quot;&nbsp;+&nbsp;parameterArgClass);
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}
&nbsp;&nbsp;&nbsp;&nbsp;}
}</pre><p style="box-sizing: border-box; margin-top: 0px; margin-bottom: 25px; word-break: break-word; color: rgb(47, 47, 47); font-family: -apple-system, &quot;SF UI Text&quot;, Arial, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, &quot;WenQuanYi Micro Hei&quot;, sans-serif; white-space: normal; background-color: rgb(255, 255, 255);">这段代码会打印出”fieldArgClass = java.lang.String”。Type[]数组 fieldArgClass 只有一个结果 – 一个代表 java.lang.String 的 Class 类的实例。Class 类实现了 Type 接口。</p><p>转自博客：&nbsp;&nbsp;&nbsp;&nbsp;http://www.jianshu.com/p/2315dda64ad2</p>(String), 125(Integer), 0(Integer), JAVA动态调用方法(String), 231(String)
2017-09-14 21:35:35.058 DEBUG 8388 --- [http-nio-8080-exec-4] p.p.blog.repository.BlogRepo.update      : <==    Updates: 1
2017-09-14 21:35:35.065 DEBUG 8388 --- [http-nio-8080-exec-4] p.p.blog.repository.CommentRepo.list     : ==>  Preparing: select * from t_comment WHERE blogId=? and state=? order by commentDate desc 
2017-09-14 21:35:35.065 DEBUG 8388 --- [http-nio-8080-exec-4] p.p.blog.repository.CommentRepo.list     : ==> Parameters: 231(String), 1(Integer)
2017-09-14 21:35:35.067 DEBUG 8388 --- [http-nio-8080-exec-4] p.p.blog.repository.CommentRepo.list     : <==      Total: 0
2017-09-14 21:35:35.071 DEBUG 8388 --- [http-nio-8080-exec-4] p.p.b.repository.BlogRepo.getLastBlog    : ==>  Preparing: select * from t_blog t where ? > t.releaseDate order by releaseDate desc limit 1 
2017-09-14 21:35:35.072 DEBUG 8388 --- [http-nio-8080-exec-4] p.p.b.repository.BlogRepo.getLastBlog    : ==> Parameters: 2017-02-16 14:17:18.0(Timestamp)
2017-09-14 21:35:35.079 DEBUG 8388 --- [http-nio-8080-exec-4] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 21:35:35.081 DEBUG 8388 --- [http-nio-8080-exec-4] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 23(String)
2017-09-14 21:35:35.083 DEBUG 8388 --- [http-nio-8080-exec-4] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 21:35:35.085 DEBUG 8388 --- [http-nio-8080-exec-4] p.p.b.repository.BlogRepo.getLastBlog    : <==      Total: 1
2017-09-14 21:35:35.095 DEBUG 8388 --- [http-nio-8080-exec-4] p.p.b.repository.BlogRepo.getNextBlog    : ==>  Preparing: select * from t_blog t where t.releaseDate > ? order by releaseDate asc limit 1 
2017-09-14 21:35:35.096 DEBUG 8388 --- [http-nio-8080-exec-4] p.p.b.repository.BlogRepo.getNextBlog    : ==> Parameters: 2017-02-16 14:17:18.0(Timestamp)
2017-09-14 21:35:35.101 DEBUG 8388 --- [http-nio-8080-exec-4] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 21:35:35.101 DEBUG 8388 --- [http-nio-8080-exec-4] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 5(String)
2017-09-14 21:35:35.109 DEBUG 8388 --- [http-nio-8080-exec-4] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 21:35:35.110 DEBUG 8388 --- [http-nio-8080-exec-4] p.p.b.repository.BlogRepo.getNextBlog    : <==      Total: 1
2017-09-14 21:35:54.619 DEBUG 8388 --- [http-nio-8080-exec-3] p.p.blog.repository.BlogRepo.list        : ==>  Preparing: select * from t_blog order by releaseDate desc limit ?,? 
2017-09-14 21:35:54.620 DEBUG 8388 --- [http-nio-8080-exec-3] p.p.blog.repository.BlogRepo.list        : ==> Parameters: 0(Integer), 10(Integer)
2017-09-14 21:35:54.623 DEBUG 8388 --- [http-nio-8080-exec-3] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 21:35:54.623 DEBUG 8388 --- [http-nio-8080-exec-3] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 11(String)
2017-09-14 21:35:54.625 DEBUG 8388 --- [http-nio-8080-exec-3] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 21:35:54.627 DEBUG 8388 --- [http-nio-8080-exec-3] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 21:35:54.627 DEBUG 8388 --- [http-nio-8080-exec-3] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 1(String)
2017-09-14 21:35:54.628 DEBUG 8388 --- [http-nio-8080-exec-3] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 21:35:54.630 DEBUG 8388 --- [http-nio-8080-exec-3] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 21:35:54.631 DEBUG 8388 --- [http-nio-8080-exec-3] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 12(String)
2017-09-14 21:35:54.632 DEBUG 8388 --- [http-nio-8080-exec-3] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 21:35:54.634 DEBUG 8388 --- [http-nio-8080-exec-3] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 21:35:54.634 DEBUG 8388 --- [http-nio-8080-exec-3] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 32(String)
2017-09-14 21:35:54.636 DEBUG 8388 --- [http-nio-8080-exec-3] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 21:35:54.639 DEBUG 8388 --- [http-nio-8080-exec-3] p.p.blog.repository.BlogRepo.list        : <==      Total: 10
2017-09-14 21:35:54.643 DEBUG 8388 --- [http-nio-8080-exec-3] p.p.blog.repository.BlogRepo.getTotal    : ==>  Preparing: select count(*) from t_blog 
2017-09-14 21:35:54.643 DEBUG 8388 --- [http-nio-8080-exec-3] p.p.blog.repository.BlogRepo.getTotal    : ==> Parameters: 
2017-09-14 21:35:54.645 DEBUG 8388 --- [http-nio-8080-exec-3] p.p.blog.repository.BlogRepo.getTotal    : <==      Total: 1
2017-09-14 21:36:00.237 DEBUG 8388 --- [http-nio-8080-exec-9] p.p.blog.repository.BlogRepo.list        : ==>  Preparing: select * from t_blog WHERE typeId=? order by releaseDate desc limit ?,? 
2017-09-14 21:36:00.238 DEBUG 8388 --- [http-nio-8080-exec-9] p.p.blog.repository.BlogRepo.list        : ==> Parameters: 31(String), 0(Integer), 10(Integer)
2017-09-14 21:36:00.241 DEBUG 8388 --- [http-nio-8080-exec-9] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 21:36:00.242 DEBUG 8388 --- [http-nio-8080-exec-9] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 31(String)
2017-09-14 21:36:00.243 DEBUG 8388 --- [http-nio-8080-exec-9] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 21:36:00.245 DEBUG 8388 --- [http-nio-8080-exec-9] p.p.blog.repository.BlogRepo.list        : <==      Total: 4
2017-09-14 21:36:00.247 DEBUG 8388 --- [http-nio-8080-exec-9] p.p.blog.repository.BlogRepo.getTotal    : ==>  Preparing: select count(*) from t_blog WHERE typeId=? 
2017-09-14 21:36:00.248 DEBUG 8388 --- [http-nio-8080-exec-9] p.p.blog.repository.BlogRepo.getTotal    : ==> Parameters: 31(String)
2017-09-14 21:36:00.250 DEBUG 8388 --- [http-nio-8080-exec-9] p.p.blog.repository.BlogRepo.getTotal    : <==      Total: 1
2017-09-14 21:36:02.582 DEBUG 8388 --- [http-nio-8080-exec-8] p.p.blog.repository.BlogRepo.update      : ==>  Preparing: update t_blog SET title=?, summary=?, typeId=?, content=?, clickHit=?, replyHit=?, keyWord=? where id=? 
2017-09-14 21:36:02.584 DEBUG 8388 --- [http-nio-8080-exec-8] p.p.blog.repository.BlogRepo.update      : ==> Parameters: avtiviti学习笔记之=>创建avtiviti依赖表(String), maven加入jar包官方地址:    https://www.activiti.org/community#maven.repositoryactiviti配置官网    https://www.activiti.org/userguide/index.html#configuration 用mysql6的(String), 31(String), <ol class=" list-paddingleft-2" style="list-style-type: decimal;"><li><p>maven加入jar包</p></li></ol><p>官方地址:&nbsp;&nbsp;&nbsp;&nbsp;<a href="https://www.activiti.org/community#maven.repository">https://www.activiti.org/community#maven.repository</a></p><p>activiti配置官网&nbsp;&nbsp;&nbsp;&nbsp;<a href="https://www.activiti.org/userguide/index.html#configuration">https://www.activiti.org/userguide/index.html#configuration</a> </p><p><br/></p><p>用mysql6的jar包会报错,没有找到原因. 用5可以</p><p>pom&nbsp;<br/></p><pre class="brush:xml;toolbar:false">&lt;project&nbsp;xmlns=&quot;http://maven.apache.org/POM/4.0.0&quot;&nbsp;xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;
	xsi:schemaLocation=&quot;http://maven.apache.org/POM/4.0.0&nbsp;http://maven.apache.org/maven-v4_0_0.xsd&quot;&gt;
	&lt;modelVersion&gt;4.0.0&lt;/modelVersion&gt;
	&lt;groupId&gt;pers.cc.activiti&lt;/groupId&gt;
	&lt;artifactId&gt;ActivitiDemo&lt;/artifactId&gt;
	&lt;packaging&gt;war&lt;/packaging&gt;
	&lt;version&gt;0.0.1-SNAPSHOT&lt;/version&gt;
	&lt;name&gt;ActivitiDemo&nbsp;Maven&nbsp;Webapp&lt;/name&gt;
	&lt;url&gt;http://maven.apache.org&lt;/url&gt;

	&lt;properties&gt;
		&lt;avtiviti-version&gt;5.22.0&lt;/avtiviti-version&gt;
	&lt;/properties&gt;
	&lt;dependencies&gt;

		&lt;dependency&gt;
			&lt;groupId&gt;org.activiti&lt;/groupId&gt;
			&lt;artifactId&gt;activiti-engine&lt;/artifactId&gt;
			&lt;version&gt;${avtiviti-version}&lt;/version&gt;
		&lt;/dependency&gt;

		&lt;dependency&gt;
			&lt;groupId&gt;org.activiti&lt;/groupId&gt;
			&lt;artifactId&gt;activiti-spring&lt;/artifactId&gt;
			&lt;version&gt;${avtiviti-version}&lt;/version&gt;
		&lt;/dependency&gt;

		&lt;dependency&gt;
			&lt;groupId&gt;org.activiti&lt;/groupId&gt;
			&lt;artifactId&gt;activiti-bpmn-model&lt;/artifactId&gt;
			&lt;version&gt;${avtiviti-version}&lt;/version&gt;
		&lt;/dependency&gt;

		&lt;dependency&gt;
			&lt;groupId&gt;org.slf4j&lt;/groupId&gt;
			&lt;artifactId&gt;slf4j-api&lt;/artifactId&gt;
			&lt;version&gt;1.7.5&lt;/version&gt;
		&lt;/dependency&gt;
		&lt;dependency&gt;
			&lt;groupId&gt;org.slf4j&lt;/groupId&gt;
			&lt;artifactId&gt;slf4j-log4j12&lt;/artifactId&gt;
			&lt;version&gt;1.7.5&lt;/version&gt;
		&lt;/dependency&gt;
		&lt;dependency&gt;
			&lt;groupId&gt;mysql&lt;/groupId&gt;
			&lt;artifactId&gt;mysql-connector-java&lt;/artifactId&gt;
			&lt;version&gt;5.1.38&lt;/version&gt;
		&lt;/dependency&gt;


	&lt;/dependencies&gt;
	&lt;build&gt;
		&lt;finalName&gt;ActivitiDemo&lt;/finalName&gt;
	&lt;/build&gt;
&lt;/project&gt;</pre><p><br/></p><p>activiti.cfg.xml</p><pre class="brush:xml;toolbar:false">&lt;?xml&nbsp;version=&quot;1.0&quot;&nbsp;encoding=&quot;UTF-8&quot;?&gt;
&lt;beans&nbsp;xmlns=&quot;http://www.springframework.org/schema/beans&quot;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;xsi:schemaLocation=&quot;http://www.springframework.org/schema/beans&nbsp;&nbsp;&nbsp;http://www.springframework.org/schema/beans/spring-beans.xsd&quot;&gt;
&nbsp;
&nbsp;	
&nbsp;&nbsp;&lt;bean&nbsp;id=&quot;processEngineConfiguration&quot;&nbsp;class=&quot;org.activiti.engine.impl.cfg.StandaloneProcessEngineConfiguration&quot;&gt;
&nbsp;
&nbsp;&nbsp;&nbsp;&nbsp;&lt;property&nbsp;name=&quot;jdbcUrl&quot;&nbsp;value=&quot;jdbc:mysql://localhost:3306/db_activiti&quot;/&gt;
&nbsp;&nbsp;&nbsp;&nbsp;&lt;property&nbsp;name=&quot;jdbcDriver&quot;&nbsp;value=&quot;com.mysql.jdbc.Driver&quot;&nbsp;/&gt;
&nbsp;&nbsp;&nbsp;&nbsp;&lt;property&nbsp;name=&quot;jdbcUsername&quot;&nbsp;value=&quot;root&quot;&nbsp;/&gt;
&nbsp;&nbsp;&nbsp;&nbsp;&lt;property&nbsp;name=&quot;jdbcPassword&quot;&nbsp;value=&quot;niubidecc.&quot;&nbsp;/&gt;
&nbsp;&nbsp;&nbsp;&nbsp;&lt;property&nbsp;name=&quot;databaseSchemaUpdate&quot;&nbsp;value=&quot;true&quot;&nbsp;/&gt;
&nbsp;
&nbsp;&nbsp;&lt;/bean&gt;
&nbsp;
&lt;/beans&gt;</pre><p>log4j.properties</p><pre class="brush:xml;toolbar:false">log4j.rootLogger=DEBUG,&nbsp;ACT

log4j.appender.ACT=org.apache.log4j.ConsoleAppender
log4j.appender.ACT.layout=org.apache.log4j.PatternLayout
log4j.appender.ACT.layout.ConversionPattern=&nbsp;%d{hh:mm:ss,SSS}&nbsp;[%t]&nbsp;%-5p&nbsp;%c&nbsp;%x&nbsp;-&nbsp;%m%n</pre><p>创建表</p><pre class="brush:java;toolbar:false">package&nbsp;pers.cc.test;

import&nbsp;org.activiti.engine.ProcessEngine;
import&nbsp;org.activiti.engine.ProcessEngineConfiguration;

public&nbsp;class&nbsp;BuilderEngineDemo&nbsp;{

&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;static&nbsp;void&nbsp;main(String[]&nbsp;args)&nbsp;throws&nbsp;Exception&nbsp;{
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;引擎配置
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ProcessEngineConfiguration&nbsp;cgf&nbsp;=&nbsp;ProcessEngineConfiguration
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;.createProcessEngineConfigurationFromResource(
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&quot;activiti.cfg.xml&quot;);
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;获取流程引擎对象
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ProcessEngine&nbsp;processEngine&nbsp;=&nbsp;cgf.buildProcessEngine();
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;String&nbsp;pName&nbsp;=&nbsp;processEngine.getName();
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;String&nbsp;ver&nbsp;=&nbsp;ProcessEngine.VERSION;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;System.out.println(
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&quot;ProcessEngine&nbsp;[&quot;&nbsp;+&nbsp;pName&nbsp;+&nbsp;&quot;]&nbsp;Version:&nbsp;[&quot;&nbsp;+&nbsp;ver&nbsp;+&nbsp;&quot;]&quot;);
&nbsp;&nbsp;&nbsp;&nbsp;}

}</pre><p><br/></p><p><br/></p>(String), 176(Integer), 0(Integer), avtiviti学习笔记之=>创建avtiviti依赖表(String), 225(String)
2017-09-14 21:36:02.589 DEBUG 8388 --- [http-nio-8080-exec-8] p.p.blog.repository.BlogRepo.update      : <==    Updates: 1
2017-09-14 21:36:02.592 DEBUG 8388 --- [http-nio-8080-exec-8] p.p.blog.repository.CommentRepo.list     : ==>  Preparing: select * from t_comment WHERE blogId=? and state=? order by commentDate desc 
2017-09-14 21:36:02.592 DEBUG 8388 --- [http-nio-8080-exec-8] p.p.blog.repository.CommentRepo.list     : ==> Parameters: 225(String), 1(Integer)
2017-09-14 21:36:02.594 DEBUG 8388 --- [http-nio-8080-exec-8] p.p.blog.repository.CommentRepo.list     : <==      Total: 0
2017-09-14 21:36:47.250 DEBUG 8388 --- [http-nio-8080-exec-2] p.p.blog.repository.BlogRepo.list        : ==>  Preparing: select * from t_blog order by releaseDate desc limit ?,? 
2017-09-14 21:36:47.251 DEBUG 8388 --- [http-nio-8080-exec-2] p.p.blog.repository.BlogRepo.list        : ==> Parameters: 0(Integer), 10(Integer)
2017-09-14 21:36:47.253 DEBUG 8388 --- [http-nio-8080-exec-2] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 21:36:47.254 DEBUG 8388 --- [http-nio-8080-exec-2] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 11(String)
2017-09-14 21:36:47.256 DEBUG 8388 --- [http-nio-8080-exec-2] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 21:36:47.257 DEBUG 8388 --- [http-nio-8080-exec-2] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 21:36:47.258 DEBUG 8388 --- [http-nio-8080-exec-2] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 1(String)
2017-09-14 21:36:47.260 DEBUG 8388 --- [http-nio-8080-exec-2] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 21:36:47.261 DEBUG 8388 --- [http-nio-8080-exec-2] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 21:36:47.262 DEBUG 8388 --- [http-nio-8080-exec-2] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 12(String)
2017-09-14 21:36:47.263 DEBUG 8388 --- [http-nio-8080-exec-2] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 21:36:47.264 DEBUG 8388 --- [http-nio-8080-exec-2] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 21:36:47.265 DEBUG 8388 --- [http-nio-8080-exec-2] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 32(String)
2017-09-14 21:36:47.266 DEBUG 8388 --- [http-nio-8080-exec-2] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 21:36:47.267 DEBUG 8388 --- [http-nio-8080-exec-2] p.p.blog.repository.BlogRepo.list        : <==      Total: 10
2017-09-14 21:36:47.272 DEBUG 8388 --- [http-nio-8080-exec-2] p.p.blog.repository.BlogRepo.getTotal    : ==>  Preparing: select count(*) from t_blog 
2017-09-14 21:36:47.273 DEBUG 8388 --- [http-nio-8080-exec-2] p.p.blog.repository.BlogRepo.getTotal    : ==> Parameters: 
2017-09-14 21:36:47.275 DEBUG 8388 --- [http-nio-8080-exec-2] p.p.blog.repository.BlogRepo.getTotal    : <==      Total: 1
2017-09-14 21:37:10.608 DEBUG 8388 --- [http-nio-8080-exec-9] p.p.blog.repository.BlogRepo.list        : ==>  Preparing: select * from t_blog order by releaseDate desc limit ?,? 
2017-09-14 21:37:10.608 DEBUG 8388 --- [http-nio-8080-exec-9] p.p.blog.repository.BlogRepo.list        : ==> Parameters: 0(Integer), 10(Integer)
2017-09-14 21:37:10.611 DEBUG 8388 --- [http-nio-8080-exec-9] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 21:37:10.612 DEBUG 8388 --- [http-nio-8080-exec-9] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 11(String)
2017-09-14 21:37:10.614 DEBUG 8388 --- [http-nio-8080-exec-9] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 21:37:10.615 DEBUG 8388 --- [http-nio-8080-exec-9] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 21:37:10.616 DEBUG 8388 --- [http-nio-8080-exec-9] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 1(String)
2017-09-14 21:37:10.617 DEBUG 8388 --- [http-nio-8080-exec-9] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 21:37:10.618 DEBUG 8388 --- [http-nio-8080-exec-9] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 21:37:10.619 DEBUG 8388 --- [http-nio-8080-exec-9] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 12(String)
2017-09-14 21:37:10.620 DEBUG 8388 --- [http-nio-8080-exec-9] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 21:37:10.623 DEBUG 8388 --- [http-nio-8080-exec-9] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 21:37:10.624 DEBUG 8388 --- [http-nio-8080-exec-9] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 32(String)
2017-09-14 21:37:10.626 DEBUG 8388 --- [http-nio-8080-exec-9] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 21:37:10.628 DEBUG 8388 --- [http-nio-8080-exec-9] p.p.blog.repository.BlogRepo.list        : <==      Total: 10
2017-09-14 21:37:10.631 DEBUG 8388 --- [http-nio-8080-exec-9] p.p.blog.repository.BlogRepo.getTotal    : ==>  Preparing: select count(*) from t_blog 
2017-09-14 21:37:10.631 DEBUG 8388 --- [http-nio-8080-exec-9] p.p.blog.repository.BlogRepo.getTotal    : ==> Parameters: 
2017-09-14 21:37:10.638 DEBUG 8388 --- [http-nio-8080-exec-9] p.p.blog.repository.BlogRepo.getTotal    : <==      Total: 1
2017-09-14 21:37:15.178 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.blog.repository.BlogRepo.update      : ==>  Preparing: update t_blog SET title=?, summary=?, typeId=?, content=?, clickHit=?, replyHit=?, keyWord=? where id=? 
2017-09-14 21:37:15.179 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.blog.repository.BlogRepo.update      : ==> Parameters: 1111111(String),  111111111(String), 11(String), <p><img src="/userImages/201709/20170910031116.jpg" />&nbsp;111111111</p>
(String), 8(Integer), 0(Integer), 111 11(String), 1fb7d927cf3a4f1fb7fb0c60ffc528c5(String)
2017-09-14 21:37:15.186 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.blog.repository.BlogRepo.update      : <==    Updates: 1
2017-09-14 21:37:15.189 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.blog.repository.CommentRepo.list     : ==>  Preparing: select * from t_comment WHERE blogId=? and state=? order by commentDate desc 
2017-09-14 21:37:15.190 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.blog.repository.CommentRepo.list     : ==> Parameters: 1fb7d927cf3a4f1fb7fb0c60ffc528c5(String), 1(Integer)
2017-09-14 21:37:15.196 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.blog.repository.CommentRepo.list     : <==      Total: 0
2017-09-14 21:37:15.204 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.b.repository.BlogRepo.getNextBlog    : ==>  Preparing: select * from t_blog t where t.releaseDate > ? order by releaseDate asc limit 1 
2017-09-14 21:37:15.205 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.b.repository.BlogRepo.getNextBlog    : ==> Parameters: 2017-09-10 15:11:30.0(Timestamp)
2017-09-14 21:37:15.207 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.b.repository.BlogRepo.getNextBlog    : <==      Total: 0
2017-09-14 21:37:23.159 DEBUG 8388 --- [http-nio-8080-exec-2] p.p.blog.repository.BlogRepo.list        : ==>  Preparing: select * from t_blog WHERE typeId=? order by releaseDate desc limit ?,? 
2017-09-14 21:37:23.161 DEBUG 8388 --- [http-nio-8080-exec-2] p.p.blog.repository.BlogRepo.list        : ==> Parameters: 28(String), 0(Integer), 10(Integer)
2017-09-14 21:37:23.209 DEBUG 8388 --- [http-nio-8080-exec-2] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 21:37:23.209 DEBUG 8388 --- [http-nio-8080-exec-2] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 28(String)
2017-09-14 21:37:23.211 DEBUG 8388 --- [http-nio-8080-exec-2] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 21:37:23.214 DEBUG 8388 --- [http-nio-8080-exec-2] p.p.blog.repository.BlogRepo.list        : <==      Total: 10
2017-09-14 21:37:23.222 DEBUG 8388 --- [http-nio-8080-exec-2] p.p.blog.repository.BlogRepo.getTotal    : ==>  Preparing: select count(*) from t_blog WHERE typeId=? 
2017-09-14 21:37:23.222 DEBUG 8388 --- [http-nio-8080-exec-2] p.p.blog.repository.BlogRepo.getTotal    : ==> Parameters: 28(String)
2017-09-14 21:37:23.224 DEBUG 8388 --- [http-nio-8080-exec-2] p.p.blog.repository.BlogRepo.getTotal    : <==      Total: 1
2017-09-14 21:37:25.832 DEBUG 8388 --- [http-nio-8080-exec-10] p.p.blog.repository.BlogRepo.findById    : ==>  Preparing: select * from t_blog where id=? 
2017-09-14 21:37:25.832 DEBUG 8388 --- [http-nio-8080-exec-10] p.p.blog.repository.BlogRepo.findById    : ==> Parameters: 276(String)
2017-09-14 21:37:25.835 DEBUG 8388 --- [http-nio-8080-exec-10] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 21:37:25.836 DEBUG 8388 --- [http-nio-8080-exec-10] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 28(String)
2017-09-14 21:37:25.837 DEBUG 8388 --- [http-nio-8080-exec-10] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 21:37:25.838 DEBUG 8388 --- [http-nio-8080-exec-10] p.p.blog.repository.BlogRepo.findById    : <==      Total: 1
2017-09-14 21:37:25.845 DEBUG 8388 --- [http-nio-8080-exec-10] p.p.blog.repository.BlogRepo.update      : ==>  Preparing: update t_blog SET title=?, summary=?, typeId=?, content=?, clickHit=?, replyHit=?, keyWord=? where id=? 
2017-09-14 21:37:25.846 DEBUG 8388 --- [http-nio-8080-exec-10] p.p.blog.repository.BlogRepo.update      : ==> Parameters: Spring AOP的实现原理(String), 转自：   ListenAOP（Aspect Orient Programming），我们一般称为面向方面（切面）编程，作为面向对象的一种补充，用于处理系统中分布于各个模块的横切关注点，比如事务管理、日志、缓存等等。AOP实现的关键在于AOP框架自动创建的AOP代理，AOP代理主要分为静态代理和动态代理，静态(String), 28(String), <p>转自：&nbsp; &nbsp;<a href="http://listenzhangbin.com/post/2016/09/spring-aop-cglib/" target="_self" title="Listen">Listen</a><br/></p><p><br/></p><p style="color: rgb(119, 119, 119); font-family: Arial, &quot;Hiragino Sans GB&quot;, 冬青黑, &quot;Microsoft YaHei&quot;, 微软雅黑, SimSun, 宋体, Helvetica, Tahoma, sans-serif; font-size: medium; white-space: normal;">AOP（Aspect Orient Programming），我们一般称为面向方面（切面）编程，作为面向对象的一种补充，用于处理系统中分布于各个模块的横切关注点，比如事务管理、日志、缓存等等。AOP实现的关键在于AOP框架自动创建的AOP代理，AOP代理主要分为静态代理和动态代理，静态代理的代表为AspectJ；而动态代理则以Spring AOP为代表。本文会分别对AspectJ和Spring AOP的实现进行分析和介绍。</p><h2 style="font-weight: normal; color: rgb(51, 51, 51); font-family: Arial, &quot;Hiragino Sans GB&quot;, 冬青黑, &quot;Microsoft YaHei&quot;, 微软雅黑, SimSun, 宋体, Helvetica, Tahoma, sans-serif; white-space: normal;">使用AspectJ的编译时增强实现AOP</h2><p style="color: rgb(119, 119, 119); font-family: Arial, &quot;Hiragino Sans GB&quot;, 冬青黑, &quot;Microsoft YaHei&quot;, 微软雅黑, SimSun, 宋体, Helvetica, Tahoma, sans-serif; font-size: medium; white-space: normal;">之前提到，AspectJ是静态代理的增强，所谓的静态代理就是AOP框架会在编译阶段生成AOP代理类，因此也称为编译时增强。</p><p style="color: rgb(119, 119, 119); font-family: Arial, &quot;Hiragino Sans GB&quot;, 冬青黑, &quot;Microsoft YaHei&quot;, 微软雅黑, SimSun, 宋体, Helvetica, Tahoma, sans-serif; font-size: medium; white-space: normal;">举个实例的例子来说。首先我们有一个普通的<code style="font-family: monospace, monospace; font-size: 1em;">Hello</code>类</p><pre class="brush:java;toolbar:false">public&nbsp;class&nbsp;Hello&nbsp;{&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;void&nbsp;sayHello()&nbsp;{
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;System.out.println(&quot;hello&quot;);
&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;static&nbsp;void&nbsp;main(String[]&nbsp;args)&nbsp;{
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Hello&nbsp;h&nbsp;=&nbsp;new&nbsp;Hello();
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;h.sayHello();
&nbsp;&nbsp;&nbsp;&nbsp;}
}</pre><p style="color: rgb(119, 119, 119); font-family: Arial, &quot;Hiragino Sans GB&quot;, 冬青黑, &quot;Microsoft YaHei&quot;, 微软雅黑, SimSun, 宋体, Helvetica, Tahoma, sans-serif; font-size: medium; white-space: normal;">使用AspectJ编写一个Aspect</p><pre class="brush:java;toolbar:false">public&nbsp;aspect&nbsp;TxAspect&nbsp;{&nbsp;&nbsp;&nbsp;&nbsp;void&nbsp;around():call(void&nbsp;Hello.sayHello()){
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;System.out.println(&quot;开始事务&nbsp;...&quot;);
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;proceed();
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;System.out.println(&quot;事务结束&nbsp;...&quot;);
&nbsp;&nbsp;&nbsp;&nbsp;}
}</pre><p style="color: rgb(119, 119, 119); font-family: Arial, &quot;Hiragino Sans GB&quot;, 冬青黑, &quot;Microsoft YaHei&quot;, 微软雅黑, SimSun, 宋体, Helvetica, Tahoma, sans-serif; font-size: medium; white-space: normal;">这里模拟了一个事务的场景，类似于Spring的声明式事务。使用AspectJ的编译器编译</p><pre style="overflow: auto; font-family: monospace, monospace; font-size: medium; color: rgb(119, 119, 119);">ajc&nbsp;-d&nbsp;.&nbsp;Hello.java&nbsp;TxAspect.aj</pre><p style="color: rgb(119, 119, 119); font-family: Arial, &quot;Hiragino Sans GB&quot;, 冬青黑, &quot;Microsoft YaHei&quot;, 微软雅黑, SimSun, 宋体, Helvetica, Tahoma, sans-serif; font-size: medium; white-space: normal;">编译完成之后再运行这个<code style="font-family: monospace, monospace; font-size: 1em;">Hello</code>类，可以看到以下输出</p><pre style="overflow: auto; font-family: monospace, monospace; font-size: medium; color: rgb(119, 119, 119);">开始事务&nbsp;...
hello
事务结束&nbsp;...</pre><p style="color: rgb(119, 119, 119); font-family: Arial, &quot;Hiragino Sans GB&quot;, 冬青黑, &quot;Microsoft YaHei&quot;, 微软雅黑, SimSun, 宋体, Helvetica, Tahoma, sans-serif; font-size: medium; white-space: normal;">显然，AOP已经生效了，那么究竟AspectJ是如何在没有修改Hello类的情况下为Hello类增加新功能的呢？</p><p style="color: rgb(119, 119, 119); font-family: Arial, &quot;Hiragino Sans GB&quot;, 冬青黑, &quot;Microsoft YaHei&quot;, 微软雅黑, SimSun, 宋体, Helvetica, Tahoma, sans-serif; font-size: medium; white-space: normal;">查看一下编译后的<code style="font-family: monospace, monospace; font-size: 1em;">Hello.class</code></p><pre class="brush:java;toolbar:false">public&nbsp;class&nbsp;Hello&nbsp;{&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;Hello()&nbsp;{
&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;void&nbsp;sayHello()&nbsp;{
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;System.out.println(&quot;hello&quot;);
&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;static&nbsp;void&nbsp;main(String[]&nbsp;args)&nbsp;{
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Hello&nbsp;h&nbsp;=&nbsp;new&nbsp;Hello();
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;sayHello_aroundBody1$advice(h,&nbsp;TxAspect.aspectOf(),&nbsp;(AroundClosure)null);
&nbsp;&nbsp;&nbsp;&nbsp;}
}</pre><p style="color: rgb(119, 119, 119); font-family: Arial, &quot;Hiragino Sans GB&quot;, 冬青黑, &quot;Microsoft YaHei&quot;, 微软雅黑, SimSun, 宋体, Helvetica, Tahoma, sans-serif; font-size: medium; white-space: normal;">可以看到，这个类比原来的<code style="font-family: monospace, monospace; font-size: 1em;">Hello.java</code>多了一些代码，这就是AspectJ的静态代理，它会在编译阶段将Aspect织入Java字节码中， 运行的时候就是经过增强之后的AOP对象。</p><pre class="brush:java;toolbar:false">public&nbsp;void&nbsp;ajc$around$com_listenzhangbin_aop_TxAspect$1$f54fe983(AroundClosure&nbsp;ajc$aroundClosure)&nbsp;{
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;System.out.println(&quot;开始事务&nbsp;...&quot;);
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ajc$around$com_listenzhangbin_aop_TxAspect$1$f54fe983proceed(ajc$aroundClosure);
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;System.out.println(&quot;事务结束&nbsp;...&quot;);
&nbsp;&nbsp;&nbsp;&nbsp;}</pre><p style="color: rgb(119, 119, 119); font-family: Arial, &quot;Hiragino Sans GB&quot;, 冬青黑, &quot;Microsoft YaHei&quot;, 微软雅黑, SimSun, 宋体, Helvetica, Tahoma, sans-serif; font-size: medium; white-space: normal;">从Aspect编译后的class文件可以更明显的看出执行的逻辑。<code style="font-family: monospace, monospace; font-size: 1em;">proceed</code>方法就是回调执行被代理类中的方法。</p><h2 style="font-weight: normal; color: rgb(51, 51, 51); font-family: Arial, &quot;Hiragino Sans GB&quot;, 冬青黑, &quot;Microsoft YaHei&quot;, 微软雅黑, SimSun, 宋体, Helvetica, Tahoma, sans-serif; white-space: normal;">使用Spring AOP</h2><p style="color: rgb(119, 119, 119); font-family: Arial, &quot;Hiragino Sans GB&quot;, 冬青黑, &quot;Microsoft YaHei&quot;, 微软雅黑, SimSun, 宋体, Helvetica, Tahoma, sans-serif; font-size: medium; white-space: normal;">与AspectJ的静态代理不同，Spring AOP使用的动态代理，所谓的动态代理就是说AOP框架不会去修改字节码，而是在内存中临时为方法生成一个AOP对象，这个AOP对象包含了目标对象的全部方法，并且在特定的切点做了增强处理，并回调原对象的方法。</p><p style="color: rgb(119, 119, 119); font-family: Arial, &quot;Hiragino Sans GB&quot;, 冬青黑, &quot;Microsoft YaHei&quot;, 微软雅黑, SimSun, 宋体, Helvetica, Tahoma, sans-serif; font-size: medium; white-space: normal;">Spring AOP中的动态代理主要有两种方式，JDK动态代理和CGLIB动态代理。JDK动态代理通过反射来接收被代理的类，并且要求被代理的类必须实现一个接口。JDK动态代理的核心是<code style="font-family: monospace, monospace; font-size: 1em;">InvocationHandler</code>接口和<code style="font-family: monospace, monospace; font-size: 1em;">Proxy</code>类。</p><p style="color: rgb(119, 119, 119); font-family: Arial, &quot;Hiragino Sans GB&quot;, 冬青黑, &quot;Microsoft YaHei&quot;, 微软雅黑, SimSun, 宋体, Helvetica, Tahoma, sans-serif; font-size: medium; white-space: normal;">如果目标类没有实现接口，那么Spring AOP会选择使用CGLIB来动态代理目标类。CGLIB（Code Generation Library），是一个代码生成的类库，可以在运行时动态的生成某个类的子类，注意，CGLIB是通过继承的方式做的动态代理，因此如果某个类被标记为<code style="font-family: monospace, monospace; font-size: 1em;">final</code>，那么它是无法使用CGLIB做动态代理的。</p><p style="color: rgb(119, 119, 119); font-family: Arial, &quot;Hiragino Sans GB&quot;, 冬青黑, &quot;Microsoft YaHei&quot;, 微软雅黑, SimSun, 宋体, Helvetica, Tahoma, sans-serif; font-size: medium; white-space: normal;">为了验证以上的说法，可以做一个简单的测试。首先测试实现接口的情况。</p><p style="color: rgb(119, 119, 119); font-family: Arial, &quot;Hiragino Sans GB&quot;, 冬青黑, &quot;Microsoft YaHei&quot;, 微软雅黑, SimSun, 宋体, Helvetica, Tahoma, sans-serif; font-size: medium; white-space: normal;">定义一个接口</p><pre class="brush:java;toolbar:false">public&nbsp;interface&nbsp;Person&nbsp;{&nbsp;&nbsp;&nbsp;&nbsp;String&nbsp;sayHello(String&nbsp;name);
}</pre><p style="color: rgb(119, 119, 119); font-family: Arial, &quot;Hiragino Sans GB&quot;, 冬青黑, &quot;Microsoft YaHei&quot;, 微软雅黑, SimSun, 宋体, Helvetica, Tahoma, sans-serif; font-size: medium; white-space: normal;">实现类</p><pre class="brush:java;toolbar:false">@Componentpublic&nbsp;class&nbsp;Chinese&nbsp;implements&nbsp;Person&nbsp;{&nbsp;&nbsp;&nbsp;&nbsp;@Timer
&nbsp;&nbsp;&nbsp;&nbsp;@Override
&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;String&nbsp;sayHello(String&nbsp;name)&nbsp;{
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;System.out.println(&quot;--&nbsp;sayHello()&nbsp;--&quot;);&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;name&nbsp;+&nbsp;&quot;&nbsp;hello,&nbsp;AOP&quot;;
&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;void&nbsp;eat(String&nbsp;food)&nbsp;{
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;System.out.println(&quot;我正在吃：&quot;&nbsp;+&nbsp;food);
&nbsp;&nbsp;&nbsp;&nbsp;}

}</pre><p style="color: rgb(119, 119, 119); font-family: Arial, &quot;Hiragino Sans GB&quot;, 冬青黑, &quot;Microsoft YaHei&quot;, 微软雅黑, SimSun, 宋体, Helvetica, Tahoma, sans-serif; font-size: medium; white-space: normal;">这里的<code style="font-family: monospace, monospace; font-size: 1em;">@Timer</code>注解是我自己定义的一个普通注解，用来标记Pointcut。</p><p style="color: rgb(119, 119, 119); font-family: Arial, &quot;Hiragino Sans GB&quot;, 冬青黑, &quot;Microsoft YaHei&quot;, 微软雅黑, SimSun, 宋体, Helvetica, Tahoma, sans-serif; font-size: medium; white-space: normal;">定义Aspect</p><pre class="brush:java;toolbar:false">@Aspect@Componentpublic&nbsp;class&nbsp;AdviceTest&nbsp;{&nbsp;&nbsp;&nbsp;&nbsp;@Pointcut(&quot;@annotation(com.listenzhangbin.aop.Timer)&quot;)&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;void&nbsp;pointcut()&nbsp;{
&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;&nbsp;&nbsp;@Before(&quot;pointcut()&quot;)&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;void&nbsp;before()&nbsp;{
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;System.out.println(&quot;before&quot;);
&nbsp;&nbsp;&nbsp;&nbsp;}
}</pre><p style="color: rgb(119, 119, 119); font-family: Arial, &quot;Hiragino Sans GB&quot;, 冬青黑, &quot;Microsoft YaHei&quot;, 微软雅黑, SimSun, 宋体, Helvetica, Tahoma, sans-serif; font-size: medium; white-space: normal;">运行</p><pre class="brush:java;toolbar:false">@SpringBootApplication@RestControllerpublic&nbsp;class&nbsp;SpringBootDemoApplication&nbsp;{&nbsp;&nbsp;&nbsp;&nbsp;//这里必须使用Person接口做注入
&nbsp;&nbsp;&nbsp;&nbsp;@Autowired
&nbsp;&nbsp;&nbsp;&nbsp;private&nbsp;Person&nbsp;chinese;&nbsp;&nbsp;&nbsp;&nbsp;@RequestMapping(&quot;/test&quot;)&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;void&nbsp;test()&nbsp;{
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;chinese.sayHello(&quot;listen&quot;);
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;System.out.println(chinese.getClass());
&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;static&nbsp;void&nbsp;main(String[]&nbsp;args)&nbsp;{
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;SpringApplication.run(SpringBootDemoApplication.class,&nbsp;args);
&nbsp;&nbsp;&nbsp;&nbsp;}
}</pre><p style="color: rgb(119, 119, 119); font-family: Arial, &quot;Hiragino Sans GB&quot;, 冬青黑, &quot;Microsoft YaHei&quot;, 微软雅黑, SimSun, 宋体, Helvetica, Tahoma, sans-serif; font-size: medium; white-space: normal;">输出</p><pre style="overflow: auto; font-family: monospace, monospace; font-size: medium; color: rgb(119, 119, 119);">before
--&nbsp;sayHello()&nbsp;--class&nbsp;com.sun.proxy.$Proxy53</pre><p style="color: rgb(119, 119, 119); font-family: Arial, &quot;Hiragino Sans GB&quot;, 冬青黑, &quot;Microsoft YaHei&quot;, 微软雅黑, SimSun, 宋体, Helvetica, Tahoma, sans-serif; font-size: medium; white-space: normal;">可以看到类型是<code style="font-family: monospace, monospace; font-size: 1em;">com.sun.proxy.$Proxy53</code>，也就是前面提到的Proxy类，因此这里Spring AOP使用了JDK的动态代理。</p><p style="color: rgb(119, 119, 119); font-family: Arial, &quot;Hiragino Sans GB&quot;, 冬青黑, &quot;Microsoft YaHei&quot;, 微软雅黑, SimSun, 宋体, Helvetica, Tahoma, sans-serif; font-size: medium; white-space: normal;">再来看看不实现接口的情况，修改<code style="font-family: monospace, monospace; font-size: 1em;">Chinese</code>类</p><pre class="brush:java;toolbar:false">@Componentpublic&nbsp;class&nbsp;Chinese&nbsp;{&nbsp;&nbsp;&nbsp;&nbsp;@Timer//&nbsp;&nbsp;&nbsp;&nbsp;@Override
&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;String&nbsp;sayHello(String&nbsp;name)&nbsp;{
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;System.out.println(&quot;--&nbsp;sayHello()&nbsp;--&quot;);&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;name&nbsp;+&nbsp;&quot;&nbsp;hello,&nbsp;AOP&quot;;
&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;void&nbsp;eat(String&nbsp;food)&nbsp;{
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;System.out.println(&quot;我正在吃：&quot;&nbsp;+&nbsp;food);
&nbsp;&nbsp;&nbsp;&nbsp;}

}</pre><p style="color: rgb(119, 119, 119); font-family: Arial, &quot;Hiragino Sans GB&quot;, 冬青黑, &quot;Microsoft YaHei&quot;, 微软雅黑, SimSun, 宋体, Helvetica, Tahoma, sans-serif; font-size: medium; white-space: normal;">运行</p><pre class="brush:java;toolbar:false">@SpringBootApplication@RestControllerpublic&nbsp;class&nbsp;SpringBootDemoApplication&nbsp;{&nbsp;&nbsp;&nbsp;&nbsp;//直接用Chinese类注入
&nbsp;&nbsp;&nbsp;&nbsp;@Autowired
&nbsp;&nbsp;&nbsp;&nbsp;private&nbsp;Chinese&nbsp;chinese;&nbsp;&nbsp;&nbsp;&nbsp;@RequestMapping(&quot;/test&quot;)&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;void&nbsp;test()&nbsp;{
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;chinese.sayHello(&quot;listen&quot;);
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;System.out.println(chinese.getClass());
&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;&nbsp;&nbsp;public&nbsp;static&nbsp;void&nbsp;main(String[]&nbsp;args)&nbsp;{
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;SpringApplication.run(SpringBootDemoApplication.class,&nbsp;args);
&nbsp;&nbsp;&nbsp;&nbsp;}
}</pre><p style="color: rgb(119, 119, 119); font-family: Arial, &quot;Hiragino Sans GB&quot;, 冬青黑, &quot;Microsoft YaHei&quot;, 微软雅黑, SimSun, 宋体, Helvetica, Tahoma, sans-serif; font-size: medium; white-space: normal;">输出</p><pre style="overflow: auto; font-family: monospace, monospace; font-size: medium; color: rgb(119, 119, 119);">before--&nbsp;sayHello()&nbsp;--
class&nbsp;com.listenzhangbin.aop.Chinese$$EnhancerBySpringCGLIB$$56b89168</pre><p style="color: rgb(119, 119, 119); font-family: Arial, &quot;Hiragino Sans GB&quot;, 冬青黑, &quot;Microsoft YaHei&quot;, 微软雅黑, SimSun, 宋体, Helvetica, Tahoma, sans-serif; font-size: medium; white-space: normal;">可以看到类被CGLIB增强了，也就是动态代理。这里的CGLIB代理就是Spring AOP的代理，这个类也就是所谓的AOP代理，AOP代理类在切点动态地织入了增强处理。</p><h2 style="font-weight: normal; color: rgb(51, 51, 51); font-family: Arial, &quot;Hiragino Sans GB&quot;, 冬青黑, &quot;Microsoft YaHei&quot;, 微软雅黑, SimSun, 宋体, Helvetica, Tahoma, sans-serif; white-space: normal;">小结</h2><p style="color: rgb(119, 119, 119); font-family: Arial, &quot;Hiragino Sans GB&quot;, 冬青黑, &quot;Microsoft YaHei&quot;, 微软雅黑, SimSun, 宋体, Helvetica, Tahoma, sans-serif; font-size: medium; white-space: normal;">AspectJ在编译时就增强了目标对象，Spring AOP的动态代理则是在每次运行时动态的增强，生成AOP代理对象，区别在于生成AOP代理对象的时机不同，相对来说AspectJ的静态代理方式具有更好的性能，但是AspectJ需要特定的编译器进行处理，而Spring AOP则无需特定的编译器处理。</p><p><br/></p><h3 style="font-weight: normal; color: rgb(51, 51, 51); font-family: Arial, &quot;Hiragino Sans GB&quot;, 冬青黑, &quot;Microsoft YaHei&quot;, 微软雅黑, SimSun, 宋体, Helvetica, Tahoma, sans-serif; white-space: normal;">参考：</h3><ul style="color: rgb(119, 119, 119); font-family: Arial, &quot;Hiragino Sans GB&quot;, 冬青黑, &quot;Microsoft YaHei&quot;, 微软雅黑, SimSun, 宋体, Helvetica, Tahoma, sans-serif; font-size: medium; white-space: normal;" class=" list-paddingleft-2"><li><p><a href="http://www.ibm.com/developerworks/cn/java/j-lo-springaopcglib/" style="color: rgb(38, 87, 120); text-decoration-line: none;">《Spring AOP 实现原理与 CGLIB 应用》</a></p></li><li><p><a href="http://wiki.jikexueyuan.com/project/ssh-noob-learning/dynamic-proxy.html" style="color: rgb(38, 87, 120); text-decoration-line: none;">《Spring 容器AOP的实现原理——动态代理》</a></p></li><li><p><a href="http://blog.csdn.net/dreamrealised/article/details/12885739" style="color: rgb(38, 87, 120); text-decoration-line: none;">《AOP的底层实现-CGLIB动态代理和JDK动态代理》</a></p></li></ul><p><br/></p>(String), 57(Integer), 0(Integer), Spring AOP的实现原理(String), 276(String)
2017-09-14 21:37:25.855 DEBUG 8388 --- [http-nio-8080-exec-10] p.p.blog.repository.BlogRepo.update      : <==    Updates: 1
2017-09-14 21:37:25.860 DEBUG 8388 --- [http-nio-8080-exec-10] p.p.blog.repository.CommentRepo.list     : ==>  Preparing: select * from t_comment WHERE blogId=? and state=? order by commentDate desc 
2017-09-14 21:37:25.861 DEBUG 8388 --- [http-nio-8080-exec-10] p.p.blog.repository.CommentRepo.list     : ==> Parameters: 276(String), 1(Integer)
2017-09-14 21:37:25.863 DEBUG 8388 --- [http-nio-8080-exec-10] p.p.blog.repository.CommentRepo.list     : <==      Total: 0
2017-09-14 21:37:25.868 DEBUG 8388 --- [http-nio-8080-exec-10] p.p.b.repository.BlogRepo.getLastBlog    : ==>  Preparing: select * from t_blog t where ? > t.releaseDate order by releaseDate desc limit 1 
2017-09-14 21:37:25.868 DEBUG 8388 --- [http-nio-8080-exec-10] p.p.b.repository.BlogRepo.getLastBlog    : ==> Parameters: 2017-06-12 16:02:33.0(Timestamp)
2017-09-14 21:37:25.872 DEBUG 8388 --- [http-nio-8080-exec-10] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 21:37:25.872 DEBUG 8388 --- [http-nio-8080-exec-10] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 28(String)
2017-09-14 21:37:25.874 DEBUG 8388 --- [http-nio-8080-exec-10] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 21:37:25.875 DEBUG 8388 --- [http-nio-8080-exec-10] p.p.b.repository.BlogRepo.getLastBlog    : <==      Total: 1
2017-09-14 21:37:25.880 DEBUG 8388 --- [http-nio-8080-exec-10] p.p.b.repository.BlogRepo.getNextBlog    : ==>  Preparing: select * from t_blog t where t.releaseDate > ? order by releaseDate asc limit 1 
2017-09-14 21:37:25.881 DEBUG 8388 --- [http-nio-8080-exec-10] p.p.b.repository.BlogRepo.getNextBlog    : ==> Parameters: 2017-06-12 16:02:33.0(Timestamp)
2017-09-14 21:37:25.883 DEBUG 8388 --- [http-nio-8080-exec-10] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 21:37:25.883 DEBUG 8388 --- [http-nio-8080-exec-10] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 23(String)
2017-09-14 21:37:25.885 DEBUG 8388 --- [http-nio-8080-exec-10] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 21:37:25.885 DEBUG 8388 --- [http-nio-8080-exec-10] p.p.b.repository.BlogRepo.getNextBlog    : <==      Total: 1
2017-09-14 21:37:55.558 DEBUG 8388 --- [http-nio-8080-exec-9] p.p.blog.repository.BlogRepo.list        : ==>  Preparing: select * from t_blog order by releaseDate desc limit ?,? 
2017-09-14 21:37:55.559 DEBUG 8388 --- [http-nio-8080-exec-9] p.p.blog.repository.BlogRepo.list        : ==> Parameters: 0(Integer), 10(Integer)
2017-09-14 21:37:55.561 DEBUG 8388 --- [http-nio-8080-exec-9] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 21:37:55.562 DEBUG 8388 --- [http-nio-8080-exec-9] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 11(String)
2017-09-14 21:37:55.563 DEBUG 8388 --- [http-nio-8080-exec-9] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 21:37:55.564 DEBUG 8388 --- [http-nio-8080-exec-9] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 21:37:55.564 DEBUG 8388 --- [http-nio-8080-exec-9] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 1(String)
2017-09-14 21:37:55.565 DEBUG 8388 --- [http-nio-8080-exec-9] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 21:37:55.566 DEBUG 8388 --- [http-nio-8080-exec-9] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 21:37:55.567 DEBUG 8388 --- [http-nio-8080-exec-9] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 12(String)
2017-09-14 21:37:55.569 DEBUG 8388 --- [http-nio-8080-exec-9] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 21:37:55.571 DEBUG 8388 --- [http-nio-8080-exec-9] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 21:37:55.571 DEBUG 8388 --- [http-nio-8080-exec-9] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 32(String)
2017-09-14 21:37:55.572 DEBUG 8388 --- [http-nio-8080-exec-9] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 21:37:55.573 DEBUG 8388 --- [http-nio-8080-exec-9] p.p.blog.repository.BlogRepo.list        : <==      Total: 10
2017-09-14 21:37:55.577 DEBUG 8388 --- [http-nio-8080-exec-9] p.p.blog.repository.BlogRepo.getTotal    : ==>  Preparing: select count(*) from t_blog 
2017-09-14 21:37:55.577 DEBUG 8388 --- [http-nio-8080-exec-9] p.p.blog.repository.BlogRepo.getTotal    : ==> Parameters: 
2017-09-14 21:37:55.579 DEBUG 8388 --- [http-nio-8080-exec-9] p.p.blog.repository.BlogRepo.getTotal    : <==      Total: 1
2017-09-14 21:38:20.137 DEBUG 8388 --- [http-nio-8080-exec-2] p.p.blog.repository.BlogRepo.list        : ==>  Preparing: select * from t_blog order by releaseDate desc limit ?,? 
2017-09-14 21:38:20.138 DEBUG 8388 --- [http-nio-8080-exec-2] p.p.blog.repository.BlogRepo.list        : ==> Parameters: 0(Integer), 10(Integer)
2017-09-14 21:38:20.140 DEBUG 8388 --- [http-nio-8080-exec-2] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 21:38:20.141 DEBUG 8388 --- [http-nio-8080-exec-2] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 11(String)
2017-09-14 21:38:20.143 DEBUG 8388 --- [http-nio-8080-exec-2] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 21:38:20.144 DEBUG 8388 --- [http-nio-8080-exec-2] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 21:38:20.145 DEBUG 8388 --- [http-nio-8080-exec-2] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 1(String)
2017-09-14 21:38:20.146 DEBUG 8388 --- [http-nio-8080-exec-2] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 21:38:20.147 DEBUG 8388 --- [http-nio-8080-exec-2] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 21:38:20.147 DEBUG 8388 --- [http-nio-8080-exec-2] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 12(String)
2017-09-14 21:38:20.149 DEBUG 8388 --- [http-nio-8080-exec-2] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 21:38:20.150 DEBUG 8388 --- [http-nio-8080-exec-2] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 21:38:20.150 DEBUG 8388 --- [http-nio-8080-exec-2] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 32(String)
2017-09-14 21:38:20.152 DEBUG 8388 --- [http-nio-8080-exec-2] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 21:38:20.154 DEBUG 8388 --- [http-nio-8080-exec-2] p.p.blog.repository.BlogRepo.list        : <==      Total: 10
2017-09-14 21:38:20.158 DEBUG 8388 --- [http-nio-8080-exec-2] p.p.blog.repository.BlogRepo.getTotal    : ==>  Preparing: select count(*) from t_blog 
2017-09-14 21:38:20.159 DEBUG 8388 --- [http-nio-8080-exec-2] p.p.blog.repository.BlogRepo.getTotal    : ==> Parameters: 
2017-09-14 21:38:20.160 DEBUG 8388 --- [http-nio-8080-exec-2] p.p.blog.repository.BlogRepo.getTotal    : <==      Total: 1
2017-09-14 21:39:45.249 DEBUG 8388 --- [http-nio-8080-exec-6] p.p.blog.repository.BlogRepo.findById    : ==>  Preparing: select * from t_blog where id=? 
2017-09-14 21:39:45.249 DEBUG 8388 --- [http-nio-8080-exec-6] p.p.blog.repository.BlogRepo.findById    : ==> Parameters: 311(String)
2017-09-14 21:39:45.252 DEBUG 8388 --- [http-nio-8080-exec-6] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 21:39:45.253 DEBUG 8388 --- [http-nio-8080-exec-6] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 11(String)
2017-09-14 21:39:45.254 DEBUG 8388 --- [http-nio-8080-exec-6] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 21:39:45.255 DEBUG 8388 --- [http-nio-8080-exec-6] p.p.blog.repository.BlogRepo.findById    : <==      Total: 1
2017-09-14 21:39:45.261 DEBUG 8388 --- [http-nio-8080-exec-6] p.p.blog.repository.BlogRepo.update      : ==>  Preparing: update t_blog SET title=?, summary=?, typeId=?, content=?, clickHit=?, replyHit=?, keyWord=? where id=? 
2017-09-14 21:39:45.261 DEBUG 8388 --- [http-nio-8080-exec-6] p.p.blog.repository.BlogRepo.update      : ==> Parameters: linux压缩文件夹(String), tar命令　　解包：tar zxvf FileName.tar　　打包：tar czvf FileName.tar DirNamegz命令　　解压1：gunzip FileName.gz　　解压2：gzip -d FileName.gz　　压缩：gzip FileName　　.tar.gz 和 .tgz　　解(String), 11(String), <ul class="custom_disc list-paddingleft-1" style="list-style-type: none;"><li class="list-undefined list-disc-paddingleft" style=""><p style="margin-top: 0px; margin-bottom: 25px; padding: 0px;">tar命令</p><p style="margin-top: 0px; margin-bottom: 25px; padding: 0px;">　　解包：tar zxvf FileName.tar</p><p style="margin-top: 0px; margin-bottom: 25px; padding: 0px;">　　打包：tar czvf FileName.tar DirName</p><p style="margin-top: 0px; margin-bottom: 25px; padding: 0px;"><br/></p></li><li class="list-undefined list-disc-paddingleft" style=""><p style="margin-top: 0px; margin-bottom: 25px; padding: 0px;">gz命令</p><p style="margin-top: 0px; margin-bottom: 25px; padding: 0px;">　　解压1：gunzip FileName.gz</p><p style="margin-top: 0px; margin-bottom: 25px; padding: 0px;">　　解压2：gzip -d FileName.gz</p><p style="margin-top: 0px; margin-bottom: 25px; padding: 0px;">　　压缩：gzip FileName</p><p style="margin-top: 0px; margin-bottom: 25px; padding: 0px;">　　.tar.gz 和 .tgz</p><p style="margin-top: 0px; margin-bottom: 25px; padding: 0px;">　　解压：tar zxvf FileName.tar.gz</p><p style="margin-top: 0px; margin-bottom: 25px; padding: 0px;">　　压缩：tar zcvf FileName.tar.gz DirName</p><p style="margin-top: 0px; margin-bottom: 25px; padding: 0px;">&nbsp; &nbsp;压缩多个文件：tar zcvf FileName.tar.gz DirName1 DirName2 DirName3 ...</p><p style="margin-top: 0px; margin-bottom: 25px; padding: 0px;"><br/></p></li><li class="list-undefined list-disc-paddingleft" style=""><p style="margin-top: 0px; margin-bottom: 25px; padding: 0px;">bz2命令</p><p style="margin-top: 0px; margin-bottom: 25px; padding: 0px;">　　解压1：bzip2 -d FileName.bz2</p><p style="margin-top: 0px; margin-bottom: 25px; padding: 0px;">　　解压2：bunzip2 FileName.bz2</p><p style="margin-top: 0px; margin-bottom: 25px; padding: 0px;">　　压缩： bzip2 -z FileName</p><p style="margin-top: 0px; margin-bottom: 25px; padding: 0px;">　　.tar.bz2</p><p style="margin-top: 0px; margin-bottom: 25px; padding: 0px;">　　解压：tar jxvf FileName.tar.bz2</p><p style="margin-top: 0px; margin-bottom: 25px; padding: 0px;">　　压缩：tar jcvf FileName.tar.bz2 DirName</p><p style="margin-top: 0px; margin-bottom: 25px; padding: 0px;"><br/></p></li><li class="list-undefined list-disc-paddingleft" style=""><p style="margin-top: 0px; margin-bottom: 25px; padding: 0px;">bz命令</p><p style="margin-top: 0px; margin-bottom: 25px; padding: 0px;">　　解压1：bzip2 -d FileName.bz</p><p style="margin-top: 0px; margin-bottom: 25px; padding: 0px;">　　解压2：bunzip2 FileName.bz</p><p style="margin-top: 0px; margin-bottom: 25px; padding: 0px;">　　压缩：未知</p><p style="margin-top: 0px; margin-bottom: 25px; padding: 0px;">　　.tar.bz</p><p style="margin-top: 0px; margin-bottom: 25px; padding: 0px;">　　解压：tar jxvf FileName.tar.bz</p><p style="margin-top: 0px; margin-bottom: 25px; padding: 0px;"><br/></p></li><li class="list-undefined list-disc-paddingleft" style=""><p style="margin-top: 0px; margin-bottom: 25px; padding: 0px;">Z命令</p><p style="margin-top: 0px; margin-bottom: 25px; padding: 0px;">　　解压：uncompress FileName.Z</p><p style="margin-top: 0px; margin-bottom: 25px; padding: 0px;">　　压缩：compress FileName</p><p style="margin-top: 0px; margin-bottom: 25px; padding: 0px;">　　.tar.Z</p><p style="margin-top: 0px; margin-bottom: 25px; padding: 0px;">　　解压：tar Zxvf FileName.tar.Z</p><p style="margin-top: 0px; margin-bottom: 25px; padding: 0px;">　　压缩：tar Zcvf FileName.tar.Z DirName</p><p style="margin-top: 0px; margin-bottom: 25px; padding: 0px;"><br/></p></li><li class="list-undefined list-disc-paddingleft" style=""><p style="margin-top: 0px; margin-bottom: 25px; padding: 0px;">zip命令</p><p style="margin-top: 0px; margin-bottom: 25px; padding: 0px;">　　解压：unzip FileName.zip</p><p style="margin-top: 0px; margin-bottom: 25px; padding: 0px;">　　压缩：zip FileName.zip DirName</p></li></ul><p><br/></p>(String), 48(Integer), 0(Integer), linux (String), 311(String)
2017-09-14 21:39:45.269 DEBUG 8388 --- [http-nio-8080-exec-6] p.p.blog.repository.BlogRepo.update      : <==    Updates: 1
2017-09-14 21:39:45.278 DEBUG 8388 --- [http-nio-8080-exec-6] p.p.blog.repository.CommentRepo.list     : ==>  Preparing: select * from t_comment WHERE blogId=? and state=? order by commentDate desc 
2017-09-14 21:39:45.278 DEBUG 8388 --- [http-nio-8080-exec-6] p.p.blog.repository.CommentRepo.list     : ==> Parameters: 311(String), 1(Integer)
2017-09-14 21:39:45.279 DEBUG 8388 --- [http-nio-8080-exec-6] p.p.blog.repository.CommentRepo.list     : <==      Total: 0
2017-09-14 21:39:45.292 DEBUG 8388 --- [http-nio-8080-exec-6] p.p.b.repository.BlogRepo.getLastBlog    : ==>  Preparing: select * from t_blog t where ? > t.releaseDate order by releaseDate desc limit 1 
2017-09-14 21:39:45.293 DEBUG 8388 --- [http-nio-8080-exec-6] p.p.b.repository.BlogRepo.getLastBlog    : ==> Parameters: 2017-07-20 01:40:37.0(Timestamp)
2017-09-14 21:39:45.295 DEBUG 8388 --- [http-nio-8080-exec-6] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 21:39:45.296 DEBUG 8388 --- [http-nio-8080-exec-6] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 11(String)
2017-09-14 21:39:45.298 DEBUG 8388 --- [http-nio-8080-exec-6] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 21:39:45.298 DEBUG 8388 --- [http-nio-8080-exec-6] p.p.b.repository.BlogRepo.getLastBlog    : <==      Total: 1
2017-09-14 21:39:45.303 DEBUG 8388 --- [http-nio-8080-exec-6] p.p.b.repository.BlogRepo.getNextBlog    : ==>  Preparing: select * from t_blog t where t.releaseDate > ? order by releaseDate asc limit 1 
2017-09-14 21:39:45.304 DEBUG 8388 --- [http-nio-8080-exec-6] p.p.b.repository.BlogRepo.getNextBlog    : ==> Parameters: 2017-07-20 01:40:37.0(Timestamp)
2017-09-14 21:39:45.308 DEBUG 8388 --- [http-nio-8080-exec-6] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 21:39:45.309 DEBUG 8388 --- [http-nio-8080-exec-6] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 11(String)
2017-09-14 21:39:45.313 DEBUG 8388 --- [http-nio-8080-exec-6] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 21:39:45.314 DEBUG 8388 --- [http-nio-8080-exec-6] p.p.b.repository.BlogRepo.getNextBlog    : <==      Total: 1
2017-09-14 21:39:55.503 DEBUG 8388 --- [http-nio-8080-exec-8] p.p.blog.repository.BlogRepo.list        : ==>  Preparing: select * from t_blog order by releaseDate desc limit ?,? 
2017-09-14 21:39:55.504 DEBUG 8388 --- [http-nio-8080-exec-8] p.p.blog.repository.BlogRepo.list        : ==> Parameters: 10(Integer), 10(Integer)
2017-09-14 21:39:55.509 DEBUG 8388 --- [http-nio-8080-exec-8] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 21:39:55.509 DEBUG 8388 --- [http-nio-8080-exec-8] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 11(String)
2017-09-14 21:39:55.510 DEBUG 8388 --- [http-nio-8080-exec-8] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 21:39:55.511 DEBUG 8388 --- [http-nio-8080-exec-8] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 21:39:55.511 DEBUG 8388 --- [http-nio-8080-exec-8] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 12(String)
2017-09-14 21:39:55.513 DEBUG 8388 --- [http-nio-8080-exec-8] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 21:39:55.514 DEBUG 8388 --- [http-nio-8080-exec-8] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 21:39:55.515 DEBUG 8388 --- [http-nio-8080-exec-8] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 27(String)
2017-09-14 21:39:55.516 DEBUG 8388 --- [http-nio-8080-exec-8] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 21:39:55.519 DEBUG 8388 --- [http-nio-8080-exec-8] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 21:39:55.519 DEBUG 8388 --- [http-nio-8080-exec-8] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 31(String)
2017-09-14 21:39:55.521 DEBUG 8388 --- [http-nio-8080-exec-8] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 21:39:55.522 DEBUG 8388 --- [http-nio-8080-exec-8] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 21:39:55.522 DEBUG 8388 --- [http-nio-8080-exec-8] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 28(String)
2017-09-14 21:39:55.523 DEBUG 8388 --- [http-nio-8080-exec-8] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 21:39:55.525 DEBUG 8388 --- [http-nio-8080-exec-8] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 21:39:55.525 DEBUG 8388 --- [http-nio-8080-exec-8] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 14(String)
2017-09-14 21:39:55.526 DEBUG 8388 --- [http-nio-8080-exec-8] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 21:39:55.527 DEBUG 8388 --- [http-nio-8080-exec-8] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 21:39:55.528 DEBUG 8388 --- [http-nio-8080-exec-8] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 1(String)
2017-09-14 21:39:55.529 DEBUG 8388 --- [http-nio-8080-exec-8] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 21:39:55.530 DEBUG 8388 --- [http-nio-8080-exec-8] p.p.blog.repository.BlogRepo.list        : <==      Total: 10
2017-09-14 21:39:55.551 DEBUG 8388 --- [http-nio-8080-exec-8] p.p.blog.repository.BlogRepo.getTotal    : ==>  Preparing: select count(*) from t_blog 
2017-09-14 21:39:55.553 DEBUG 8388 --- [http-nio-8080-exec-8] p.p.blog.repository.BlogRepo.getTotal    : ==> Parameters: 
2017-09-14 21:39:55.554 DEBUG 8388 --- [http-nio-8080-exec-8] p.p.blog.repository.BlogRepo.getTotal    : <==      Total: 1
2017-09-14 21:39:58.292 DEBUG 8388 --- [http-nio-8080-exec-9] p.p.blog.repository.BlogRepo.findById    : ==>  Preparing: select * from t_blog where id=? 
2017-09-14 21:39:58.292 DEBUG 8388 --- [http-nio-8080-exec-9] p.p.blog.repository.BlogRepo.findById    : ==> Parameters: 301(String)
2017-09-14 21:39:58.294 DEBUG 8388 --- [http-nio-8080-exec-9] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 21:39:58.294 DEBUG 8388 --- [http-nio-8080-exec-9] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 1(String)
2017-09-14 21:39:58.296 DEBUG 8388 --- [http-nio-8080-exec-9] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 21:39:58.296 DEBUG 8388 --- [http-nio-8080-exec-9] p.p.blog.repository.BlogRepo.findById    : <==      Total: 1
2017-09-14 21:39:58.299 DEBUG 8388 --- [http-nio-8080-exec-9] p.p.blog.repository.BlogRepo.update      : ==>  Preparing: update t_blog SET title=?, summary=?, typeId=?, content=?, clickHit=?, replyHit=?, keyWord=? where id=? 
2017-09-14 21:39:58.300 DEBUG 8388 --- [http-nio-8080-exec-9] p.p.blog.repository.BlogRepo.update      : ==> Parameters: 请求转发（Forward）和重定向（Redirect）的区别(String), 转自:    ❤喵了个咪❤❤forward（转发）：是服务器请求资源,服务器直接访问目标地址的URL,把那个URL的响应内容读取过来,然后把这些内容再发给浏览器.浏览器根本不知道服务器发送的内容从哪里来的,因为这个跳转过程实在服务器实现的，并不是在客户端实现的所以客户端并不知道这个跳转动作，所以它的地址栏还是(String), 1(String), <h1 class="postTitle" style="margin: 10px 0px; padding: 0px; border-bottom: 1px solid rgb(221, 221, 221); font-size: 14px; font-family: &quot;comic sans ms&quot;, sans-serif; white-space: normal; background-color: rgb(255, 255, 255);">转自:&nbsp;&nbsp;&nbsp;&nbsp;<a href="http://www.cnblogs.com/Qian123/p/5345527.html" target="_self" title="❤喵了个咪❤❤">❤喵了个咪❤❤</a></h1><h1 class="postTitle" style="margin: 10px 0px; padding: 0px; border-bottom: 1px solid rgb(221, 221, 221); font-size: 14px; font-family: &quot;comic sans ms&quot;, sans-serif; white-space: normal; background-color: rgb(255, 255, 255);"><br/></h1><p style="margin: 10px auto; padding: 0px;"><span style="margin: 0px; padding: 0px; line-height: 1.5;"><strong style="margin: 0px; padding: 0px;"><span style="margin: 0px; padding: 0px; line-height: 1.8; font-size: 16px;">forward（转发）</span></strong>：</span></p><p style="margin: 10px auto; padding: 0px;">是服务器请求资源,服务器直接访问目标地址的URL,把那个URL的响应内容读取过来,然后把这些内容再发给浏览器.浏览器根本不知道服务器发送的内容从哪里来的,因为这个跳转过程实在服务器实现的，并不是在客户端实现的所以客户端并不知道这个跳转动作，所以它的地址栏还是原来的地址.</p><p style="margin: 10px auto; padding: 0px;"><strong style="margin: 0px; padding: 0px;"><span style="margin: 0px; padding: 0px; line-height: 1.8; font-size: 16px;">redirect（重定向）</span></strong>：</p><p style="margin: 10px auto; padding: 0px;">是服务端根据逻辑,发送一个状态码,告诉浏览器重新去请求那个地址.所以地址栏显示的是新的URL.</p><p style="margin: 10px auto; padding: 0px;"><span style="margin: 0px; padding: 0px; line-height: 1.8; color: rgb(255, 0, 0);">转发是服务器行为，重定向是客户端行为。</span></p><p style="margin: 10px auto; padding: 0px;"><strong style="margin: 0px; padding: 0px;"><span style="margin: 0px; padding: 0px; line-height: 1.8; font-size: 16px;">区别</span></strong>：</p><p style="margin: 10px auto; padding: 0px;">1. 从地址栏显示来说<br/>forward是服务器请求资源,服务器直接访问目标地址的URL,把那个URL的响应内容读取过来,然后把这些内容再发给浏览器.浏览器根本不知道服务器发送的内容从哪里来的,所以它的地址栏还是原来的地址.</p><p style="margin: 10px auto; padding: 0px;">redirect是服务端根据逻辑,发送一个状态码,告诉浏览器重新去请求那个地址.所以地址栏显示的是新的URL.</p><p style="margin: 10px auto; padding: 0px;">2. 从数据共享来说<br/>forward:转发页面和转发到的页面可以共享request里面的数据.<br/>redirect:不能共享数据.</p><p style="margin: 10px auto; padding: 0px;">3. 从运用地方来说<br/>forward:一般用于用户登陆的时候,根据角色转发到相应的模块.<br/>redirect:一般用于用户注销登陆时返回主页面和跳转到其它的网站等</p><p style="margin: 10px auto; padding: 0px;">4. 从效率来说<br/>forward:高.<br/>redirect:低.</p><p style="margin: 10px auto; padding: 0px;"><strong style="margin: 0px; padding: 0px;"><span style="margin: 0px; padding: 0px; line-height: 1.8; font-size: 16px;">本质区别</span></strong>：</p><p style="margin: 10px auto; padding: 0px;">　　解释一：</p><p style="margin: 10px auto; padding: 0px;">一句话，转发是服务器行为，重定向是客户端行为。为什么这样说呢，这就要看两个动作的工作流程：<br/><br/>转发过程：客户浏览器发送http请求----》web服务器接受此请求--》调用内部的一个方法在容器内部完成请求处理和转发动作----》将目标资源发送给客户;在这里，转发的路径必须是同一个web容器下的url，其不能转向到其他的web路径上去，中间传递的是自己的容器内的request。在客户浏览器路径栏显示的仍然是其第一次访问的路径，也就是说客户是感觉不到服务器做了转发的。转发行为是浏览器只做了一次访问请求。<br/><br/>重定向过程：客户浏览器发送http请求----》web服务器接受后发送302状态码响应及对应新的location给客户浏览器--》客户浏览器发现是302响应，则自动再发送一个新的http请求，请求url是新的location地址----》服务器根据此请求寻找资源并发送给客户。在这里 location可以重定向到任意URL，既然是浏览器重新发出了请求，则就没有什么request传递的概念了。在客户浏览器路径栏显示的是其重定向的路径，客户可以观察到地址的变化的。重定向行为是浏览器做了至少两次的访问请求的。</p><p style="margin: 10px auto; padding: 0px;">　　解释二：</p><p style="margin: 10px auto; padding: 0px;">重定向，其实是两次request,<br/>第一次，客户端request A,服务器响应，并response回来，告诉浏览器，你应该去B。这个时候IE可以看到地址变了，而且历史的回退按钮也亮了。重定向可以访问自己web应用以外的资源。在重定向的过程中，传输的信息会被丢失。<br/><br/>例子：<br/>请求转发是服务器内部把对一个request/response的处理权，移交给另外一个<br/>对于客户端而言，它只知道自己最早请求的那个A，而不知道中间的B，甚至C、D。 传输的信息不会丢失。</p><p style="margin: 10px auto; padding: 0px;">　　解释三：</p><p style="margin: 10px auto; padding: 0px;">转发是服务器行为，重定向是客户端行为。&nbsp;<br/><br/></p><table><tbody style="margin: 0px; padding: 0px;"><tr style="margin: 0px; padding: 0px;" class="firstRow"><td style="margin: 0px; padding: 3px; border-color: silver; border-collapse: collapse;">两者的内部机制有很大的区别： &nbsp;&nbsp;<br/>1 请求转发只能将请求转发给同一个WEB应用中的组件，<br/>而重定向还可以重新定向到同一站点不同应用程序中的资源，甚至可以定向到一绝对的URL。 &nbsp;&nbsp;<br/>2 重定向可以看见目标页面的URL，<br/>转发只能看见第一次访问的页面URL，以后的工作都是有服务器来做的。 &nbsp;<br/>3 请求响应调用者和被调用者之间共享相同的request对象和response对象，<br/>重定向调用者和被调用者属于两个独立访问请求和响应过程。 &nbsp;&nbsp;<br/>4 重定向跳转后必须加上return，要不然页面虽然跳转了，<br/>但是还会执行跳转后面的语句，<br/>转发是执行了跳转页面，下面的代码就不会在执行了。</td></tr></tbody></table><p><br/></p>(String), 23(Integer), 0(Integer), forward redirect(String), 301(String)
2017-09-14 21:39:58.305 DEBUG 8388 --- [http-nio-8080-exec-9] p.p.blog.repository.BlogRepo.update      : <==    Updates: 1
2017-09-14 21:39:58.307 DEBUG 8388 --- [http-nio-8080-exec-9] p.p.blog.repository.CommentRepo.list     : ==>  Preparing: select * from t_comment WHERE blogId=? and state=? order by commentDate desc 
2017-09-14 21:39:58.308 DEBUG 8388 --- [http-nio-8080-exec-9] p.p.blog.repository.CommentRepo.list     : ==> Parameters: 301(String), 1(Integer)
2017-09-14 21:39:58.309 DEBUG 8388 --- [http-nio-8080-exec-9] p.p.blog.repository.CommentRepo.list     : <==      Total: 0
2017-09-14 21:39:58.312 DEBUG 8388 --- [http-nio-8080-exec-9] p.p.b.repository.BlogRepo.getLastBlog    : ==>  Preparing: select * from t_blog t where ? > t.releaseDate order by releaseDate desc limit 1 
2017-09-14 21:39:58.330 DEBUG 8388 --- [http-nio-8080-exec-9] p.p.b.repository.BlogRepo.getLastBlog    : ==> Parameters: 2017-07-11 13:07:49.0(Timestamp)
2017-09-14 21:39:58.334 DEBUG 8388 --- [http-nio-8080-exec-9] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 21:39:58.335 DEBUG 8388 --- [http-nio-8080-exec-9] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 1(String)
2017-09-14 21:39:58.336 DEBUG 8388 --- [http-nio-8080-exec-9] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 21:39:58.337 DEBUG 8388 --- [http-nio-8080-exec-9] p.p.b.repository.BlogRepo.getLastBlog    : <==      Total: 1
2017-09-14 21:39:58.341 DEBUG 8388 --- [http-nio-8080-exec-9] p.p.b.repository.BlogRepo.getNextBlog    : ==>  Preparing: select * from t_blog t where t.releaseDate > ? order by releaseDate asc limit 1 
2017-09-14 21:39:58.341 DEBUG 8388 --- [http-nio-8080-exec-9] p.p.b.repository.BlogRepo.getNextBlog    : ==> Parameters: 2017-07-11 13:07:49.0(Timestamp)
2017-09-14 21:39:58.344 DEBUG 8388 --- [http-nio-8080-exec-9] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 21:39:58.344 DEBUG 8388 --- [http-nio-8080-exec-9] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 31(String)
2017-09-14 21:39:58.346 DEBUG 8388 --- [http-nio-8080-exec-9] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 21:39:58.347 DEBUG 8388 --- [http-nio-8080-exec-9] p.p.b.repository.BlogRepo.getNextBlog    : <==      Total: 1
2017-09-14 21:40:04.086 DEBUG 8388 --- [http-nio-8080-exec-2] p.p.blog.repository.BlogRepo.list        : ==>  Preparing: select * from t_blog order by releaseDate desc limit ?,? 
2017-09-14 21:40:04.087 DEBUG 8388 --- [http-nio-8080-exec-2] p.p.blog.repository.BlogRepo.list        : ==> Parameters: 20(Integer), 10(Integer)
2017-09-14 21:40:04.093 DEBUG 8388 --- [http-nio-8080-exec-2] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 21:40:04.093 DEBUG 8388 --- [http-nio-8080-exec-2] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 12(String)
2017-09-14 21:40:04.095 DEBUG 8388 --- [http-nio-8080-exec-2] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 21:40:04.096 DEBUG 8388 --- [http-nio-8080-exec-2] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 21:40:04.097 DEBUG 8388 --- [http-nio-8080-exec-2] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 24(String)
2017-09-14 21:40:04.098 DEBUG 8388 --- [http-nio-8080-exec-2] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 21:40:04.099 DEBUG 8388 --- [http-nio-8080-exec-2] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 21:40:04.100 DEBUG 8388 --- [http-nio-8080-exec-2] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 23(String)
2017-09-14 21:40:04.102 DEBUG 8388 --- [http-nio-8080-exec-2] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 21:40:04.105 DEBUG 8388 --- [http-nio-8080-exec-2] p.p.blog.repository.BlogRepo.list        : <==      Total: 10
2017-09-14 21:40:04.113 DEBUG 8388 --- [http-nio-8080-exec-2] p.p.blog.repository.BlogRepo.getTotal    : ==>  Preparing: select count(*) from t_blog 
2017-09-14 21:40:04.113 DEBUG 8388 --- [http-nio-8080-exec-2] p.p.blog.repository.BlogRepo.getTotal    : ==> Parameters: 
2017-09-14 21:40:04.114 DEBUG 8388 --- [http-nio-8080-exec-2] p.p.blog.repository.BlogRepo.getTotal    : <==      Total: 1
2017-09-14 21:40:07.704 DEBUG 8388 --- [http-nio-8080-exec-1] p.p.blog.repository.BlogRepo.findById    : ==>  Preparing: select * from t_blog where id=? 
2017-09-14 21:40:07.705 DEBUG 8388 --- [http-nio-8080-exec-1] p.p.blog.repository.BlogRepo.findById    : ==> Parameters: 298(String)
2017-09-14 21:40:07.711 DEBUG 8388 --- [http-nio-8080-exec-1] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 21:40:07.711 DEBUG 8388 --- [http-nio-8080-exec-1] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 12(String)
2017-09-14 21:40:07.717 DEBUG 8388 --- [http-nio-8080-exec-1] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 21:40:07.718 DEBUG 8388 --- [http-nio-8080-exec-1] p.p.blog.repository.BlogRepo.findById    : <==      Total: 1
2017-09-14 21:40:07.721 DEBUG 8388 --- [http-nio-8080-exec-1] p.p.blog.repository.BlogRepo.update      : ==>  Preparing: update t_blog SET title=?, summary=?, typeId=?, content=?, clickHit=?, replyHit=?, keyWord=? where id=? 
2017-09-14 21:40:07.722 DEBUG 8388 --- [http-nio-8080-exec-1] p.p.blog.repository.BlogRepo.update      : ==> Parameters: 解决ORA-01034: ORACLE not available(String), 出差回来自己写的项目运行不聊了   报错ORACLE not availableoracle没有启动 cmd 执行 sqlplus /nologconn /as sysdbastartup如图;ok(String), 12(String), <p>出差回来自己写的项目运行不聊了 &nbsp;&nbsp;<img src="http://img.baidu.com/hi/jx2/j_0016.gif"/></p><p>报错ORACLE not available</p><p>oracle没有启动&nbsp;</p><p>cmd 执行&nbsp;</p><p>sqlplus /nolog</p><p>conn /as sysdba</p><p>startup</p><p><br/></p><p>如图;ok</p><p><br/></p><p> <img src="/userImages/20170709/1499609992297092911.jpg" title="1499609992297092911.jpg" alt="QQ鎴浘20170709221624.jpg"/> <br/></p>(String), 31(Integer), 0(Integer), oracle (String), 298(String)
2017-09-14 21:40:07.726 DEBUG 8388 --- [http-nio-8080-exec-1] p.p.blog.repository.BlogRepo.update      : <==    Updates: 1
2017-09-14 21:40:07.731 DEBUG 8388 --- [http-nio-8080-exec-1] p.p.blog.repository.CommentRepo.list     : ==>  Preparing: select * from t_comment WHERE blogId=? and state=? order by commentDate desc 
2017-09-14 21:40:07.731 DEBUG 8388 --- [http-nio-8080-exec-1] p.p.blog.repository.CommentRepo.list     : ==> Parameters: 298(String), 1(Integer)
2017-09-14 21:40:07.733 DEBUG 8388 --- [http-nio-8080-exec-1] p.p.blog.repository.CommentRepo.list     : <==      Total: 0
2017-09-14 21:40:07.738 DEBUG 8388 --- [http-nio-8080-exec-1] p.p.b.repository.BlogRepo.getLastBlog    : ==>  Preparing: select * from t_blog t where ? > t.releaseDate order by releaseDate desc limit 1 
2017-09-14 21:40:07.739 DEBUG 8388 --- [http-nio-8080-exec-1] p.p.b.repository.BlogRepo.getLastBlog    : ==> Parameters: 2017-07-09 22:20:00.0(Timestamp)
2017-09-14 21:40:07.742 DEBUG 8388 --- [http-nio-8080-exec-1] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 21:40:07.743 DEBUG 8388 --- [http-nio-8080-exec-1] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 24(String)
2017-09-14 21:40:07.746 DEBUG 8388 --- [http-nio-8080-exec-1] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 21:40:07.746 DEBUG 8388 --- [http-nio-8080-exec-1] p.p.b.repository.BlogRepo.getLastBlog    : <==      Total: 1
2017-09-14 21:40:07.750 DEBUG 8388 --- [http-nio-8080-exec-1] p.p.b.repository.BlogRepo.getNextBlog    : ==>  Preparing: select * from t_blog t where t.releaseDate > ? order by releaseDate asc limit 1 
2017-09-14 21:40:07.750 DEBUG 8388 --- [http-nio-8080-exec-1] p.p.b.repository.BlogRepo.getNextBlog    : ==> Parameters: 2017-07-09 22:20:00.0(Timestamp)
2017-09-14 21:40:07.753 DEBUG 8388 --- [http-nio-8080-exec-1] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 21:40:07.754 DEBUG 8388 --- [http-nio-8080-exec-1] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 12(String)
2017-09-14 21:40:07.755 DEBUG 8388 --- [http-nio-8080-exec-1] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 21:40:07.756 DEBUG 8388 --- [http-nio-8080-exec-1] p.p.b.repository.BlogRepo.getNextBlog    : <==      Total: 1
2017-09-14 21:40:17.695 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.blog.repository.BlogRepo.findById    : ==>  Preparing: select * from t_blog where id=? 
2017-09-14 21:40:17.696 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.blog.repository.BlogRepo.findById    : ==> Parameters: 293(String)
2017-09-14 21:40:17.699 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 21:40:17.699 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 24(String)
2017-09-14 21:40:17.700 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 21:40:17.701 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.blog.repository.BlogRepo.findById    : <==      Total: 1
2017-09-14 21:40:17.704 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.blog.repository.BlogRepo.update      : ==>  Preparing: update t_blog SET title=?, summary=?, typeId=?, content=?, clickHit=?, replyHit=?, keyWord=? where id=? 
2017-09-14 21:40:17.705 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.blog.repository.BlogRepo.update      : ==> Parameters: 理解JVM内存管理(String), jvm中内存划分：LinkedList中的一些字段属性，集合大小，首节点，尾节点，一个空的构造器。程序计数器（Program Counter Register）、JVM虚拟机栈（JVM Stacks）、本地方法栈（Native Method Stacks）、堆（Heap）、方法区（Method Area）1、(String), 24(String), <p>jvm中内存划分：<span style="color: rgb(34, 34, 34); font-family: &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; font-size: 15.008px; background-color: rgb(255, 255, 255);">LinkedList中的一些字段属性，集合大小，首节点，尾节点，一个空的构造器。</span></p><p><span style="font-family: Arial; font-size: 14px; background-color: rgb(255, 255, 255);">程序计数器（Program Counter Register）、JVM虚拟机栈（JVM Stacks）、本地方法栈（Native Method Stacks）、堆（Heap）、方法区（Method Area）</span></p><p><img src="/userImages/20170630/1498787139464011397.png" title="1498787139464011397.png" alt="image.png"/></p><p><br/></p><p style="margin-top: 0px; margin-bottom: 0px; padding: 0px; font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);"><span style="font-size: 12px; color: rgb(0, 0, 0);"><strong><span style="font-size: 16px; font-style: italic; font-weight: bold; line-height: 18px;">1、程序计数器（Program Counter Register</span></strong><strong><span style="font-size: 16px; font-style: italic; font-weight: bold; line-height: 18px;">）</span></strong></span></p><p style="margin-top: 0px; margin-bottom: 0px; padding: 0px; font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);"><span style="color: rgb(34, 34, 34); font-family: &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; font-size: 15.008px; background-color: rgb(255, 255, 255);">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;这是一块比较小的内存，不在Ram上，而是直接划分在CPU上的，程序员无法直接操作它，它的作用是：JVM在解释字节码文件（.class）时，存储当前线程所执行的字节码的行号，只是一种概念模型，各种JVM所采用的方式不同，字节码解释器工作时，就是通过改变程序计数器的值来选取下一条要执行的指令，分支、循环、跳转、等基础功能都是依赖此技术区完成的。还有一种情况，就是我们常说的Java多线程方面的，多线程就是通过现程轮流切换而达到的，同一时刻，一个内核只能执行一个指令，所以，对于每一个程序来说，必须有一个计数器来记录程序的执行进度，这样，当现程恢复执行的时候，才能从正确的地方开始，所以，每个线程都必须有一个独立的程序计数器，这类计数器为线程私有的内存。如果一个线程正在执行一个Java方法，则计数器记录的是字节码的指令的地址，如果执行的一个Native方法，则计数器的记录为空，此内存区是唯一一个在Java规范中没有任何OutOfMemoryError情况的区域。</span></p><p style="margin-top: 0px; margin-bottom: 0px; padding: 0px; font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);"><span style="color: rgb(34, 34, 34); font-family: &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; font-size: 15.008px; background-color: rgb(255, 255, 255);"><br/></span></p><p style="margin-top: 0px; margin-bottom: 0px; padding: 0px; font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);"><span style="font-size: 12px; color: rgb(0, 0, 0);"><strong><span style="color: rgb(0, 0, 0); font-size: 16px; font-style: italic; font-weight: bold; line-height: 18px;">2、JVM虚拟机栈（JVM Stacks）</span></strong></span></p><p style="margin-top: 0px; margin-bottom: 0px; padding: 0px; font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);"><span style="color: rgb(34, 34, 34); font-family: &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; font-size: 15.008px; background-color: rgb(255, 255, 255);">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;JVM虚拟机栈就是我们常说的堆栈的栈（我们常常把内存粗略分为堆和栈），和程序计数器一样，也是线程私有的，生命周期和线程一样，每个方法被执行的时候会产生一个栈帧，用于存储局部变量表、动态链接、操作数、方法出口等信息。方法的执行过程就是栈帧在JVM中出栈和入栈的过程。局部变量表中存放的是各种基本数据类型，如boolean、byte、char、等8种，及引用类型（存放的是指向各个对象的内存地址），因此，它有一个特点：内存空间可以在编译期间就确定，运行期不在改变。这个内存区域会有两种可能的Java异常：StackOverFlowError和OutOfMemoryError。</span></p><p style="margin-top: 0px; margin-bottom: 0px; padding: 0px; font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);"><span style="color: rgb(34, 34, 34); font-family: &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; font-size: 15.008px; background-color: rgb(255, 255, 255);"><br/></span></p><p style="margin-top: 0px; margin-bottom: 0px; padding: 0px; font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);"><span style="font-size: 12px; color: rgb(0, 0, 0);"><strong><span style="color: rgb(0, 0, 0); font-size: 16px; font-style: italic; font-weight: bold; line-height: 18px;">3、本地方法栈（Native Method Stacks）</span></strong></span></p><p style="margin-top: 0px; margin-bottom: 0px; padding: 0px; font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);"><span style="color: rgb(34, 34, 34); font-family: &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; font-size: 15.008px; background-color: rgb(255, 255, 255);">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;从名字即可看出，本地方法栈就是用来处理Java中的本地方法的，Java类的祖先类Object中有众多Native方法，如hashCode()、wait()等，他们的执行很多时候是借助于</span><a href="http://lib.csdn.net/base/operatingsystem" class="replace_word" title="操作系统知识库" target="_blank" style="text-decoration: underline; font-weight: bold; color: rgb(34, 34, 34); font-family: &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; font-size: 15.008px; background-color: rgb(255, 255, 255);"><span style="color: rgb(34, 34, 34); font-family: &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; font-size: 15.008px; background-color: rgb(255, 255, 255);">操作系统</span></a><span style="color: rgb(34, 34, 34); font-family: &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; font-size: 15.008px; background-color: rgb(255, 255, 255);">，但是JVM需要对他们做一些规范，来处理他们的执行过程。此区域，可以有不同的实现方法，向我们常用的Sun的JVM就是本地方法栈和JVM虚拟机栈是同一个。</span></p><p style="margin-top: 0px; margin-bottom: 0px; padding: 0px; font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);"><span style="color: rgb(34, 34, 34); font-family: &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; font-size: 15.008px; background-color: rgb(255, 255, 255);"><br/></span></p><p style="margin-top: 0px; margin-bottom: 0px; padding: 0px; font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);"><span style="font-size: 12px; color: rgb(0, 0, 0);"><strong><span style="color: rgb(0, 0, 0); font-size: 16px; font-style: italic; font-weight: bold; line-height: 18px;">4、堆（Heap）</span></strong></span></p><p style="margin-top: 0px; margin-bottom: 0px; padding: 0px; font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="color: rgb(34, 34, 34); font-family: &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; font-size: 15.008px; background-color: rgb(255, 255, 255);">&nbsp;&nbsp;堆内存是内存中最重要的一块，也是最有必要进行深究的一部分。因为Java性能的优化，主要就是针对这部分内存的。所有的对象实例及数组都是在堆上面分配的（随着JIT技术的逐渐成熟，这句话视乎有些绝对，不过至少目前还基本是这样的），可通过-Xmx和-Xms来控制堆的大小。JIT技术的发展产生了新的技术，如栈上分配和标量替换，也许在不久的几年里，即时编译会诞生及成熟，那个时候，“所有的对象实例及数组都是在堆上面分配的”这句话就应该稍微改改了。堆内存是垃圾回收的主要区域，所以在下文垃圾回收板块会重点介绍，此处只做概念方面的解释。在32位系统上最大为2G，64位系统上无限制。</span></p><p style="margin-top: 0px; margin-bottom: 0px; padding: 0px; font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);"><span style="color: rgb(34, 34, 34); font-family: &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; font-size: 15.008px; background-color: rgb(255, 255, 255);">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;JVM初始分配的内存由-Xms指定，默认是物理内存的1/64；JVM最大分配的内存由-Xmx指 定，默认是物理内存的1/4。默认空余堆内存小于40%时，JVM就会增大堆直到-Xmx的最大限制；空余堆内存大于70%时，JVM会减少堆直到 -Xms的最小限制。因此服务器一般设置-Xms、-Xmx相等以避免在每次GC 后调整堆的大小。对象的堆内存由称为垃圾回收器的自动内存管理系统回收。</span></p><p style="margin-top: 0px; margin-bottom: 0px; padding: 0px; font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);"><span style="color: rgb(34, 34, 34); font-family: &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; font-size: 15.008px; background-color: rgb(255, 255, 255);"><br/></span></p><p style="margin-top: 0px; margin-bottom: 0px; padding: 0px; font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);"><br/></p><p style="margin-top: 0px; margin-bottom: 0px; padding: 0px; font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);"><img src="/userImages/20170630/1498787500047046555.png" title="1498787500047046555.png" alt="image.png"/></p><p style="margin-top: 0px; margin-bottom: 0px; padding: 0px; font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);"><br/></p><p><span style="color: rgb(34, 34, 34); font-family: &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; font-size: 15.008px; background-color: rgb(255, 255, 255);">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;java堆细分为新生代和老年代，新生代又分为Eden空间、From Survivor空间、To Survivor空间，新生代中垃圾回收算法为复制算法，复制算法是先将内存分为连个部分，一部分用来放入对象，而另一部分暂时不用，当使用的一部分内存要进行垃圾回收的时候会将不需要回收的对象复制保存在另一个空间中，然后再对使用过的那部分区域进行垃圾回收，这样虽然效率很高，但是很浪费空间，所以一般将新生代分为Eden空间和两个Survivor空间，其大小在HotSpot虚拟机中默认比例为8：1：1，这样在新生代中采用复制算法回收垃圾效率就很高了，具体回收过程是将Eden区域和From Survivor区域作为对象的存储空间，当要进行垃圾回收的时候先将这两个区域中不需要回收的对象复制保存在To Survivor区域中，然后再进行垃圾回收。另外有一点是当一个对象在Eden区域和From Survivor区域中存储的时候发现内存不足，这时会进行内存分配担保，就是将此对象直接存入在老年代中。</span></p><p><br/></p><p><span style="color: rgb(34, 34, 34); font-family: &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; font-size: 15.008px; background-color: rgb(255, 255, 255);">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;老年代中采用的GC算法为标记-清除算法或者标记-整理算法。标记-清除算法为：首先标记出要进行GC的对象，标记完成后再进行GC。这种算法效率不高，并且会产生很多内存碎片。标记-整理算法：同样是先对要进行GC的对象进行标记，但是不同的是在标记完成后不是立刻执行GC，而是先将不需要GC的对象移动到一端，然后在边界外再对要回收的对象进行GC。</span></p><p><br/></p><p><span style="color: rgb(34, 34, 34); font-family: &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; font-size: 15.008px; background-color: rgb(255, 255, 255);">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;关于对象的分配：对象优先在Eden区域分配，大对象会直接进入老年代，长期存活的对象会进入老年代，这里的长期存活是根据新生代中的对象年龄阈值来定义的，对象刚分配到新生代的时候年龄为1，每进行一次GC对象的年龄会加1，HotSpot中默认的阈值是15，也就是说对象年龄达到15岁的时候会被分配到老年区，这个值是可以通过参数配置的。</span></p><p><br/></p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;在进行垃圾回收的时候新生代GC又叫minor GC，老年代GC可以设置内存容量达到百分比的多少的时候进行GC，老年代的GC又叫Full GC，minor GC时间短，频率高，而Full GC时间长，频率低。</p><p><br/></p><p style="margin-top: 0px; margin-bottom: 0px; padding: 0px; font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);"><span style="font-size: 12px; color: rgb(0, 0, 0);"><strong><span style="color: rgb(0, 0, 0); font-size: 16px; font-style: italic; font-weight: bold; line-height: 18px;">5、方法区（Method Area）</span></strong></span></p><p style="margin-top: 0px; margin-bottom: 0px; padding: 0px; font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);"><span style="font-size: 12px; color: rgb(0, 0, 0);"><strong><span style="color: rgb(0, 0, 0); font-size: 16px; font-style: italic; font-weight: bold; line-height: 18px;"><br/></span></strong></span></p><p style="margin-top: 0px; margin-bottom: 0px; padding: 0px; font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);"><span style="color: rgb(255, 0, 0);"></span><span style="color: rgb(34, 34, 34); font-family: &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; font-size: 15.008px; background-color: rgb(255, 255, 255);">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;方法区是所有线程共享的内存区域，用于存储已经被JVM加载的类信息、常量、静态变量等数据，一般来说，方法区属于持久代（关于持久代，会在GC部分详细介绍，除了持久代，还有新生代和旧生代），也难怪Java规范将方法区描述为堆的一个逻辑部分，但是它不是堆。方法区的垃圾回收比较棘手，就算是Sun的HotSpot VM在这方面也没有做得多么完美。此处引入方法区中一个重要的概念：运行时常量池。主要用于存放在编译过程中产生的字面量（字面量简单理解就是常量）和引用。</span></p><p style="margin-top: 0px; margin-bottom: 0px; padding: 0px; font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);"><br/></p><p style="margin-top: 0px; margin-bottom: 0px; padding: 0px; font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);"><br/></p><p style="margin-top: 0px; margin-bottom: 0px; padding: 0px; font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);">参考博客：</p><p style="margin-top: 0px; margin-bottom: 0px; padding: 0px; font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="http://www.cnblogs.com/redcreen/archive/2011/05/04/2036387.html" target="_self" title="redcreen的专栏">redcreen的专栏</a><br/></p><p style="margin-top: 0px; margin-bottom: 0px; padding: 0px; font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="http://www.jianshu.com/p/a9b7b6dea557" target="_self" title="云谷子">云谷子</a><br/></p><p style="margin-top: 0px; margin-bottom: 0px; padding: 0px; font-family: Arial; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="http://blog.csdn.net/zhangerqing/article/details/8214365" target="_self" title="终点">终点</a><br/></p><p><br/></p>(String), 102(Integer), 0(Integer), 理解JVM内存管理(String), 293(String)
2017-09-14 21:40:17.711 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.blog.repository.BlogRepo.update      : <==    Updates: 1
2017-09-14 21:40:17.713 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.blog.repository.CommentRepo.list     : ==>  Preparing: select * from t_comment WHERE blogId=? and state=? order by commentDate desc 
2017-09-14 21:40:17.714 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.blog.repository.CommentRepo.list     : ==> Parameters: 293(String), 1(Integer)
2017-09-14 21:40:17.715 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.blog.repository.CommentRepo.list     : <==      Total: 0
2017-09-14 21:40:17.718 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.b.repository.BlogRepo.getLastBlog    : ==>  Preparing: select * from t_blog t where ? > t.releaseDate order by releaseDate desc limit 1 
2017-09-14 21:40:17.719 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.b.repository.BlogRepo.getLastBlog    : ==> Parameters: 2017-06-30 09:53:18.0(Timestamp)
2017-09-14 21:40:17.722 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 21:40:17.722 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 24(String)
2017-09-14 21:40:17.724 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 21:40:17.724 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.b.repository.BlogRepo.getLastBlog    : <==      Total: 1
2017-09-14 21:40:17.727 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.b.repository.BlogRepo.getNextBlog    : ==>  Preparing: select * from t_blog t where t.releaseDate > ? order by releaseDate asc limit 1 
2017-09-14 21:40:17.727 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.b.repository.BlogRepo.getNextBlog    : ==> Parameters: 2017-06-30 09:53:18.0(Timestamp)
2017-09-14 21:40:17.730 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 21:40:17.730 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 24(String)
2017-09-14 21:40:17.732 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 21:40:17.732 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.b.repository.BlogRepo.getNextBlog    : <==      Total: 1
2017-09-14 21:40:33.311 DEBUG 8388 --- [http-nio-8080-exec-6] p.p.blog.repository.BlogRepo.update      : ==>  Preparing: update t_blog SET title=?, summary=?, typeId=?, content=?, clickHit=?, replyHit=?, keyWord=? where id=? 
2017-09-14 21:40:33.312 DEBUG 8388 --- [http-nio-8080-exec-6] p.p.blog.repository.BlogRepo.update      : ==> Parameters: 理解Java内存模型（一）(String), 转自 ：程晓明 并发编程模型的分类在并发编程中，我们需要处理两个关键问题：线程之间如何通信及线程之间如何同步（这里的线程是指并发执行的活动实体）。通信是指线程之间以何种机制来交换信息。在命令式编程中，线程之间的通信机制有两种：共享内存和消息传递。在共享内存的并发模型里，线程之间共享程序的公共状态，线程之间通过(String), 24(String), <h2 style="margin: 0px 0px 10px; padding: 0px; font-size: 20px; font-weight: normal; border: 0px; float: none; clear: none; width: 610px; color: rgb(34, 34, 34); line-height: 24px; font-family: Helvetica, &quot;Open Sans&quot;, Arial, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, 微软雅黑, STHeiti, &quot;WenQuanYi Micro Hei&quot;, SimSun, sans-serif; white-space: normal; background-color: rgb(255, 255, 255);">转自 ：<a href="http://www.infoq.com/cn/articles/java-memory-model-1" target="_self" title="程晓明">程晓明 </a></h2><h2 style="margin: 0px 0px 10px; padding: 0px; font-size: 20px; font-weight: normal; border: 0px; float: none; clear: none; width: 610px; color: rgb(34, 34, 34); line-height: 24px; font-family: Helvetica, &quot;Open Sans&quot;, Arial, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, 微软雅黑, STHeiti, &quot;WenQuanYi Micro Hei&quot;, SimSun, sans-serif; white-space: normal; background-color: rgb(255, 255, 255);">并发编程模型的分类</h2><p style="margin-top: 0px; margin-bottom: 15px; padding: 0px; border: 0px; float: none; font-size: 14px; line-height: 1.8; clear: none; width: 610px; font-family: Helvetica, &quot;Open Sans&quot;, Arial, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, 微软雅黑, STHeiti, &quot;WenQuanYi Micro Hei&quot;, SimSun, sans-serif; white-space: normal; background-color: rgb(255, 255, 255);">在并发编程中，我们需要处理两个关键问题：线程之间如何通信及线程之间如何同步（这里的线程是指并发执行的活动实体）。通信是指线程之间以何种机制来交换信息。在命令式编程中，线程之间的通信机制有两种：共享内存和消息传递。</p><p style="margin-top: 0px; margin-bottom: 15px; padding: 0px; border: 0px; float: none; font-size: 14px; line-height: 1.8; clear: none; width: 610px; font-family: Helvetica, &quot;Open Sans&quot;, Arial, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, 微软雅黑, STHeiti, &quot;WenQuanYi Micro Hei&quot;, SimSun, sans-serif; white-space: normal; background-color: rgb(255, 255, 255);">在共享内存的并发模型里，线程之间共享程序的公共状态，线程之间通过写-读内存中的公共状态来隐式进行通信。在消息传递的并发模型里，线程之间没有公共状态，线程之间必须通过明确的发送消息来显式进行通信。</p><p style="margin-top: 0px; margin-bottom: 15px; padding: 0px; border: 0px; float: none; font-size: 14px; line-height: 1.8; clear: none; width: 610px; font-family: Helvetica, &quot;Open Sans&quot;, Arial, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, 微软雅黑, STHeiti, &quot;WenQuanYi Micro Hei&quot;, SimSun, sans-serif; white-space: normal; background-color: rgb(255, 255, 255);">同步是指程序用于控制不同线程之间操作发生相对顺序的机制。在共享内存并发模型里，同步是显式进行的。程序员必须显式指定某个方法或某段代码需要在线程之间互斥执行。在消息传递的并发模型里，由于消息的发送必须在消息的接收之前，因此同步是隐式进行的。<span style="font-weight: 600; font-family: sans-serif; font-size: 16px;"></span></p><p style="margin-top: 0px; margin-bottom: 15px; padding: 0px; border: 0px; float: none; font-size: 14px; line-height: 1.8; clear: none; width: 610px; font-family: Helvetica, &quot;Open Sans&quot;, Arial, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, 微软雅黑, STHeiti, &quot;WenQuanYi Micro Hei&quot;, SimSun, sans-serif; white-space: normal; background-color: rgb(255, 255, 255);">Java的并发采用的是共享内存模型，Java线程之间的通信总是隐式进行，整个通信过程对程序员完全透明。如果编写多线程程序的Java程序员不理解隐式进行的线程之间通信的工作机制，很可能会遇到各种奇怪的内存可见性问题。</p><h2 style="margin: 0px 0px 10px; padding: 0px; font-size: 20px; font-weight: normal; border: 0px; float: none; clear: none; width: 610px; color: rgb(34, 34, 34); line-height: 24px; font-family: Helvetica, &quot;Open Sans&quot;, Arial, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, 微软雅黑, STHeiti, &quot;WenQuanYi Micro Hei&quot;, SimSun, sans-serif; white-space: normal; background-color: rgb(255, 255, 255);">Java内存模型的抽象</h2><p style="margin-top: 0px; margin-bottom: 15px; padding: 0px; border: 0px; float: none; font-size: 14px; line-height: 1.8; clear: none; width: 610px; font-family: Helvetica, &quot;Open Sans&quot;, Arial, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, 微软雅黑, STHeiti, &quot;WenQuanYi Micro Hei&quot;, SimSun, sans-serif; white-space: normal; background-color: rgb(255, 255, 255);">在java中，所有实例域、静态域和数组元素存储在堆内存中，堆内存在线程之间共享（本文使用“共享变量”这个术语代指实例域，静态域和数组元素）。局部变量（Local variables），方法定义参数（java语言规范称之为formal method parameters）和异常处理器参数（exception handler parameters）不会在线程之间共享，它们不会有内存可见性问题，也不受内存模型的影响。</p><p style="margin-top: 0px; margin-bottom: 15px; padding: 0px; border: 0px; float: none; font-size: 14px; line-height: 1.8; clear: none; width: 610px; font-family: Helvetica, &quot;Open Sans&quot;, Arial, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, 微软雅黑, STHeiti, &quot;WenQuanYi Micro Hei&quot;, SimSun, sans-serif; white-space: normal; background-color: rgb(255, 255, 255);">Java线程之间的通信由Java内存模型（本文简称为JMM）控制，JMM决定一个线程对共享变量的写入何时对另一个线程可见。从抽象的角度来看，JMM定义了线程和主内存之间的抽象关系：线程之间的共享变量存储在主内存（main memory）中，每个线程都有一个私有的本地内存（local memory），本地内存中存储了该线程以读/写共享变量的副本。本地内存是JMM的一个抽象概念，并不真实存在。它涵盖了缓存，写缓冲区，寄存器以及其他的硬件和编译器优化。Java内存模型的抽象示意图如下：</p><p style="margin-top: 0px; margin-bottom: 15px; padding: 0px; border: 0px; float: none; font-size: 14px; line-height: 1.8; clear: none; width: 610px; font-family: Helvetica, &quot;Open Sans&quot;, Arial, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, 微软雅黑, STHeiti, &quot;WenQuanYi Micro Hei&quot;, SimSun, sans-serif; white-space: normal; background-color: rgb(255, 255, 255);"><img src="/ueditor/jsp/upload/image/20170628/1498635194679072108.png" alt=""/></p><p style="margin-top: 0px; margin-bottom: 15px; padding: 0px; border: 0px; float: none; font-size: 14px; line-height: 1.8; clear: none; width: 610px; font-family: Helvetica, &quot;Open Sans&quot;, Arial, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, 微软雅黑, STHeiti, &quot;WenQuanYi Micro Hei&quot;, SimSun, sans-serif; white-space: normal; background-color: rgb(255, 255, 255);">从上图来看，线程A与线程B之间如要通信的话，必须要经历下面2个步骤：</p><ol style="margin-top: 10px; margin-bottom: 10px; margin-left: 10px; padding: 0px 0px 0px 20px; border: 0px; width: 549px; clear: left; font-family: Helvetica, &quot;Open Sans&quot;, Arial, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, 微软雅黑, STHeiti, &quot;WenQuanYi Micro Hei&quot;, SimSun, sans-serif; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);" class=" list-paddingleft-2"><li><p>首先，线程A把本地内存A中更新过的共享变量刷新到主内存中去。</p></li><li><p>然后，线程B到主内存中去读取线程A之前已更新过的共享变量。</p></li></ol><p style="margin-top: 0px; margin-bottom: 15px; padding: 0px; border: 0px; float: none; font-size: 14px; line-height: 1.8; clear: none; width: 610px; font-family: Helvetica, &quot;Open Sans&quot;, Arial, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, 微软雅黑, STHeiti, &quot;WenQuanYi Micro Hei&quot;, SimSun, sans-serif; white-space: normal; background-color: rgb(255, 255, 255);">下面通过示意图来说明这两个步骤：</p><p style="margin-top: 0px; margin-bottom: 15px; padding: 0px; border: 0px; float: none; font-size: 14px; line-height: 1.8; clear: none; width: 610px; font-family: Helvetica, &quot;Open Sans&quot;, Arial, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, 微软雅黑, STHeiti, &quot;WenQuanYi Micro Hei&quot;, SimSun, sans-serif; white-space: normal; background-color: rgb(255, 255, 255);"><img src="/ueditor/jsp/upload/image/20170628/1498635194872053033.png" alt=""/></p><p style="margin-top: 0px; margin-bottom: 15px; padding: 0px; border: 0px; float: none; font-size: 14px; line-height: 1.8; clear: none; width: 610px; font-family: Helvetica, &quot;Open Sans&quot;, Arial, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, 微软雅黑, STHeiti, &quot;WenQuanYi Micro Hei&quot;, SimSun, sans-serif; white-space: normal; background-color: rgb(255, 255, 255);">如上图所示，本地内存A和B有主内存中共享变量x的副本。假设初始时，这三个内存中的x值都为0。线程A在执行时，把更新后的x值（假设值为1）临时存放在自己的本地内存A中。当线程A和线程B需要通信时，线程A首先会把自己本地内存中修改后的x值刷新到主内存中，此时主内存中的x值变为了1。随后，线程B到主内存中去读取线程A更新后的x值，此时线程B的本地内存的x值也变为了1。</p><p style="margin-top: 0px; margin-bottom: 15px; padding: 0px; border: 0px; float: none; font-size: 14px; line-height: 1.8; clear: none; width: 610px; font-family: Helvetica, &quot;Open Sans&quot;, Arial, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, 微软雅黑, STHeiti, &quot;WenQuanYi Micro Hei&quot;, SimSun, sans-serif; white-space: normal; background-color: rgb(255, 255, 255);">从整体来看，这两个步骤实质上是线程A在向线程B发送消息，而且这个通信过程必须要经过主内存。JMM通过控制主内存与每个线程的本地内存之间的交互，来为java程序员提供内存可见性保证。</p><p><br/></p>(String), 32(Integer), 0(Integer), 理解Java内存模型（一）(String), 290(String)
2017-09-14 21:40:33.318 DEBUG 8388 --- [http-nio-8080-exec-6] p.p.blog.repository.BlogRepo.update      : <==    Updates: 1
2017-09-14 21:40:33.321 DEBUG 8388 --- [http-nio-8080-exec-6] p.p.blog.repository.CommentRepo.list     : ==>  Preparing: select * from t_comment WHERE blogId=? and state=? order by commentDate desc 
2017-09-14 21:40:33.321 DEBUG 8388 --- [http-nio-8080-exec-6] p.p.blog.repository.CommentRepo.list     : ==> Parameters: 290(String), 1(Integer)
2017-09-14 21:40:33.323 DEBUG 8388 --- [http-nio-8080-exec-6] p.p.blog.repository.CommentRepo.list     : <==      Total: 0
2017-09-14 21:40:41.310 DEBUG 8388 --- [http-nio-8080-exec-1] p.p.blog.repository.BlogRepo.findById    : ==>  Preparing: select * from t_blog where id=? 
2017-09-14 21:40:41.314 DEBUG 8388 --- [http-nio-8080-exec-1] p.p.blog.repository.BlogRepo.findById    : ==> Parameters: 289(String)
2017-09-14 21:40:41.318 DEBUG 8388 --- [http-nio-8080-exec-1] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 21:40:41.319 DEBUG 8388 --- [http-nio-8080-exec-1] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 24(String)
2017-09-14 21:40:41.321 DEBUG 8388 --- [http-nio-8080-exec-1] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 21:40:41.321 DEBUG 8388 --- [http-nio-8080-exec-1] p.p.blog.repository.BlogRepo.findById    : <==      Total: 1
2017-09-14 21:40:41.325 DEBUG 8388 --- [http-nio-8080-exec-1] p.p.blog.repository.BlogRepo.update      : ==>  Preparing: update t_blog SET title=?, summary=?, typeId=?, content=?, clickHit=?, replyHit=?, keyWord=? where id=? 
2017-09-14 21:40:41.327 DEBUG 8388 --- [http-nio-8080-exec-1] p.p.blog.repository.BlogRepo.update      : ==> Parameters: JVM以及垃圾回收器的工作原理(String), 转自：Nie&GaoJVMJava 虚拟机 Java 虚拟机（Java virtual machine，JVM）是运行 Java 程序必不可少的机制。JVM实现了Java语言最重要的特征：即平台无关性。原理：编译后的 Java 程序指令并不直接在硬件系统的 CPU 上执行，而是由 JVM 执行。JVM屏蔽了与(String), 24(String), <h1 style="box-sizing: border-box; font-size: 2.25em; margin: 1.5em 0px 0px; font-family: -apple-system, &quot;Helvetica Neue&quot;, Helvetica, Arial, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;WenQuanYi Micro Hei&quot;, &quot;Microsoft Yahei&quot;, sans-serif; font-weight: 500; line-height: 1.2; color: rgb(51, 51, 51); border-bottom: 1px solid rgb(238, 238, 238); padding-bottom: 10px; white-space: normal; background-color: rgb(255, 255, 255);"><span style="font-size: 16px; font-style: italic; font-weight: bold; line-height: 18px;">转自：<a href="https://uestc-dpz.github.io/blog/2015/03/05/JVM%E4%BB%A5%E5%8F%8A%E5%9E%83%E5%9C%BE%E5%9B%9E%E6%94%B6%E5%99%A8%E7%9A%84%E5%B7%A5%E4%BD%9C%E5%8E%9F%E7%90%86.html" target="_self" title="Nie&amp;Gao">Nie&amp;Gao</a></span></h1><h1 style="box-sizing: border-box; font-size: 2.25em; margin: 1.5em 0px 0px; font-family: -apple-system, &quot;Helvetica Neue&quot;, Helvetica, Arial, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;WenQuanYi Micro Hei&quot;, &quot;Microsoft Yahei&quot;, sans-serif; font-weight: 500; line-height: 1.2; color: rgb(51, 51, 51); border-bottom: 1px solid rgb(238, 238, 238); padding-bottom: 10px; white-space: normal; background-color: rgb(255, 255, 255);">JVM</h1><p style="box-sizing: border-box; margin-top: 1.5em; margin-bottom: 1.5em; color: rgb(51, 51, 51); font-family: -apple-system, &quot;Helvetica Neue&quot;, Helvetica, Arial, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;WenQuanYi Micro Hei&quot;, &quot;Microsoft Yahei&quot;, sans-serif; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);">Java 虚拟机 Java 虚拟机（Java virtual machine，JVM）是运行 Java 程序必不可少的机制。JVM实现了Java语言最重要的特征：即平台无关性。原理：编译后的 Java 程序指令并不直接在硬件系统的 CPU 上执行，而是由 JVM 执行。JVM屏蔽了与具体平台相关的信息，使Java语言编译程序只需要生成在JVM上运行的目标字节码（.class）,就可以在多种平台上不加修改地运行。Java 虚拟机在执行字节码时，把字节码解释成具体平台上的机器指令执行。因此实现java平台无关性。它是 Java 程序能在多平台间进行无缝移植的可靠保证，同时也是 Java 程序的安全检验引擎（还进行安全检查）。</p><p style="box-sizing: border-box; margin-top: 1.5em; margin-bottom: 1.5em; color: rgb(51, 51, 51); font-family: -apple-system, &quot;Helvetica Neue&quot;, Helvetica, Arial, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;WenQuanYi Micro Hei&quot;, &quot;Microsoft Yahei&quot;, sans-serif; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);">JVM 是 编译后的 Java 程序（.class文件）和硬件系统之间的接口 （ 编译后：javac 是收录于 JDK 中的 Java 语言编译器。该工具可以将后缀名为. java 的源文件编译为后缀名为. class 的可以运行于 Java 虚拟机的字节码。）</p><hr/><p style="box-sizing: border-box; margin-top: 1.5em; margin-bottom: 1.5em; color: rgb(51, 51, 51); font-family: -apple-system, &quot;Helvetica Neue&quot;, Helvetica, Arial, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;WenQuanYi Micro Hei&quot;, &quot;Microsoft Yahei&quot;, sans-serif; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);">JVM architecture:<br/><span class="img-wrap" style="box-sizing: border-box;"><img src="http://blogcc.cc/static/ueditor/themes/default/images/spacer.gif"/></span><br/>图片摘自&nbsp;<a href="http://javapapers.com/java/java-garbage-collection-introduction/" target="_blank" style="box-sizing: border-box; background: transparent; color: rgb(0, 154, 97); text-decoration-line: none; outline: 0px;">http://javapapers.com/java/ja...</a></p><p style="box-sizing: border-box; margin-top: 1.5em; margin-bottom: 1.5em; color: rgb(51, 51, 51); font-family: -apple-system, &quot;Helvetica Neue&quot;, Helvetica, Arial, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;WenQuanYi Micro Hei&quot;, &quot;Microsoft Yahei&quot;, sans-serif; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);">JVM = 类加载器 classloader + 执行引擎 execution engine + 运行时数据区域 runtime data areaclassloader 把硬盘上的class 文件加载到JVM中的运行时数据区域, 但是它不负责这个类文件能否执行，而这个是 执行引擎 负责的。</p><hr/><h2 style="box-sizing: border-box; font-family: -apple-system, &quot;Helvetica Neue&quot;, Helvetica, Arial, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;WenQuanYi Micro Hei&quot;, &quot;Microsoft Yahei&quot;, sans-serif; font-weight: 500; line-height: 1.2; color: rgb(51, 51, 51); margin: 1.5em 0px 0px; font-size: 1.75em; border-bottom: 1px solid rgb(238, 238, 238); padding-bottom: 10px; white-space: normal; background-color: rgb(255, 255, 255);">classloader</h2><p style="box-sizing: border-box; margin-top: 1.5em; margin-bottom: 1.5em; color: rgb(51, 51, 51); font-family: -apple-system, &quot;Helvetica Neue&quot;, Helvetica, Arial, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;WenQuanYi Micro Hei&quot;, &quot;Microsoft Yahei&quot;, sans-serif; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);">作用：装载.class文件classloader 有两种装载class的方式 （时机）：</p><ol style="box-sizing: border-box; margin-top: 1.5em; margin-bottom: 1.5em; margin-left: 3em; padding-left: 0px; color: rgb(51, 51, 51); font-family: -apple-system, &quot;Helvetica Neue&quot;, Helvetica, Arial, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;WenQuanYi Micro Hei&quot;, &quot;Microsoft Yahei&quot;, sans-serif; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);" class=" list-paddingleft-2"><li><p style="box-sizing: border-box; margin-top: 0px; margin-bottom: 0px;">隐式：运行过程中，碰到new方式生成对象时，隐式调用classLoader到JVM</p></li><li><p style="box-sizing: border-box; margin-top: 0px; margin-bottom: 0px;">显式：通过class.forname()动态加载</p></li></ol><p style="box-sizing: border-box; margin-top: 1.5em; margin-bottom: 1.5em; color: rgb(51, 51, 51); font-family: -apple-system, &quot;Helvetica Neue&quot;, Helvetica, Arial, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;WenQuanYi Micro Hei&quot;, &quot;Microsoft Yahei&quot;, sans-serif; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);"><strong style="box-sizing: border-box;">双亲委派模型（Parent Delegation Model）</strong>：</p><p style="box-sizing: border-box; margin-top: 1.5em; margin-bottom: 1.5em; color: rgb(51, 51, 51); font-family: -apple-system, &quot;Helvetica Neue&quot;, Helvetica, Arial, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;WenQuanYi Micro Hei&quot;, &quot;Microsoft Yahei&quot;, sans-serif; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);">类的加载过程采用双亲委托机制，这种机制能更好的保证 Java 平台的安全。<br/>该模型要求除了顶层的Bootstrap class loader启动类加载器外，其余的类加载器都应当有自己的<code style="box-sizing: border-box; font-family: &quot;Source Code Pro&quot;, Consolas, Menlo, Monaco, &quot;Courier New&quot;, monospace; font-size: 0.93em; padding: 2px 4px; color: rgb(199, 37, 78); background-color: rgb(249, 242, 244); border-radius: 4px;">父类加载器</code>。子类加载器和父类加载器<code style="box-sizing: border-box; font-family: &quot;Source Code Pro&quot;, Consolas, Menlo, Monaco, &quot;Courier New&quot;, monospace; font-size: 0.93em; padding: 2px 4px; color: rgb(199, 37, 78); background-color: rgb(249, 242, 244); border-radius: 4px;">不是以继承（Inheritance）的关系</code>来实现，而是通过<code style="box-sizing: border-box; font-family: &quot;Source Code Pro&quot;, Consolas, Menlo, Monaco, &quot;Courier New&quot;, monospace; font-size: 0.93em; padding: 2px 4px; color: rgb(199, 37, 78); background-color: rgb(249, 242, 244); border-radius: 4px;">组合（Composition）关系</code>来复用父加载器的代码。每个类加载器都有自己的命名空间（由该加载器及所有父类加载器所加载的类组成，在同一个命名空间中，不会出现类的完整名字（包括类的包名）相同的两个类；在不同的命名空间中，有可能会出现类的完整名字（包括类的包名）相同的两个类）</p><p style="box-sizing: border-box; margin-top: 1.5em; margin-bottom: 1.5em; color: rgb(51, 51, 51); font-family: -apple-system, &quot;Helvetica Neue&quot;, Helvetica, Arial, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;WenQuanYi Micro Hei&quot;, &quot;Microsoft Yahei&quot;, sans-serif; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);">双亲委派模型的<strong style="box-sizing: border-box;">工作过程</strong>为：</p><p style="box-sizing: border-box; margin-top: 1.5em; margin-bottom: 1.5em; color: rgb(51, 51, 51); font-family: -apple-system, &quot;Helvetica Neue&quot;, Helvetica, Arial, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;WenQuanYi Micro Hei&quot;, &quot;Microsoft Yahei&quot;, sans-serif; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);">1.当前 ClassLoader 首先从自己已经加载的类中查询是否此类已经加载，如果已经加载则直接返回原来已经加载的类。</p><pre class="hljs" style="box-sizing: border-box; overflow: auto; font-family: &quot;Source Code Pro&quot;, Consolas, Menlo, Monaco, &quot;Courier New&quot;, monospace; font-size: 0.93em; padding: 1em; margin-bottom: 1.5em; line-height: 1.3; word-break: break-all; word-wrap: break-word; color: rgb(51, 51, 51); border: none; border-radius: 4px; max-height: 35em; position: relative; margin-top: 0px !important;">每个类加载器都有自己的加载缓存，当一个类被加载了以后就会放入缓存，
等下次加载的时候就可以直接返回了。</pre><p style="box-sizing: border-box; margin-top: 1.5em; margin-bottom: 1.5em; color: rgb(51, 51, 51); font-family: -apple-system, &quot;Helvetica Neue&quot;, Helvetica, Arial, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;WenQuanYi Micro Hei&quot;, &quot;Microsoft Yahei&quot;, sans-serif; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);">2.当前 classLoader 的缓存中没有找到被加载的类的时候，委托父类加载器去加载，父类加载器采用同样的策略，首先查看自己的缓存，然后委托父类的父类去加载，一直到 bootstrap ClassLoader.</p><ol style="box-sizing: border-box; margin-top: 1.5em; margin-bottom: 1.5em; margin-left: 3em; padding-left: 0px; color: rgb(51, 51, 51); font-family: -apple-system, &quot;Helvetica Neue&quot;, Helvetica, Arial, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;WenQuanYi Micro Hei&quot;, &quot;Microsoft Yahei&quot;, sans-serif; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);" class=" list-paddingleft-2"><li><p style="box-sizing: border-box; margin-top: 0px; margin-bottom: 0px;">当所有的父类加载器都没有加载的时候，再由当前的类加载器加载，并将其放入它自己的缓存中，以便下次有加载请求的时候直接返回。</p></li></ol><p style="box-sizing: border-box; margin-top: 1.5em; margin-bottom: 1.5em; color: rgb(51, 51, 51); font-family: -apple-system, &quot;Helvetica Neue&quot;, Helvetica, Arial, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;WenQuanYi Micro Hei&quot;, &quot;Microsoft Yahei&quot;, sans-serif; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);"><strong style="box-sizing: border-box;">使用这种模型来组织类加载器之间的关系的好处:</strong><br/>主要是为了<code style="box-sizing: border-box; font-family: &quot;Source Code Pro&quot;, Consolas, Menlo, Monaco, &quot;Courier New&quot;, monospace; font-size: 0.93em; padding: 2px 4px; color: rgb(199, 37, 78); background-color: rgb(249, 242, 244); border-radius: 4px;">安全性</code>，避免用户自己编写的类动态替换 Java 的一些核心类，比如 String，同时也避免了<code style="box-sizing: border-box; font-family: &quot;Source Code Pro&quot;, Consolas, Menlo, Monaco, &quot;Courier New&quot;, monospace; font-size: 0.93em; padding: 2px 4px; color: rgb(199, 37, 78); background-color: rgb(249, 242, 244); border-radius: 4px;">重复加载</code>，因为 JVM 中区分不同类，不仅仅是根据类名，相同的 class 文件被不同的 ClassLoader 加载就是不同的两个类，如果相互转型的话会抛java.lang.ClassCaseException.</p><p style="box-sizing: border-box; margin-top: 1.5em; margin-bottom: 1.5em; color: rgb(51, 51, 51); font-family: -apple-system, &quot;Helvetica Neue&quot;, Helvetica, Arial, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;WenQuanYi Micro Hei&quot;, &quot;Microsoft Yahei&quot;, sans-serif; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);">类加载器 classloader 是具有层次结构的，也就是父子关系。其中，Bootstrap 是所有类加载器的父亲。如下图所示：<span class="img-wrap" style="box-sizing: border-box;"><img src="http://blogcc.cc/static/ueditor/themes/default/images/spacer.gif"/></span><br/><strong style="box-sizing: border-box;">Bootstrap class loader：</strong>&nbsp;父类<br/>当运行 java 虚拟机时，这个类加载器被创建，它负责加载虚拟机的核心类库，如 java.lang.* 等。例如 java.lang.Object 就是由根类加载器加载的。需要注意的是，这个类加载器不是用 java 语言写的，而是用 C/C++ 写的。<br/><strong style="box-sizing: border-box;">Extension class loader:</strong><br/>这个加载器加载出了基本 API 之外的一些拓展类。<br/><strong style="box-sizing: border-box;">AppClass Loader:</strong><br/>加载应用程序和程序员自定义的类。</p><p style="box-sizing: border-box; margin-top: 1.5em; margin-bottom: 1.5em; color: rgb(51, 51, 51); font-family: -apple-system, &quot;Helvetica Neue&quot;, Helvetica, Arial, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;WenQuanYi Micro Hei&quot;, &quot;Microsoft Yahei&quot;, sans-serif; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);">除了以上虚拟机自带的加载器以外，用户还可以定制自己的类加载器（<strong style="box-sizing: border-box;">User-defined Class Loader</strong>）。Java 提供了抽象类 java.lang.ClassLoader，所有用户自定义的类加载器应该继承 ClassLoader 类。</p><p style="box-sizing: border-box; margin-top: 1.5em; margin-bottom: 1.5em; color: rgb(51, 51, 51); font-family: -apple-system, &quot;Helvetica Neue&quot;, Helvetica, Arial, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;WenQuanYi Micro Hei&quot;, &quot;Microsoft Yahei&quot;, sans-serif; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);">这是JVM分工自治生态系统的一个很好的体现。</p><p style="box-sizing: border-box; margin-top: 1.5em; margin-bottom: 1.5em; color: rgb(51, 51, 51); font-family: -apple-system, &quot;Helvetica Neue&quot;, Helvetica, Arial, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;WenQuanYi Micro Hei&quot;, &quot;Microsoft Yahei&quot;, sans-serif; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);"><a href="http://www.importnew.com/6581.html" target="_blank" style="box-sizing: border-box; background: transparent; color: rgb(0, 154, 97); text-decoration-line: none; outline: 0px;">http://www.importnew.com/6581...</a></p><hr/><h2 style="box-sizing: border-box; font-family: -apple-system, &quot;Helvetica Neue&quot;, Helvetica, Arial, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;WenQuanYi Micro Hei&quot;, &quot;Microsoft Yahei&quot;, sans-serif; font-weight: 500; line-height: 1.2; color: rgb(51, 51, 51); margin: 1.5em 0px 0px; font-size: 1.75em; border-bottom: 1px solid rgb(238, 238, 238); padding-bottom: 10px; white-space: normal; background-color: rgb(255, 255, 255);">执行引擎</h2><p style="box-sizing: border-box; margin-top: 1.5em; margin-bottom: 1.5em; color: rgb(51, 51, 51); font-family: -apple-system, &quot;Helvetica Neue&quot;, Helvetica, Arial, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;WenQuanYi Micro Hei&quot;, &quot;Microsoft Yahei&quot;, sans-serif; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);">作用： 执行字节码，或者执行本地方法</p><h2 style="box-sizing: border-box; font-family: -apple-system, &quot;Helvetica Neue&quot;, Helvetica, Arial, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;WenQuanYi Micro Hei&quot;, &quot;Microsoft Yahei&quot;, sans-serif; font-weight: 500; line-height: 1.2; color: rgb(51, 51, 51); margin: 1.5em 0px 0px; font-size: 1.75em; border-bottom: 1px solid rgb(238, 238, 238); padding-bottom: 10px; white-space: normal; background-color: rgb(255, 255, 255);">runtime data area</h2><p style="box-sizing: border-box; margin-top: 1.5em; margin-bottom: 1.5em; color: rgb(51, 51, 51); font-family: -apple-system, &quot;Helvetica Neue&quot;, Helvetica, Arial, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;WenQuanYi Micro Hei&quot;, &quot;Microsoft Yahei&quot;, sans-serif; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);">JVM 运行时数据区 (JVM Runtime Area) 其实就是指 JVM 在运行期间，其对JVM内存空间的划分和分配。JVM在运行时将数据划分为了6个区域来存储。</p><p style="box-sizing: border-box; margin-top: 1.5em; margin-bottom: 1.5em; color: rgb(51, 51, 51); font-family: -apple-system, &quot;Helvetica Neue&quot;, Helvetica, Arial, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;WenQuanYi Micro Hei&quot;, &quot;Microsoft Yahei&quot;, sans-serif; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);">程序员写的所有程序都被加载到<code style="box-sizing: border-box; font-family: &quot;Source Code Pro&quot;, Consolas, Menlo, Monaco, &quot;Courier New&quot;, monospace; font-size: 0.93em; padding: 2px 4px; color: rgb(199, 37, 78); background-color: rgb(249, 242, 244); border-radius: 4px;">运行时数据区域</code>中，不同类别存放在heap, java stack, native method stack, PC register, method area.</p><p style="box-sizing: border-box; margin-top: 1.5em; margin-bottom: 1.5em; color: rgb(51, 51, 51); font-family: -apple-system, &quot;Helvetica Neue&quot;, Helvetica, Arial, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;WenQuanYi Micro Hei&quot;, &quot;Microsoft Yahei&quot;, sans-serif; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);">下面对各个部分的功能和存储的内容进行描述：</p><p style="box-sizing: border-box; margin-top: 1.5em; margin-bottom: 1.5em; color: rgb(51, 51, 51); font-family: -apple-system, &quot;Helvetica Neue&quot;, Helvetica, Arial, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;WenQuanYi Micro Hei&quot;, &quot;Microsoft Yahei&quot;, sans-serif; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);"><span class="img-wrap" style="box-sizing: border-box;"><img src="http://blogcc.cc/static/ueditor/themes/default/images/spacer.gif"/></span></p><p style="box-sizing: border-box; margin-top: 1.5em; margin-bottom: 1.5em; color: rgb(51, 51, 51); font-family: -apple-system, &quot;Helvetica Neue&quot;, Helvetica, Arial, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;WenQuanYi Micro Hei&quot;, &quot;Microsoft Yahei&quot;, sans-serif; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);">1、<strong style="box-sizing: border-box;">PC程序计数器</strong>：一块较小的内存空间，可以看做是当前<code style="box-sizing: border-box; font-family: &quot;Source Code Pro&quot;, Consolas, Menlo, Monaco, &quot;Courier New&quot;, monospace; font-size: 0.93em; padding: 2px 4px; color: rgb(199, 37, 78); background-color: rgb(249, 242, 244); border-radius: 4px;">线程</code>所执行的字节码的行号指示器, NAMELY存储每个线程下一步将执行的JVM指令，如该方法为native的，则PC寄存器中不存储任何信息。Java 的多线程机制离不开程序计数器，每个线程都有一个自己的PC，以便完成不同线程上下文环境的切换。</p><p style="box-sizing: border-box; margin-top: 1.5em; margin-bottom: 1.5em; color: rgb(51, 51, 51); font-family: -apple-system, &quot;Helvetica Neue&quot;, Helvetica, Arial, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;WenQuanYi Micro Hei&quot;, &quot;Microsoft Yahei&quot;, sans-serif; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);">2、<strong style="box-sizing: border-box;">java虚拟机栈</strong>：与 PC 一样，java 虚拟机栈也是线程私有的。每一个 JVM 线程都有自己的 java 虚拟机栈，这个栈与线程同时创建，它的生命周期与线程相同。虚拟机栈描述的是<code style="box-sizing: border-box; font-family: &quot;Source Code Pro&quot;, Consolas, Menlo, Monaco, &quot;Courier New&quot;, monospace; font-size: 0.93em; padding: 2px 4px; color: rgb(199, 37, 78); background-color: rgb(249, 242, 244); border-radius: 4px;">Java 方法执行的内存模型</code>：每个方法被执行的时候都会同时创建一个<code style="box-sizing: border-box; font-family: &quot;Source Code Pro&quot;, Consolas, Menlo, Monaco, &quot;Courier New&quot;, monospace; font-size: 0.93em; padding: 2px 4px; color: rgb(199, 37, 78); background-color: rgb(249, 242, 244); border-radius: 4px;">栈帧（Stack Frame）</code>用于存储局部变量表、操作数栈、动态链接、方法出口等信息。<code style="box-sizing: border-box; font-family: &quot;Source Code Pro&quot;, Consolas, Menlo, Monaco, &quot;Courier New&quot;, monospace; font-size: 0.93em; padding: 2px 4px; color: rgb(199, 37, 78); background-color: rgb(249, 242, 244); border-radius: 4px;">每一个方法被调用直至执行完成的过程就对应着一个栈帧在虚拟机栈中从入栈到出栈的过程</code>。</p><p style="box-sizing: border-box; margin-top: 1.5em; margin-bottom: 1.5em; color: rgb(51, 51, 51); font-family: -apple-system, &quot;Helvetica Neue&quot;, Helvetica, Arial, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;WenQuanYi Micro Hei&quot;, &quot;Microsoft Yahei&quot;, sans-serif; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);">3、<strong style="box-sizing: border-box;">本地方法栈</strong>：与虚拟机栈的作用相似，虚拟机栈为虚拟机执行执行java方法服务，而本地方法栈则为虚拟机使用到的本地方法服务。</p><p style="box-sizing: border-box; margin-top: 1.5em; margin-bottom: 1.5em; color: rgb(51, 51, 51); font-family: -apple-system, &quot;Helvetica Neue&quot;, Helvetica, Arial, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;WenQuanYi Micro Hei&quot;, &quot;Microsoft Yahei&quot;, sans-serif; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);">4、<strong style="box-sizing: border-box;">Java堆</strong>：被所有线程共享的一块存储区域，在虚拟机启动时创建，它是JVM用来存储对象实例以及数组值的区域，可以认为Java中所有通过new创建的对象的内存都在此分配。</p><p style="box-sizing: border-box; margin-top: 1.5em; margin-bottom: 1.5em; color: rgb(51, 51, 51); font-family: -apple-system, &quot;Helvetica Neue&quot;, Helvetica, Arial, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;WenQuanYi Micro Hei&quot;, &quot;Microsoft Yahei&quot;, sans-serif; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);">Java堆在JVM启动的时候就被创建，堆中储存了各种对象，这些对象被自动管理内存系统（Automatic Storage Management System，也即是常说的 “Garbage Collector（垃圾回收器）”）所管理。这些对象无需、也无法显示地被销毁。</p><p style="box-sizing: border-box; margin-top: 1.5em; margin-bottom: 1.5em; color: rgb(51, 51, 51); font-family: -apple-system, &quot;Helvetica Neue&quot;, Helvetica, Arial, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;WenQuanYi Micro Hei&quot;, &quot;Microsoft Yahei&quot;, sans-serif; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);">JVM将Heap分为两块：新生代New Generation和旧生代Old Generation</p><p style="box-sizing: border-box; margin-top: 1.5em; margin-bottom: 1.5em; color: rgb(51, 51, 51); font-family: -apple-system, &quot;Helvetica Neue&quot;, Helvetica, Arial, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;WenQuanYi Micro Hei&quot;, &quot;Microsoft Yahei&quot;, sans-serif; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);">Note:</p><ul style="box-sizing: border-box; margin-top: 1.5em; margin-bottom: 1.5em; margin-left: 3em; padding-left: 0px; color: rgb(51, 51, 51); font-family: -apple-system, &quot;Helvetica Neue&quot;, Helvetica, Arial, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;WenQuanYi Micro Hei&quot;, &quot;Microsoft Yahei&quot;, sans-serif; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);" class=" list-paddingleft-2"><li><p style="box-sizing: border-box; margin-top: 0px; margin-bottom: 0px;">堆在JVM是所有线程共享的，因此在其上进行对象内存的分配均需要进行加锁，这也是new开销比较大的原因。</p></li><li><p style="box-sizing: border-box; margin-top: 0px; margin-bottom: 0px;">鉴于上面的原因，Sun Hotspot JVM为了提升对象内存分配的效率，对于所创建的线程都会分配一块独立的空间，这块空间又称为TLAB</p></li><li><p style="box-sizing: border-box; margin-top: 0px; margin-bottom: 0px;">TLAB仅作用于新生代的Eden Space，因此在编写Java程序时，通常多个小的对象比大的对象分配起来更加高效</p></li></ul><p style="box-sizing: border-box; margin-top: 1.5em; margin-bottom: 1.5em; color: rgb(51, 51, 51); font-family: -apple-system, &quot;Helvetica Neue&quot;, Helvetica, Arial, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;WenQuanYi Micro Hei&quot;, &quot;Microsoft Yahei&quot;, sans-serif; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);">5、<strong style="box-sizing: border-box;">方法区</strong><br/>方法区和堆区域一样，是各个线程共享的内存区域，它用于存储每一个<code style="box-sizing: border-box; font-family: &quot;Source Code Pro&quot;, Consolas, Menlo, Monaco, &quot;Courier New&quot;, monospace; font-size: 0.93em; padding: 2px 4px; color: rgb(199, 37, 78); background-color: rgb(249, 242, 244); border-radius: 4px;">类的结构信息</code>，例如运行时常量池，成员变量和方法数据，构造函数和普通函数的字节码内容，还包括一些在类、实例、接口初始化时用到的特殊方法。当开发人员在程序中通过Class对象中的getName、isInstance等方法获取信息时，这些数据都来自方法区。</p><p style="box-sizing: border-box; margin-top: 1.5em; margin-bottom: 1.5em; color: rgb(51, 51, 51); font-family: -apple-system, &quot;Helvetica Neue&quot;, Helvetica, Arial, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;WenQuanYi Micro Hei&quot;, &quot;Microsoft Yahei&quot;, sans-serif; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);">方法区也是全局共享的，在虚拟机启动时候创建。在一定条件下它也会被GC。这块区域对应Permanent Generation 持久代。 XX：PermSize指定大小。</p><p style="box-sizing: border-box; margin-top: 1.5em; margin-bottom: 1.5em; color: rgb(51, 51, 51); font-family: -apple-system, &quot;Helvetica Neue&quot;, Helvetica, Arial, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;WenQuanYi Micro Hei&quot;, &quot;Microsoft Yahei&quot;, sans-serif; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);">6、<strong style="box-sizing: border-box;">运行时常量池</strong><br/>其空间从方法区中分配，存放的为类中固定的常量信息、方法和域的引用信息。</p><hr/><h1 style="box-sizing: border-box; font-size: 2.25em; margin: 1.5em 0px 0px; font-family: -apple-system, &quot;Helvetica Neue&quot;, Helvetica, Arial, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;WenQuanYi Micro Hei&quot;, &quot;Microsoft Yahei&quot;, sans-serif; font-weight: 500; line-height: 1.2; color: rgb(51, 51, 51); border-bottom: 1px solid rgb(238, 238, 238); padding-bottom: 10px; white-space: normal; background-color: rgb(255, 255, 255);">GC</h1><blockquote style="box-sizing: border-box; padding: 10px 20px; margin: 1.5em 0px; font-size: 14px; border-left: 2px solid rgb(0, 154, 97); background: rgb(246, 246, 246); color: rgb(85, 85, 85); font-family: -apple-system, &quot;Helvetica Neue&quot;, Helvetica, Arial, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;WenQuanYi Micro Hei&quot;, &quot;Microsoft Yahei&quot;, sans-serif; white-space: normal;"><p style="box-sizing: border-box; margin-top: 0px; margin-bottom: 0px;"><a href="http://javapapers.com/java/how-java-garbage-collection-works/" target="_blank" style="box-sizing: border-box; background: transparent; color: rgb(0, 154, 97); text-decoration-line: none; outline: 0px;">javapapers</a></p></blockquote><p style="box-sizing: border-box; margin-top: 1.5em; margin-bottom: 1.5em; color: rgb(51, 51, 51); font-family: -apple-system, &quot;Helvetica Neue&quot;, Helvetica, Arial, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;WenQuanYi Micro Hei&quot;, &quot;Microsoft Yahei&quot;, sans-serif; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);">Java garbage collection is an automatic process to manage the runtime memory used by programs. By doing it automatic JVM relieves the programmer of the overhead of assigning and freeing up memory resources in a program.java 与 C语言相比的一个优势是，可以通过自己的JVM自动分配和回收内存空间。</p><p style="box-sizing: border-box; margin-top: 1.5em; margin-bottom: 1.5em; color: rgb(51, 51, 51); font-family: -apple-system, &quot;Helvetica Neue&quot;, Helvetica, Arial, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;WenQuanYi Micro Hei&quot;, &quot;Microsoft Yahei&quot;, sans-serif; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);">何为GC？<br/>垃圾回收机制是由垃圾收集器Garbage Collection GC来实现的，GC是后台的<strong style="box-sizing: border-box;">守护进程</strong>。它的特别之处是它是一个低优先级进程，但是可以根据内存的使用情况动态的调整他的优先级。因此，它是在内存中低到一定限度时才会自动运行，从而实现对内存的回收。<strong style="box-sizing: border-box;">这就是垃圾回收的时间不确定的原因。</strong></p><p style="box-sizing: border-box; margin-top: 1.5em; margin-bottom: 1.5em; color: rgb(51, 51, 51); font-family: -apple-system, &quot;Helvetica Neue&quot;, Helvetica, Arial, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;WenQuanYi Micro Hei&quot;, &quot;Microsoft Yahei&quot;, sans-serif; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);">为何要这样设计：因为GC也是进程，也要消耗CPU等资源，如果GC执行过于频繁会对java的程序的执行产生较大的影响（java解释器本来就不快），因此JVM的设计者们选着了不定期的gc。</p><p style="box-sizing: border-box; margin-top: 1.5em; margin-bottom: 1.5em; color: rgb(51, 51, 51); font-family: -apple-system, &quot;Helvetica Neue&quot;, Helvetica, Arial, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;WenQuanYi Micro Hei&quot;, &quot;Microsoft Yahei&quot;, sans-serif; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);">GC有关的是: runtime data area 中的 heap（对象实例会存储在这里） 和 gabage collector方法。<br/>程序运行期间，所有对象实例存储在运行时数据区域的heap中，当一个对象不再被引用（使用），它就需要被收回。在GC过程中，这些不再被使用的对象从heap中收回，这样就会有空间被循环利用。<br/>GC为内存中不再使用的对象进行回收，GC中调用回收的<code style="box-sizing: border-box; font-family: &quot;Source Code Pro&quot;, Consolas, Menlo, Monaco, &quot;Courier New&quot;, monospace; font-size: 0.93em; padding: 2px 4px; color: rgb(199, 37, 78); background-color: rgb(249, 242, 244); border-radius: 4px;">方法</code>--<code style="box-sizing: border-box; font-family: &quot;Source Code Pro&quot;, Consolas, Menlo, Monaco, &quot;Courier New&quot;, monospace; font-size: 0.93em; padding: 2px 4px; color: rgb(199, 37, 78); background-color: rgb(249, 242, 244); border-radius: 4px;">收集器garbage collector</code>. 由于GC要消耗一些资源和时间，Java 在对对象的生命周期特征（eden or survivor）进行分析之后，采用了<code style="box-sizing: border-box; font-family: &quot;Source Code Pro&quot;, Consolas, Menlo, Monaco, &quot;Courier New&quot;, monospace; font-size: 0.93em; padding: 2px 4px; color: rgb(199, 37, 78); background-color: rgb(249, 242, 244); border-radius: 4px;">分代</code>的方式进行对象的收集，以缩短GC对应用造成的暂停。</p><p style="box-sizing: border-box; margin-top: 1.5em; margin-bottom: 1.5em; color: rgb(51, 51, 51); font-family: -apple-system, &quot;Helvetica Neue&quot;, Helvetica, Arial, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;WenQuanYi Micro Hei&quot;, &quot;Microsoft Yahei&quot;, sans-serif; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);"><strong style="box-sizing: border-box;">在垃圾回收器回收内存之前，还需要一些清理工作。</strong><br/>因为垃圾回收gc只能回收通过new关键字申请的内存（在堆上），但是堆上的内存并不完全是通过new申请分配的。还有一些本地方法（一般是调用的C方法）。这部分“特殊的内存”如果不手动释放，就会导致内存泄露，gc是无法回收这部分内存的。<br/>所以需要在finalize中用本地方法(native method)如free操作等，再使用gc方法。显示的GC方法是<code style="box-sizing: border-box; font-family: &quot;Source Code Pro&quot;, Consolas, Menlo, Monaco, &quot;Courier New&quot;, monospace; font-size: 0.93em; padding: 2px 4px; color: rgb(199, 37, 78); background-color: rgb(249, 242, 244); border-radius: 4px;">system.gc()</code></p><h2 style="box-sizing: border-box; font-family: -apple-system, &quot;Helvetica Neue&quot;, Helvetica, Arial, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;WenQuanYi Micro Hei&quot;, &quot;Microsoft Yahei&quot;, sans-serif; font-weight: 500; line-height: 1.2; color: rgb(51, 51, 51); margin: 1.5em 0px 0px; font-size: 1.75em; border-bottom: 1px solid rgb(238, 238, 238); padding-bottom: 10px; white-space: normal; background-color: rgb(255, 255, 255);">垃圾回收技术</h2><p style="box-sizing: border-box; margin-top: 1.5em; margin-bottom: 1.5em; color: rgb(51, 51, 51); font-family: -apple-system, &quot;Helvetica Neue&quot;, Helvetica, Arial, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;WenQuanYi Micro Hei&quot;, &quot;Microsoft Yahei&quot;, sans-serif; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);">方法一：引用计数法。简单但速度很慢。缺陷是：不能处理循环引用的情况。<br/>方法二：停止-复制(stop and copy)。效率低，需要的空间大，优点，不会产生碎片。<br/>方法三：标记 - 清除算法 (mark and sweep)。速度较快，占用空间少，标记清除后会产生大量的碎片。</p><p style="box-sizing: border-box; margin-top: 1.5em; margin-bottom: 1.5em; color: rgb(51, 51, 51); font-family: -apple-system, &quot;Helvetica Neue&quot;, Helvetica, Arial, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;WenQuanYi Micro Hei&quot;, &quot;Microsoft Yahei&quot;, sans-serif; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);">JAVA虚拟机中是如何做的？&nbsp;java的做法很聪明，我们称之为&quot;自适应&quot;的垃圾回收器，或者是&quot;自适应的、分代的、停止-复制、标记-清扫&quot;式垃圾回收器。它会根据不同的环境和需要选择不同的处理方式。</p><h2 style="box-sizing: border-box; font-family: -apple-system, &quot;Helvetica Neue&quot;, Helvetica, Arial, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;WenQuanYi Micro Hei&quot;, &quot;Microsoft Yahei&quot;, sans-serif; font-weight: 500; line-height: 1.2; color: rgb(51, 51, 51); margin: 1.5em 0px 0px; font-size: 1.75em; border-bottom: 1px solid rgb(238, 238, 238); padding-bottom: 10px; white-space: normal; background-color: rgb(255, 255, 255);">heap组成</h2><p style="box-sizing: border-box; margin-top: 1.5em; margin-bottom: 1.5em; color: rgb(51, 51, 51); font-family: -apple-system, &quot;Helvetica Neue&quot;, Helvetica, Arial, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;WenQuanYi Micro Hei&quot;, &quot;Microsoft Yahei&quot;, sans-serif; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);">由于GC需要消耗一些资源和时间的，Java在对对象的生命周期特征进行分析后，采用了<code style="box-sizing: border-box; font-family: &quot;Source Code Pro&quot;, Consolas, Menlo, Monaco, &quot;Courier New&quot;, monospace; font-size: 0.93em; padding: 2px 4px; color: rgb(199, 37, 78); background-color: rgb(249, 242, 244); border-radius: 4px;">分代</code>的方式来进行对象的收集，即按照新生代、旧生代的方式来对对象进行收集，以尽可能的缩短GC对应用造成的暂停.<br/>heap 的组成有三区域/世代：(可以理解随着时间，对象实例不断变换heap中的等级，有点像年级)</p><ol style="box-sizing: border-box; margin-top: 1.5em; margin-bottom: 1.5em; margin-left: 3em; padding-left: 0px; color: rgb(51, 51, 51); font-family: -apple-system, &quot;Helvetica Neue&quot;, Helvetica, Arial, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;WenQuanYi Micro Hei&quot;, &quot;Microsoft Yahei&quot;, sans-serif; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);" class=" list-paddingleft-2"><li><p style="box-sizing: border-box; margin-top: 0px; margin-bottom: 0px;">新生代 Young Generation</p></li><ol style="list-style-type: lower-alpha;" class=" list-paddingleft-2"><li><p style="box-sizing: border-box; margin-top: 0px; margin-bottom: 0px;">Eden Space 任何新进入运行时数据区域的实例都会存放在此</p></li><li><p style="box-sizing: border-box; margin-top: 0px; margin-bottom: 0px;">S0 Suvivor Space 存在时间较长，经过垃圾回收没有被清除的实例，就从Eden 搬到了S0</p></li><li><p style="box-sizing: border-box; margin-top: 0px; margin-bottom: 0px;">S1 Survivor Space 同理，存在时间更长的实例，就从S0 搬到了S1</p></li></ol><li><p style="box-sizing: border-box; margin-top: 0px; margin-bottom: 0px;">旧生代 Old Generation/tenured</p><pre class="hljs armasm" style="box-sizing: border-box; overflow: auto; font-family: &quot;Source Code Pro&quot;, Consolas, Menlo, Monaco, &quot;Courier New&quot;, monospace; font-size: 0.93em; padding: 1em; margin-bottom: 1.5em; line-height: 1.3; word-break: break-all; word-wrap: break-word; border: none; border-radius: 4px; max-height: 35em; position: relative; margin-top: 0px !important;">同理，存在时间更长的实例，对象多次回收没被清除，就从S1&nbsp;搬到了tenured</pre></li><li><p style="box-sizing: border-box; margin-top: 0px; margin-bottom: 0px;">Perm 存放运行时数据区的方法区</p></li></ol><p style="box-sizing: border-box; margin-top: 1.5em; margin-bottom: 1.5em; color: rgb(51, 51, 51); font-family: -apple-system, &quot;Helvetica Neue&quot;, Helvetica, Arial, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;WenQuanYi Micro Hei&quot;, &quot;Microsoft Yahei&quot;, sans-serif; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);">Java 不同的世代使用不同的 GC 算法。</p><ol style="box-sizing: border-box; margin-top: 1.5em; margin-bottom: 1.5em; margin-left: 3em; padding-left: 0px; color: rgb(51, 51, 51); font-family: -apple-system, &quot;Helvetica Neue&quot;, Helvetica, Arial, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;WenQuanYi Micro Hei&quot;, &quot;Microsoft Yahei&quot;, sans-serif; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);" class=" list-paddingleft-2"><li><p style="box-sizing: border-box; margin-top: 0px; margin-bottom: 0px;">Minor collection：新生代 Young Generation 使用将 Eden 还有 Survivor 内的数据利用 semi-space 做复制收集（Copying collection）， 并将原本 Survivor 内经过多次垃圾收集仍然存活的对象移动到 Tenured。</p></li><li><p style="box-sizing: border-box; margin-top: 0px; margin-bottom: 0px;">Major collection 则会进行 Minor collection，Tenured 世代则进行标记压缩收集。</p></li></ol><p style="box-sizing: border-box; margin-top: 1.5em; margin-bottom: 1.5em; color: rgb(51, 51, 51); font-family: -apple-system, &quot;Helvetica Neue&quot;, Helvetica, Arial, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;WenQuanYi Micro Hei&quot;, &quot;Microsoft Yahei&quot;, sans-serif; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);"><span class="img-wrap" style="box-sizing: border-box;"><img src="http://blogcc.cc/static/ueditor/themes/default/images/spacer.gif"/></span><br/>To note that:</p><pre class="hljs" style="box-sizing: border-box; overflow: auto; font-family: &quot;Source Code Pro&quot;, Consolas, Menlo, Monaco, &quot;Courier New&quot;, monospace; font-size: 0.93em; padding: 1em; margin-bottom: 1.5em; line-height: 1.3; word-break: break-all; word-wrap: break-word; color: rgb(51, 51, 51); border: none; border-radius: 4px; max-height: 35em; position: relative; margin-top: 0px !important;">&nbsp;这个搬运工作都是GC&nbsp;完成的，这也是garbage&nbsp;collector&nbsp;的名字来源，而不是叫garbage&nbsp;cleaner.&nbsp;GC负责在heap中搬运实例，以及收回存储空间。</pre><h2 style="box-sizing: border-box; font-family: -apple-system, &quot;Helvetica Neue&quot;, Helvetica, Arial, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;WenQuanYi Micro Hei&quot;, &quot;Microsoft Yahei&quot;, sans-serif; font-weight: 500; line-height: 1.2; color: rgb(51, 51, 51); margin: 1.5em 0px 0px; font-size: 1.75em; border-bottom: 1px solid rgb(238, 238, 238); padding-bottom: 10px; white-space: normal; background-color: rgb(255, 255, 255);">GC工作原理</h2><p style="box-sizing: border-box; margin-top: 1.5em; margin-bottom: 1.5em; color: rgb(51, 51, 51); font-family: -apple-system, &quot;Helvetica Neue&quot;, Helvetica, Arial, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;WenQuanYi Micro Hei&quot;, &quot;Microsoft Yahei&quot;, sans-serif; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);">JVM 分别对新生代和旧生代采用不同的垃圾回收机制</p><h3 style="box-sizing: border-box; font-family: -apple-system, &quot;Helvetica Neue&quot;, Helvetica, Arial, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;WenQuanYi Micro Hei&quot;, &quot;Microsoft Yahei&quot;, sans-serif; font-weight: 500; line-height: 1.2; color: rgb(51, 51, 51); margin: 1.5em 0px 0px; font-size: 1.5em; white-space: normal; background-color: rgb(255, 255, 255);">何为垃圾？</h3><p style="box-sizing: border-box; margin-top: 1.5em; margin-bottom: 1.5em; color: rgb(51, 51, 51); font-family: -apple-system, &quot;Helvetica Neue&quot;, Helvetica, Arial, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;WenQuanYi Micro Hei&quot;, &quot;Microsoft Yahei&quot;, sans-serif; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);">Java中那些<code style="box-sizing: border-box; font-family: &quot;Source Code Pro&quot;, Consolas, Menlo, Monaco, &quot;Courier New&quot;, monospace; font-size: 0.93em; padding: 2px 4px; color: rgb(199, 37, 78); background-color: rgb(249, 242, 244); border-radius: 4px;">不可达的对象</code>就会变成<code style="box-sizing: border-box; font-family: &quot;Source Code Pro&quot;, Consolas, Menlo, Monaco, &quot;Courier New&quot;, monospace; font-size: 0.93em; padding: 2px 4px; color: rgb(199, 37, 78); background-color: rgb(249, 242, 244); border-radius: 4px;">垃圾</code>。那么什么叫做不可达？其实就是没有办法再<code style="box-sizing: border-box; font-family: &quot;Source Code Pro&quot;, Consolas, Menlo, Monaco, &quot;Courier New&quot;, monospace; font-size: 0.93em; padding: 2px 4px; color: rgb(199, 37, 78); background-color: rgb(249, 242, 244); border-radius: 4px;">引用</code>到该对象了。主要有以下情况使对象变为垃圾：<br/>1.对<code style="box-sizing: border-box; font-family: &quot;Source Code Pro&quot;, Consolas, Menlo, Monaco, &quot;Courier New&quot;, monospace; font-size: 0.93em; padding: 2px 4px; color: rgb(199, 37, 78); background-color: rgb(249, 242, 244); border-radius: 4px;">非线程的对象</code>来说，所有的活动线程都不能访问该对象，那么该对象就会变为垃圾。<br/>2.对线程对象来说，满足上面的条件，且线程未启动或者已停止。</p><pre class="hljs dart" style="box-sizing: border-box; overflow: auto; font-family: &quot;Source Code Pro&quot;, Consolas, Menlo, Monaco, &quot;Courier New&quot;, monospace; font-size: 0.93em; padding: 1em; margin-bottom: 1.5em; line-height: 1.3; word-break: break-all; word-wrap: break-word; color: rgb(51, 51, 51); border: none; border-radius: 4px; max-height: 35em; position: relative; margin-top: 0px !important;">例如：&nbsp;
(1)改变对象的引用，如置为null或者指向其他对象。&nbsp;
&nbsp;&nbsp;&nbsp;Object&nbsp;x=new&nbsp;Object();//object1&nbsp;
&nbsp;&nbsp;&nbsp;Object&nbsp;y=new&nbsp;Object();//object2&nbsp;
&nbsp;&nbsp;&nbsp;x=y;//object1&nbsp;变为垃圾&nbsp;
&nbsp;&nbsp;&nbsp;x=y=null;//object2&nbsp;变为垃圾&nbsp;(2)超出作用域&nbsp;
&nbsp;&nbsp;&nbsp;if(i==0){&nbsp;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Object&nbsp;x=new&nbsp;Object();//object1&nbsp;
&nbsp;&nbsp;&nbsp;}//括号结束后object1将无法被引用，变为垃圾&nbsp;(3)类嵌套导致未完全释放&nbsp;
&nbsp;&nbsp;&nbsp;class&nbsp;A{&nbsp;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;A&nbsp;a;&nbsp;
&nbsp;&nbsp;&nbsp;}&nbsp;
&nbsp;&nbsp;&nbsp;A&nbsp;x=&nbsp;new&nbsp;A();//分配一个空间&nbsp;
&nbsp;&nbsp;&nbsp;x.a=&nbsp;new&nbsp;A();//又分配了一个空间&nbsp;
&nbsp;&nbsp;&nbsp;x=null;//将会产生两个垃圾&nbsp;(4)线程中的垃圾&nbsp;
&nbsp;&nbsp;&nbsp;class&nbsp;A&nbsp;implements&nbsp;Runnable{&nbsp;&nbsp;&nbsp;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;void&nbsp;run(){&nbsp;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//....&nbsp;
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;
&nbsp;&nbsp;&nbsp;}&nbsp;
&nbsp;&nbsp;&nbsp;//main&nbsp;
&nbsp;&nbsp;&nbsp;A&nbsp;x=new&nbsp;A();//object1&nbsp;
&nbsp;&nbsp;&nbsp;x.start();&nbsp;
&nbsp;&nbsp;&nbsp;x=null;//等线程执行完后object1才被认定为垃圾&nbsp;
&nbsp;&nbsp;&nbsp;这样看，确实在代码执行过程中会产生很多垃圾，不过不用担心，java可以有效地处理他们。</pre><hr/><p style="box-sizing: border-box; margin-top: 1.5em; margin-bottom: 1.5em; color: rgb(51, 51, 51); font-family: -apple-system, &quot;Helvetica Neue&quot;, Helvetica, Arial, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;WenQuanYi Micro Hei&quot;, &quot;Microsoft Yahei&quot;, sans-serif; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);">JVM中将对象的引用分为了四种类型，不同的对象引用类型会造成GC采用不同的方法进行回收：&nbsp;（1）强引用：默认情况下，对象采用的均为强引用</p><pre class="hljs" style="box-sizing: border-box; overflow: auto; font-family: &quot;Source Code Pro&quot;, Consolas, Menlo, Monaco, &quot;Courier New&quot;, monospace; font-size: 0.93em; padding: 1em; margin-bottom: 1.5em; line-height: 1.3; word-break: break-all; word-wrap: break-word; color: rgb(51, 51, 51); border: none; border-radius: 4px; max-height: 35em; position: relative; margin-top: 0px !important;">（GC不会回收）</pre><p style="box-sizing: border-box; margin-top: 1.5em; margin-bottom: 1.5em; color: rgb(51, 51, 51); font-family: -apple-system, &quot;Helvetica Neue&quot;, Helvetica, Arial, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;WenQuanYi Micro Hei&quot;, &quot;Microsoft Yahei&quot;, sans-serif; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);">（2）软引用：软引用是Java中提供的一种比较适合于缓存场景的应用</p><pre class="hljs" style="box-sizing: border-box; overflow: auto; font-family: &quot;Source Code Pro&quot;, Consolas, Menlo, Monaco, &quot;Courier New&quot;, monospace; font-size: 0.93em; padding: 1em; margin-bottom: 1.5em; line-height: 1.3; word-break: break-all; word-wrap: break-word; color: rgb(51, 51, 51); border: none; border-radius: 4px; max-height: 35em; position: relative; margin-top: 0px !important;">（只有在内存不够用的情况下才会被GC）</pre><p style="box-sizing: border-box; margin-top: 1.5em; margin-bottom: 1.5em; color: rgb(51, 51, 51); font-family: -apple-system, &quot;Helvetica Neue&quot;, Helvetica, Arial, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;WenQuanYi Micro Hei&quot;, &quot;Microsoft Yahei&quot;, sans-serif; font-size: 14px; white-space: normal; background-color: rgb(255, 255, 255);">（3）弱引用：在GC时一定会被GC回收&nbsp;（4）虚引用：在GC时一定会被GC回收</p><p><br/></p>(String), 31(Integer), 0(Integer), jvm (String), 289(String)
2017-09-14 21:40:41.334 DEBUG 8388 --- [http-nio-8080-exec-1] p.p.blog.repository.BlogRepo.update      : <==    Updates: 1
2017-09-14 21:40:41.338 DEBUG 8388 --- [http-nio-8080-exec-1] p.p.blog.repository.CommentRepo.list     : ==>  Preparing: select * from t_comment WHERE blogId=? and state=? order by commentDate desc 
2017-09-14 21:40:41.338 DEBUG 8388 --- [http-nio-8080-exec-1] p.p.blog.repository.CommentRepo.list     : ==> Parameters: 289(String), 1(Integer)
2017-09-14 21:40:41.340 DEBUG 8388 --- [http-nio-8080-exec-1] p.p.blog.repository.CommentRepo.list     : <==      Total: 0
2017-09-14 21:40:41.342 DEBUG 8388 --- [http-nio-8080-exec-1] p.p.b.repository.BlogRepo.getLastBlog    : ==>  Preparing: select * from t_blog t where ? > t.releaseDate order by releaseDate desc limit 1 
2017-09-14 21:40:41.343 DEBUG 8388 --- [http-nio-8080-exec-1] p.p.b.repository.BlogRepo.getLastBlog    : ==> Parameters: 2017-06-25 17:10:50.0(Timestamp)
2017-09-14 21:40:41.353 DEBUG 8388 --- [http-nio-8080-exec-1] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 21:40:41.358 DEBUG 8388 --- [http-nio-8080-exec-1] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 30(String)
2017-09-14 21:40:41.362 DEBUG 8388 --- [http-nio-8080-exec-1] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 21:40:41.365 DEBUG 8388 --- [http-nio-8080-exec-1] p.p.b.repository.BlogRepo.getLastBlog    : <==      Total: 1
2017-09-14 21:40:41.370 DEBUG 8388 --- [http-nio-8080-exec-1] p.p.b.repository.BlogRepo.getNextBlog    : ==>  Preparing: select * from t_blog t where t.releaseDate > ? order by releaseDate asc limit 1 
2017-09-14 21:40:41.371 DEBUG 8388 --- [http-nio-8080-exec-1] p.p.b.repository.BlogRepo.getNextBlog    : ==> Parameters: 2017-06-25 17:10:50.0(Timestamp)
2017-09-14 21:40:41.373 DEBUG 8388 --- [http-nio-8080-exec-1] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 21:40:41.373 DEBUG 8388 --- [http-nio-8080-exec-1] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 24(String)
2017-09-14 21:40:41.375 DEBUG 8388 --- [http-nio-8080-exec-1] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 21:40:41.375 DEBUG 8388 --- [http-nio-8080-exec-1] p.p.b.repository.BlogRepo.getNextBlog    : <==      Total: 1
2017-09-14 21:40:59.578 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.blog.repository.BlogRepo.list        : ==>  Preparing: select * from t_blog order by releaseDate desc limit ?,? 
2017-09-14 21:40:59.579 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.blog.repository.BlogRepo.list        : ==> Parameters: 30(Integer), 10(Integer)
2017-09-14 21:40:59.586 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 21:40:59.586 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 30(String)
2017-09-14 21:40:59.587 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 21:40:59.588 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 21:40:59.589 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 1(String)
2017-09-14 21:40:59.590 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 21:40:59.591 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 21:40:59.592 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 28(String)
2017-09-14 21:40:59.601 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 21:40:59.602 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 21:40:59.602 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 24(String)
2017-09-14 21:40:59.605 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 21:40:59.606 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.blog.repository.BlogRepo.list        : <==      Total: 10
2017-09-14 21:40:59.617 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.blog.repository.BlogRepo.getTotal    : ==>  Preparing: select count(*) from t_blog 
2017-09-14 21:40:59.617 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.blog.repository.BlogRepo.getTotal    : ==> Parameters: 
2017-09-14 21:40:59.619 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.blog.repository.BlogRepo.getTotal    : <==      Total: 1
2017-09-14 21:41:01.680 DEBUG 8388 --- [http-nio-8080-exec-9] p.p.blog.repository.BlogRepo.findById    : ==>  Preparing: select * from t_blog where id=? 
2017-09-14 21:41:01.680 DEBUG 8388 --- [http-nio-8080-exec-9] p.p.blog.repository.BlogRepo.findById    : ==> Parameters: 287(String)
2017-09-14 21:41:01.682 DEBUG 8388 --- [http-nio-8080-exec-9] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 21:41:01.683 DEBUG 8388 --- [http-nio-8080-exec-9] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 30(String)
2017-09-14 21:41:01.686 DEBUG 8388 --- [http-nio-8080-exec-9] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 21:41:01.687 DEBUG 8388 --- [http-nio-8080-exec-9] p.p.blog.repository.BlogRepo.findById    : <==      Total: 1
2017-09-14 21:41:01.690 DEBUG 8388 --- [http-nio-8080-exec-9] p.p.blog.repository.BlogRepo.update      : ==>  Preparing: update t_blog SET title=?, summary=?, typeId=?, content=?, clickHit=?, replyHit=?, keyWord=? where id=? 
2017-09-14 21:41:01.690 DEBUG 8388 --- [http-nio-8080-exec-9] p.p.blog.repository.BlogRepo.update      : ==> Parameters: lambda实现策略模式(String), 策略模式代表了解决一类算法的通用的解决方案，你可以在运行时选择使用哪种方案。策略模式包含三部分内容：1.一个代表某个算法的 接口（它是策略模式的接口）。2.一个或多个该接口的具体实现，它们代表了算法的多种实现。3.一个或多个使用策略对象的客户。比如你要验证输入的内容是否根据标准进行了恰当的格式化（比如只包含小(String), 30(String), <p>策略模式代表了解决一类算法的通用的解决方案，你可以在运行时选择使用哪种方案。</p><p>策略模式包含三部分内容：</p><p>1.一个代表某个算法的 接口（它是策略模式的接口）。</p><p>2.一个或多个该接口的具体实现，它们代表了算法的多种实现。<br/></p><p>3.一个或多个使用策略对象的客户。</p><p><img src="/userImages/20170622/1498123157050000223.png" title="1498123157050000223.png" alt="image.png"/></p><p><br/></p><p>比如你要验证输入的内容是否根据标准进行了恰当的格式化（比如只包含小写字母或数字）。你可以定义一个验证文本（以Sting方式表示）的接口入手：</p><p>代码如下：</p><pre class="brush:java;toolbar:false">/**
&nbsp;*
&nbsp;*&nbsp;pers.cc.design.stratege
&nbsp;*&nbsp;LambdaStrategyDemo.java
&nbsp;*&nbsp;2017年6月22日-下午5:18:02
&nbsp;*
&nbsp;*/
package&nbsp;pers.cc.design.stratege;

class&nbsp;IsAllLowerCase&nbsp;implements&nbsp;LambdaStrategyDemo&nbsp;{

	/*
	&nbsp;*&nbsp;(non-Javadoc)
	&nbsp;*
	&nbsp;*&nbsp;@see&nbsp;pers.cc.design.stratege.LambdaStrategyDemo#excaute(java.lang.String)
	&nbsp;*/
	@Override
	public&nbsp;boolean&nbsp;excaute(String&nbsp;s)&nbsp;{
		return&nbsp;s.matches(&quot;[a-z]+&quot;);
	}

}

class&nbsp;IsNumberic&nbsp;implements&nbsp;LambdaStrategyDemo&nbsp;{

	/*
	&nbsp;*&nbsp;(non-Javadoc)
	&nbsp;*
	&nbsp;*&nbsp;@see&nbsp;pers.cc.design.stratege.LambdaStrategyDemo#excaute(java.lang.String)
	&nbsp;*/
	@Override
	public&nbsp;boolean&nbsp;excaute(String&nbsp;s)&nbsp;{
		return&nbsp;s.matches(&quot;\\d+&quot;);
	}

}

/**
&nbsp;*&nbsp;Lambda方式实现策略模式
&nbsp;*
&nbsp;*&nbsp;@author&nbsp;cc
&nbsp;*&nbsp;@createTime&nbsp;2017年6月22日-下午5:18:02
&nbsp;*&nbsp;@version&nbsp;1.0.0
&nbsp;*/
public&nbsp;interface&nbsp;LambdaStrategyDemo&nbsp;{

	static&nbsp;class&nbsp;Validator&nbsp;{

		public&nbsp;static&nbsp;void&nbsp;main(String[]&nbsp;args)&nbsp;{
			Validator&nbsp;v&nbsp;=&nbsp;new&nbsp;Validator(new&nbsp;IsAllLowerCase());
			String&nbsp;str&nbsp;=&nbsp;&quot;abc&quot;;
			System.out.println(v.excute(str));
			v&nbsp;=&nbsp;new&nbsp;Validator(new&nbsp;IsNumberic());
			str&nbsp;=&nbsp;&quot;123c&quot;;
			System.out.println(v.excute(str));

		}

		private&nbsp;final&nbsp;LambdaStrategyDemo&nbsp;strategy;

		public&nbsp;Validator(LambdaStrategyDemo&nbsp;strategy)&nbsp;{
			this.strategy&nbsp;=&nbsp;strategy;
		}

		public&nbsp;boolean&nbsp;excute(String&nbsp;s)&nbsp;{
			return&nbsp;strategy.excaute(s);
		}

	}

	boolean&nbsp;excaute(String&nbsp;s);

}</pre><p>运行结果：</p><p><img src="/userImages/20170622/1498124051391016300.png" title="1498124051391016300.png" alt="image.png"/></p><p><br/></p><p><span class="fontstyle0">到现在为止，你应该已经意识到</span><span class="fontstyle1">ValidationStrategy</span><span class="fontstyle0">是一个函数接口了（除此之外，它<br/>还与</span><span class="fontstyle1">Predicate&lt;String&gt;</span><span class="fontstyle0">具有同样的函数描述）。这意味着我们不需要声明新的类来实现不同<br/>的策略，通过直接传递</span><span class="fontstyle2">Lambda</span><span class="fontstyle0">表达式就能达到同样的目的，并且还更简洁：</span></p><p>使用lambda表达式</p><pre class="brush:java;toolbar:false">public&nbsp;static&nbsp;void&nbsp;main(String[]&nbsp;args)&nbsp;{
			Validator&nbsp;v&nbsp;=&nbsp;new&nbsp;Validator((String&nbsp;s)&nbsp;-&gt;&nbsp;s.matches(&quot;[a-z]+&quot;));&nbsp;//直接传递lambdr表达式
			System.out.println(v.excute(&quot;aaa&quot;));
			v&nbsp;=&nbsp;new&nbsp;Validator((String&nbsp;s)&nbsp;-&gt;&nbsp;s.matches(&quot;\\d+&quot;));&nbsp;//直接传递lambdr表达式
			System.out.println(v.excute(&quot;aaa&quot;));

		}</pre><p>运行结果：</p><p><img src="/userImages/20170622/1498124258395026580.png" title="1498124258395026580.png" alt="image.png"/></p>(String), 27(Integer), 0(Integer), lambda实现策略模式(String), 287(String)
2017-09-14 21:41:01.701 DEBUG 8388 --- [http-nio-8080-exec-9] p.p.blog.repository.BlogRepo.update      : <==    Updates: 1
2017-09-14 21:41:01.704 DEBUG 8388 --- [http-nio-8080-exec-9] p.p.blog.repository.CommentRepo.list     : ==>  Preparing: select * from t_comment WHERE blogId=? and state=? order by commentDate desc 
2017-09-14 21:41:01.704 DEBUG 8388 --- [http-nio-8080-exec-9] p.p.blog.repository.CommentRepo.list     : ==> Parameters: 287(String), 1(Integer)
2017-09-14 21:41:01.706 DEBUG 8388 --- [http-nio-8080-exec-9] p.p.blog.repository.CommentRepo.list     : <==      Total: 0
2017-09-14 21:41:01.710 DEBUG 8388 --- [http-nio-8080-exec-9] p.p.b.repository.BlogRepo.getLastBlog    : ==>  Preparing: select * from t_blog t where ? > t.releaseDate order by releaseDate desc limit 1 
2017-09-14 21:41:01.711 DEBUG 8388 --- [http-nio-8080-exec-9] p.p.b.repository.BlogRepo.getLastBlog    : ==> Parameters: 2017-06-22 17:38:35.0(Timestamp)
2017-09-14 21:41:01.715 DEBUG 8388 --- [http-nio-8080-exec-9] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 21:41:01.715 DEBUG 8388 --- [http-nio-8080-exec-9] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 30(String)
2017-09-14 21:41:01.718 DEBUG 8388 --- [http-nio-8080-exec-9] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 21:41:01.718 DEBUG 8388 --- [http-nio-8080-exec-9] p.p.b.repository.BlogRepo.getLastBlog    : <==      Total: 1
2017-09-14 21:41:01.722 DEBUG 8388 --- [http-nio-8080-exec-9] p.p.b.repository.BlogRepo.getNextBlog    : ==>  Preparing: select * from t_blog t where t.releaseDate > ? order by releaseDate asc limit 1 
2017-09-14 21:41:01.723 DEBUG 8388 --- [http-nio-8080-exec-9] p.p.b.repository.BlogRepo.getNextBlog    : ==> Parameters: 2017-06-22 17:38:35.0(Timestamp)
2017-09-14 21:41:01.725 DEBUG 8388 --- [http-nio-8080-exec-9] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 21:41:01.726 DEBUG 8388 --- [http-nio-8080-exec-9] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 30(String)
2017-09-14 21:41:01.728 DEBUG 8388 --- [http-nio-8080-exec-9] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 21:41:01.729 DEBUG 8388 --- [http-nio-8080-exec-9] p.p.b.repository.BlogRepo.getNextBlog    : <==      Total: 1
2017-09-14 21:41:07.758 DEBUG 8388 --- [http-nio-8080-exec-5] p.p.blog.repository.BlogRepo.update      : ==>  Preparing: update t_blog SET title=?, summary=?, typeId=?, content=?, clickHit=?, replyHit=?, keyWord=? where id=? 
2017-09-14 21:41:07.759 DEBUG 8388 --- [http-nio-8080-exec-5] p.p.blog.repository.BlogRepo.update      : ==> Parameters: lambda实现策略模式(String), 策略模式代表了解决一类算法的通用的解决方案，你可以在运行时选择使用哪种方案。策略模式包含三部分内容：1.一个代表某个算法的 接口（它是策略模式的接口）。2.一个或多个该接口的具体实现，它们代表了算法的多种实现。3.一个或多个使用策略对象的客户。比如你要验证输入的内容是否根据标准进行了恰当的格式化（比如只包含小(String), 30(String), <p>策略模式代表了解决一类算法的通用的解决方案，你可以在运行时选择使用哪种方案。</p><p>策略模式包含三部分内容：</p><p>1.一个代表某个算法的 接口（它是策略模式的接口）。</p><p>2.一个或多个该接口的具体实现，它们代表了算法的多种实现。<br/></p><p>3.一个或多个使用策略对象的客户。</p><p><img src="/userImages/20170622/1498123157050000223.png" title="1498123157050000223.png" alt="image.png"/></p><p><br/></p><p>比如你要验证输入的内容是否根据标准进行了恰当的格式化（比如只包含小写字母或数字）。你可以定义一个验证文本（以Sting方式表示）的接口入手：</p><p>代码如下：</p><pre class="brush:java;toolbar:false">/**
&nbsp;*
&nbsp;*&nbsp;pers.cc.design.stratege
&nbsp;*&nbsp;LambdaStrategyDemo.java
&nbsp;*&nbsp;2017年6月22日-下午5:18:02
&nbsp;*
&nbsp;*/
package&nbsp;pers.cc.design.stratege;

class&nbsp;IsAllLowerCase&nbsp;implements&nbsp;LambdaStrategyDemo&nbsp;{

	/*
	&nbsp;*&nbsp;(non-Javadoc)
	&nbsp;*
	&nbsp;*&nbsp;@see&nbsp;pers.cc.design.stratege.LambdaStrategyDemo#excaute(java.lang.String)
	&nbsp;*/
	@Override
	public&nbsp;boolean&nbsp;excaute(String&nbsp;s)&nbsp;{
		return&nbsp;s.matches(&quot;[a-z]+&quot;);
	}

}

class&nbsp;IsNumberic&nbsp;implements&nbsp;LambdaStrategyDemo&nbsp;{

	/*
	&nbsp;*&nbsp;(non-Javadoc)
	&nbsp;*
	&nbsp;*&nbsp;@see&nbsp;pers.cc.design.stratege.LambdaStrategyDemo#excaute(java.lang.String)
	&nbsp;*/
	@Override
	public&nbsp;boolean&nbsp;excaute(String&nbsp;s)&nbsp;{
		return&nbsp;s.matches(&quot;\\d+&quot;);
	}

}

/**
&nbsp;*&nbsp;Lambda方式实现策略模式
&nbsp;*
&nbsp;*&nbsp;@author&nbsp;cc
&nbsp;*&nbsp;@createTime&nbsp;2017年6月22日-下午5:18:02
&nbsp;*&nbsp;@version&nbsp;1.0.0
&nbsp;*/
public&nbsp;interface&nbsp;LambdaStrategyDemo&nbsp;{

	static&nbsp;class&nbsp;Validator&nbsp;{

		public&nbsp;static&nbsp;void&nbsp;main(String[]&nbsp;args)&nbsp;{
			Validator&nbsp;v&nbsp;=&nbsp;new&nbsp;Validator(new&nbsp;IsAllLowerCase());
			String&nbsp;str&nbsp;=&nbsp;&quot;abc&quot;;
			System.out.println(v.excute(str));
			v&nbsp;=&nbsp;new&nbsp;Validator(new&nbsp;IsNumberic());
			str&nbsp;=&nbsp;&quot;123c&quot;;
			System.out.println(v.excute(str));

		}

		private&nbsp;final&nbsp;LambdaStrategyDemo&nbsp;strategy;

		public&nbsp;Validator(LambdaStrategyDemo&nbsp;strategy)&nbsp;{
			this.strategy&nbsp;=&nbsp;strategy;
		}

		public&nbsp;boolean&nbsp;excute(String&nbsp;s)&nbsp;{
			return&nbsp;strategy.excaute(s);
		}

	}

	boolean&nbsp;excaute(String&nbsp;s);

}</pre><p>运行结果：</p><p><img src="/userImages/20170622/1498124051391016300.png" title="1498124051391016300.png" alt="image.png"/></p><p><br/></p><p><span class="fontstyle0">到现在为止，你应该已经意识到</span><span class="fontstyle1">ValidationStrategy</span><span class="fontstyle0">是一个函数接口了（除此之外，它<br/>还与</span><span class="fontstyle1">Predicate&lt;String&gt;</span><span class="fontstyle0">具有同样的函数描述）。这意味着我们不需要声明新的类来实现不同<br/>的策略，通过直接传递</span><span class="fontstyle2">Lambda</span><span class="fontstyle0">表达式就能达到同样的目的，并且还更简洁：</span></p><p>使用lambda表达式</p><pre class="brush:java;toolbar:false">public&nbsp;static&nbsp;void&nbsp;main(String[]&nbsp;args)&nbsp;{
			Validator&nbsp;v&nbsp;=&nbsp;new&nbsp;Validator((String&nbsp;s)&nbsp;-&gt;&nbsp;s.matches(&quot;[a-z]+&quot;));&nbsp;//直接传递lambdr表达式
			System.out.println(v.excute(&quot;aaa&quot;));
			v&nbsp;=&nbsp;new&nbsp;Validator((String&nbsp;s)&nbsp;-&gt;&nbsp;s.matches(&quot;\\d+&quot;));&nbsp;//直接传递lambdr表达式
			System.out.println(v.excute(&quot;aaa&quot;));

		}</pre><p>运行结果：</p><p><img src="/userImages/20170622/1498124258395026580.png" title="1498124258395026580.png" alt="image.png"/></p>(String), 28(Integer), 0(Integer), lambda实现策略模式(String), 287(String)
2017-09-14 21:41:07.773 DEBUG 8388 --- [http-nio-8080-exec-5] p.p.blog.repository.BlogRepo.update      : <==    Updates: 1
2017-09-14 21:41:07.778 DEBUG 8388 --- [http-nio-8080-exec-5] p.p.blog.repository.CommentRepo.list     : ==>  Preparing: select * from t_comment WHERE blogId=? and state=? order by commentDate desc 
2017-09-14 21:41:07.779 DEBUG 8388 --- [http-nio-8080-exec-5] p.p.blog.repository.CommentRepo.list     : ==> Parameters: 287(String), 1(Integer)
2017-09-14 21:41:07.780 DEBUG 8388 --- [http-nio-8080-exec-5] p.p.blog.repository.CommentRepo.list     : <==      Total: 0
2017-09-14 21:41:31.179 DEBUG 8388 --- [http-nio-8080-exec-1] p.p.blog.repository.BlogRepo.findById    : ==>  Preparing: select * from t_blog where id=? 
2017-09-14 21:41:31.180 DEBUG 8388 --- [http-nio-8080-exec-1] p.p.blog.repository.BlogRepo.findById    : ==> Parameters: 280(String)
2017-09-14 21:41:31.182 DEBUG 8388 --- [http-nio-8080-exec-1] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 21:41:31.183 DEBUG 8388 --- [http-nio-8080-exec-1] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 24(String)
2017-09-14 21:41:31.184 DEBUG 8388 --- [http-nio-8080-exec-1] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 21:41:31.185 DEBUG 8388 --- [http-nio-8080-exec-1] p.p.blog.repository.BlogRepo.findById    : <==      Total: 1
2017-09-14 21:41:31.188 DEBUG 8388 --- [http-nio-8080-exec-1] p.p.blog.repository.BlogRepo.update      : ==>  Preparing: update t_blog SET title=?, summary=?, typeId=?, content=?, clickHit=?, replyHit=?, keyWord=? where id=? 
2017-09-14 21:41:31.189 DEBUG 8388 --- [http-nio-8080-exec-1] p.p.blog.repository.BlogRepo.update      : ==> Parameters: Java中Wait、Sleep和Yield方法学习笔记(String), 转自：    ZacharyJia在这3个在Java中能够用来暂停线程的方法中，sleep()和yield()方法是定义在Thread类中，而wait()方法是定义在Object类中的。并且wait，sleep，yield方法都是采用native方式实现。  native作用见博客：java native关键(String), 24(String), <p><font color="#2f2f2f" face="-apple-system, SF UI Text, Arial, PingFang SC, Hiragino Sans GB, Microsoft YaHei, WenQuanYi Micro Hei, sans-serif"><span style="background-color: rgb(255, 255, 255);">转自：&nbsp;&nbsp;&nbsp;&nbsp;<a href="http://www.jianshu.com/p/25e959037eed" target="_self" title="ZacharyJia">ZacharyJia</a></span></font></p><p><span style="color: rgb(47, 47, 47); font-family: -apple-system, &quot;SF UI Text&quot;, Arial, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, &quot;WenQuanYi Micro Hei&quot;, sans-serif; background-color: rgb(255, 255, 255);">在这3个在Java中能够用来暂停线程的方法中，sleep()和yield()方法是定义在Thread类中，而wait()方法是定义在Object类中的。</span></p><p><span style="color:#2f2f2f;font-family:-apple-system, SF UI Text, Arial, PingFang SC, Hiragino Sans GB, Microsoft YaHei, WenQuanYi Micro Hei, sans-serif"><span style="background-color: rgb(255, 255, 255);">并且wait，sleep，yield方法都是采用native方式实现。 &nbsp;native作用见博客：<a href="http://blogcc.cc/blog/articles/279.html" target="_self" title="java native关键字">java native关键字</a></span></span></p><p><span style="color:#2f2f2f;font-family:-apple-system, SF UI Text, Arial, PingFang SC, Hiragino Sans GB, Microsoft YaHei, WenQuanYi Micro Hei, sans-serif"><img src="/userImages/20170617/1497691151865059386.png" title="1497691151865059386.png" alt="image.png"/></span></p><p><span style="color:#2f2f2f;font-family:-apple-system, SF UI Text, Arial, PingFang SC, Hiragino Sans GB, Microsoft YaHei, WenQuanYi Micro Hei, sans-serif"><img src="/userImages/20170617/1497691222276052344.png" title="1497691222276052344.png" alt="image.png"/></span></p><p><span style="color:#2f2f2f;font-family:-apple-system, SF UI Text, Arial, PingFang SC, Hiragino Sans GB, Microsoft YaHei, WenQuanYi Micro Hei, sans-serif"><img src="/userImages/20170617/1497691240947007998.png" title="1497691240947007998.png" alt="image.png"/></span></p><p><span style="color:#2f2f2f;font-family:-apple-system, SF UI Text, Arial, PingFang SC, Hiragino Sans GB, Microsoft YaHei, WenQuanYi Micro Hei, sans-serif"><br/></span></p><p><span style="color:#2f2f2f;font-family:-apple-system, SF UI Text, Arial, PingFang SC, Hiragino Sans GB, Microsoft YaHei, WenQuanYi Micro Hei, sans-serif"><span style="color: rgb(47, 47, 47); font-family: -apple-system, &quot;SF UI Text&quot;, Arial, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, &quot;WenQuanYi Micro Hei&quot;, sans-serif; background-color: rgb(255, 255, 255);">wait()和sleep()的关键的区别在于，wait()是用于线程间通信的，而sleep()是用于短时间暂停当前线程。更加明显的一个区别在于，当一个线程调用wait()方法的时候，会释放它锁持有的对象的管程和锁，但是调用sleep()方法的时候，不会释放他所持有的管程。</span></span></p><p><span style="color:#2f2f2f;font-family:-apple-system, SF UI Text, Arial, PingFang SC, Hiragino Sans GB, Microsoft YaHei, WenQuanYi Micro Hei, sans-serif"><span style="color: rgb(47, 47, 47); font-family: -apple-system, &quot;SF UI Text&quot;, Arial, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, &quot;WenQuanYi Micro Hei&quot;, sans-serif; background-color: rgb(255, 255, 255);"><br/></span></span></p><p><span style="color:#2f2f2f;font-family:-apple-system, SF UI Text, Arial, PingFang SC, Hiragino Sans GB, Microsoft YaHei, WenQuanYi Micro Hei, sans-serif"><span style="color: rgb(47, 47, 47); font-family: -apple-system, &quot;SF UI Text&quot;, Arial, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, &quot;WenQuanYi Micro Hei&quot;, sans-serif; background-color: rgb(255, 255, 255);"><span style="color: rgb(47, 47, 47); font-family: -apple-system, &quot;SF UI Text&quot;, Arial, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, &quot;WenQuanYi Micro Hei&quot;, sans-serif; background-color: rgb(255, 255, 255);">回到yield()方法上来，与wait()和sleep()方法有一些区别，它仅仅释放线程所占有的CPU资源，从而让其他线程有机会运行，但是并不能保证某个特定的线程能够获得CPU资源。谁能获得CPU完全取决于调度器，在有些情况下调用yield方法的线程甚至会再次得到CPU资源。所以，依赖于yield方法是不可靠的，它只能尽力而为。</span></span></span></p><p><span style="color:#2f2f2f;font-family:-apple-system, SF UI Text, Arial, PingFang SC, Hiragino Sans GB, Microsoft YaHei, WenQuanYi Micro Hei, sans-serif"><span style="color: rgb(47, 47, 47); font-family: -apple-system, &quot;SF UI Text&quot;, Arial, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, &quot;WenQuanYi Micro Hei&quot;, sans-serif; background-color: rgb(255, 255, 255);"><span style="color: rgb(47, 47, 47); font-family: -apple-system, &quot;SF UI Text&quot;, Arial, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, &quot;WenQuanYi Micro Hei&quot;, sans-serif; background-color: rgb(255, 255, 255);"><br/></span></span></span></p><p><span style="color:#2f2f2f;font-family:-apple-system, SF UI Text, Arial, PingFang SC, Hiragino Sans GB, Microsoft YaHei, WenQuanYi Micro Hei, sans-serif"><span style="color: rgb(47, 47, 47); font-family: -apple-system, &quot;SF UI Text&quot;, Arial, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, &quot;WenQuanYi Micro Hei&quot;, sans-serif; background-color: rgb(255, 255, 255);"><span style="color: rgb(47, 47, 47); font-family: -apple-system, &quot;SF UI Text&quot;, Arial, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, &quot;WenQuanYi Micro Hei&quot;, sans-serif; background-color: rgb(255, 255, 255);"></span></span></span></p><h2 style="box-sizing: border-box; font-family: -apple-system, &quot;SF UI Text&quot;, Arial, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, &quot;WenQuanYi Micro Hei&quot;, sans-serif; line-height: 1.7; color: rgb(47, 47, 47); margin: 0px 0px 15px; font-size: 24px; text-rendering: optimizeLegibility; white-space: normal; background-color: rgb(255, 255, 255);">Wait vs Sleep vs Yield in Java</h2><h3 style="box-sizing: border-box; font-family: -apple-system, &quot;SF UI Text&quot;, Arial, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, &quot;WenQuanYi Micro Hei&quot;, sans-serif; line-height: 1.7; color: rgb(47, 47, 47); margin: 0px 0px 15px; font-size: 22px; text-rendering: optimizeLegibility; white-space: normal; background-color: rgb(255, 255, 255);">Java中wait和sleep的区别</h3><p style="box-sizing: border-box; margin-top: 0px; margin-bottom: 25px; word-break: break-word; color: rgb(47, 47, 47); font-family: -apple-system, &quot;SF UI Text&quot;, Arial, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, &quot;WenQuanYi Micro Hei&quot;, sans-serif; white-space: normal; background-color: rgb(255, 255, 255);">wait和sleep的主要区别是调用wait方法时，线程在等待的时候会释放掉它所获得的monitor，但是调用Thread.sleep()方法时，线程在等待的时候仍然会持有monitor或者锁。另外，Java中的wait方法应在同步代码块中调用，但是sleep方法不需要。<br/>另一个区别是Thread.sleep()方法是一个静态方法，作用在当前线程上；但是wait方法是一个实例方法，并且只能在其他线程调用本实例的notify()方法时被唤醒。另外，使用sleep方法时，被暂停的线程在被唤醒之后会立即进入就绪态（Runnable state)，但是使用wait方法的时候，被暂停的线程会首先获得锁（译者注：阻塞态），然后再进入就绪态。所以，根据你的需求，如果你需要暂定你的线程一段特定的时间就使用sleep()方法，如果你想要实现线程间通信就使用wait()方法。<br/>下面列出Java中wait和sleep方法的区别：</p><ol style="box-sizing: border-box; margin-bottom: 20px; word-break: break-word; padding: 0px; margin-left: 22px; color: rgb(47, 47, 47); font-family: -apple-system, &quot;SF UI Text&quot;, Arial, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, &quot;WenQuanYi Micro Hei&quot;, sans-serif; white-space: normal; background-color: rgb(255, 255, 255);" class=" list-paddingleft-2"><li><p>wait只能在同步（synchronize）环境中被调用，而sleep不需要。详见<a href="http://javarevisited.blogspot.com/2011/05/wait-notify-and-notifyall-in-java.html" target="_blank" style="box-sizing: border-box; background-color: transparent; color: rgb(49, 148, 208); text-decoration-line: none; cursor: pointer;">Why to wait and notify needs to call from synchronized method</a></p></li><li><p>进入wait状态的线程能够被notify和notifyAll线程唤醒，但是进入sleeping状态的线程不能被notify方法唤醒。</p></li><li><p>wait通常有条件地执行，线程会一直处于wait状态，直到某个条件变为真。但是sleep仅仅让你的线程进入睡眠状态。</p></li><li><p>wait方法在进入wait状态的时候会释放对象的锁，但是sleep方法不会。</p></li><li><p>wait方法是针对一个被同步代码块加锁的对象，而sleep是针对一个线程。更详细的讲解可以参考《Java核心技术卷1》，里面介绍了如何使用wait和notify方法。</p></li></ol><h3 style="box-sizing: border-box; font-family: -apple-system, &quot;SF UI Text&quot;, Arial, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, &quot;WenQuanYi Micro Hei&quot;, sans-serif; line-height: 1.7; color: rgb(47, 47, 47); margin: 0px 0px 15px; font-size: 22px; text-rendering: optimizeLegibility; white-space: normal; background-color: rgb(255, 255, 255);">yield和sleep的区别</h3><p style="box-sizing: border-box; margin-top: 0px; margin-bottom: 25px; word-break: break-word; color: rgb(47, 47, 47); font-family: -apple-system, &quot;SF UI Text&quot;, Arial, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, &quot;WenQuanYi Micro Hei&quot;, sans-serif; white-space: normal; background-color: rgb(255, 255, 255);">yield和sleep的主要是，yield方法会临时暂停当前正在执行的线程，来让有同样优先级的正在等待的线程有机会执行。如果没有正在等待的线程，或者所有正在等待的线程的优先级都比较低，那么该线程会继续运行。执行了yield方法的线程什么时候会继续运行由线程调度器来决定，不同的厂商可能有不同的行为。yield方法不保证当前的线程会暂停或者停止，但是可以保证当前线程在调用yield方法时会放弃CPU。<br/>在Java中Sleep方法有两个， 一个只有一个毫秒参数，另一个有毫秒和纳秒两个参数。</p><pre class="hljs stylus" style="box-sizing: border-box; overflow: auto; font-family: Menlo, Monaco, Consolas, &quot;Courier New&quot;, monospace; font-size: 13px; padding: 15px; margin-top: 0px; margin-bottom: 20px; line-height: 1.42857; word-break: break-word; word-wrap: normal; color: rgb(101, 123, 131); background-color: rgb(246, 246, 246); border: 1px solid rgb(204, 204, 204); border-radius: 0px; text-size-adjust: none;">sleep(long&nbsp;millis)</pre><p style="box-sizing: border-box; margin-top: 0px; margin-bottom: 25px; word-break: break-word; color: rgb(47, 47, 47); font-family: -apple-system, &quot;SF UI Text&quot;, Arial, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, &quot;WenQuanYi Micro Hei&quot;, sans-serif; white-space: normal; background-color: rgb(255, 255, 255);">or</p><pre class="hljs arduino" style="box-sizing: border-box; overflow: auto; font-family: Menlo, Monaco, Consolas, &quot;Courier New&quot;, monospace; font-size: 13px; padding: 15px; margin-top: 0px; margin-bottom: 20px; line-height: 1.42857; word-break: break-word; word-wrap: normal; color: rgb(101, 123, 131); background-color: rgb(246, 246, 246); border: 1px solid rgb(204, 204, 204); border-radius: 0px; text-size-adjust: none;">sleep(long&nbsp;millis,&nbsp;int&nbsp;nanos)</pre><p style="box-sizing: border-box; margin-top: 0px; margin-bottom: 25px; word-break: break-word; color: rgb(47, 47, 47); font-family: -apple-system, &quot;SF UI Text&quot;, Arial, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, &quot;WenQuanYi Micro Hei&quot;, sans-serif; white-space: normal; background-color: rgb(255, 255, 255);">会让当前执行的线程sleep指定的时间。</p><p style="box-sizing: border-box; margin-top: 0px; margin-bottom: 25px; word-break: break-word; color: rgb(47, 47, 47); font-family: -apple-system, &quot;SF UI Text&quot;, Arial, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, &quot;WenQuanYi Micro Hei&quot;, sans-serif; white-space: normal; background-color: rgb(255, 255, 255);">下面这张图很好地展示了在调用wait、sleep、yield方法的时候，线程状态如何转换。</p><p><img src="/ueditor/jsp/upload/image/20170617/1497692131218021730.png"/><br/></p><p>Paste_Image.png</p><p style="box-sizing: border-box; margin-top: 0px; margin-bottom: 25px; word-break: break-word; color: rgb(47, 47, 47); font-family: -apple-system, &quot;SF UI Text&quot;, Arial, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, &quot;WenQuanYi Micro Hei&quot;, sans-serif; white-space: normal; background-color: rgb(255, 255, 255);">Java中sleep方法的几个注意点：</p><ol style="box-sizing: border-box; margin-bottom: 20px; word-break: break-word; padding: 0px; margin-left: 22px; color: rgb(47, 47, 47); font-family: -apple-system, &quot;SF UI Text&quot;, Arial, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, &quot;WenQuanYi Micro Hei&quot;, sans-serif; white-space: normal; background-color: rgb(255, 255, 255);" class=" list-paddingleft-2"><li><p>Thread.sleep()方法用来暂停线程的执行，将CPU放给线程调度器。</p></li><li><p>Thread.sleep()方法是一个静态方法，它暂停的是当前执行的线程。</p></li><li><p>Java有两种sleep方法，一个只有一个毫秒参数，另一个有毫秒和纳秒两个参数。</p></li><li><p>与wait方法不同，sleep方法不会释放锁</p></li><li><p>如果其他的线程中断了一个休眠的线程，sleep方法会抛出Interrupted Exception。</p></li><li><p>休眠的线程在唤醒之后不保证能获取到CPU，它会先进入就绪态，与其他线程竞争CPU。</p></li><li><p>有一个易错的地方，当调用t.sleep()的时候，会暂停线程t。这是不对的，因为Thread.sleep是一个静态方法，它会使当前线程而不是线程t进入休眠状态。</p></li></ol><p style="box-sizing: border-box; margin-top: 0px; margin-bottom: 25px; word-break: break-word; color: rgb(47, 47, 47); font-family: -apple-system, &quot;SF UI Text&quot;, Arial, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, &quot;WenQuanYi Micro Hei&quot;, sans-serif; white-space: normal; background-color: rgb(255, 255, 255);">这就是java中的sleep方法。我们已经看到了java中sleep、wait以及yield方法的区别。总之，记住sleep和yield作用于当前线程。</p><hr/><p>转自知乎：&nbsp;&nbsp;&nbsp;&nbsp;<a href="https://www.zhihu.com/question/23328075" target="_self" title="孙立伟">孙立伟</a></p><p>作者：孙立伟<br/>链接：https://www.zhihu.com/question/23328075/answer/24228413<br/>来源：知乎<br/>著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。<br/><br/></p><ul class=" list-paddingleft-2"><li><p>首先，要记住这个差别，“sleep是Thread类的方法,wait是Object类中定义的方法”。尽管这两个方法都会影响线程的执行行为，但是本质上是有区别的。<br/></p></li><li><p>Thread.sleep不会导致锁行为的改变，如果当前线程是拥有锁的，那么Thread.sleep不会让线程释放锁。如果能够帮助你记忆的话，可以简单认为和锁相关的方法都定义在Object类中，因此调用Thread.sleep是不会影响锁的相关行为。<br/></p></li><li><p>Thread.sleep和Object.wait都会暂停当前的线程，对于CPU资源来说，不管是哪种方式暂停的线程，都表示它暂时不再需要CPU的执行时间。OS会将执行时间分配给其它线程。区别是，调用wait后，需要别的线程执行notify/notifyAll才能够重新获得CPU执行时间。</p></li><li><p>线程的状态参考 Thread.State的定义。新创建的但是没有执行（还没有调用start())的线程处于“就绪”，或者说Thread.State.NEW状态。</p></li><li><p>Thread.State.BLOCKED（阻塞）表示线程正在获取锁时，因为锁不能获取到而被迫暂停执行下面的指令，一直等到这个锁被别的线程释放。BLOCKED状态下线程，OS调度机制需要决定下一个能够获取锁的线程是哪个，这种情况下，就是产生锁的争用，无论如何这都是很耗时的操作。</p></li></ul><hr/><p><span style="color: rgb(38, 38, 38); font-family: &quot;Helvetica Neue&quot;, Helvetica, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, &quot;Noto Sans CJK SC&quot;, &quot;WenQuanYi Micro Hei&quot;, Arial, sans-serif; font-size: 15px; white-space: pre-wrap; background-color: rgb(255, 255, 255);">转自知乎：&nbsp;&nbsp;&nbsp;&nbsp;<a href="http://Jason Liu" target="_self" title="https://www.zhihu.com/question/23328075">https://www.zhihu.com/question/23328075</a></span></p><p><span style="color: rgb(38, 38, 38); font-family: &quot;Helvetica Neue&quot;, Helvetica, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, &quot;Noto Sans CJK SC&quot;, &quot;WenQuanYi Micro Hei&quot;, Arial, sans-serif; font-size: 15px; white-space: pre-wrap; background-color: rgb(255, 255, 255);">一张图让你明白：</span></p><p><span style="color: rgb(38, 38, 38); font-family: &quot;Helvetica Neue&quot;, Helvetica, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, &quot;Noto Sans CJK SC&quot;, &quot;WenQuanYi Micro Hei&quot;, Arial, sans-serif; font-size: 15px; white-space: pre-wrap; background-color: rgb(255, 255, 255);"><img src="/userImages/20170617/1497692291451014716.png" title="1497692291451014716.png" alt="image.png"/></span></p><p><span style="color: rgb(38, 38, 38); font-family: &quot;Helvetica Neue&quot;, Helvetica, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, &quot;Noto Sans CJK SC&quot;, &quot;WenQuanYi Micro Hei&quot;, Arial, sans-serif; font-size: 15px; white-space: pre-wrap; background-color: rgb(255, 255, 255);"><br/></span></p><p><span style="color: rgb(38, 38, 38); font-family: &quot;Helvetica Neue&quot;, Helvetica, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, &quot;Noto Sans CJK SC&quot;, &quot;WenQuanYi Micro Hei&quot;, Arial, sans-serif; font-size: 15px; white-space: pre-wrap; background-color: rgb(255, 255, 255);"><span style="color: rgb(38, 38, 38); font-family: &quot;Helvetica Neue&quot;, Helvetica, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, &quot;Noto Sans CJK SC&quot;, &quot;WenQuanYi Micro Hei&quot;, Arial, sans-serif; font-size: 15px; white-space: pre-wrap; background-color: rgb(255, 255, 255);">sleep 让线程从 【running】 -&gt; 【阻塞态】 时间结束/interrupt -&gt; 【runnable】</span><br/><span style="color: rgb(38, 38, 38); font-family: &quot;Helvetica Neue&quot;, Helvetica, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, &quot;Noto Sans CJK SC&quot;, &quot;WenQuanYi Micro Hei&quot;, Arial, sans-serif; font-size: 15px; white-space: pre-wrap; background-color: rgb(255, 255, 255);">wait 让线程从 【running】 -&gt; 【等待队列】notify &nbsp;-&gt; 【锁池】 -&gt; 【runnable】</span></span></p>(String), 86(Integer), 0(Integer), java sleep yeild wait(String), 280(String)
2017-09-14 21:41:31.195 DEBUG 8388 --- [http-nio-8080-exec-1] p.p.blog.repository.BlogRepo.update      : <==    Updates: 1
2017-09-14 21:41:31.201 DEBUG 8388 --- [http-nio-8080-exec-1] p.p.blog.repository.CommentRepo.list     : ==>  Preparing: select * from t_comment WHERE blogId=? and state=? order by commentDate desc 
2017-09-14 21:41:31.202 DEBUG 8388 --- [http-nio-8080-exec-1] p.p.blog.repository.CommentRepo.list     : ==> Parameters: 280(String), 1(Integer)
2017-09-14 21:41:31.203 DEBUG 8388 --- [http-nio-8080-exec-1] p.p.blog.repository.CommentRepo.list     : <==      Total: 0
2017-09-14 21:41:31.207 DEBUG 8388 --- [http-nio-8080-exec-1] p.p.b.repository.BlogRepo.getLastBlog    : ==>  Preparing: select * from t_blog t where ? > t.releaseDate order by releaseDate desc limit 1 
2017-09-14 21:41:31.207 DEBUG 8388 --- [http-nio-8080-exec-1] p.p.b.repository.BlogRepo.getLastBlog    : ==> Parameters: 2017-06-17 17:38:40.0(Timestamp)
2017-09-14 21:41:31.209 DEBUG 8388 --- [http-nio-8080-exec-1] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 21:41:31.210 DEBUG 8388 --- [http-nio-8080-exec-1] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 24(String)
2017-09-14 21:41:31.212 DEBUG 8388 --- [http-nio-8080-exec-1] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 21:41:31.212 DEBUG 8388 --- [http-nio-8080-exec-1] p.p.b.repository.BlogRepo.getLastBlog    : <==      Total: 1
2017-09-14 21:41:31.214 DEBUG 8388 --- [http-nio-8080-exec-1] p.p.b.repository.BlogRepo.getNextBlog    : ==>  Preparing: select * from t_blog t where t.releaseDate > ? order by releaseDate asc limit 1 
2017-09-14 21:41:31.215 DEBUG 8388 --- [http-nio-8080-exec-1] p.p.b.repository.BlogRepo.getNextBlog    : ==> Parameters: 2017-06-17 17:38:40.0(Timestamp)
2017-09-14 21:41:31.217 DEBUG 8388 --- [http-nio-8080-exec-1] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 21:41:31.218 DEBUG 8388 --- [http-nio-8080-exec-1] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 24(String)
2017-09-14 21:41:31.219 DEBUG 8388 --- [http-nio-8080-exec-1] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 21:41:31.220 DEBUG 8388 --- [http-nio-8080-exec-1] p.p.b.repository.BlogRepo.getNextBlog    : <==      Total: 1
2017-09-14 21:41:51.072 DEBUG 8388 --- [http-nio-8080-exec-10] p.p.blog.repository.BlogRepo.list        : ==>  Preparing: select * from t_blog order by releaseDate desc limit ?,? 
2017-09-14 21:41:51.073 DEBUG 8388 --- [http-nio-8080-exec-10] p.p.blog.repository.BlogRepo.list        : ==> Parameters: 40(Integer), 10(Integer)
2017-09-14 21:41:51.079 DEBUG 8388 --- [http-nio-8080-exec-10] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 21:41:51.080 DEBUG 8388 --- [http-nio-8080-exec-10] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 24(String)
2017-09-14 21:41:51.081 DEBUG 8388 --- [http-nio-8080-exec-10] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 21:41:51.081 DEBUG 8388 --- [http-nio-8080-exec-10] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 21:41:51.081 DEBUG 8388 --- [http-nio-8080-exec-10] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 23(String)
2017-09-14 21:41:51.082 DEBUG 8388 --- [http-nio-8080-exec-10] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 21:41:51.082 DEBUG 8388 --- [http-nio-8080-exec-10] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 21:41:51.082 DEBUG 8388 --- [http-nio-8080-exec-10] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 28(String)
2017-09-14 21:41:51.083 DEBUG 8388 --- [http-nio-8080-exec-10] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 21:41:51.084 DEBUG 8388 --- [http-nio-8080-exec-10] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 21:41:51.084 DEBUG 8388 --- [http-nio-8080-exec-10] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 1(String)
2017-09-14 21:41:51.085 DEBUG 8388 --- [http-nio-8080-exec-10] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 21:41:51.086 DEBUG 8388 --- [http-nio-8080-exec-10] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 21:41:51.087 DEBUG 8388 --- [http-nio-8080-exec-10] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 11(String)
2017-09-14 21:41:51.088 DEBUG 8388 --- [http-nio-8080-exec-10] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 21:41:51.089 DEBUG 8388 --- [http-nio-8080-exec-10] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 21:41:51.089 DEBUG 8388 --- [http-nio-8080-exec-10] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 25(String)
2017-09-14 21:41:51.090 DEBUG 8388 --- [http-nio-8080-exec-10] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 21:41:51.090 DEBUG 8388 --- [http-nio-8080-exec-10] p.p.blog.repository.BlogRepo.list        : <==      Total: 10
2017-09-14 21:41:51.096 DEBUG 8388 --- [http-nio-8080-exec-10] p.p.blog.repository.BlogRepo.getTotal    : ==>  Preparing: select count(*) from t_blog 
2017-09-14 21:41:51.096 DEBUG 8388 --- [http-nio-8080-exec-10] p.p.blog.repository.BlogRepo.getTotal    : ==> Parameters: 
2017-09-14 21:41:51.098 DEBUG 8388 --- [http-nio-8080-exec-10] p.p.blog.repository.BlogRepo.getTotal    : <==      Total: 1
2017-09-14 21:41:53.584 DEBUG 8388 --- [http-nio-8080-exec-6] p.p.blog.repository.BlogRepo.findById    : ==>  Preparing: select * from t_blog where id=? 
2017-09-14 21:41:53.584 DEBUG 8388 --- [http-nio-8080-exec-6] p.p.blog.repository.BlogRepo.findById    : ==> Parameters: 278(String)
2017-09-14 21:41:53.586 DEBUG 8388 --- [http-nio-8080-exec-6] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 21:41:53.586 DEBUG 8388 --- [http-nio-8080-exec-6] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 24(String)
2017-09-14 21:41:53.588 DEBUG 8388 --- [http-nio-8080-exec-6] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 21:41:53.588 DEBUG 8388 --- [http-nio-8080-exec-6] p.p.blog.repository.BlogRepo.findById    : <==      Total: 1
2017-09-14 21:41:53.590 DEBUG 8388 --- [http-nio-8080-exec-6] p.p.blog.repository.BlogRepo.update      : ==>  Preparing: update t_blog SET title=?, summary=?, typeId=?, content=?, clickHit=?, replyHit=?, keyWord=? where id=? 
2017-09-14 21:41:53.591 DEBUG 8388 --- [http-nio-8080-exec-6] p.p.blog.repository.BlogRepo.update      : ==> Parameters: 一张图让你看懂JAVA线程间的状态转换(String), 转自：    程明东(String), 24(String), <p>转自：&nbsp;&nbsp;&nbsp;&nbsp;<a href="https://my.oschina.net/mingdongcheng/home" target="_blank" style="box-sizing: inherit; -webkit-tap-highlight-color: transparent; font-family: &quot;Pingfang SC&quot;, STHeiti, &quot;Lantinghei SC&quot;, &quot;Open Sans&quot;, Arial, &quot;Hiragino Sans GB&quot;, &quot;Microsoft YaHei&quot;, &quot;WenQuanYi Micro Hei&quot;, SimSun, sans-serif; border: none; outline: 0px; transition: color 0.3s; text-decoration-line: none; color: rgb(68, 102, 187); white-space: normal; background-color: rgb(248, 248, 248);">程明东</a></p><p><img src="/userImages/20170617/1497680641559004677.png" title="1497680641559004677.png" alt="image.png"/></p>(String), 38(Integer), 0(Integer), java 线程(String), 278(String)
2017-09-14 21:41:53.593 DEBUG 8388 --- [http-nio-8080-exec-6] p.p.blog.repository.BlogRepo.update      : <==    Updates: 1
2017-09-14 21:41:53.596 DEBUG 8388 --- [http-nio-8080-exec-6] p.p.blog.repository.CommentRepo.list     : ==>  Preparing: select * from t_comment WHERE blogId=? and state=? order by commentDate desc 
2017-09-14 21:41:53.596 DEBUG 8388 --- [http-nio-8080-exec-6] p.p.blog.repository.CommentRepo.list     : ==> Parameters: 278(String), 1(Integer)
2017-09-14 21:41:53.597 DEBUG 8388 --- [http-nio-8080-exec-6] p.p.blog.repository.CommentRepo.list     : <==      Total: 0
2017-09-14 21:41:53.600 DEBUG 8388 --- [http-nio-8080-exec-6] p.p.b.repository.BlogRepo.getLastBlog    : ==>  Preparing: select * from t_blog t where ? > t.releaseDate order by releaseDate desc limit 1 
2017-09-14 21:41:53.601 DEBUG 8388 --- [http-nio-8080-exec-6] p.p.b.repository.BlogRepo.getLastBlog    : ==> Parameters: 2017-06-17 14:24:22.0(Timestamp)
2017-09-14 21:41:53.604 DEBUG 8388 --- [http-nio-8080-exec-6] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 21:41:53.604 DEBUG 8388 --- [http-nio-8080-exec-6] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 23(String)
2017-09-14 21:41:53.605 DEBUG 8388 --- [http-nio-8080-exec-6] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 21:41:53.605 DEBUG 8388 --- [http-nio-8080-exec-6] p.p.b.repository.BlogRepo.getLastBlog    : <==      Total: 1
2017-09-14 21:41:53.608 DEBUG 8388 --- [http-nio-8080-exec-6] p.p.b.repository.BlogRepo.getNextBlog    : ==>  Preparing: select * from t_blog t where t.releaseDate > ? order by releaseDate asc limit 1 
2017-09-14 21:41:53.608 DEBUG 8388 --- [http-nio-8080-exec-6] p.p.b.repository.BlogRepo.getNextBlog    : ==> Parameters: 2017-06-17 14:24:22.0(Timestamp)
2017-09-14 21:41:53.611 DEBUG 8388 --- [http-nio-8080-exec-6] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 21:41:53.611 DEBUG 8388 --- [http-nio-8080-exec-6] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 24(String)
2017-09-14 21:41:53.612 DEBUG 8388 --- [http-nio-8080-exec-6] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 21:41:53.612 DEBUG 8388 --- [http-nio-8080-exec-6] p.p.b.repository.BlogRepo.getNextBlog    : <==      Total: 1
2017-09-14 21:42:00.709 DEBUG 8388 --- [http-nio-8080-exec-10] p.p.blog.repository.BlogRepo.findById    : ==>  Preparing: select * from t_blog where id=? 
2017-09-14 21:42:00.709 DEBUG 8388 --- [http-nio-8080-exec-10] p.p.blog.repository.BlogRepo.findById    : ==> Parameters: 275(String)
2017-09-14 21:42:00.712 DEBUG 8388 --- [http-nio-8080-exec-10] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 21:42:00.713 DEBUG 8388 --- [http-nio-8080-exec-10] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 28(String)
2017-09-14 21:42:00.715 DEBUG 8388 --- [http-nio-8080-exec-10] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 21:42:00.716 DEBUG 8388 --- [http-nio-8080-exec-10] p.p.blog.repository.BlogRepo.findById    : <==      Total: 1
2017-09-14 21:42:00.718 DEBUG 8388 --- [http-nio-8080-exec-10] p.p.blog.repository.BlogRepo.update      : ==>  Preparing: update t_blog SET title=?, summary=?, typeId=?, content=?, clickHit=?, replyHit=?, keyWord=? where id=? 
2017-09-14 21:42:00.719 DEBUG 8388 --- [http-nio-8080-exec-10] p.p.blog.repository.BlogRepo.update      : ==> Parameters: Spring的IOC原理[通俗解释一下](String), 转自：    特种兵—AK471. IoC理论的背景我们都知道，在采用面向对象方法设计的软件系统中，它的底层实现都是由N个对象组成的，所有的对象通过彼此的合作，最终实现系统的业务逻辑。图1：软件系统中耦合的对象如果我们打开机械式手表的后盖，就会看到与上面类似的情形，各个齿轮分别带动时针、分针和秒针顺时针旋转，(String), 28(String), <p>转自：&nbsp;&nbsp;&nbsp;&nbsp;<a href="http://blog.csdn.net/m13666368773/article/details/7802126" target="_self" title="特种兵—AK47">特种兵—AK47</a></p><p><br/></p><p style="margin-top: 0px; margin-bottom: 0px; padding: 0px; color: rgb(85, 85, 85); font-family: &quot;microsoft yahei&quot;; font-size: 15px; white-space: normal; background-color: rgb(255, 255, 255);"><span style="font-size: 18px;"><strong>1. IoC理论的背景</strong></span><br/>我们都知道，在采用面向对象方法设计的软件系统中，它的底层实现都是由N个对象组成的，所有的对象通过彼此的合作，最终实现系统的业务逻辑。</p><p style="margin-top: 0px; margin-bottom: 0px; padding: 0px; color: rgb(85, 85, 85); font-family: &quot;microsoft yahei&quot;; font-size: 15px; white-space: normal; background-color: rgb(255, 255, 255); text-align: center;"><img alt="" src="/ueditor/jsp/upload/image/20170612/1497254123076059758.jpg"/>图1：软件系统中耦合的对象</p><p style="margin-top: 0px; margin-bottom: 0px; padding: 0px; color: rgb(85, 85, 85); font-family: &quot;microsoft yahei&quot;; font-size: 15px; white-space: normal; background-color: rgb(255, 255, 255); text-align: center;">如果我们打开机械式手表的后盖，就会看到与上面类似的情形，各个齿轮分别带动时针、分针和秒针顺时针旋转，从而在表盘上产生正确的时间。图1中描述的就是这样的一个齿轮组，它拥有多个独立的齿轮，这些齿轮相互啮合在一起，协同工作，共同完成某项任务。我们可以看到，在这样的齿轮组中，如果有一个齿轮出了问题，就可能会影响到整个齿轮组的正常运转。<br/>齿轮组中齿轮之间的啮合关系,与软件系统中对象之间的耦合关系非常相似。对象之间的耦合关系是无法避免的，也是必要的，这是协同工作的基础。现在，伴随着工业级应用的规模越来越庞大，对象之间的依赖关系也越来越复杂，经常会出现对象之间的多重依赖性关系，因此，<a href="http://lib.csdn.net/base/architecture" class="replace_word" title="大型网站架构知识库" target="_blank" style="text-decoration-line: none; color: rgb(223, 52, 52); font-weight: bold;">架构</a>师和设计师对于系统的分析和设计，将面临更大的挑战。对象之间耦合度过高的系统，必然会出现牵一发而动全身的情形。</p><p style="margin-top: 0px; margin-bottom: 0px; padding: 0px; color: rgb(85, 85, 85); font-family: &quot;microsoft yahei&quot;; font-size: 15px; white-space: normal; background-color: rgb(255, 255, 255); text-align: center;"><img alt="" src="/ueditor/jsp/upload/image/20170612/1497254123262031412.jpg"/>图2：对象之间复杂的依赖关系</p><p style="margin-top: 0px; margin-bottom: 0px; padding: 0px; color: rgb(85, 85, 85); font-family: &quot;microsoft yahei&quot;; font-size: 15px; white-space: normal; background-color: rgb(255, 255, 255);">耦合关系不仅会出现在对象与对象之间，也会出现在软件系统的各模块之间，以及软件系统和硬件系统之间。如何降低系统之间、模块之间和对象之间的耦合度，是软件工程永远追求的目标之一。<span style="color: rgb(255, 0, 0);"><strong>为了解决对象之间的耦合度过高的问题</strong></span>，软件专家Michael Mattson提出了IOC理论，用来实现对象之间的“解耦”，目前这个理论已经被成功地应用到实践当中，很多的J2EE项目均采用了IOC框架产品<a href="http://lib.csdn.net/base/javaee" class="replace_word" title="Java EE知识库" target="_blank" style="text-decoration-line: none; color: rgb(223, 52, 52); font-weight: bold;">spring</a>。</p><p style="margin-top: 0px; margin-bottom: 0px; padding: 0px; color: rgb(85, 85, 85); font-family: &quot;microsoft yahei&quot;; font-size: 15px; white-space: normal; background-color: rgb(255, 255, 255);"><span style="font-size: 18px;"><strong>2. 什么是控制反转(IoC)</strong></span><br/>IOC是Inversion of Control的缩写，多数书籍翻译成“控制反转”，还有些书籍翻译成为“控制反向”或者“控制倒置”。<br/>1996年，Michael Mattson在一篇有关探讨面向对象框架的文章中，首先提出了IOC 这个概念。对于面向对象设计及编程的基本思想，前面我们已经讲了很多了，不再赘述，简单来说就是把复杂系统分解成相互合作的对象，这些对象类通过封装以后，内部实现对外部是透明的，从而降低了解决问题的复杂度，而且可以灵活地被重用和扩展。IOC理论提出的观点大体是这样的：借助于“第三方”实现具有依赖关系的对象之间的解耦，如下图：</p><p style="margin-top: 0px; margin-bottom: 0px; padding: 0px; color: rgb(85, 85, 85); font-family: &quot;microsoft yahei&quot;; font-size: 15px; white-space: normal; background-color: rgb(255, 255, 255);"><img alt="" src="/ueditor/jsp/upload/image/20170612/1497254123369029572.jpg"/></p><p style="margin-top: 0px; margin-bottom: 0px; padding: 0px; color: rgb(85, 85, 85); font-family: &quot;microsoft yahei&quot;; font-size: 15px; white-space: normal; background-color: rgb(255, 255, 255);">图3：IOC解耦过程</p><p style="margin-top: 0px; margin-bottom: 0px; padding: 0px; color: rgb(85, 85, 85); font-family: &quot;microsoft yahei&quot;; font-size: 15px; white-space: normal; background-color: rgb(255, 255, 255);">大家看到了吧，由于引进了中间位置的“第三方”，也就是IOC容器，使得A、B、C、D这4个对象没有了耦合关系，齿轮之间的传动全部依靠“第三方”了，全部对象的控制权全部上缴给“第三方”IOC容器，所以，IOC容器成了整个系统的关键核心，它起到了一种类似“粘合剂”的作用，把系统中的所有对象粘合在一起发挥作用，如果没有这个“粘合剂”，对象与对象之间会彼此失去联系，这就是有人把IOC容器比喻成“粘合剂”的由来。<br/>我们再来做个试验：把上图中间的IOC容器拿掉，然后再来看看这套系统：</p><p style="margin-top: 0px; margin-bottom: 0px; padding: 0px; color: rgb(85, 85, 85); font-family: &quot;microsoft yahei&quot;; font-size: 15px; white-space: normal; background-color: rgb(255, 255, 255);"><img alt="" src="/ueditor/jsp/upload/image/20170612/1497254123519042297.jpg"/></p><p style="margin-top: 0px; margin-bottom: 0px; padding: 0px; color: rgb(85, 85, 85); font-family: &quot;microsoft yahei&quot;; font-size: 15px; white-space: normal; background-color: rgb(255, 255, 255); text-align: center;">图4：拿掉IoC容器后的系统</p><p style="margin-top: 0px; margin-bottom: 0px; padding: 0px; color: rgb(85, 85, 85); font-family: &quot;microsoft yahei&quot;; font-size: 15px; white-space: normal; background-color: rgb(255, 255, 255);">我们现在看到的画面，就是我们要实现整个系统所需要完成的全部内容。这时候，A、B、C、D这4个对象之间已经没有了耦合关系，彼此毫无联系，这样的话，当你在实现A的时候，根本无须再去考虑B、C和D了，对象之间的依赖关系已经降低到了最低程度。所以，如果真能实现IOC容器，对于系统开发而言，这将是一件多么美好的事情，参与开发的每一成员只要实现自己的类就可以了，跟别人没有任何关系！<br/>我们再来看看，控制反转(IOC)到底为什么要起这么个名字？我们来对比一下：<br/>软件系统在没有引入IOC容器之前，如图1所示，对象A依赖于对象B，那么对象A在初始化或者运行到某一点的时候，自己必须主动去创建对象B或者使用已经创建的对象B。无论是创建还是使用对象B，控制权都在自己手上。<br/>软件系统在引入IOC容器之后，这种情形就完全改变了，如图3所示，由于IOC容器的加入，对象A与对象B之间失去了直接联系，所以，当对象A运行到需要对象B的时候，IOC容器会主动创建一个对象B注入到对象A需要的地方。<br/>通过前后的对比，我们不难看出来：对象A获得依赖对象B的过程,由主动行为变为了被动行为，控制权颠倒过来了，这就是“控制反转”这个名称的由来。</p><p style="margin-top: 0px; margin-bottom: 0px; padding: 0px; color: rgb(85, 85, 85); font-family: &quot;microsoft yahei&quot;; font-size: 15px; white-space: normal; background-color: rgb(255, 255, 255);"><span style="font-size: 18px;"><strong>3.&nbsp; IOC的别名：依赖注入(DI)</strong></span><br/>2004年，Martin Fowler探讨了同一个问题，既然IOC是控制反转，那么到底是“哪些方面的控制被反转了呢？”，经过详细地分析和论证后，他得出了答案：“获得依赖对象的过程被反转了”。控制被反转之后，获得依赖对象的过程由自身管理变为了由IOC容器主动注入。于是，他给“控制反转”取了一个更合适的名字叫做“依赖注入（Dependency Injection）”。他的这个答案，实际上给出了实现IOC的方法：注入。所谓依赖注入，就是由IOC容器在运行期间，动态地将某种依赖关系注入到对象之中。</p><p style="margin-top: 0px; margin-bottom: 0px; padding: 0px; color: rgb(85, 85, 85); font-family: &quot;microsoft yahei&quot;; font-size: 15px; white-space: normal; background-color: rgb(255, 255, 255);">所以，依赖注入(DI)和控制反转(IOC)是从不同的角度的描述的同一件事情，就是指<span style="color: rgb(255, 0, 0);"><strong>通过引入IOC容器，利用依赖关系注入的方式，实现对象之间的解耦</strong></span>。<br/>我们举一个生活中的例子，来帮助理解依赖注入的过程。大家对USB接口和USB设备应该都很熟悉吧，USB为我们使用电脑提供了很大的方便，现在有很多的外部设备都支持USB接口。</p><p style="margin-top: 0px; margin-bottom: 0px; padding: 0px; color: rgb(85, 85, 85); font-family: &quot;microsoft yahei&quot;; font-size: 15px; white-space: normal; background-color: rgb(255, 255, 255);"><img alt="" src="/ueditor/jsp/upload/image/20170612/1497254123713078383.jpg"/></p><p style="margin-top: 0px; margin-bottom: 0px; padding: 0px; color: rgb(85, 85, 85); font-family: &quot;microsoft yahei&quot;; font-size: 15px; white-space: normal; background-color: rgb(255, 255, 255); text-align: center;">图5：USB接口和USB设备</p><p style="margin-top: 0px; margin-bottom: 0px; padding: 0px; color: rgb(85, 85, 85); font-family: &quot;microsoft yahei&quot;; font-size: 15px; white-space: normal; background-color: rgb(255, 255, 255);">现在，我们利用电脑主机和USB接口来实现一个任务：从外部USB设备读取一个文件。<br/>电脑主机读取文件的时候，它一点也不会关心USB接口上连接的是什么外部设备，而且它确实也无须知道。它的任务就是读取USB接口，挂接的外部设备只要符合USB接口标准即可。所以，如果我给电脑主机连接上一个U盘，那么主机就从U盘上读取文件；如果我给电脑主机连接上一个外置硬盘，那么电脑主机就从外置硬盘上读取文件。挂接外部设备的权力由我作主，即控制权归我，至于USB接口挂接的是什么设备，电脑主机是决定不了，它只能被动的接受。电脑主机需要外部设备的时候，根本不用它告诉我，我就会主动帮它挂上它想要的外部设备，你看我的服务是多么的到位。这就是我们生活中常见的一个依赖注入的例子。在这个过程中，<strong>我就起到了IOC容器的作用</strong>。<br/>通过这个例子,依赖注入的思路已经非常清楚：当电脑主机读取文件的时候，我就把它所要依赖的外部设备，帮他挂接上。整个外部设备注入的过程和一个被依赖的对象在系统运行时被注入另外一个对象内部的过程完全一样。<br/>我们把依赖注入应用到软件系统中，再来描述一下这个过程：<br/>对象A依赖于对象B,当对象 A需要用到对象B的时候，IOC容器就会立即创建一个对象B送给对象A。IOC容器就是一个对象制造工厂，你需要什么，它会给你送去，你直接使用就行了，而再也不用去关心你所用的东西是如何制成的，也不用关心最后是怎么被销毁的，这一切全部由IOC容器包办。<br/>在传统的实现中，由程序内部代码来控制组件之间的关系。我们经常使用new关键字来实现两个组件之间关系的组合，这种实现方式会造成组件之间耦合。IOC很好地解决了该问题，它将实现组件间关系从程序内部提到外部容器，也就是说由容器在运行期将组件间的某种依赖关系动态注入组件中。</p><p style="margin-top: 0px; margin-bottom: 0px; padding: 0px; color: rgb(85, 85, 85); font-family: &quot;microsoft yahei&quot;; font-size: 15px; white-space: normal; background-color: rgb(255, 255, 255);"><span style="font-size: 18px;"><strong>4.&nbsp; IOC为我们带来了什么好处</strong></span></p><p style="margin-top: 0px; margin-bottom: 0px; padding: 0px; color: rgb(85, 85, 85); font-family: &quot;microsoft yahei&quot;; font-size: 15px; white-space: normal; background-color: rgb(255, 255, 255);">我们还是从USB的例子说起，使用USB外部设备比使用内置硬盘，到底带来什么好处？<br/>第一、USB设备作为电脑主机的外部设备，在插入主机之前，与电脑主机没有任何的关系，只有被我们连接在一起之后，两者才发生联系，具有相关性。所以，无论两者中的任何一方出现什么的问题，都不会影响另一方的运行。这种特性体现在软件工程中，就是可维护性比较好，非常便于进行单元<a href="http://lib.csdn.net/base/softwaretest" class="replace_word" title="软件测试知识库" target="_blank" style="text-decoration-line: none; color: rgb(223, 52, 52); font-weight: bold;">测试</a>，便于调试程序和诊断故障。代码中的每一个Class都可以单独测试，彼此之间互不影响，只要保证自身的功能无误即可，这就是组件之间低耦合或者无耦合带来的好处。<br/>第二、USB设备和电脑主机的之间无关性，还带来了另外一个好处，生产USB设备的厂商和生产电脑主机的厂商完全可以是互不相干的人，各干各事，他们之间唯一需要遵守的就是USB接口标准。这种特性体现在软件开发过程中，好处可是太大了。每个开发团队的成员都只需要关心实现自身的业务逻辑，完全不用去关心其它的人工作进展，因为你的任务跟别人没有任何关系，你的任务可以单独测试，你的任务也不用依赖于别人的组件，再也不用扯不清责任了。所以，在一个大中型项目中，团队成员分工明确、责任明晰，很容易将一个大的任务划分为细小的任务，开发效率和产品质量必将得到大幅度的提高。<br/>第三、同一个USB外部设备可以插接到任何支持USB的设备，可以插接到电脑主机，也可以插接到DV机，USB外部设备可以被反复利用。在软件工程中，这种特性就是可复用性好，我们可以把具有普遍性的常用组件独立出来，反复利用到项目中的其它部分，或者是其它项目，当然这也是面向对象的基本特征。显然，IOC不仅更好地贯彻了这个原则，提高了模块的可复用性。符合接口标准的实现，都可以插接到支持此标准的模块中。<br/>第四、同USB外部设备一样，模块具有热插拔特性。IOC生成对象的方式转为外置方式，也就是把对象生成放在配置文件里进行定义，这样，当我们更换一个实现子类将会变得很简单，只要修改配置文件就可以了，完全具有热插拨的特性。<br/>以上几点好处，难道还不足以打动我们，让我们在项目开发过程中使用IOC框架吗？</p><p style="margin-top: 0px; margin-bottom: 0px; padding: 0px; color: rgb(85, 85, 85); font-family: &quot;microsoft yahei&quot;; font-size: 15px; white-space: normal; background-color: rgb(255, 255, 255);"><span style="font-size: 18px;"><strong>5.&nbsp; IOC容器的技术剖析</strong></span><br/>IOC中最基本的技术就是“反射(Reflection)”编程，目前.Net C#、<a href="http://lib.csdn.net/base/java" class="replace_word" title="Java 知识库" target="_blank" style="text-decoration-line: none; color: rgb(223, 52, 52); font-weight: bold;">Java</a>和PHP5等语言均支持，其中PHP5的技术书籍中，有时候也被翻译成“映射”。<strong>有关反射的概念和用法，大家应该都很清楚，通俗来讲就是根据给出的类名（字符串方式）来动态地生成对象</strong>。这种编程方式可以让对象在生成时才决定到底是哪一种对象。反射的应用是很广泛的，很多的成熟的框架，比如象Java中的<a href="http://lib.csdn.net/base/javaee" class="replace_word" title="Java EE知识库" target="_blank" style="text-decoration-line: none; color: rgb(223, 52, 52); font-weight: bold;">hibernate</a>、Spring框架，.Net中 NHibernate、Spring<a href="http://lib.csdn.net/base/dotnet" class="replace_word" title=".NET知识库" target="_blank" style="text-decoration-line: none; color: rgb(223, 52, 52); font-weight: bold;">.NET</a>框架都是把“反射”做为最基本的技术手段。<br/>反射技术其实很早就出现了，但一直被忽略，没有被进一步的利用。当时的反射编程方式相对于正常的对象生成方式要慢至少得10倍。现在的反射技术经过改良优化，已经非常成熟，反射方式生成对象和通常对象生成方式，速度已经相差不大了，大约为1-2倍的差距。<br/><span style="font-size: 16px;"><strong>我们可以把IOC容器的工作模式看做是工厂模式的升华，可以把IOC容器看作是一个工厂，这个工厂里要生产的对象都在配置文件中给出定义，然后利用编程语言的的反射编程，根据配置文件中给出的类名生成相应的对象。从实现来看，IOC是把以前在工厂方法里写死的对象生成代码，改变为由配置文件来定义，也就是把工厂和对象生成这两者独立分隔开来，目的就是提高灵活性和可维护性。</strong></span><br/><span style="font-size: 18px;"><strong>6.&nbsp; IOC容器的一些产品</strong></span><br/>Sun ONE技术体系下的IOC容器有：轻量级的有Spring、Guice、Pico&nbsp;<a href="http://lib.csdn.net/base/docker" class="replace_word" title="Docker知识库" target="_blank" style="text-decoration-line: none; color: rgb(223, 52, 52); font-weight: bold;">Container</a>、Avalon、HiveMind；重量级的有EJB；不轻不重的有JBoss，Jdon等等。Spring框架作为Java开发中SSH(Struts、Spring、Hibernate)三剑客之一，大中小项目中都有使用，非常成熟，应用广泛，EJB在关键性的工业级项目中也被使用，比如某些电信业务。<br/>.Net技术体系下的IOC容器有：Spring<a href="http://lib.csdn.net/base/dotnet" class="replace_word" title=".NET知识库" target="_blank" style="text-decoration-line: none; color: rgb(223, 52, 52); font-weight: bold;">.net</a>、Castle等等。Spring<a href="http://lib.csdn.net/base/dotnet" class="replace_word" title=".NET知识库" target="_blank" style="text-decoration-line: none; color: rgb(223, 52, 52); font-weight: bold;">.Net</a>是从Java的Spring移植过来的IOC容器，Castle的IOC容器就是Windsor部分。它们均是轻量级的框架，比较成熟，其中Spring.Net已经被逐渐应用于各种项目中。<br/><span style="font-size: 18px;"><strong>7. 使用IOC框架应该注意什么</strong></span><br/>使用IOC框架产品能够给我们的开发过程带来很大的好处，但是也要充分认识引入IOC框架的缺点，做到心中有数，杜绝滥用框架。<br/>第一、软件系统中由于引入了第三方IOC容器，生成对象的步骤变得有些复杂，本来是两者之间的事情，又凭空多出一道手续，所以，我们在刚开始使用IOC框架的时候，会感觉系统变得不太直观。所以，引入了一个全新的框架，就会增加团队成员学习和认识的培训成本，并且在以后的运行维护中，还得让新加入者具备同样的知识体系。<br/>第二、由于IOC容器生成对象是通过反射方式，在运行效率上有一定的损耗。如果你要追求运行效率的话，就必须对此进行权衡。<br/>第三、具体到IOC框架产品(比如：Spring)来讲，需要进行大量的配制工作，比较繁琐，对于一些小的项目而言，客观上也可能加大一些工作成本。<br/>第四、IOC框架产品本身的成熟度需要进行评估，如果引入一个不成熟的IOC框架产品，那么会影响到整个项目，所以这也是一个隐性的风险。<br/>我们大体可以得出这样的结论：一些工作量不大的项目或者产品，不太适合使用IOC框架产品。另外，如果团队成员的知识能力欠缺，对于IOC框架产品缺乏深入的理解，也不要贸然引入。最后，特别强调运行效率的项目或者产品，也不太适合引入IOC框架产品，象WEB2.0网站就是这种情况。</p><p style="margin-top: 0px; margin-bottom: 0px; padding: 0px; color: rgb(85, 85, 85); font-family: &quot;microsoft yahei&quot;; font-size: 15px; white-space: normal; background-color: rgb(255, 255, 255);">参考资料：</p><p style="margin-top: 0px; margin-bottom: 0px; padding: 0px; color: rgb(85, 85, 85); font-family: &quot;microsoft yahei&quot;; font-size: 15px; white-space: normal; background-color: rgb(255, 255, 255);"><a href="http://jiwenke.iteye.com/blog/493965" target="_blank" style="text-decoration-line: none; color: rgb(12, 137, 207);">http://jiwenke.iteye.com/blog/493965</a></p><p><br/></p>(String), 40(Integer), 0(Integer), ioc spring(String), 275(String)
2017-09-14 21:42:00.725 DEBUG 8388 --- [http-nio-8080-exec-10] p.p.blog.repository.BlogRepo.update      : <==    Updates: 1
2017-09-14 21:42:00.728 DEBUG 8388 --- [http-nio-8080-exec-10] p.p.blog.repository.CommentRepo.list     : ==>  Preparing: select * from t_comment WHERE blogId=? and state=? order by commentDate desc 
2017-09-14 21:42:00.728 DEBUG 8388 --- [http-nio-8080-exec-10] p.p.blog.repository.CommentRepo.list     : ==> Parameters: 275(String), 1(Integer)
2017-09-14 21:42:00.730 DEBUG 8388 --- [http-nio-8080-exec-10] p.p.blog.repository.CommentRepo.list     : <==      Total: 0
2017-09-14 21:42:00.732 DEBUG 8388 --- [http-nio-8080-exec-10] p.p.b.repository.BlogRepo.getLastBlog    : ==>  Preparing: select * from t_blog t where ? > t.releaseDate order by releaseDate desc limit 1 
2017-09-14 21:42:00.733 DEBUG 8388 --- [http-nio-8080-exec-10] p.p.b.repository.BlogRepo.getLastBlog    : ==> Parameters: 2017-06-12 15:55:49.0(Timestamp)
2017-09-14 21:42:00.736 DEBUG 8388 --- [http-nio-8080-exec-10] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 21:42:00.736 DEBUG 8388 --- [http-nio-8080-exec-10] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 24(String)
2017-09-14 21:42:00.738 DEBUG 8388 --- [http-nio-8080-exec-10] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 21:42:00.739 DEBUG 8388 --- [http-nio-8080-exec-10] p.p.b.repository.BlogRepo.getLastBlog    : <==      Total: 1
2017-09-14 21:42:00.743 DEBUG 8388 --- [http-nio-8080-exec-10] p.p.b.repository.BlogRepo.getNextBlog    : ==>  Preparing: select * from t_blog t where t.releaseDate > ? order by releaseDate asc limit 1 
2017-09-14 21:42:00.743 DEBUG 8388 --- [http-nio-8080-exec-10] p.p.b.repository.BlogRepo.getNextBlog    : ==> Parameters: 2017-06-12 15:55:49.0(Timestamp)
2017-09-14 21:42:00.747 DEBUG 8388 --- [http-nio-8080-exec-10] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 21:42:00.747 DEBUG 8388 --- [http-nio-8080-exec-10] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 28(String)
2017-09-14 21:42:00.749 DEBUG 8388 --- [http-nio-8080-exec-10] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 21:42:00.749 DEBUG 8388 --- [http-nio-8080-exec-10] p.p.b.repository.BlogRepo.getNextBlog    : <==      Total: 1
2017-09-14 21:42:14.452 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.blog.repository.BlogRepo.update      : ==>  Preparing: update t_blog SET title=?, summary=?, typeId=?, content=?, clickHit=?, replyHit=?, keyWord=? where id=? 
2017-09-14 21:42:14.458 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.blog.repository.BlogRepo.update      : ==> Parameters: 在Linux下使用JavaMail发送邮件报错：javax.mail.MessagingException: Unknown SMTP host:(String), 错误日志javax.mail.MessagingException: Unknown SMTP host: smtp.fuyaogroup.com;  nested exception is:	java.net.UnknownHostException: smtp.fuyaogroup.com	at com.(String), 23(String), <p>错误日志</p><pre class="brush:java;toolbar:false">javax.mail.MessagingException:&nbsp;Unknown&nbsp;SMTP&nbsp;host:&nbsp;smtp.fuyaogroup.com;
&nbsp;&nbsp;nested&nbsp;exception&nbsp;is:
	java.net.UnknownHostException:&nbsp;smtp.fuyaogroup.com
	at&nbsp;com.sun.mail.smtp.SMTPTransport.openServer(SMTPTransport.java:1280)
	at&nbsp;com.sun.mail.smtp.SMTPTransport.protocolConnect(SMTPTransport.java:370)
	at&nbsp;javax.mail.Service.connect(Service.java:295)
	at&nbsp;javax.mail.Service.connect(Service.java:176)
	at&nbsp;javax.mail.Service.connect(Service.java:196)
	at&nbsp;com.WebServicesCc.sendMail(WebServicesCc.java:260)
	at&nbsp;com.WebServicesCc.sendMail(WebServicesCc.java:204)
	at&nbsp;sun.reflect.NativeMethodAccessorImpl.invoke0(Native&nbsp;Method)
	at&nbsp;sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at&nbsp;sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at&nbsp;java.lang.reflect.Method.invoke(Method.java:606)
	at&nbsp;org.apache.axis2.rpc.receivers.RPCUtil.invokeServiceClass(RPCUtil.java:212)
	at&nbsp;org.apache.axis2.rpc.receivers.RPCMessageReceiver.invokeBusinessLogic(RPCMessageReceiver.java:117)
	at&nbsp;org.apache.axis2.receivers.AbstractInOutMessageReceiver.invokeBusinessLogic(AbstractInOutMessageReceiver.java:40)
	at&nbsp;org.apache.axis2.receivers.AbstractMessageReceiver.receive(AbstractMessageReceiver.java:114)
	at&nbsp;org.apache.axis2.engine.AxisEngine.receive(AxisEngine.java:181)
	at&nbsp;org.apache.axis2.transport.http.HTTPTransportUtils.processHTTPPostRequest(HTTPTransportUtils.java:172)
	at&nbsp;org.apache.axis2.transport.http.AxisServlet.doPost(AxisServlet.java:146)
	at&nbsp;javax.servlet.http.HttpServlet.service(HttpServlet.java:650)
	at&nbsp;javax.servlet.http.HttpServlet.service(HttpServlet.java:731)
	at&nbsp;org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:303)
	at&nbsp;org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:208)
	at&nbsp;org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at&nbsp;org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:241)
	at&nbsp;org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:208)
	at&nbsp;org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:218)
	at&nbsp;org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:122)
	at&nbsp;org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:505)
	at&nbsp;org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:169)
	at&nbsp;org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:103)
	at&nbsp;org.apache.catalina.valves.AccessLogValve.invoke(AccessLogValve.java:958)
	at&nbsp;org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:116)
	at&nbsp;org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:452)
	at&nbsp;org.apache.coyote.http11.AbstractHttp11Processor.process(AbstractHttp11Processor.java:1087)
	at&nbsp;org.apache.coyote.AbstractProtocol$AbstractConnectionHandler.process(AbstractProtocol.java:637)
	at&nbsp;org.apache.tomcat.util.net.JIoEndpoint$SocketProcessor.run(JIoEndpoint.java:316)
	at&nbsp;java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
	at&nbsp;java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
	at&nbsp;org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at&nbsp;java.lang.Thread.run(Thread.java:745)
Caused&nbsp;by:&nbsp;java.net.UnknownHostException:&nbsp;smtp.fuyaogroup.com
	at&nbsp;java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:178)
	at&nbsp;java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at&nbsp;java.net.Socket.connect(Socket.java:579)
	at&nbsp;java.net.Socket.connect(Socket.java:528)
	at&nbsp;com.sun.mail.util.SocketFetcher.createSocket(SocketFetcher.java:321)
	at&nbsp;com.sun.mail.util.SocketFetcher.getSocket(SocketFetcher.java:237)
	at&nbsp;com.sun.mail.smtp.SMTPTransport.openServer(SMTPTransport.java:1250)
	...&nbsp;39&nbsp;more</pre><p><br/></p><p><strong>解决方法：</strong><br/>试了网上很多方法 &nbsp; 后台把域名换成ip可以了。</p><p><br/></p>(String), 42(Integer), 0(Integer), 在Linux下使用JavaMail发送邮件报错：javax.mail.MessagingException: Unknown SMTP host:(String), 271(String)
2017-09-14 21:42:14.461 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.blog.repository.BlogRepo.update      : <==    Updates: 1
2017-09-14 21:42:14.463 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.blog.repository.CommentRepo.list     : ==>  Preparing: select * from t_comment WHERE blogId=? and state=? order by commentDate desc 
2017-09-14 21:42:14.464 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.blog.repository.CommentRepo.list     : ==> Parameters: 271(String), 1(Integer)
2017-09-14 21:42:14.471 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.blog.repository.CommentRepo.list     : <==      Total: 0
2017-09-14 21:42:33.536 DEBUG 8388 --- [http-nio-8080-exec-1] p.p.blog.repository.BlogRepo.list        : ==>  Preparing: select * from t_blog order by releaseDate desc limit ?,? 
2017-09-14 21:42:33.537 DEBUG 8388 --- [http-nio-8080-exec-1] p.p.blog.repository.BlogRepo.list        : ==> Parameters: 0(Integer), 10(Integer)
2017-09-14 21:42:33.541 DEBUG 8388 --- [http-nio-8080-exec-1] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 21:42:33.542 DEBUG 8388 --- [http-nio-8080-exec-1] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 11(String)
2017-09-14 21:42:33.543 DEBUG 8388 --- [http-nio-8080-exec-1] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 21:42:33.544 DEBUG 8388 --- [http-nio-8080-exec-1] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 21:42:33.544 DEBUG 8388 --- [http-nio-8080-exec-1] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 1(String)
2017-09-14 21:42:33.549 DEBUG 8388 --- [http-nio-8080-exec-1] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 21:42:33.550 DEBUG 8388 --- [http-nio-8080-exec-1] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 21:42:33.551 DEBUG 8388 --- [http-nio-8080-exec-1] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 12(String)
2017-09-14 21:42:33.553 DEBUG 8388 --- [http-nio-8080-exec-1] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 21:42:33.554 DEBUG 8388 --- [http-nio-8080-exec-1] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 21:42:33.554 DEBUG 8388 --- [http-nio-8080-exec-1] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 32(String)
2017-09-14 21:42:33.556 DEBUG 8388 --- [http-nio-8080-exec-1] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 21:42:33.557 DEBUG 8388 --- [http-nio-8080-exec-1] p.p.blog.repository.BlogRepo.list        : <==      Total: 10
2017-09-14 21:42:33.566 DEBUG 8388 --- [http-nio-8080-exec-1] p.p.blog.repository.BlogRepo.getTotal    : ==>  Preparing: select count(*) from t_blog 
2017-09-14 21:42:33.566 DEBUG 8388 --- [http-nio-8080-exec-1] p.p.blog.repository.BlogRepo.getTotal    : ==> Parameters: 
2017-09-14 21:42:33.569 DEBUG 8388 --- [http-nio-8080-exec-1] p.p.blog.repository.BlogRepo.getTotal    : <==      Total: 1
2017-09-14 21:48:45.290 DEBUG 8388 --- [http-nio-8080-exec-4] p.p.blog.repository.BlogRepo.list        : ==>  Preparing: select * from t_blog order by releaseDate desc limit ?,? 
2017-09-14 21:48:45.293 DEBUG 8388 --- [http-nio-8080-exec-4] p.p.blog.repository.BlogRepo.list        : ==> Parameters: 10(Integer), 10(Integer)
2017-09-14 21:48:45.296 DEBUG 8388 --- [http-nio-8080-exec-4] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 21:48:45.297 DEBUG 8388 --- [http-nio-8080-exec-4] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 11(String)
2017-09-14 21:48:45.298 DEBUG 8388 --- [http-nio-8080-exec-4] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 21:48:45.299 DEBUG 8388 --- [http-nio-8080-exec-4] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 21:48:45.299 DEBUG 8388 --- [http-nio-8080-exec-4] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 12(String)
2017-09-14 21:48:45.301 DEBUG 8388 --- [http-nio-8080-exec-4] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 21:48:45.302 DEBUG 8388 --- [http-nio-8080-exec-4] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 21:48:45.302 DEBUG 8388 --- [http-nio-8080-exec-4] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 27(String)
2017-09-14 21:48:45.303 DEBUG 8388 --- [http-nio-8080-exec-4] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 21:48:45.304 DEBUG 8388 --- [http-nio-8080-exec-4] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 21:48:45.305 DEBUG 8388 --- [http-nio-8080-exec-4] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 31(String)
2017-09-14 21:48:45.306 DEBUG 8388 --- [http-nio-8080-exec-4] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 21:48:45.307 DEBUG 8388 --- [http-nio-8080-exec-4] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 21:48:45.308 DEBUG 8388 --- [http-nio-8080-exec-4] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 28(String)
2017-09-14 21:48:45.309 DEBUG 8388 --- [http-nio-8080-exec-4] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 21:48:45.310 DEBUG 8388 --- [http-nio-8080-exec-4] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 21:48:45.310 DEBUG 8388 --- [http-nio-8080-exec-4] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 14(String)
2017-09-14 21:48:45.312 DEBUG 8388 --- [http-nio-8080-exec-4] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 21:48:45.313 DEBUG 8388 --- [http-nio-8080-exec-4] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 21:48:45.313 DEBUG 8388 --- [http-nio-8080-exec-4] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 1(String)
2017-09-14 21:48:45.315 DEBUG 8388 --- [http-nio-8080-exec-4] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 21:48:45.316 DEBUG 8388 --- [http-nio-8080-exec-4] p.p.blog.repository.BlogRepo.list        : <==      Total: 10
2017-09-14 21:48:45.328 DEBUG 8388 --- [http-nio-8080-exec-4] p.p.blog.repository.BlogRepo.getTotal    : ==>  Preparing: select count(*) from t_blog 
2017-09-14 21:48:45.329 DEBUG 8388 --- [http-nio-8080-exec-4] p.p.blog.repository.BlogRepo.getTotal    : ==> Parameters: 
2017-09-14 21:48:45.330 DEBUG 8388 --- [http-nio-8080-exec-4] p.p.blog.repository.BlogRepo.getTotal    : <==      Total: 1
2017-09-14 21:51:04.554 DEBUG 8388 --- [http-nio-8080-exec-9] p.p.blog.repository.BlogRepo.list        : ==>  Preparing: select * from t_blog order by releaseDate desc limit ?,? 
2017-09-14 21:51:04.554 DEBUG 8388 --- [http-nio-8080-exec-9] p.p.blog.repository.BlogRepo.list        : ==> Parameters: 10(Integer), 10(Integer)
2017-09-14 21:51:04.559 DEBUG 8388 --- [http-nio-8080-exec-9] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 21:51:04.559 DEBUG 8388 --- [http-nio-8080-exec-9] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 11(String)
2017-09-14 21:51:04.560 DEBUG 8388 --- [http-nio-8080-exec-9] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 21:51:04.561 DEBUG 8388 --- [http-nio-8080-exec-9] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 21:51:04.562 DEBUG 8388 --- [http-nio-8080-exec-9] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 12(String)
2017-09-14 21:51:04.563 DEBUG 8388 --- [http-nio-8080-exec-9] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 21:51:04.564 DEBUG 8388 --- [http-nio-8080-exec-9] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 21:51:04.564 DEBUG 8388 --- [http-nio-8080-exec-9] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 27(String)
2017-09-14 21:51:04.566 DEBUG 8388 --- [http-nio-8080-exec-9] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 21:51:04.567 DEBUG 8388 --- [http-nio-8080-exec-9] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 21:51:04.567 DEBUG 8388 --- [http-nio-8080-exec-9] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 31(String)
2017-09-14 21:51:04.571 DEBUG 8388 --- [http-nio-8080-exec-9] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 21:51:04.572 DEBUG 8388 --- [http-nio-8080-exec-9] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 21:51:04.573 DEBUG 8388 --- [http-nio-8080-exec-9] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 28(String)
2017-09-14 21:51:04.574 DEBUG 8388 --- [http-nio-8080-exec-9] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 21:51:04.575 DEBUG 8388 --- [http-nio-8080-exec-9] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 21:51:04.576 DEBUG 8388 --- [http-nio-8080-exec-9] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 14(String)
2017-09-14 21:51:04.577 DEBUG 8388 --- [http-nio-8080-exec-9] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 21:51:04.578 DEBUG 8388 --- [http-nio-8080-exec-9] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 21:51:04.578 DEBUG 8388 --- [http-nio-8080-exec-9] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 1(String)
2017-09-14 21:51:04.580 DEBUG 8388 --- [http-nio-8080-exec-9] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 21:51:04.580 DEBUG 8388 --- [http-nio-8080-exec-9] p.p.blog.repository.BlogRepo.list        : <==      Total: 10
2017-09-14 21:51:04.602 DEBUG 8388 --- [http-nio-8080-exec-9] p.p.blog.repository.BlogRepo.getTotal    : ==>  Preparing: select count(*) from t_blog 
2017-09-14 21:51:04.602 DEBUG 8388 --- [http-nio-8080-exec-9] p.p.blog.repository.BlogRepo.getTotal    : ==> Parameters: 
2017-09-14 21:51:04.605 DEBUG 8388 --- [http-nio-8080-exec-9] p.p.blog.repository.BlogRepo.getTotal    : <==      Total: 1
2017-09-14 21:54:42.358 DEBUG 8388 --- [http-nio-8080-exec-10] p.p.blog.repository.BlogRepo.list        : ==>  Preparing: select * from t_blog order by releaseDate desc limit ?,? 
2017-09-14 21:54:42.359 DEBUG 8388 --- [http-nio-8080-exec-10] p.p.blog.repository.BlogRepo.list        : ==> Parameters: 10(Integer), 10(Integer)
2017-09-14 21:54:42.364 DEBUG 8388 --- [http-nio-8080-exec-10] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 21:54:42.364 DEBUG 8388 --- [http-nio-8080-exec-10] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 11(String)
2017-09-14 21:54:42.366 DEBUG 8388 --- [http-nio-8080-exec-10] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 21:54:42.367 DEBUG 8388 --- [http-nio-8080-exec-10] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 21:54:42.367 DEBUG 8388 --- [http-nio-8080-exec-10] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 12(String)
2017-09-14 21:54:42.368 DEBUG 8388 --- [http-nio-8080-exec-10] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 21:54:42.369 DEBUG 8388 --- [http-nio-8080-exec-10] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 21:54:42.369 DEBUG 8388 --- [http-nio-8080-exec-10] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 27(String)
2017-09-14 21:54:42.371 DEBUG 8388 --- [http-nio-8080-exec-10] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 21:54:42.371 DEBUG 8388 --- [http-nio-8080-exec-10] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 21:54:42.372 DEBUG 8388 --- [http-nio-8080-exec-10] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 31(String)
2017-09-14 21:54:42.373 DEBUG 8388 --- [http-nio-8080-exec-10] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 21:54:42.374 DEBUG 8388 --- [http-nio-8080-exec-10] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 21:54:42.374 DEBUG 8388 --- [http-nio-8080-exec-10] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 28(String)
2017-09-14 21:54:42.376 DEBUG 8388 --- [http-nio-8080-exec-10] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 21:54:42.377 DEBUG 8388 --- [http-nio-8080-exec-10] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 21:54:42.377 DEBUG 8388 --- [http-nio-8080-exec-10] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 14(String)
2017-09-14 21:54:42.379 DEBUG 8388 --- [http-nio-8080-exec-10] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 21:54:42.379 DEBUG 8388 --- [http-nio-8080-exec-10] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 21:54:42.380 DEBUG 8388 --- [http-nio-8080-exec-10] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 1(String)
2017-09-14 21:54:42.381 DEBUG 8388 --- [http-nio-8080-exec-10] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 21:54:42.382 DEBUG 8388 --- [http-nio-8080-exec-10] p.p.blog.repository.BlogRepo.list        : <==      Total: 10
2017-09-14 21:54:42.393 DEBUG 8388 --- [http-nio-8080-exec-10] p.p.blog.repository.BlogRepo.getTotal    : ==>  Preparing: select count(*) from t_blog 
2017-09-14 21:54:42.394 DEBUG 8388 --- [http-nio-8080-exec-10] p.p.blog.repository.BlogRepo.getTotal    : ==> Parameters: 
2017-09-14 21:54:42.398 DEBUG 8388 --- [http-nio-8080-exec-10] p.p.blog.repository.BlogRepo.getTotal    : <==      Total: 1
2017-09-14 21:57:39.163 DEBUG 8388 --- [http-nio-8080-exec-6] p.p.blog.repository.BlogRepo.list        : ==>  Preparing: select * from t_blog order by releaseDate desc limit ?,? 
2017-09-14 21:57:39.164 DEBUG 8388 --- [http-nio-8080-exec-6] p.p.blog.repository.BlogRepo.list        : ==> Parameters: 10(Integer), 10(Integer)
2017-09-14 21:57:39.167 DEBUG 8388 --- [http-nio-8080-exec-6] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 21:57:39.167 DEBUG 8388 --- [http-nio-8080-exec-6] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 11(String)
2017-09-14 21:57:39.169 DEBUG 8388 --- [http-nio-8080-exec-6] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 21:57:39.170 DEBUG 8388 --- [http-nio-8080-exec-6] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 21:57:39.171 DEBUG 8388 --- [http-nio-8080-exec-6] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 12(String)
2017-09-14 21:57:39.172 DEBUG 8388 --- [http-nio-8080-exec-6] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 21:57:39.173 DEBUG 8388 --- [http-nio-8080-exec-6] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 21:57:39.175 DEBUG 8388 --- [http-nio-8080-exec-6] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 27(String)
2017-09-14 21:57:39.176 DEBUG 8388 --- [http-nio-8080-exec-6] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 21:57:39.177 DEBUG 8388 --- [http-nio-8080-exec-6] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 21:57:39.177 DEBUG 8388 --- [http-nio-8080-exec-6] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 31(String)
2017-09-14 21:57:39.179 DEBUG 8388 --- [http-nio-8080-exec-6] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 21:57:39.180 DEBUG 8388 --- [http-nio-8080-exec-6] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 21:57:39.180 DEBUG 8388 --- [http-nio-8080-exec-6] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 28(String)
2017-09-14 21:57:39.183 DEBUG 8388 --- [http-nio-8080-exec-6] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 21:57:39.184 DEBUG 8388 --- [http-nio-8080-exec-6] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 21:57:39.184 DEBUG 8388 --- [http-nio-8080-exec-6] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 14(String)
2017-09-14 21:57:39.186 DEBUG 8388 --- [http-nio-8080-exec-6] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 21:57:39.187 DEBUG 8388 --- [http-nio-8080-exec-6] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 21:57:39.187 DEBUG 8388 --- [http-nio-8080-exec-6] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 1(String)
2017-09-14 21:57:39.189 DEBUG 8388 --- [http-nio-8080-exec-6] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 21:57:39.191 DEBUG 8388 --- [http-nio-8080-exec-6] p.p.blog.repository.BlogRepo.list        : <==      Total: 10
2017-09-14 21:57:39.201 DEBUG 8388 --- [http-nio-8080-exec-6] p.p.blog.repository.BlogRepo.getTotal    : ==>  Preparing: select count(*) from t_blog 
2017-09-14 21:57:39.201 DEBUG 8388 --- [http-nio-8080-exec-6] p.p.blog.repository.BlogRepo.getTotal    : ==> Parameters: 
2017-09-14 21:57:39.203 DEBUG 8388 --- [http-nio-8080-exec-6] p.p.blog.repository.BlogRepo.getTotal    : <==      Total: 1
2017-09-14 21:58:08.341 DEBUG 8388 --- [http-nio-8080-exec-2] p.p.blog.repository.BlogRepo.list        : ==>  Preparing: select * from t_blog order by releaseDate desc limit ?,? 
2017-09-14 21:58:08.343 DEBUG 8388 --- [http-nio-8080-exec-2] p.p.blog.repository.BlogRepo.list        : ==> Parameters: 10(Integer), 10(Integer)
2017-09-14 21:58:08.347 DEBUG 8388 --- [http-nio-8080-exec-2] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 21:58:08.347 DEBUG 8388 --- [http-nio-8080-exec-2] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 11(String)
2017-09-14 21:58:08.348 DEBUG 8388 --- [http-nio-8080-exec-2] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 21:58:08.349 DEBUG 8388 --- [http-nio-8080-exec-2] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 21:58:08.350 DEBUG 8388 --- [http-nio-8080-exec-2] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 12(String)
2017-09-14 21:58:08.351 DEBUG 8388 --- [http-nio-8080-exec-2] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 21:58:08.352 DEBUG 8388 --- [http-nio-8080-exec-2] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 21:58:08.353 DEBUG 8388 --- [http-nio-8080-exec-2] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 27(String)
2017-09-14 21:58:08.354 DEBUG 8388 --- [http-nio-8080-exec-2] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 21:58:08.355 DEBUG 8388 --- [http-nio-8080-exec-2] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 21:58:08.356 DEBUG 8388 --- [http-nio-8080-exec-2] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 31(String)
2017-09-14 21:58:08.357 DEBUG 8388 --- [http-nio-8080-exec-2] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 21:58:08.358 DEBUG 8388 --- [http-nio-8080-exec-2] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 21:58:08.358 DEBUG 8388 --- [http-nio-8080-exec-2] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 28(String)
2017-09-14 21:58:08.359 DEBUG 8388 --- [http-nio-8080-exec-2] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 21:58:08.360 DEBUG 8388 --- [http-nio-8080-exec-2] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 21:58:08.360 DEBUG 8388 --- [http-nio-8080-exec-2] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 14(String)
2017-09-14 21:58:08.362 DEBUG 8388 --- [http-nio-8080-exec-2] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 21:58:08.363 DEBUG 8388 --- [http-nio-8080-exec-2] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 21:58:08.363 DEBUG 8388 --- [http-nio-8080-exec-2] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 1(String)
2017-09-14 21:58:08.365 DEBUG 8388 --- [http-nio-8080-exec-2] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 21:58:08.366 DEBUG 8388 --- [http-nio-8080-exec-2] p.p.blog.repository.BlogRepo.list        : <==      Total: 10
2017-09-14 21:58:08.379 DEBUG 8388 --- [http-nio-8080-exec-2] p.p.blog.repository.BlogRepo.getTotal    : ==>  Preparing: select count(*) from t_blog 
2017-09-14 21:58:08.380 DEBUG 8388 --- [http-nio-8080-exec-2] p.p.blog.repository.BlogRepo.getTotal    : ==> Parameters: 
2017-09-14 21:58:08.384 DEBUG 8388 --- [http-nio-8080-exec-2] p.p.blog.repository.BlogRepo.getTotal    : <==      Total: 1
2017-09-14 21:58:55.763 DEBUG 8388 --- [http-nio-8080-exec-5] p.p.blog.repository.BlogRepo.list        : ==>  Preparing: select * from t_blog order by releaseDate desc limit ?,? 
2017-09-14 21:58:55.764 DEBUG 8388 --- [http-nio-8080-exec-5] p.p.blog.repository.BlogRepo.list        : ==> Parameters: 40(Integer), 10(Integer)
2017-09-14 21:58:55.768 DEBUG 8388 --- [http-nio-8080-exec-5] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 21:58:55.769 DEBUG 8388 --- [http-nio-8080-exec-5] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 24(String)
2017-09-14 21:58:55.773 DEBUG 8388 --- [http-nio-8080-exec-5] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 21:58:55.774 DEBUG 8388 --- [http-nio-8080-exec-5] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 21:58:55.774 DEBUG 8388 --- [http-nio-8080-exec-5] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 23(String)
2017-09-14 21:58:55.777 DEBUG 8388 --- [http-nio-8080-exec-5] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 21:58:55.778 DEBUG 8388 --- [http-nio-8080-exec-5] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 21:58:55.778 DEBUG 8388 --- [http-nio-8080-exec-5] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 28(String)
2017-09-14 21:58:55.782 DEBUG 8388 --- [http-nio-8080-exec-5] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 21:58:55.783 DEBUG 8388 --- [http-nio-8080-exec-5] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 21:58:55.783 DEBUG 8388 --- [http-nio-8080-exec-5] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 1(String)
2017-09-14 21:58:55.791 DEBUG 8388 --- [http-nio-8080-exec-5] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 21:58:55.792 DEBUG 8388 --- [http-nio-8080-exec-5] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 21:58:55.792 DEBUG 8388 --- [http-nio-8080-exec-5] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 11(String)
2017-09-14 21:58:55.794 DEBUG 8388 --- [http-nio-8080-exec-5] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 21:58:55.796 DEBUG 8388 --- [http-nio-8080-exec-5] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 21:58:55.796 DEBUG 8388 --- [http-nio-8080-exec-5] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 25(String)
2017-09-14 21:58:55.797 DEBUG 8388 --- [http-nio-8080-exec-5] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 21:58:55.798 DEBUG 8388 --- [http-nio-8080-exec-5] p.p.blog.repository.BlogRepo.list        : <==      Total: 10
2017-09-14 21:58:55.802 DEBUG 8388 --- [http-nio-8080-exec-5] p.p.blog.repository.BlogRepo.getTotal    : ==>  Preparing: select count(*) from t_blog 
2017-09-14 21:58:55.803 DEBUG 8388 --- [http-nio-8080-exec-5] p.p.blog.repository.BlogRepo.getTotal    : ==> Parameters: 
2017-09-14 21:58:55.804 DEBUG 8388 --- [http-nio-8080-exec-5] p.p.blog.repository.BlogRepo.getTotal    : <==      Total: 1
2017-09-14 21:58:58.799 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.blog.repository.BlogRepo.list        : ==>  Preparing: select * from t_blog order by releaseDate desc limit ?,? 
2017-09-14 21:58:58.799 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.blog.repository.BlogRepo.list        : ==> Parameters: 50(Integer), 10(Integer)
2017-09-14 21:58:58.812 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 21:58:58.812 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 24(String)
2017-09-14 21:58:58.813 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 21:58:58.814 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 21:58:58.814 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 23(String)
2017-09-14 21:58:58.815 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 21:58:58.815 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 21:58:58.815 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 16(String)
2017-09-14 21:58:58.816 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 21:58:58.817 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 21:58:58.818 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 1(String)
2017-09-14 21:58:58.819 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 21:58:58.821 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.blog.repository.BlogRepo.list        : <==      Total: 10
2017-09-14 21:58:58.829 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.blog.repository.BlogRepo.getTotal    : ==>  Preparing: select count(*) from t_blog 
2017-09-14 21:58:58.829 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.blog.repository.BlogRepo.getTotal    : ==> Parameters: 
2017-09-14 21:58:58.830 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.blog.repository.BlogRepo.getTotal    : <==      Total: 1
2017-09-14 22:01:42.217 DEBUG 8388 --- [http-nio-8080-exec-4] p.p.blog.repository.BlogRepo.list        : ==>  Preparing: select * from t_blog order by releaseDate desc limit ?,? 
2017-09-14 22:01:42.218 DEBUG 8388 --- [http-nio-8080-exec-4] p.p.blog.repository.BlogRepo.list        : ==> Parameters: 50(Integer), 10(Integer)
2017-09-14 22:01:42.226 DEBUG 8388 --- [http-nio-8080-exec-4] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 22:01:42.226 DEBUG 8388 --- [http-nio-8080-exec-4] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 24(String)
2017-09-14 22:01:42.229 DEBUG 8388 --- [http-nio-8080-exec-4] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 22:01:42.230 DEBUG 8388 --- [http-nio-8080-exec-4] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 22:01:42.230 DEBUG 8388 --- [http-nio-8080-exec-4] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 23(String)
2017-09-14 22:01:42.232 DEBUG 8388 --- [http-nio-8080-exec-4] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 22:01:42.233 DEBUG 8388 --- [http-nio-8080-exec-4] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 22:01:42.233 DEBUG 8388 --- [http-nio-8080-exec-4] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 16(String)
2017-09-14 22:01:42.235 DEBUG 8388 --- [http-nio-8080-exec-4] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 22:01:42.236 DEBUG 8388 --- [http-nio-8080-exec-4] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 22:01:42.236 DEBUG 8388 --- [http-nio-8080-exec-4] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 1(String)
2017-09-14 22:01:42.238 DEBUG 8388 --- [http-nio-8080-exec-4] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 22:01:42.239 DEBUG 8388 --- [http-nio-8080-exec-4] p.p.blog.repository.BlogRepo.list        : <==      Total: 10
2017-09-14 22:01:42.254 DEBUG 8388 --- [http-nio-8080-exec-4] p.p.blog.repository.BlogRepo.getTotal    : ==>  Preparing: select count(*) from t_blog 
2017-09-14 22:01:42.254 DEBUG 8388 --- [http-nio-8080-exec-4] p.p.blog.repository.BlogRepo.getTotal    : ==> Parameters: 
2017-09-14 22:01:42.257 DEBUG 8388 --- [http-nio-8080-exec-4] p.p.blog.repository.BlogRepo.getTotal    : <==      Total: 1
2017-09-14 22:01:42.302 ERROR 8388 --- [http-nio-8080-exec-4] o.thymeleaf.templateparser.ErrorHandler  : [THYMELEAF][http-nio-8080-exec-4] Fatal error during parsing

org.xml.sax.SAXParseException: 与元素类型 "div" 相关联的属性 "class" 应有左引号。
	at com.sun.org.apache.xerces.internal.util.ErrorHandlerWrapper.createSAXParseException(ErrorHandlerWrapper.java:203)
	at com.sun.org.apache.xerces.internal.util.ErrorHandlerWrapper.fatalError(ErrorHandlerWrapper.java:177)
	at com.sun.org.apache.xerces.internal.impl.XMLErrorReporter.reportError(XMLErrorReporter.java:400)
	at com.sun.org.apache.xerces.internal.impl.XMLErrorReporter.reportError(XMLErrorReporter.java:327)
	at com.sun.org.apache.xerces.internal.impl.XMLScanner.reportFatalError(XMLScanner.java:1438)
	at com.sun.org.apache.xerces.internal.impl.XMLScanner.scanAttributeValue(XMLScanner.java:830)
	at com.sun.org.apache.xerces.internal.impl.XMLDocumentFragmentScannerImpl.scanAttribute(XMLDocumentFragmentScannerImpl.java:1548)
	at com.sun.org.apache.xerces.internal.impl.XMLDocumentFragmentScannerImpl.scanStartElement(XMLDocumentFragmentScannerImpl.java:1320)
	at com.sun.org.apache.xerces.internal.impl.XMLDocumentFragmentScannerImpl$FragmentContentDriver.next(XMLDocumentFragmentScannerImpl.java:2787)
	at com.sun.org.apache.xerces.internal.impl.XMLDocumentScannerImpl.next(XMLDocumentScannerImpl.java:606)
	at com.sun.org.apache.xerces.internal.impl.XMLDocumentFragmentScannerImpl.scanDocument(XMLDocumentFragmentScannerImpl.java:510)
	at com.sun.org.apache.xerces.internal.parsers.XML11Configuration.parse(XML11Configuration.java:848)
	at com.sun.org.apache.xerces.internal.parsers.XML11Configuration.parse(XML11Configuration.java:777)
	at com.sun.org.apache.xerces.internal.parsers.XMLParser.parse(XMLParser.java:141)
	at com.sun.org.apache.xerces.internal.parsers.AbstractSAXParser.parse(AbstractSAXParser.java:1213)
	at com.sun.org.apache.xerces.internal.jaxp.SAXParserImpl$JAXPSAXParser.parse(SAXParserImpl.java:643)
	at com.sun.org.apache.xerces.internal.jaxp.SAXParserImpl.parse(SAXParserImpl.java:327)
	at org.thymeleaf.templateparser.xmlsax.AbstractNonValidatingSAXTemplateParser.doParse(AbstractNonValidatingSAXTemplateParser.java:209)
	at org.thymeleaf.templateparser.xmlsax.AbstractNonValidatingSAXTemplateParser.parseTemplateUsingPool(AbstractNonValidatingSAXTemplateParser.java:134)
	at org.thymeleaf.templateparser.xmlsax.AbstractNonValidatingSAXTemplateParser.parseTemplate(AbstractNonValidatingSAXTemplateParser.java:116)
	at org.thymeleaf.TemplateRepository.getTemplate(TemplateRepository.java:278)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1104)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1060)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1011)
	at org.thymeleaf.spring4.view.ThymeleafView.renderFragment(ThymeleafView.java:335)
	at org.thymeleaf.spring4.view.ThymeleafView.render(ThymeleafView.java:190)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1282)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1037)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:980)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:897)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:861)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:622)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:729)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:230)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:112)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:346)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:262)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:105)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:474)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:79)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:624)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:349)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:783)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:798)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1434)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)

2017-09-14 22:01:42.313 ERROR 8388 --- [http-nio-8080-exec-4] org.thymeleaf.TemplateEngine             : [THYMELEAF][http-nio-8080-exec-4] Exception processing template "mainTemp": Exception parsing document: template="mainTemp", line 23 - column 12
2017-09-14 22:01:42.316 ERROR 8388 --- [http-nio-8080-exec-4] o.a.c.c.C.[.[.[/].[dispatcherServlet]    : Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.thymeleaf.exceptions.TemplateInputException: Exception parsing document: template="mainTemp", line 23 - column 12] with root cause

org.xml.sax.SAXParseException: 与元素类型 "div" 相关联的属性 "class" 应有左引号。
	at com.sun.org.apache.xerces.internal.util.ErrorHandlerWrapper.createSAXParseException(ErrorHandlerWrapper.java:203)
	at com.sun.org.apache.xerces.internal.util.ErrorHandlerWrapper.fatalError(ErrorHandlerWrapper.java:177)
	at com.sun.org.apache.xerces.internal.impl.XMLErrorReporter.reportError(XMLErrorReporter.java:400)
	at com.sun.org.apache.xerces.internal.impl.XMLErrorReporter.reportError(XMLErrorReporter.java:327)
	at com.sun.org.apache.xerces.internal.impl.XMLScanner.reportFatalError(XMLScanner.java:1438)
	at com.sun.org.apache.xerces.internal.impl.XMLScanner.scanAttributeValue(XMLScanner.java:830)
	at com.sun.org.apache.xerces.internal.impl.XMLDocumentFragmentScannerImpl.scanAttribute(XMLDocumentFragmentScannerImpl.java:1548)
	at com.sun.org.apache.xerces.internal.impl.XMLDocumentFragmentScannerImpl.scanStartElement(XMLDocumentFragmentScannerImpl.java:1320)
	at com.sun.org.apache.xerces.internal.impl.XMLDocumentFragmentScannerImpl$FragmentContentDriver.next(XMLDocumentFragmentScannerImpl.java:2787)
	at com.sun.org.apache.xerces.internal.impl.XMLDocumentScannerImpl.next(XMLDocumentScannerImpl.java:606)
	at com.sun.org.apache.xerces.internal.impl.XMLDocumentFragmentScannerImpl.scanDocument(XMLDocumentFragmentScannerImpl.java:510)
	at com.sun.org.apache.xerces.internal.parsers.XML11Configuration.parse(XML11Configuration.java:848)
	at com.sun.org.apache.xerces.internal.parsers.XML11Configuration.parse(XML11Configuration.java:777)
	at com.sun.org.apache.xerces.internal.parsers.XMLParser.parse(XMLParser.java:141)
	at com.sun.org.apache.xerces.internal.parsers.AbstractSAXParser.parse(AbstractSAXParser.java:1213)
	at com.sun.org.apache.xerces.internal.jaxp.SAXParserImpl$JAXPSAXParser.parse(SAXParserImpl.java:643)
	at com.sun.org.apache.xerces.internal.jaxp.SAXParserImpl.parse(SAXParserImpl.java:327)
	at org.thymeleaf.templateparser.xmlsax.AbstractNonValidatingSAXTemplateParser.doParse(AbstractNonValidatingSAXTemplateParser.java:209)
	at org.thymeleaf.templateparser.xmlsax.AbstractNonValidatingSAXTemplateParser.parseTemplateUsingPool(AbstractNonValidatingSAXTemplateParser.java:134)
	at org.thymeleaf.templateparser.xmlsax.AbstractNonValidatingSAXTemplateParser.parseTemplate(AbstractNonValidatingSAXTemplateParser.java:116)
	at org.thymeleaf.TemplateRepository.getTemplate(TemplateRepository.java:278)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1104)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1060)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1011)
	at org.thymeleaf.spring4.view.ThymeleafView.renderFragment(ThymeleafView.java:335)
	at org.thymeleaf.spring4.view.ThymeleafView.render(ThymeleafView.java:190)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1282)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1037)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:980)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:897)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:861)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:622)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:729)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:230)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:112)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:346)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:262)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:105)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:474)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:79)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:624)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:349)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:783)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:798)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1434)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)

2017-09-14 22:02:08.576 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.blog.repository.BlogRepo.list        : ==>  Preparing: select * from t_blog order by releaseDate desc limit ?,? 
2017-09-14 22:02:08.577 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.blog.repository.BlogRepo.list        : ==> Parameters: 50(Integer), 10(Integer)
2017-09-14 22:02:08.582 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 22:02:08.583 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 24(String)
2017-09-14 22:02:08.586 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 22:02:08.589 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 22:02:08.590 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 23(String)
2017-09-14 22:02:08.591 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 22:02:08.592 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 22:02:08.593 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 16(String)
2017-09-14 22:02:08.594 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 22:02:08.595 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 22:02:08.595 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 1(String)
2017-09-14 22:02:08.597 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 22:02:08.599 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.blog.repository.BlogRepo.list        : <==      Total: 10
2017-09-14 22:02:08.619 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.blog.repository.BlogRepo.getTotal    : ==>  Preparing: select count(*) from t_blog 
2017-09-14 22:02:08.621 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.blog.repository.BlogRepo.getTotal    : ==> Parameters: 
2017-09-14 22:02:08.629 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.blog.repository.BlogRepo.getTotal    : <==      Total: 1
2017-09-14 22:02:54.885 DEBUG 8388 --- [http-nio-8080-exec-1] p.p.blog.repository.BlogRepo.list        : ==>  Preparing: select * from t_blog order by releaseDate desc limit ?,? 
2017-09-14 22:02:54.886 DEBUG 8388 --- [http-nio-8080-exec-1] p.p.blog.repository.BlogRepo.list        : ==> Parameters: 50(Integer), 10(Integer)
2017-09-14 22:02:54.892 DEBUG 8388 --- [http-nio-8080-exec-1] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 22:02:54.892 DEBUG 8388 --- [http-nio-8080-exec-1] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 24(String)
2017-09-14 22:02:54.894 DEBUG 8388 --- [http-nio-8080-exec-1] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 22:02:54.896 DEBUG 8388 --- [http-nio-8080-exec-1] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 22:02:54.896 DEBUG 8388 --- [http-nio-8080-exec-1] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 23(String)
2017-09-14 22:02:54.898 DEBUG 8388 --- [http-nio-8080-exec-1] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 22:02:54.899 DEBUG 8388 --- [http-nio-8080-exec-1] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 22:02:54.899 DEBUG 8388 --- [http-nio-8080-exec-1] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 16(String)
2017-09-14 22:02:54.901 DEBUG 8388 --- [http-nio-8080-exec-1] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 22:02:54.902 DEBUG 8388 --- [http-nio-8080-exec-1] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 22:02:54.902 DEBUG 8388 --- [http-nio-8080-exec-1] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 1(String)
2017-09-14 22:02:54.904 DEBUG 8388 --- [http-nio-8080-exec-1] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 22:02:54.906 DEBUG 8388 --- [http-nio-8080-exec-1] p.p.blog.repository.BlogRepo.list        : <==      Total: 10
2017-09-14 22:02:54.916 DEBUG 8388 --- [http-nio-8080-exec-1] p.p.blog.repository.BlogRepo.getTotal    : ==>  Preparing: select count(*) from t_blog 
2017-09-14 22:02:54.916 DEBUG 8388 --- [http-nio-8080-exec-1] p.p.blog.repository.BlogRepo.getTotal    : ==> Parameters: 
2017-09-14 22:02:54.918 DEBUG 8388 --- [http-nio-8080-exec-1] p.p.blog.repository.BlogRepo.getTotal    : <==      Total: 1
2017-09-14 22:04:27.183 DEBUG 8388 --- [http-nio-8080-exec-4] p.p.blog.repository.BlogRepo.list        : ==>  Preparing: select * from t_blog order by releaseDate desc limit ?,? 
2017-09-14 22:04:27.183 DEBUG 8388 --- [http-nio-8080-exec-4] p.p.blog.repository.BlogRepo.list        : ==> Parameters: 50(Integer), 10(Integer)
2017-09-14 22:04:27.190 DEBUG 8388 --- [http-nio-8080-exec-4] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 22:04:27.191 DEBUG 8388 --- [http-nio-8080-exec-4] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 24(String)
2017-09-14 22:04:27.192 DEBUG 8388 --- [http-nio-8080-exec-4] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 22:04:27.193 DEBUG 8388 --- [http-nio-8080-exec-4] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 22:04:27.194 DEBUG 8388 --- [http-nio-8080-exec-4] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 23(String)
2017-09-14 22:04:27.195 DEBUG 8388 --- [http-nio-8080-exec-4] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 22:04:27.196 DEBUG 8388 --- [http-nio-8080-exec-4] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 22:04:27.196 DEBUG 8388 --- [http-nio-8080-exec-4] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 16(String)
2017-09-14 22:04:27.198 DEBUG 8388 --- [http-nio-8080-exec-4] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 22:04:27.199 DEBUG 8388 --- [http-nio-8080-exec-4] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 22:04:27.200 DEBUG 8388 --- [http-nio-8080-exec-4] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 1(String)
2017-09-14 22:04:27.202 DEBUG 8388 --- [http-nio-8080-exec-4] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 22:04:27.206 DEBUG 8388 --- [http-nio-8080-exec-4] p.p.blog.repository.BlogRepo.list        : <==      Total: 10
2017-09-14 22:04:27.214 DEBUG 8388 --- [http-nio-8080-exec-4] p.p.blog.repository.BlogRepo.getTotal    : ==>  Preparing: select count(*) from t_blog 
2017-09-14 22:04:27.214 DEBUG 8388 --- [http-nio-8080-exec-4] p.p.blog.repository.BlogRepo.getTotal    : ==> Parameters: 
2017-09-14 22:04:27.215 DEBUG 8388 --- [http-nio-8080-exec-4] p.p.blog.repository.BlogRepo.getTotal    : <==      Total: 1
2017-09-14 22:04:51.250 DEBUG 8388 --- [http-nio-8080-exec-2] p.p.blog.repository.BlogRepo.list        : ==>  Preparing: select * from t_blog order by releaseDate desc limit ?,? 
2017-09-14 22:04:51.251 DEBUG 8388 --- [http-nio-8080-exec-2] p.p.blog.repository.BlogRepo.list        : ==> Parameters: 50(Integer), 10(Integer)
2017-09-14 22:04:51.259 DEBUG 8388 --- [http-nio-8080-exec-2] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 22:04:51.259 DEBUG 8388 --- [http-nio-8080-exec-2] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 24(String)
2017-09-14 22:04:51.261 DEBUG 8388 --- [http-nio-8080-exec-2] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 22:04:51.262 DEBUG 8388 --- [http-nio-8080-exec-2] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 22:04:51.263 DEBUG 8388 --- [http-nio-8080-exec-2] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 23(String)
2017-09-14 22:04:51.264 DEBUG 8388 --- [http-nio-8080-exec-2] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 22:04:51.265 DEBUG 8388 --- [http-nio-8080-exec-2] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 22:04:51.265 DEBUG 8388 --- [http-nio-8080-exec-2] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 16(String)
2017-09-14 22:04:51.266 DEBUG 8388 --- [http-nio-8080-exec-2] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 22:04:51.267 DEBUG 8388 --- [http-nio-8080-exec-2] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 22:04:51.268 DEBUG 8388 --- [http-nio-8080-exec-2] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 1(String)
2017-09-14 22:04:51.269 DEBUG 8388 --- [http-nio-8080-exec-2] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 22:04:51.271 DEBUG 8388 --- [http-nio-8080-exec-2] p.p.blog.repository.BlogRepo.list        : <==      Total: 10
2017-09-14 22:04:51.280 DEBUG 8388 --- [http-nio-8080-exec-2] p.p.blog.repository.BlogRepo.getTotal    : ==>  Preparing: select count(*) from t_blog 
2017-09-14 22:04:51.281 DEBUG 8388 --- [http-nio-8080-exec-2] p.p.blog.repository.BlogRepo.getTotal    : ==> Parameters: 
2017-09-14 22:04:51.282 DEBUG 8388 --- [http-nio-8080-exec-2] p.p.blog.repository.BlogRepo.getTotal    : <==      Total: 1
2017-09-14 22:12:10.512 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.blog.repository.BlogRepo.list        : ==>  Preparing: select * from t_blog order by releaseDate desc limit ?,? 
2017-09-14 22:12:10.512 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.blog.repository.BlogRepo.list        : ==> Parameters: 50(Integer), 10(Integer)
2017-09-14 22:12:10.517 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 22:12:10.518 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 24(String)
2017-09-14 22:12:10.521 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 22:12:10.525 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 22:12:10.525 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 23(String)
2017-09-14 22:12:10.526 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 22:12:10.527 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 22:12:10.528 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 16(String)
2017-09-14 22:12:10.529 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 22:12:10.531 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 22:12:10.531 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 1(String)
2017-09-14 22:12:10.534 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 22:12:10.538 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.blog.repository.BlogRepo.list        : <==      Total: 10
2017-09-14 22:12:10.546 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.blog.repository.BlogRepo.getTotal    : ==>  Preparing: select count(*) from t_blog 
2017-09-14 22:12:10.546 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.blog.repository.BlogRepo.getTotal    : ==> Parameters: 
2017-09-14 22:12:10.549 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.blog.repository.BlogRepo.getTotal    : <==      Total: 1
2017-09-14 22:12:53.582 DEBUG 8388 --- [http-nio-8080-exec-9] p.p.blog.repository.BlogRepo.list        : ==>  Preparing: select * from t_blog order by releaseDate desc limit ?,? 
2017-09-14 22:12:53.582 DEBUG 8388 --- [http-nio-8080-exec-9] p.p.blog.repository.BlogRepo.list        : ==> Parameters: 50(Integer), 10(Integer)
2017-09-14 22:12:53.589 DEBUG 8388 --- [http-nio-8080-exec-9] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 22:12:53.589 DEBUG 8388 --- [http-nio-8080-exec-9] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 24(String)
2017-09-14 22:12:53.591 DEBUG 8388 --- [http-nio-8080-exec-9] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 22:12:53.592 DEBUG 8388 --- [http-nio-8080-exec-9] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 22:12:53.592 DEBUG 8388 --- [http-nio-8080-exec-9] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 23(String)
2017-09-14 22:12:53.593 DEBUG 8388 --- [http-nio-8080-exec-9] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 22:12:53.600 DEBUG 8388 --- [http-nio-8080-exec-9] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 22:12:53.600 DEBUG 8388 --- [http-nio-8080-exec-9] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 16(String)
2017-09-14 22:12:53.602 DEBUG 8388 --- [http-nio-8080-exec-9] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 22:12:53.602 DEBUG 8388 --- [http-nio-8080-exec-9] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 22:12:53.602 DEBUG 8388 --- [http-nio-8080-exec-9] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 1(String)
2017-09-14 22:12:53.603 DEBUG 8388 --- [http-nio-8080-exec-9] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 22:12:53.604 DEBUG 8388 --- [http-nio-8080-exec-9] p.p.blog.repository.BlogRepo.list        : <==      Total: 10
2017-09-14 22:12:53.712 DEBUG 8388 --- [http-nio-8080-exec-9] p.p.blog.repository.BlogRepo.getTotal    : ==>  Preparing: select count(*) from t_blog 
2017-09-14 22:12:53.713 DEBUG 8388 --- [http-nio-8080-exec-9] p.p.blog.repository.BlogRepo.getTotal    : ==> Parameters: 
2017-09-14 22:12:53.719 DEBUG 8388 --- [http-nio-8080-exec-9] p.p.blog.repository.BlogRepo.getTotal    : <==      Total: 1
2017-09-14 22:13:13.049 DEBUG 8388 --- [http-nio-8080-exec-1] p.p.blog.repository.BlogRepo.list        : ==>  Preparing: select * from t_blog order by releaseDate desc limit ?,? 
2017-09-14 22:13:13.050 DEBUG 8388 --- [http-nio-8080-exec-1] p.p.blog.repository.BlogRepo.list        : ==> Parameters: 50(Integer), 10(Integer)
2017-09-14 22:13:13.057 DEBUG 8388 --- [http-nio-8080-exec-1] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 22:13:13.057 DEBUG 8388 --- [http-nio-8080-exec-1] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 24(String)
2017-09-14 22:13:13.059 DEBUG 8388 --- [http-nio-8080-exec-1] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 22:13:13.060 DEBUG 8388 --- [http-nio-8080-exec-1] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 22:13:13.060 DEBUG 8388 --- [http-nio-8080-exec-1] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 23(String)
2017-09-14 22:13:13.062 DEBUG 8388 --- [http-nio-8080-exec-1] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 22:13:13.063 DEBUG 8388 --- [http-nio-8080-exec-1] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 22:13:13.063 DEBUG 8388 --- [http-nio-8080-exec-1] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 16(String)
2017-09-14 22:13:13.064 DEBUG 8388 --- [http-nio-8080-exec-1] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 22:13:13.065 DEBUG 8388 --- [http-nio-8080-exec-1] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 22:13:13.065 DEBUG 8388 --- [http-nio-8080-exec-1] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 1(String)
2017-09-14 22:13:13.066 DEBUG 8388 --- [http-nio-8080-exec-1] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 22:13:13.068 DEBUG 8388 --- [http-nio-8080-exec-1] p.p.blog.repository.BlogRepo.list        : <==      Total: 10
2017-09-14 22:13:13.074 DEBUG 8388 --- [http-nio-8080-exec-1] p.p.blog.repository.BlogRepo.getTotal    : ==>  Preparing: select count(*) from t_blog 
2017-09-14 22:13:13.074 DEBUG 8388 --- [http-nio-8080-exec-1] p.p.blog.repository.BlogRepo.getTotal    : ==> Parameters: 
2017-09-14 22:13:13.075 DEBUG 8388 --- [http-nio-8080-exec-1] p.p.blog.repository.BlogRepo.getTotal    : <==      Total: 1
2017-09-14 22:13:32.129 DEBUG 8388 --- [http-nio-8080-exec-3] p.p.blog.repository.BlogRepo.list        : ==>  Preparing: select * from t_blog order by releaseDate desc limit ?,? 
2017-09-14 22:13:32.129 DEBUG 8388 --- [http-nio-8080-exec-3] p.p.blog.repository.BlogRepo.list        : ==> Parameters: 50(Integer), 10(Integer)
2017-09-14 22:13:32.135 DEBUG 8388 --- [http-nio-8080-exec-3] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 22:13:32.135 DEBUG 8388 --- [http-nio-8080-exec-3] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 24(String)
2017-09-14 22:13:32.137 DEBUG 8388 --- [http-nio-8080-exec-3] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 22:13:32.141 DEBUG 8388 --- [http-nio-8080-exec-3] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 22:13:32.141 DEBUG 8388 --- [http-nio-8080-exec-3] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 23(String)
2017-09-14 22:13:32.143 DEBUG 8388 --- [http-nio-8080-exec-3] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 22:13:32.144 DEBUG 8388 --- [http-nio-8080-exec-3] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 22:13:32.144 DEBUG 8388 --- [http-nio-8080-exec-3] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 16(String)
2017-09-14 22:13:32.146 DEBUG 8388 --- [http-nio-8080-exec-3] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 22:13:32.148 DEBUG 8388 --- [http-nio-8080-exec-3] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 22:13:32.148 DEBUG 8388 --- [http-nio-8080-exec-3] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 1(String)
2017-09-14 22:13:32.152 DEBUG 8388 --- [http-nio-8080-exec-3] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 22:13:32.153 DEBUG 8388 --- [http-nio-8080-exec-3] p.p.blog.repository.BlogRepo.list        : <==      Total: 10
2017-09-14 22:13:32.161 DEBUG 8388 --- [http-nio-8080-exec-3] p.p.blog.repository.BlogRepo.getTotal    : ==>  Preparing: select count(*) from t_blog 
2017-09-14 22:13:32.161 DEBUG 8388 --- [http-nio-8080-exec-3] p.p.blog.repository.BlogRepo.getTotal    : ==> Parameters: 
2017-09-14 22:13:32.163 DEBUG 8388 --- [http-nio-8080-exec-3] p.p.blog.repository.BlogRepo.getTotal    : <==      Total: 1
2017-09-14 22:27:33.984 DEBUG 8388 --- [http-nio-8080-exec-4] p.p.blog.repository.BlogRepo.list        : ==>  Preparing: select * from t_blog order by releaseDate desc limit ?,? 
2017-09-14 22:27:33.985 DEBUG 8388 --- [http-nio-8080-exec-4] p.p.blog.repository.BlogRepo.list        : ==> Parameters: 50(Integer), 10(Integer)
2017-09-14 22:27:33.989 DEBUG 8388 --- [http-nio-8080-exec-4] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 22:27:33.990 DEBUG 8388 --- [http-nio-8080-exec-4] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 24(String)
2017-09-14 22:27:33.992 DEBUG 8388 --- [http-nio-8080-exec-4] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 22:27:33.993 DEBUG 8388 --- [http-nio-8080-exec-4] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 22:27:33.993 DEBUG 8388 --- [http-nio-8080-exec-4] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 23(String)
2017-09-14 22:27:33.995 DEBUG 8388 --- [http-nio-8080-exec-4] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 22:27:33.996 DEBUG 8388 --- [http-nio-8080-exec-4] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 22:27:33.996 DEBUG 8388 --- [http-nio-8080-exec-4] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 16(String)
2017-09-14 22:27:33.997 DEBUG 8388 --- [http-nio-8080-exec-4] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 22:27:34.000 DEBUG 8388 --- [http-nio-8080-exec-4] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 22:27:34.001 DEBUG 8388 --- [http-nio-8080-exec-4] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 1(String)
2017-09-14 22:27:34.003 DEBUG 8388 --- [http-nio-8080-exec-4] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 22:27:34.004 DEBUG 8388 --- [http-nio-8080-exec-4] p.p.blog.repository.BlogRepo.list        : <==      Total: 10
2017-09-14 22:27:34.012 DEBUG 8388 --- [http-nio-8080-exec-4] p.p.blog.repository.BlogRepo.getTotal    : ==>  Preparing: select count(*) from t_blog 
2017-09-14 22:27:34.012 DEBUG 8388 --- [http-nio-8080-exec-4] p.p.blog.repository.BlogRepo.getTotal    : ==> Parameters: 
2017-09-14 22:27:34.015 DEBUG 8388 --- [http-nio-8080-exec-4] p.p.blog.repository.BlogRepo.getTotal    : <==      Total: 1
2017-09-14 22:29:01.004 DEBUG 8388 --- [http-nio-8080-exec-2] p.p.blog.repository.BlogRepo.list        : ==>  Preparing: select * from t_blog order by releaseDate desc limit ?,? 
2017-09-14 22:29:01.004 DEBUG 8388 --- [http-nio-8080-exec-2] p.p.blog.repository.BlogRepo.list        : ==> Parameters: 50(Integer), 10(Integer)
2017-09-14 22:29:01.010 DEBUG 8388 --- [http-nio-8080-exec-2] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 22:29:01.011 DEBUG 8388 --- [http-nio-8080-exec-2] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 24(String)
2017-09-14 22:29:01.013 DEBUG 8388 --- [http-nio-8080-exec-2] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 22:29:01.014 DEBUG 8388 --- [http-nio-8080-exec-2] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 22:29:01.015 DEBUG 8388 --- [http-nio-8080-exec-2] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 23(String)
2017-09-14 22:29:01.016 DEBUG 8388 --- [http-nio-8080-exec-2] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 22:29:01.016 DEBUG 8388 --- [http-nio-8080-exec-2] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 22:29:01.017 DEBUG 8388 --- [http-nio-8080-exec-2] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 16(String)
2017-09-14 22:29:01.019 DEBUG 8388 --- [http-nio-8080-exec-2] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 22:29:01.025 DEBUG 8388 --- [http-nio-8080-exec-2] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 22:29:01.026 DEBUG 8388 --- [http-nio-8080-exec-2] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 1(String)
2017-09-14 22:29:01.028 DEBUG 8388 --- [http-nio-8080-exec-2] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 22:29:01.029 DEBUG 8388 --- [http-nio-8080-exec-2] p.p.blog.repository.BlogRepo.list        : <==      Total: 10
2017-09-14 22:29:01.043 DEBUG 8388 --- [http-nio-8080-exec-2] p.p.blog.repository.BlogRepo.getTotal    : ==>  Preparing: select count(*) from t_blog 
2017-09-14 22:29:01.044 DEBUG 8388 --- [http-nio-8080-exec-2] p.p.blog.repository.BlogRepo.getTotal    : ==> Parameters: 
2017-09-14 22:29:01.046 DEBUG 8388 --- [http-nio-8080-exec-2] p.p.blog.repository.BlogRepo.getTotal    : <==      Total: 1
2017-09-14 22:29:47.224 DEBUG 8388 --- [http-nio-8080-exec-4] p.p.blog.repository.BlogRepo.list        : ==>  Preparing: select * from t_blog order by releaseDate desc limit ?,? 
2017-09-14 22:29:47.225 DEBUG 8388 --- [http-nio-8080-exec-4] p.p.blog.repository.BlogRepo.list        : ==> Parameters: 50(Integer), 10(Integer)
2017-09-14 22:29:47.232 DEBUG 8388 --- [http-nio-8080-exec-4] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 22:29:47.233 DEBUG 8388 --- [http-nio-8080-exec-4] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 24(String)
2017-09-14 22:29:47.235 DEBUG 8388 --- [http-nio-8080-exec-4] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 22:29:47.236 DEBUG 8388 --- [http-nio-8080-exec-4] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 22:29:47.236 DEBUG 8388 --- [http-nio-8080-exec-4] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 23(String)
2017-09-14 22:29:47.237 DEBUG 8388 --- [http-nio-8080-exec-4] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 22:29:47.238 DEBUG 8388 --- [http-nio-8080-exec-4] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 22:29:47.238 DEBUG 8388 --- [http-nio-8080-exec-4] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 16(String)
2017-09-14 22:29:47.239 DEBUG 8388 --- [http-nio-8080-exec-4] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 22:29:47.240 DEBUG 8388 --- [http-nio-8080-exec-4] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 22:29:47.240 DEBUG 8388 --- [http-nio-8080-exec-4] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 1(String)
2017-09-14 22:29:47.241 DEBUG 8388 --- [http-nio-8080-exec-4] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 22:29:47.242 DEBUG 8388 --- [http-nio-8080-exec-4] p.p.blog.repository.BlogRepo.list        : <==      Total: 10
2017-09-14 22:29:47.249 DEBUG 8388 --- [http-nio-8080-exec-4] p.p.blog.repository.BlogRepo.getTotal    : ==>  Preparing: select count(*) from t_blog 
2017-09-14 22:29:47.249 DEBUG 8388 --- [http-nio-8080-exec-4] p.p.blog.repository.BlogRepo.getTotal    : ==> Parameters: 
2017-09-14 22:29:47.251 DEBUG 8388 --- [http-nio-8080-exec-4] p.p.blog.repository.BlogRepo.getTotal    : <==      Total: 1
2017-09-14 22:30:02.841 DEBUG 8388 --- [http-nio-8080-exec-4] p.p.blog.repository.BlogRepo.list        : ==>  Preparing: select * from t_blog order by releaseDate desc limit ?,? 
2017-09-14 22:30:02.841 DEBUG 8388 --- [http-nio-8080-exec-4] p.p.blog.repository.BlogRepo.list        : ==> Parameters: 50(Integer), 10(Integer)
2017-09-14 22:30:02.848 DEBUG 8388 --- [http-nio-8080-exec-4] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 22:30:02.848 DEBUG 8388 --- [http-nio-8080-exec-4] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 24(String)
2017-09-14 22:30:02.849 DEBUG 8388 --- [http-nio-8080-exec-4] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 22:30:02.850 DEBUG 8388 --- [http-nio-8080-exec-4] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 22:30:02.851 DEBUG 8388 --- [http-nio-8080-exec-4] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 23(String)
2017-09-14 22:30:02.853 DEBUG 8388 --- [http-nio-8080-exec-4] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 22:30:02.853 DEBUG 8388 --- [http-nio-8080-exec-4] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 22:30:02.854 DEBUG 8388 --- [http-nio-8080-exec-4] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 16(String)
2017-09-14 22:30:02.857 DEBUG 8388 --- [http-nio-8080-exec-4] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 22:30:02.858 DEBUG 8388 --- [http-nio-8080-exec-4] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 22:30:02.858 DEBUG 8388 --- [http-nio-8080-exec-4] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 1(String)
2017-09-14 22:30:02.860 DEBUG 8388 --- [http-nio-8080-exec-4] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 22:30:02.862 DEBUG 8388 --- [http-nio-8080-exec-4] p.p.blog.repository.BlogRepo.list        : <==      Total: 10
2017-09-14 22:30:02.869 DEBUG 8388 --- [http-nio-8080-exec-4] p.p.blog.repository.BlogRepo.getTotal    : ==>  Preparing: select count(*) from t_blog 
2017-09-14 22:30:02.869 DEBUG 8388 --- [http-nio-8080-exec-4] p.p.blog.repository.BlogRepo.getTotal    : ==> Parameters: 
2017-09-14 22:30:02.871 DEBUG 8388 --- [http-nio-8080-exec-4] p.p.blog.repository.BlogRepo.getTotal    : <==      Total: 1
2017-09-14 22:30:11.576 DEBUG 8388 --- [http-nio-8080-exec-10] p.p.blog.repository.BlogRepo.list        : ==>  Preparing: select * from t_blog order by releaseDate desc limit ?,? 
2017-09-14 22:30:11.576 DEBUG 8388 --- [http-nio-8080-exec-10] p.p.blog.repository.BlogRepo.list        : ==> Parameters: 50(Integer), 10(Integer)
2017-09-14 22:30:11.582 DEBUG 8388 --- [http-nio-8080-exec-10] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 22:30:11.583 DEBUG 8388 --- [http-nio-8080-exec-10] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 24(String)
2017-09-14 22:30:11.585 DEBUG 8388 --- [http-nio-8080-exec-10] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 22:30:11.586 DEBUG 8388 --- [http-nio-8080-exec-10] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 22:30:11.586 DEBUG 8388 --- [http-nio-8080-exec-10] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 23(String)
2017-09-14 22:30:11.587 DEBUG 8388 --- [http-nio-8080-exec-10] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 22:30:11.588 DEBUG 8388 --- [http-nio-8080-exec-10] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 22:30:11.588 DEBUG 8388 --- [http-nio-8080-exec-10] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 16(String)
2017-09-14 22:30:11.590 DEBUG 8388 --- [http-nio-8080-exec-10] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 22:30:11.591 DEBUG 8388 --- [http-nio-8080-exec-10] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 22:30:11.591 DEBUG 8388 --- [http-nio-8080-exec-10] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 1(String)
2017-09-14 22:30:11.592 DEBUG 8388 --- [http-nio-8080-exec-10] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 22:30:11.594 DEBUG 8388 --- [http-nio-8080-exec-10] p.p.blog.repository.BlogRepo.list        : <==      Total: 10
2017-09-14 22:30:11.621 DEBUG 8388 --- [http-nio-8080-exec-10] p.p.blog.repository.BlogRepo.getTotal    : ==>  Preparing: select count(*) from t_blog 
2017-09-14 22:30:11.622 DEBUG 8388 --- [http-nio-8080-exec-10] p.p.blog.repository.BlogRepo.getTotal    : ==> Parameters: 
2017-09-14 22:30:11.623 DEBUG 8388 --- [http-nio-8080-exec-10] p.p.blog.repository.BlogRepo.getTotal    : <==      Total: 1
2017-09-14 22:30:20.941 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.blog.repository.BlogRepo.list        : ==>  Preparing: select * from t_blog order by releaseDate desc limit ?,? 
2017-09-14 22:30:20.942 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.blog.repository.BlogRepo.list        : ==> Parameters: 50(Integer), 10(Integer)
2017-09-14 22:30:20.949 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 22:30:20.950 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 24(String)
2017-09-14 22:30:20.952 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 22:30:20.954 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 22:30:20.954 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 23(String)
2017-09-14 22:30:20.956 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 22:30:20.956 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 22:30:20.956 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 16(String)
2017-09-14 22:30:20.958 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 22:30:20.959 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 22:30:20.959 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 1(String)
2017-09-14 22:30:20.960 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 22:30:20.965 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.blog.repository.BlogRepo.list        : <==      Total: 10
2017-09-14 22:30:20.973 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.blog.repository.BlogRepo.getTotal    : ==>  Preparing: select count(*) from t_blog 
2017-09-14 22:30:20.974 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.blog.repository.BlogRepo.getTotal    : ==> Parameters: 
2017-09-14 22:30:20.975 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.blog.repository.BlogRepo.getTotal    : <==      Total: 1
2017-09-14 22:30:43.181 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.blog.repository.BlogRepo.list        : ==>  Preparing: select * from t_blog order by releaseDate desc limit ?,? 
2017-09-14 22:30:43.182 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.blog.repository.BlogRepo.list        : ==> Parameters: 50(Integer), 10(Integer)
2017-09-14 22:30:43.187 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 22:30:43.188 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 24(String)
2017-09-14 22:30:43.189 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 22:30:43.190 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 22:30:43.190 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 23(String)
2017-09-14 22:30:43.192 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 22:30:43.192 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 22:30:43.194 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 16(String)
2017-09-14 22:30:43.196 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 22:30:43.197 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 22:30:43.197 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 1(String)
2017-09-14 22:30:43.198 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 22:30:43.200 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.blog.repository.BlogRepo.list        : <==      Total: 10
2017-09-14 22:30:43.212 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.blog.repository.BlogRepo.getTotal    : ==>  Preparing: select count(*) from t_blog 
2017-09-14 22:30:43.212 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.blog.repository.BlogRepo.getTotal    : ==> Parameters: 
2017-09-14 22:30:43.214 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.blog.repository.BlogRepo.getTotal    : <==      Total: 1
2017-09-14 22:32:21.465 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.blog.repository.BlogRepo.list        : ==>  Preparing: select * from t_blog order by releaseDate desc limit ?,? 
2017-09-14 22:32:21.465 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.blog.repository.BlogRepo.list        : ==> Parameters: 50(Integer), 10(Integer)
2017-09-14 22:32:21.474 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 22:32:21.474 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 24(String)
2017-09-14 22:32:21.483 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 22:32:21.497 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 22:32:21.497 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 23(String)
2017-09-14 22:32:21.499 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 22:32:21.500 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 22:32:21.500 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 16(String)
2017-09-14 22:32:21.502 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 22:32:21.509 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 22:32:21.510 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 1(String)
2017-09-14 22:32:21.514 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 22:32:21.516 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.blog.repository.BlogRepo.list        : <==      Total: 10
2017-09-14 22:32:21.526 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.blog.repository.BlogRepo.getTotal    : ==>  Preparing: select count(*) from t_blog 
2017-09-14 22:32:21.526 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.blog.repository.BlogRepo.getTotal    : ==> Parameters: 
2017-09-14 22:32:21.528 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.blog.repository.BlogRepo.getTotal    : <==      Total: 1
2017-09-14 22:32:35.885 DEBUG 8388 --- [http-nio-8080-exec-9] p.p.blog.repository.BlogRepo.list        : ==>  Preparing: select * from t_blog order by releaseDate desc limit ?,? 
2017-09-14 22:32:35.885 DEBUG 8388 --- [http-nio-8080-exec-9] p.p.blog.repository.BlogRepo.list        : ==> Parameters: 50(Integer), 10(Integer)
2017-09-14 22:32:35.891 DEBUG 8388 --- [http-nio-8080-exec-9] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 22:32:35.891 DEBUG 8388 --- [http-nio-8080-exec-9] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 24(String)
2017-09-14 22:32:35.893 DEBUG 8388 --- [http-nio-8080-exec-9] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 22:32:35.894 DEBUG 8388 --- [http-nio-8080-exec-9] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 22:32:35.894 DEBUG 8388 --- [http-nio-8080-exec-9] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 23(String)
2017-09-14 22:32:35.896 DEBUG 8388 --- [http-nio-8080-exec-9] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 22:32:35.897 DEBUG 8388 --- [http-nio-8080-exec-9] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 22:32:35.897 DEBUG 8388 --- [http-nio-8080-exec-9] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 16(String)
2017-09-14 22:32:35.900 DEBUG 8388 --- [http-nio-8080-exec-9] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 22:32:35.901 DEBUG 8388 --- [http-nio-8080-exec-9] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 22:32:35.901 DEBUG 8388 --- [http-nio-8080-exec-9] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 1(String)
2017-09-14 22:32:35.904 DEBUG 8388 --- [http-nio-8080-exec-9] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 22:32:35.905 DEBUG 8388 --- [http-nio-8080-exec-9] p.p.blog.repository.BlogRepo.list        : <==      Total: 10
2017-09-14 22:32:35.912 DEBUG 8388 --- [http-nio-8080-exec-9] p.p.blog.repository.BlogRepo.getTotal    : ==>  Preparing: select count(*) from t_blog 
2017-09-14 22:32:35.912 DEBUG 8388 --- [http-nio-8080-exec-9] p.p.blog.repository.BlogRepo.getTotal    : ==> Parameters: 
2017-09-14 22:32:35.916 DEBUG 8388 --- [http-nio-8080-exec-9] p.p.blog.repository.BlogRepo.getTotal    : <==      Total: 1
2017-09-14 22:33:06.332 DEBUG 8388 --- [http-nio-8080-exec-10] p.p.blog.repository.BlogRepo.list        : ==>  Preparing: select * from t_blog order by releaseDate desc limit ?,? 
2017-09-14 22:33:06.333 DEBUG 8388 --- [http-nio-8080-exec-10] p.p.blog.repository.BlogRepo.list        : ==> Parameters: 50(Integer), 10(Integer)
2017-09-14 22:33:06.339 DEBUG 8388 --- [http-nio-8080-exec-10] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 22:33:06.340 DEBUG 8388 --- [http-nio-8080-exec-10] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 24(String)
2017-09-14 22:33:06.342 DEBUG 8388 --- [http-nio-8080-exec-10] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 22:33:06.343 DEBUG 8388 --- [http-nio-8080-exec-10] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 22:33:06.344 DEBUG 8388 --- [http-nio-8080-exec-10] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 23(String)
2017-09-14 22:33:06.346 DEBUG 8388 --- [http-nio-8080-exec-10] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 22:33:06.347 DEBUG 8388 --- [http-nio-8080-exec-10] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 22:33:06.347 DEBUG 8388 --- [http-nio-8080-exec-10] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 16(String)
2017-09-14 22:33:06.349 DEBUG 8388 --- [http-nio-8080-exec-10] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 22:33:06.350 DEBUG 8388 --- [http-nio-8080-exec-10] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 22:33:06.350 DEBUG 8388 --- [http-nio-8080-exec-10] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 1(String)
2017-09-14 22:33:06.352 DEBUG 8388 --- [http-nio-8080-exec-10] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 22:33:06.354 DEBUG 8388 --- [http-nio-8080-exec-10] p.p.blog.repository.BlogRepo.list        : <==      Total: 10
2017-09-14 22:33:06.362 DEBUG 8388 --- [http-nio-8080-exec-10] p.p.blog.repository.BlogRepo.getTotal    : ==>  Preparing: select count(*) from t_blog 
2017-09-14 22:33:06.362 DEBUG 8388 --- [http-nio-8080-exec-10] p.p.blog.repository.BlogRepo.getTotal    : ==> Parameters: 
2017-09-14 22:33:06.364 DEBUG 8388 --- [http-nio-8080-exec-10] p.p.blog.repository.BlogRepo.getTotal    : <==      Total: 1
2017-09-14 22:33:28.236 DEBUG 8388 --- [http-nio-8080-exec-10] p.p.blog.repository.BlogRepo.list        : ==>  Preparing: select * from t_blog order by releaseDate desc limit ?,? 
2017-09-14 22:33:28.236 DEBUG 8388 --- [http-nio-8080-exec-10] p.p.blog.repository.BlogRepo.list        : ==> Parameters: 50(Integer), 10(Integer)
2017-09-14 22:33:28.242 DEBUG 8388 --- [http-nio-8080-exec-10] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 22:33:28.243 DEBUG 8388 --- [http-nio-8080-exec-10] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 24(String)
2017-09-14 22:33:28.244 DEBUG 8388 --- [http-nio-8080-exec-10] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 22:33:28.245 DEBUG 8388 --- [http-nio-8080-exec-10] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 22:33:28.246 DEBUG 8388 --- [http-nio-8080-exec-10] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 23(String)
2017-09-14 22:33:28.247 DEBUG 8388 --- [http-nio-8080-exec-10] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 22:33:28.248 DEBUG 8388 --- [http-nio-8080-exec-10] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 22:33:28.248 DEBUG 8388 --- [http-nio-8080-exec-10] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 16(String)
2017-09-14 22:33:28.249 DEBUG 8388 --- [http-nio-8080-exec-10] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 22:33:28.250 DEBUG 8388 --- [http-nio-8080-exec-10] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 22:33:28.250 DEBUG 8388 --- [http-nio-8080-exec-10] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 1(String)
2017-09-14 22:33:28.252 DEBUG 8388 --- [http-nio-8080-exec-10] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 22:33:28.253 DEBUG 8388 --- [http-nio-8080-exec-10] p.p.blog.repository.BlogRepo.list        : <==      Total: 10
2017-09-14 22:33:28.270 DEBUG 8388 --- [http-nio-8080-exec-10] p.p.blog.repository.BlogRepo.getTotal    : ==>  Preparing: select count(*) from t_blog 
2017-09-14 22:33:28.270 DEBUG 8388 --- [http-nio-8080-exec-10] p.p.blog.repository.BlogRepo.getTotal    : ==> Parameters: 
2017-09-14 22:33:28.271 DEBUG 8388 --- [http-nio-8080-exec-10] p.p.blog.repository.BlogRepo.getTotal    : <==      Total: 1
2017-09-14 22:33:52.669 DEBUG 8388 --- [http-nio-8080-exec-10] p.p.blog.repository.BlogRepo.list        : ==>  Preparing: select * from t_blog order by releaseDate desc limit ?,? 
2017-09-14 22:33:52.670 DEBUG 8388 --- [http-nio-8080-exec-10] p.p.blog.repository.BlogRepo.list        : ==> Parameters: 50(Integer), 10(Integer)
2017-09-14 22:33:52.675 DEBUG 8388 --- [http-nio-8080-exec-10] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 22:33:52.675 DEBUG 8388 --- [http-nio-8080-exec-10] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 24(String)
2017-09-14 22:33:52.677 DEBUG 8388 --- [http-nio-8080-exec-10] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 22:33:52.678 DEBUG 8388 --- [http-nio-8080-exec-10] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 22:33:52.678 DEBUG 8388 --- [http-nio-8080-exec-10] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 23(String)
2017-09-14 22:33:52.679 DEBUG 8388 --- [http-nio-8080-exec-10] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 22:33:52.680 DEBUG 8388 --- [http-nio-8080-exec-10] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 22:33:52.680 DEBUG 8388 --- [http-nio-8080-exec-10] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 16(String)
2017-09-14 22:33:52.681 DEBUG 8388 --- [http-nio-8080-exec-10] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 22:33:52.682 DEBUG 8388 --- [http-nio-8080-exec-10] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 22:33:52.682 DEBUG 8388 --- [http-nio-8080-exec-10] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 1(String)
2017-09-14 22:33:52.683 DEBUG 8388 --- [http-nio-8080-exec-10] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 22:33:52.685 DEBUG 8388 --- [http-nio-8080-exec-10] p.p.blog.repository.BlogRepo.list        : <==      Total: 10
2017-09-14 22:33:52.692 DEBUG 8388 --- [http-nio-8080-exec-10] p.p.blog.repository.BlogRepo.getTotal    : ==>  Preparing: select count(*) from t_blog 
2017-09-14 22:33:52.692 DEBUG 8388 --- [http-nio-8080-exec-10] p.p.blog.repository.BlogRepo.getTotal    : ==> Parameters: 
2017-09-14 22:33:52.694 DEBUG 8388 --- [http-nio-8080-exec-10] p.p.blog.repository.BlogRepo.getTotal    : <==      Total: 1
2017-09-14 22:34:42.415 DEBUG 8388 --- [http-nio-8080-exec-10] p.p.blog.repository.BlogRepo.list        : ==>  Preparing: select * from t_blog order by releaseDate desc limit ?,? 
2017-09-14 22:34:42.416 DEBUG 8388 --- [http-nio-8080-exec-10] p.p.blog.repository.BlogRepo.list        : ==> Parameters: 50(Integer), 10(Integer)
2017-09-14 22:34:42.421 DEBUG 8388 --- [http-nio-8080-exec-10] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 22:34:42.422 DEBUG 8388 --- [http-nio-8080-exec-10] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 24(String)
2017-09-14 22:34:42.428 DEBUG 8388 --- [http-nio-8080-exec-10] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 22:34:42.429 DEBUG 8388 --- [http-nio-8080-exec-10] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 22:34:42.429 DEBUG 8388 --- [http-nio-8080-exec-10] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 23(String)
2017-09-14 22:34:42.431 DEBUG 8388 --- [http-nio-8080-exec-10] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 22:34:42.431 DEBUG 8388 --- [http-nio-8080-exec-10] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 22:34:42.432 DEBUG 8388 --- [http-nio-8080-exec-10] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 16(String)
2017-09-14 22:34:42.432 DEBUG 8388 --- [http-nio-8080-exec-10] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 22:34:42.433 DEBUG 8388 --- [http-nio-8080-exec-10] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 22:34:42.433 DEBUG 8388 --- [http-nio-8080-exec-10] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 1(String)
2017-09-14 22:34:42.433 DEBUG 8388 --- [http-nio-8080-exec-10] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 22:34:42.434 DEBUG 8388 --- [http-nio-8080-exec-10] p.p.blog.repository.BlogRepo.list        : <==      Total: 10
2017-09-14 22:34:42.442 DEBUG 8388 --- [http-nio-8080-exec-10] p.p.blog.repository.BlogRepo.getTotal    : ==>  Preparing: select count(*) from t_blog 
2017-09-14 22:34:42.442 DEBUG 8388 --- [http-nio-8080-exec-10] p.p.blog.repository.BlogRepo.getTotal    : ==> Parameters: 
2017-09-14 22:34:42.443 DEBUG 8388 --- [http-nio-8080-exec-10] p.p.blog.repository.BlogRepo.getTotal    : <==      Total: 1
2017-09-14 22:35:02.382 DEBUG 8388 --- [http-nio-8080-exec-5] p.p.blog.repository.BlogRepo.list        : ==>  Preparing: select * from t_blog order by releaseDate desc limit ?,? 
2017-09-14 22:35:02.383 DEBUG 8388 --- [http-nio-8080-exec-5] p.p.blog.repository.BlogRepo.list        : ==> Parameters: 50(Integer), 10(Integer)
2017-09-14 22:35:02.388 DEBUG 8388 --- [http-nio-8080-exec-5] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 22:35:02.388 DEBUG 8388 --- [http-nio-8080-exec-5] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 24(String)
2017-09-14 22:35:02.390 DEBUG 8388 --- [http-nio-8080-exec-5] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 22:35:02.391 DEBUG 8388 --- [http-nio-8080-exec-5] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 22:35:02.391 DEBUG 8388 --- [http-nio-8080-exec-5] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 23(String)
2017-09-14 22:35:02.393 DEBUG 8388 --- [http-nio-8080-exec-5] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 22:35:02.393 DEBUG 8388 --- [http-nio-8080-exec-5] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 22:35:02.394 DEBUG 8388 --- [http-nio-8080-exec-5] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 16(String)
2017-09-14 22:35:02.395 DEBUG 8388 --- [http-nio-8080-exec-5] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 22:35:02.396 DEBUG 8388 --- [http-nio-8080-exec-5] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 22:35:02.396 DEBUG 8388 --- [http-nio-8080-exec-5] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 1(String)
2017-09-14 22:35:02.397 DEBUG 8388 --- [http-nio-8080-exec-5] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 22:35:02.398 DEBUG 8388 --- [http-nio-8080-exec-5] p.p.blog.repository.BlogRepo.list        : <==      Total: 10
2017-09-14 22:35:02.404 DEBUG 8388 --- [http-nio-8080-exec-5] p.p.blog.repository.BlogRepo.getTotal    : ==>  Preparing: select count(*) from t_blog 
2017-09-14 22:35:02.405 DEBUG 8388 --- [http-nio-8080-exec-5] p.p.blog.repository.BlogRepo.getTotal    : ==> Parameters: 
2017-09-14 22:35:02.406 DEBUG 8388 --- [http-nio-8080-exec-5] p.p.blog.repository.BlogRepo.getTotal    : <==      Total: 1
2017-09-14 22:35:58.785 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.blog.repository.BlogRepo.list        : ==>  Preparing: select * from t_blog order by releaseDate desc limit ?,? 
2017-09-14 22:35:58.786 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.blog.repository.BlogRepo.list        : ==> Parameters: 50(Integer), 10(Integer)
2017-09-14 22:35:58.792 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 22:35:58.792 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 24(String)
2017-09-14 22:35:58.794 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 22:35:58.795 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 22:35:58.795 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 23(String)
2017-09-14 22:35:58.796 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 22:35:58.797 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 22:35:58.797 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 16(String)
2017-09-14 22:35:58.800 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 22:35:58.801 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 22:35:58.801 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 1(String)
2017-09-14 22:35:58.803 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 22:35:58.804 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.blog.repository.BlogRepo.list        : <==      Total: 10
2017-09-14 22:35:58.810 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.blog.repository.BlogRepo.getTotal    : ==>  Preparing: select count(*) from t_blog 
2017-09-14 22:35:58.811 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.blog.repository.BlogRepo.getTotal    : ==> Parameters: 
2017-09-14 22:35:58.812 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.blog.repository.BlogRepo.getTotal    : <==      Total: 1
2017-09-14 22:36:36.848 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.blog.repository.BlogRepo.list        : ==>  Preparing: select * from t_blog order by releaseDate desc limit ?,? 
2017-09-14 22:36:36.849 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.blog.repository.BlogRepo.list        : ==> Parameters: 50(Integer), 10(Integer)
2017-09-14 22:36:36.854 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 22:36:36.854 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 24(String)
2017-09-14 22:36:36.856 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 22:36:36.857 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 22:36:36.858 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 23(String)
2017-09-14 22:36:36.859 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 22:36:36.860 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 22:36:36.860 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 16(String)
2017-09-14 22:36:36.864 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 22:36:36.864 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 22:36:36.865 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 1(String)
2017-09-14 22:36:36.866 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 22:36:36.869 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.blog.repository.BlogRepo.list        : <==      Total: 10
2017-09-14 22:36:36.875 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.blog.repository.BlogRepo.getTotal    : ==>  Preparing: select count(*) from t_blog 
2017-09-14 22:36:36.876 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.blog.repository.BlogRepo.getTotal    : ==> Parameters: 
2017-09-14 22:36:36.877 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.blog.repository.BlogRepo.getTotal    : <==      Total: 1
2017-09-14 22:37:02.054 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.blog.repository.BlogRepo.list        : ==>  Preparing: select * from t_blog order by releaseDate desc limit ?,? 
2017-09-14 22:37:02.055 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.blog.repository.BlogRepo.list        : ==> Parameters: 50(Integer), 10(Integer)
2017-09-14 22:37:02.061 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 22:37:02.062 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 24(String)
2017-09-14 22:37:02.064 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 22:37:02.065 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 22:37:02.066 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 23(String)
2017-09-14 22:37:02.067 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 22:37:02.068 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 22:37:02.068 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 16(String)
2017-09-14 22:37:02.069 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 22:37:02.072 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 22:37:02.073 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 1(String)
2017-09-14 22:37:02.074 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 22:37:02.094 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.blog.repository.BlogRepo.list        : <==      Total: 10
2017-09-14 22:37:02.101 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.blog.repository.BlogRepo.getTotal    : ==>  Preparing: select count(*) from t_blog 
2017-09-14 22:37:02.101 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.blog.repository.BlogRepo.getTotal    : ==> Parameters: 
2017-09-14 22:37:02.103 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.blog.repository.BlogRepo.getTotal    : <==      Total: 1
2017-09-14 22:37:32.653 DEBUG 8388 --- [http-nio-8080-exec-10] p.p.blog.repository.BlogRepo.list        : ==>  Preparing: select * from t_blog order by releaseDate desc limit ?,? 
2017-09-14 22:37:32.654 DEBUG 8388 --- [http-nio-8080-exec-10] p.p.blog.repository.BlogRepo.list        : ==> Parameters: 50(Integer), 10(Integer)
2017-09-14 22:37:32.659 DEBUG 8388 --- [http-nio-8080-exec-10] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 22:37:32.660 DEBUG 8388 --- [http-nio-8080-exec-10] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 24(String)
2017-09-14 22:37:32.661 DEBUG 8388 --- [http-nio-8080-exec-10] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 22:37:32.662 DEBUG 8388 --- [http-nio-8080-exec-10] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 22:37:32.663 DEBUG 8388 --- [http-nio-8080-exec-10] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 23(String)
2017-09-14 22:37:32.665 DEBUG 8388 --- [http-nio-8080-exec-10] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 22:37:32.666 DEBUG 8388 --- [http-nio-8080-exec-10] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 22:37:32.666 DEBUG 8388 --- [http-nio-8080-exec-10] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 16(String)
2017-09-14 22:37:32.668 DEBUG 8388 --- [http-nio-8080-exec-10] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 22:37:32.668 DEBUG 8388 --- [http-nio-8080-exec-10] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 22:37:32.669 DEBUG 8388 --- [http-nio-8080-exec-10] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 1(String)
2017-09-14 22:37:32.670 DEBUG 8388 --- [http-nio-8080-exec-10] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 22:37:32.671 DEBUG 8388 --- [http-nio-8080-exec-10] p.p.blog.repository.BlogRepo.list        : <==      Total: 10
2017-09-14 22:37:32.679 DEBUG 8388 --- [http-nio-8080-exec-10] p.p.blog.repository.BlogRepo.getTotal    : ==>  Preparing: select count(*) from t_blog 
2017-09-14 22:37:32.679 DEBUG 8388 --- [http-nio-8080-exec-10] p.p.blog.repository.BlogRepo.getTotal    : ==> Parameters: 
2017-09-14 22:37:32.681 DEBUG 8388 --- [http-nio-8080-exec-10] p.p.blog.repository.BlogRepo.getTotal    : <==      Total: 1
2017-09-14 22:38:20.582 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.blog.repository.BlogRepo.list        : ==>  Preparing: select * from t_blog order by releaseDate desc limit ?,? 
2017-09-14 22:38:20.583 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.blog.repository.BlogRepo.list        : ==> Parameters: 50(Integer), 10(Integer)
2017-09-14 22:38:20.589 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 22:38:20.590 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 24(String)
2017-09-14 22:38:20.591 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 22:38:20.592 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 22:38:20.592 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 23(String)
2017-09-14 22:38:20.594 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 22:38:20.595 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 22:38:20.596 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 16(String)
2017-09-14 22:38:20.597 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 22:38:20.598 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 22:38:20.599 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 1(String)
2017-09-14 22:38:20.600 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 22:38:20.602 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.blog.repository.BlogRepo.list        : <==      Total: 10
2017-09-14 22:38:20.611 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.blog.repository.BlogRepo.getTotal    : ==>  Preparing: select count(*) from t_blog 
2017-09-14 22:38:20.611 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.blog.repository.BlogRepo.getTotal    : ==> Parameters: 
2017-09-14 22:38:20.615 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.blog.repository.BlogRepo.getTotal    : <==      Total: 1
2017-09-14 22:38:27.153 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.blog.repository.BlogRepo.list        : ==>  Preparing: select * from t_blog order by releaseDate desc limit ?,? 
2017-09-14 22:38:27.153 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.blog.repository.BlogRepo.list        : ==> Parameters: 50(Integer), 10(Integer)
2017-09-14 22:38:27.158 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 22:38:27.159 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 24(String)
2017-09-14 22:38:27.160 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 22:38:27.162 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 22:38:27.162 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 23(String)
2017-09-14 22:38:27.163 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 22:38:27.164 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 22:38:27.165 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 16(String)
2017-09-14 22:38:27.166 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 22:38:27.167 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 22:38:27.168 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 1(String)
2017-09-14 22:38:27.169 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 22:38:27.170 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.blog.repository.BlogRepo.list        : <==      Total: 10
2017-09-14 22:38:27.179 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.blog.repository.BlogRepo.getTotal    : ==>  Preparing: select count(*) from t_blog 
2017-09-14 22:38:27.180 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.blog.repository.BlogRepo.getTotal    : ==> Parameters: 
2017-09-14 22:38:27.181 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.blog.repository.BlogRepo.getTotal    : <==      Total: 1
2017-09-14 22:38:38.580 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.blog.repository.BlogRepo.list        : ==>  Preparing: select * from t_blog order by releaseDate desc limit ?,? 
2017-09-14 22:38:38.581 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.blog.repository.BlogRepo.list        : ==> Parameters: 50(Integer), 10(Integer)
2017-09-14 22:38:38.585 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 22:38:38.586 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 24(String)
2017-09-14 22:38:38.587 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 22:38:38.588 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 22:38:38.589 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 23(String)
2017-09-14 22:38:38.590 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 22:38:38.591 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 22:38:38.591 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 16(String)
2017-09-14 22:38:38.593 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 22:38:38.593 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 22:38:38.594 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 1(String)
2017-09-14 22:38:38.595 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 22:38:38.597 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.blog.repository.BlogRepo.list        : <==      Total: 10
2017-09-14 22:38:38.603 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.blog.repository.BlogRepo.getTotal    : ==>  Preparing: select count(*) from t_blog 
2017-09-14 22:38:38.603 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.blog.repository.BlogRepo.getTotal    : ==> Parameters: 
2017-09-14 22:38:38.605 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.blog.repository.BlogRepo.getTotal    : <==      Total: 1
2017-09-14 22:39:00.467 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.blog.repository.BlogRepo.list        : ==>  Preparing: select * from t_blog order by releaseDate desc limit ?,? 
2017-09-14 22:39:00.468 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.blog.repository.BlogRepo.list        : ==> Parameters: 50(Integer), 10(Integer)
2017-09-14 22:39:00.475 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 22:39:00.475 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 24(String)
2017-09-14 22:39:00.477 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 22:39:00.478 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 22:39:00.479 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 23(String)
2017-09-14 22:39:00.480 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 22:39:00.481 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 22:39:00.481 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 16(String)
2017-09-14 22:39:00.483 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 22:39:00.484 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 22:39:00.484 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 1(String)
2017-09-14 22:39:00.488 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 22:39:00.490 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.blog.repository.BlogRepo.list        : <==      Total: 10
2017-09-14 22:39:00.504 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.blog.repository.BlogRepo.getTotal    : ==>  Preparing: select count(*) from t_blog 
2017-09-14 22:39:00.504 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.blog.repository.BlogRepo.getTotal    : ==> Parameters: 
2017-09-14 22:39:00.508 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.blog.repository.BlogRepo.getTotal    : <==      Total: 1
2017-09-14 22:40:07.382 DEBUG 8388 --- [http-nio-8080-exec-4] p.p.blog.repository.BlogRepo.list        : ==>  Preparing: select * from t_blog order by releaseDate desc limit ?,? 
2017-09-14 22:40:07.383 DEBUG 8388 --- [http-nio-8080-exec-4] p.p.blog.repository.BlogRepo.list        : ==> Parameters: 50(Integer), 10(Integer)
2017-09-14 22:40:07.391 DEBUG 8388 --- [http-nio-8080-exec-4] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 22:40:07.392 DEBUG 8388 --- [http-nio-8080-exec-4] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 24(String)
2017-09-14 22:40:07.393 DEBUG 8388 --- [http-nio-8080-exec-4] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 22:40:07.395 DEBUG 8388 --- [http-nio-8080-exec-4] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 22:40:07.395 DEBUG 8388 --- [http-nio-8080-exec-4] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 23(String)
2017-09-14 22:40:07.397 DEBUG 8388 --- [http-nio-8080-exec-4] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 22:40:07.398 DEBUG 8388 --- [http-nio-8080-exec-4] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 22:40:07.398 DEBUG 8388 --- [http-nio-8080-exec-4] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 16(String)
2017-09-14 22:40:07.399 DEBUG 8388 --- [http-nio-8080-exec-4] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 22:40:07.400 DEBUG 8388 --- [http-nio-8080-exec-4] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 22:40:07.400 DEBUG 8388 --- [http-nio-8080-exec-4] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 1(String)
2017-09-14 22:40:07.401 DEBUG 8388 --- [http-nio-8080-exec-4] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 22:40:07.403 DEBUG 8388 --- [http-nio-8080-exec-4] p.p.blog.repository.BlogRepo.list        : <==      Total: 10
2017-09-14 22:40:07.412 DEBUG 8388 --- [http-nio-8080-exec-4] p.p.blog.repository.BlogRepo.getTotal    : ==>  Preparing: select count(*) from t_blog 
2017-09-14 22:40:07.412 DEBUG 8388 --- [http-nio-8080-exec-4] p.p.blog.repository.BlogRepo.getTotal    : ==> Parameters: 
2017-09-14 22:40:07.418 DEBUG 8388 --- [http-nio-8080-exec-4] p.p.blog.repository.BlogRepo.getTotal    : <==      Total: 1
2017-09-14 22:40:16.264 DEBUG 8388 --- [http-nio-8080-exec-4] p.p.blog.repository.BlogRepo.list        : ==>  Preparing: select * from t_blog order by releaseDate desc limit ?,? 
2017-09-14 22:40:16.265 DEBUG 8388 --- [http-nio-8080-exec-4] p.p.blog.repository.BlogRepo.list        : ==> Parameters: 50(Integer), 10(Integer)
2017-09-14 22:40:16.273 DEBUG 8388 --- [http-nio-8080-exec-4] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 22:40:16.273 DEBUG 8388 --- [http-nio-8080-exec-4] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 24(String)
2017-09-14 22:40:16.275 DEBUG 8388 --- [http-nio-8080-exec-4] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 22:40:16.276 DEBUG 8388 --- [http-nio-8080-exec-4] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 22:40:16.276 DEBUG 8388 --- [http-nio-8080-exec-4] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 23(String)
2017-09-14 22:40:16.278 DEBUG 8388 --- [http-nio-8080-exec-4] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 22:40:16.279 DEBUG 8388 --- [http-nio-8080-exec-4] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 22:40:16.279 DEBUG 8388 --- [http-nio-8080-exec-4] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 16(String)
2017-09-14 22:40:16.280 DEBUG 8388 --- [http-nio-8080-exec-4] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 22:40:16.281 DEBUG 8388 --- [http-nio-8080-exec-4] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 22:40:16.281 DEBUG 8388 --- [http-nio-8080-exec-4] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 1(String)
2017-09-14 22:40:16.283 DEBUG 8388 --- [http-nio-8080-exec-4] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 22:40:16.284 DEBUG 8388 --- [http-nio-8080-exec-4] p.p.blog.repository.BlogRepo.list        : <==      Total: 10
2017-09-14 22:40:16.291 DEBUG 8388 --- [http-nio-8080-exec-4] p.p.blog.repository.BlogRepo.getTotal    : ==>  Preparing: select count(*) from t_blog 
2017-09-14 22:40:16.291 DEBUG 8388 --- [http-nio-8080-exec-4] p.p.blog.repository.BlogRepo.getTotal    : ==> Parameters: 
2017-09-14 22:40:16.295 DEBUG 8388 --- [http-nio-8080-exec-4] p.p.blog.repository.BlogRepo.getTotal    : <==      Total: 1
2017-09-14 22:40:32.093 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.blog.repository.BlogRepo.list        : ==>  Preparing: select * from t_blog order by releaseDate desc limit ?,? 
2017-09-14 22:40:32.094 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.blog.repository.BlogRepo.list        : ==> Parameters: 50(Integer), 10(Integer)
2017-09-14 22:40:32.102 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 22:40:32.103 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 24(String)
2017-09-14 22:40:32.110 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 22:40:32.111 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 22:40:32.111 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 23(String)
2017-09-14 22:40:32.113 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 22:40:32.114 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 22:40:32.115 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 16(String)
2017-09-14 22:40:32.116 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 22:40:32.117 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 22:40:32.117 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 1(String)
2017-09-14 22:40:32.119 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 22:40:32.120 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.blog.repository.BlogRepo.list        : <==      Total: 10
2017-09-14 22:40:32.128 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.blog.repository.BlogRepo.getTotal    : ==>  Preparing: select count(*) from t_blog 
2017-09-14 22:40:32.128 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.blog.repository.BlogRepo.getTotal    : ==> Parameters: 
2017-09-14 22:40:32.130 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.blog.repository.BlogRepo.getTotal    : <==      Total: 1
2017-09-14 22:40:41.178 DEBUG 8388 --- [http-nio-8080-exec-2] p.p.blog.repository.BlogRepo.list        : ==>  Preparing: select * from t_blog order by releaseDate desc limit ?,? 
2017-09-14 22:40:41.178 DEBUG 8388 --- [http-nio-8080-exec-2] p.p.blog.repository.BlogRepo.list        : ==> Parameters: 50(Integer), 10(Integer)
2017-09-14 22:40:41.186 DEBUG 8388 --- [http-nio-8080-exec-2] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 22:40:41.187 DEBUG 8388 --- [http-nio-8080-exec-2] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 24(String)
2017-09-14 22:40:41.188 DEBUG 8388 --- [http-nio-8080-exec-2] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 22:40:41.190 DEBUG 8388 --- [http-nio-8080-exec-2] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 22:40:41.191 DEBUG 8388 --- [http-nio-8080-exec-2] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 23(String)
2017-09-14 22:40:41.193 DEBUG 8388 --- [http-nio-8080-exec-2] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 22:40:41.194 DEBUG 8388 --- [http-nio-8080-exec-2] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 22:40:41.194 DEBUG 8388 --- [http-nio-8080-exec-2] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 16(String)
2017-09-14 22:40:41.196 DEBUG 8388 --- [http-nio-8080-exec-2] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 22:40:41.197 DEBUG 8388 --- [http-nio-8080-exec-2] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 22:40:41.197 DEBUG 8388 --- [http-nio-8080-exec-2] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 1(String)
2017-09-14 22:40:41.199 DEBUG 8388 --- [http-nio-8080-exec-2] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 22:40:41.200 DEBUG 8388 --- [http-nio-8080-exec-2] p.p.blog.repository.BlogRepo.list        : <==      Total: 10
2017-09-14 22:40:41.209 DEBUG 8388 --- [http-nio-8080-exec-2] p.p.blog.repository.BlogRepo.getTotal    : ==>  Preparing: select count(*) from t_blog 
2017-09-14 22:40:41.210 DEBUG 8388 --- [http-nio-8080-exec-2] p.p.blog.repository.BlogRepo.getTotal    : ==> Parameters: 
2017-09-14 22:40:41.211 DEBUG 8388 --- [http-nio-8080-exec-2] p.p.blog.repository.BlogRepo.getTotal    : <==      Total: 1
2017-09-14 22:41:10.997 DEBUG 8388 --- [http-nio-8080-exec-4] p.p.blog.repository.BlogRepo.list        : ==>  Preparing: select * from t_blog order by releaseDate desc limit ?,? 
2017-09-14 22:41:10.997 DEBUG 8388 --- [http-nio-8080-exec-4] p.p.blog.repository.BlogRepo.list        : ==> Parameters: 50(Integer), 10(Integer)
2017-09-14 22:41:11.005 DEBUG 8388 --- [http-nio-8080-exec-4] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 22:41:11.005 DEBUG 8388 --- [http-nio-8080-exec-4] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 24(String)
2017-09-14 22:41:11.007 DEBUG 8388 --- [http-nio-8080-exec-4] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 22:41:11.007 DEBUG 8388 --- [http-nio-8080-exec-4] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 22:41:11.008 DEBUG 8388 --- [http-nio-8080-exec-4] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 23(String)
2017-09-14 22:41:11.010 DEBUG 8388 --- [http-nio-8080-exec-4] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 22:41:11.011 DEBUG 8388 --- [http-nio-8080-exec-4] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 22:41:11.011 DEBUG 8388 --- [http-nio-8080-exec-4] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 16(String)
2017-09-14 22:41:11.012 DEBUG 8388 --- [http-nio-8080-exec-4] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 22:41:11.013 DEBUG 8388 --- [http-nio-8080-exec-4] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 22:41:11.013 DEBUG 8388 --- [http-nio-8080-exec-4] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 1(String)
2017-09-14 22:41:11.016 DEBUG 8388 --- [http-nio-8080-exec-4] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 22:41:11.017 DEBUG 8388 --- [http-nio-8080-exec-4] p.p.blog.repository.BlogRepo.list        : <==      Total: 10
2017-09-14 22:41:11.023 DEBUG 8388 --- [http-nio-8080-exec-4] p.p.blog.repository.BlogRepo.getTotal    : ==>  Preparing: select count(*) from t_blog 
2017-09-14 22:41:11.023 DEBUG 8388 --- [http-nio-8080-exec-4] p.p.blog.repository.BlogRepo.getTotal    : ==> Parameters: 
2017-09-14 22:41:11.025 DEBUG 8388 --- [http-nio-8080-exec-4] p.p.blog.repository.BlogRepo.getTotal    : <==      Total: 1
2017-09-14 22:41:53.170 DEBUG 8388 --- [http-nio-8080-exec-4] p.p.blog.repository.BlogRepo.list        : ==>  Preparing: select * from t_blog order by releaseDate desc limit ?,? 
2017-09-14 22:41:53.171 DEBUG 8388 --- [http-nio-8080-exec-4] p.p.blog.repository.BlogRepo.list        : ==> Parameters: 50(Integer), 10(Integer)
2017-09-14 22:41:53.176 DEBUG 8388 --- [http-nio-8080-exec-4] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 22:41:53.176 DEBUG 8388 --- [http-nio-8080-exec-4] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 24(String)
2017-09-14 22:41:53.177 DEBUG 8388 --- [http-nio-8080-exec-4] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 22:41:53.178 DEBUG 8388 --- [http-nio-8080-exec-4] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 22:41:53.178 DEBUG 8388 --- [http-nio-8080-exec-4] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 23(String)
2017-09-14 22:41:53.179 DEBUG 8388 --- [http-nio-8080-exec-4] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 22:41:53.180 DEBUG 8388 --- [http-nio-8080-exec-4] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 22:41:53.181 DEBUG 8388 --- [http-nio-8080-exec-4] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 16(String)
2017-09-14 22:41:53.182 DEBUG 8388 --- [http-nio-8080-exec-4] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 22:41:53.183 DEBUG 8388 --- [http-nio-8080-exec-4] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 22:41:53.183 DEBUG 8388 --- [http-nio-8080-exec-4] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 1(String)
2017-09-14 22:41:53.185 DEBUG 8388 --- [http-nio-8080-exec-4] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 22:41:53.186 DEBUG 8388 --- [http-nio-8080-exec-4] p.p.blog.repository.BlogRepo.list        : <==      Total: 10
2017-09-14 22:41:53.201 DEBUG 8388 --- [http-nio-8080-exec-4] p.p.blog.repository.BlogRepo.getTotal    : ==>  Preparing: select count(*) from t_blog 
2017-09-14 22:41:53.202 DEBUG 8388 --- [http-nio-8080-exec-4] p.p.blog.repository.BlogRepo.getTotal    : ==> Parameters: 
2017-09-14 22:41:53.203 DEBUG 8388 --- [http-nio-8080-exec-4] p.p.blog.repository.BlogRepo.getTotal    : <==      Total: 1
2017-09-14 22:41:53.226 ERROR 8388 --- [http-nio-8080-exec-4] org.thymeleaf.TemplateEngine             : [THYMELEAF][http-nio-8080-exec-4] Exception processing template "mainTemp": Could not parse as assignation sequence: "height: 60px;" (/foreground/common/head:4)
2017-09-14 22:41:53.229 ERROR 8388 --- [http-nio-8080-exec-4] o.a.c.c.C.[.[.[/].[dispatcherServlet]    : Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.thymeleaf.exceptions.TemplateProcessingException: Could not parse as assignation sequence: "height: 60px;" (/foreground/common/head:4)] with root cause

org.thymeleaf.exceptions.TemplateProcessingException: Could not parse as assignation sequence: "height: 60px;" (/foreground/common/head:4)
	at org.thymeleaf.standard.expression.AssignationUtils.parseAssignationSequence(AssignationUtils.java:67)
	at org.thymeleaf.standard.processor.attr.AbstractStandardAttributeModifierAttrProcessor.getModifiedAttributeValues(AbstractStandardAttributeModifierAttrProcessor.java:74)
	at org.thymeleaf.processor.attr.AbstractAttributeModifierAttrProcessor.processAttribute(AbstractAttributeModifierAttrProcessor.java:62)
	at org.thymeleaf.processor.attr.AbstractAttrProcessor.doProcess(AbstractAttrProcessor.java:87)
	at org.thymeleaf.processor.AbstractProcessor.process(AbstractProcessor.java:212)
	at org.thymeleaf.dom.Node.applyNextProcessor(Node.java:1017)
	at org.thymeleaf.dom.Node.processNode(Node.java:972)
	at org.thymeleaf.dom.NestableNode.computeNextChild(NestableNode.java:695)
	at org.thymeleaf.dom.NestableNode.doAdditionalProcess(NestableNode.java:668)
	at org.thymeleaf.dom.Node.processNode(Node.java:990)
	at org.thymeleaf.dom.NestableNode.computeNextChild(NestableNode.java:695)
	at org.thymeleaf.dom.NestableNode.doAdditionalProcess(NestableNode.java:668)
	at org.thymeleaf.dom.Node.processNode(Node.java:990)
	at org.thymeleaf.dom.NestableNode.computeNextChild(NestableNode.java:695)
	at org.thymeleaf.dom.NestableNode.doAdditionalProcess(NestableNode.java:668)
	at org.thymeleaf.dom.Node.processNode(Node.java:990)
	at org.thymeleaf.dom.NestableNode.computeNextChild(NestableNode.java:695)
	at org.thymeleaf.dom.NestableNode.doAdditionalProcess(NestableNode.java:668)
	at org.thymeleaf.dom.Node.processNode(Node.java:990)
	at org.thymeleaf.dom.NestableNode.computeNextChild(NestableNode.java:695)
	at org.thymeleaf.dom.NestableNode.doAdditionalProcess(NestableNode.java:668)
	at org.thymeleaf.dom.Node.processNode(Node.java:990)
	at org.thymeleaf.dom.NestableNode.computeNextChild(NestableNode.java:695)
	at org.thymeleaf.dom.NestableNode.doAdditionalProcess(NestableNode.java:668)
	at org.thymeleaf.dom.Node.processNode(Node.java:990)
	at org.thymeleaf.dom.NestableNode.computeNextChild(NestableNode.java:695)
	at org.thymeleaf.dom.NestableNode.doAdditionalProcess(NestableNode.java:668)
	at org.thymeleaf.dom.Node.processNode(Node.java:990)
	at org.thymeleaf.dom.Document.process(Document.java:93)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1155)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1060)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1011)
	at org.thymeleaf.spring4.view.ThymeleafView.renderFragment(ThymeleafView.java:335)
	at org.thymeleaf.spring4.view.ThymeleafView.render(ThymeleafView.java:190)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1282)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1037)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:980)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:897)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:861)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:622)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:729)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:230)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:112)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:346)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:262)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:105)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:474)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:79)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:624)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:349)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:783)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:798)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1434)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)

2017-09-14 22:42:06.682 DEBUG 8388 --- [http-nio-8080-exec-9] p.p.blog.repository.BlogRepo.list        : ==>  Preparing: select * from t_blog order by releaseDate desc limit ?,? 
2017-09-14 22:42:06.682 DEBUG 8388 --- [http-nio-8080-exec-9] p.p.blog.repository.BlogRepo.list        : ==> Parameters: 50(Integer), 10(Integer)
2017-09-14 22:42:06.688 DEBUG 8388 --- [http-nio-8080-exec-9] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 22:42:06.689 DEBUG 8388 --- [http-nio-8080-exec-9] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 24(String)
2017-09-14 22:42:06.690 DEBUG 8388 --- [http-nio-8080-exec-9] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 22:42:06.691 DEBUG 8388 --- [http-nio-8080-exec-9] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 22:42:06.692 DEBUG 8388 --- [http-nio-8080-exec-9] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 23(String)
2017-09-14 22:42:06.693 DEBUG 8388 --- [http-nio-8080-exec-9] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 22:42:06.754 DEBUG 8388 --- [http-nio-8080-exec-9] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 22:42:06.754 DEBUG 8388 --- [http-nio-8080-exec-9] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 16(String)
2017-09-14 22:42:06.761 DEBUG 8388 --- [http-nio-8080-exec-9] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 22:42:06.762 DEBUG 8388 --- [http-nio-8080-exec-9] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 22:42:06.762 DEBUG 8388 --- [http-nio-8080-exec-9] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 1(String)
2017-09-14 22:42:06.771 DEBUG 8388 --- [http-nio-8080-exec-9] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 22:42:06.773 DEBUG 8388 --- [http-nio-8080-exec-9] p.p.blog.repository.BlogRepo.list        : <==      Total: 10
2017-09-14 22:42:06.783 DEBUG 8388 --- [http-nio-8080-exec-9] p.p.blog.repository.BlogRepo.getTotal    : ==>  Preparing: select count(*) from t_blog 
2017-09-14 22:42:06.784 DEBUG 8388 --- [http-nio-8080-exec-9] p.p.blog.repository.BlogRepo.getTotal    : ==> Parameters: 
2017-09-14 22:42:06.786 DEBUG 8388 --- [http-nio-8080-exec-9] p.p.blog.repository.BlogRepo.getTotal    : <==      Total: 1
2017-09-14 22:42:23.560 DEBUG 8388 --- [http-nio-8080-exec-10] p.p.blog.repository.BlogRepo.list        : ==>  Preparing: select * from t_blog order by releaseDate desc limit ?,? 
2017-09-14 22:42:23.560 DEBUG 8388 --- [http-nio-8080-exec-10] p.p.blog.repository.BlogRepo.list        : ==> Parameters: 50(Integer), 10(Integer)
2017-09-14 22:42:23.567 DEBUG 8388 --- [http-nio-8080-exec-10] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 22:42:23.568 DEBUG 8388 --- [http-nio-8080-exec-10] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 24(String)
2017-09-14 22:42:23.570 DEBUG 8388 --- [http-nio-8080-exec-10] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 22:42:23.570 DEBUG 8388 --- [http-nio-8080-exec-10] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 22:42:23.571 DEBUG 8388 --- [http-nio-8080-exec-10] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 23(String)
2017-09-14 22:42:23.572 DEBUG 8388 --- [http-nio-8080-exec-10] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 22:42:23.573 DEBUG 8388 --- [http-nio-8080-exec-10] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 22:42:23.573 DEBUG 8388 --- [http-nio-8080-exec-10] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 16(String)
2017-09-14 22:42:23.575 DEBUG 8388 --- [http-nio-8080-exec-10] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 22:42:23.576 DEBUG 8388 --- [http-nio-8080-exec-10] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 22:42:23.577 DEBUG 8388 --- [http-nio-8080-exec-10] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 1(String)
2017-09-14 22:42:23.578 DEBUG 8388 --- [http-nio-8080-exec-10] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 22:42:23.580 DEBUG 8388 --- [http-nio-8080-exec-10] p.p.blog.repository.BlogRepo.list        : <==      Total: 10
2017-09-14 22:42:23.589 DEBUG 8388 --- [http-nio-8080-exec-10] p.p.blog.repository.BlogRepo.getTotal    : ==>  Preparing: select count(*) from t_blog 
2017-09-14 22:42:23.589 DEBUG 8388 --- [http-nio-8080-exec-10] p.p.blog.repository.BlogRepo.getTotal    : ==> Parameters: 
2017-09-14 22:42:23.591 DEBUG 8388 --- [http-nio-8080-exec-10] p.p.blog.repository.BlogRepo.getTotal    : <==      Total: 1
2017-09-14 22:42:35.058 DEBUG 8388 --- [http-nio-8080-exec-9] p.p.blog.repository.BlogRepo.list        : ==>  Preparing: select * from t_blog order by releaseDate desc limit ?,? 
2017-09-14 22:42:35.059 DEBUG 8388 --- [http-nio-8080-exec-9] p.p.blog.repository.BlogRepo.list        : ==> Parameters: 50(Integer), 10(Integer)
2017-09-14 22:42:35.063 DEBUG 8388 --- [http-nio-8080-exec-9] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 22:42:35.064 DEBUG 8388 --- [http-nio-8080-exec-9] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 24(String)
2017-09-14 22:42:35.065 DEBUG 8388 --- [http-nio-8080-exec-9] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 22:42:35.066 DEBUG 8388 --- [http-nio-8080-exec-9] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 22:42:35.067 DEBUG 8388 --- [http-nio-8080-exec-9] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 23(String)
2017-09-14 22:42:35.068 DEBUG 8388 --- [http-nio-8080-exec-9] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 22:42:35.069 DEBUG 8388 --- [http-nio-8080-exec-9] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 22:42:35.069 DEBUG 8388 --- [http-nio-8080-exec-9] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 16(String)
2017-09-14 22:42:35.070 DEBUG 8388 --- [http-nio-8080-exec-9] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 22:42:35.071 DEBUG 8388 --- [http-nio-8080-exec-9] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 22:42:35.071 DEBUG 8388 --- [http-nio-8080-exec-9] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 1(String)
2017-09-14 22:42:35.072 DEBUG 8388 --- [http-nio-8080-exec-9] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 22:42:35.073 DEBUG 8388 --- [http-nio-8080-exec-9] p.p.blog.repository.BlogRepo.list        : <==      Total: 10
2017-09-14 22:42:35.093 DEBUG 8388 --- [http-nio-8080-exec-9] p.p.blog.repository.BlogRepo.getTotal    : ==>  Preparing: select count(*) from t_blog 
2017-09-14 22:42:35.093 DEBUG 8388 --- [http-nio-8080-exec-9] p.p.blog.repository.BlogRepo.getTotal    : ==> Parameters: 
2017-09-14 22:42:35.094 DEBUG 8388 --- [http-nio-8080-exec-9] p.p.blog.repository.BlogRepo.getTotal    : <==      Total: 1
2017-09-14 22:43:51.457 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.blog.repository.BlogRepo.list        : ==>  Preparing: select * from t_blog order by releaseDate desc limit ?,? 
2017-09-14 22:43:51.458 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.blog.repository.BlogRepo.list        : ==> Parameters: 50(Integer), 10(Integer)
2017-09-14 22:43:51.466 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 22:43:51.466 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 24(String)
2017-09-14 22:43:51.470 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 22:43:51.470 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 22:43:51.471 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 23(String)
2017-09-14 22:43:51.475 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 22:43:51.475 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 22:43:51.476 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 16(String)
2017-09-14 22:43:51.477 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 22:43:51.478 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 22:43:51.478 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 1(String)
2017-09-14 22:43:51.487 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 22:43:51.489 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.blog.repository.BlogRepo.list        : <==      Total: 10
2017-09-14 22:43:51.496 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.blog.repository.BlogRepo.getTotal    : ==>  Preparing: select count(*) from t_blog 
2017-09-14 22:43:51.497 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.blog.repository.BlogRepo.getTotal    : ==> Parameters: 
2017-09-14 22:43:51.498 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.blog.repository.BlogRepo.getTotal    : <==      Total: 1
2017-09-14 22:44:28.408 DEBUG 8388 --- [http-nio-8080-exec-10] p.p.blog.repository.BlogRepo.list        : ==>  Preparing: select * from t_blog order by releaseDate desc limit ?,? 
2017-09-14 22:44:28.408 DEBUG 8388 --- [http-nio-8080-exec-10] p.p.blog.repository.BlogRepo.list        : ==> Parameters: 50(Integer), 10(Integer)
2017-09-14 22:44:28.414 DEBUG 8388 --- [http-nio-8080-exec-10] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 22:44:28.414 DEBUG 8388 --- [http-nio-8080-exec-10] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 24(String)
2017-09-14 22:44:28.416 DEBUG 8388 --- [http-nio-8080-exec-10] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 22:44:28.417 DEBUG 8388 --- [http-nio-8080-exec-10] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 22:44:28.431 DEBUG 8388 --- [http-nio-8080-exec-10] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 23(String)
2017-09-14 22:44:28.450 DEBUG 8388 --- [http-nio-8080-exec-10] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 22:44:28.451 DEBUG 8388 --- [http-nio-8080-exec-10] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 22:44:28.451 DEBUG 8388 --- [http-nio-8080-exec-10] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 16(String)
2017-09-14 22:44:28.454 DEBUG 8388 --- [http-nio-8080-exec-10] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 22:44:28.454 DEBUG 8388 --- [http-nio-8080-exec-10] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 22:44:28.455 DEBUG 8388 --- [http-nio-8080-exec-10] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 1(String)
2017-09-14 22:44:28.456 DEBUG 8388 --- [http-nio-8080-exec-10] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 22:44:28.458 DEBUG 8388 --- [http-nio-8080-exec-10] p.p.blog.repository.BlogRepo.list        : <==      Total: 10
2017-09-14 22:44:28.509 DEBUG 8388 --- [http-nio-8080-exec-10] p.p.blog.repository.BlogRepo.getTotal    : ==>  Preparing: select count(*) from t_blog 
2017-09-14 22:44:28.509 DEBUG 8388 --- [http-nio-8080-exec-10] p.p.blog.repository.BlogRepo.getTotal    : ==> Parameters: 
2017-09-14 22:44:28.511 DEBUG 8388 --- [http-nio-8080-exec-10] p.p.blog.repository.BlogRepo.getTotal    : <==      Total: 1
2017-09-14 22:45:05.583 DEBUG 8388 --- [http-nio-8080-exec-1] p.p.blog.repository.BlogRepo.list        : ==>  Preparing: select * from t_blog order by releaseDate desc limit ?,? 
2017-09-14 22:45:05.584 DEBUG 8388 --- [http-nio-8080-exec-1] p.p.blog.repository.BlogRepo.list        : ==> Parameters: 50(Integer), 10(Integer)
2017-09-14 22:45:05.625 DEBUG 8388 --- [http-nio-8080-exec-1] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 22:45:05.625 DEBUG 8388 --- [http-nio-8080-exec-1] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 24(String)
2017-09-14 22:45:05.628 DEBUG 8388 --- [http-nio-8080-exec-1] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 22:45:05.629 DEBUG 8388 --- [http-nio-8080-exec-1] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 22:45:05.629 DEBUG 8388 --- [http-nio-8080-exec-1] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 23(String)
2017-09-14 22:45:05.631 DEBUG 8388 --- [http-nio-8080-exec-1] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 22:45:05.632 DEBUG 8388 --- [http-nio-8080-exec-1] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 22:45:05.632 DEBUG 8388 --- [http-nio-8080-exec-1] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 16(String)
2017-09-14 22:45:05.633 DEBUG 8388 --- [http-nio-8080-exec-1] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 22:45:05.634 DEBUG 8388 --- [http-nio-8080-exec-1] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 22:45:05.634 DEBUG 8388 --- [http-nio-8080-exec-1] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 1(String)
2017-09-14 22:45:05.636 DEBUG 8388 --- [http-nio-8080-exec-1] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 22:45:05.637 DEBUG 8388 --- [http-nio-8080-exec-1] p.p.blog.repository.BlogRepo.list        : <==      Total: 10
2017-09-14 22:45:05.645 DEBUG 8388 --- [http-nio-8080-exec-1] p.p.blog.repository.BlogRepo.getTotal    : ==>  Preparing: select count(*) from t_blog 
2017-09-14 22:45:05.645 DEBUG 8388 --- [http-nio-8080-exec-1] p.p.blog.repository.BlogRepo.getTotal    : ==> Parameters: 
2017-09-14 22:45:05.647 DEBUG 8388 --- [http-nio-8080-exec-1] p.p.blog.repository.BlogRepo.getTotal    : <==      Total: 1
2017-09-14 22:45:36.736 DEBUG 8388 --- [http-nio-8080-exec-9] p.p.blog.repository.BlogRepo.list        : ==>  Preparing: select * from t_blog order by releaseDate desc limit ?,? 
2017-09-14 22:45:36.736 DEBUG 8388 --- [http-nio-8080-exec-9] p.p.blog.repository.BlogRepo.list        : ==> Parameters: 50(Integer), 10(Integer)
2017-09-14 22:45:36.752 DEBUG 8388 --- [http-nio-8080-exec-9] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 22:45:36.753 DEBUG 8388 --- [http-nio-8080-exec-9] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 24(String)
2017-09-14 22:45:36.756 DEBUG 8388 --- [http-nio-8080-exec-9] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 22:45:36.757 DEBUG 8388 --- [http-nio-8080-exec-9] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 22:45:36.757 DEBUG 8388 --- [http-nio-8080-exec-9] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 23(String)
2017-09-14 22:45:36.759 DEBUG 8388 --- [http-nio-8080-exec-9] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 22:45:36.760 DEBUG 8388 --- [http-nio-8080-exec-9] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 22:45:36.760 DEBUG 8388 --- [http-nio-8080-exec-9] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 16(String)
2017-09-14 22:45:36.762 DEBUG 8388 --- [http-nio-8080-exec-9] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 22:45:36.763 DEBUG 8388 --- [http-nio-8080-exec-9] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 22:45:36.763 DEBUG 8388 --- [http-nio-8080-exec-9] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 1(String)
2017-09-14 22:45:36.765 DEBUG 8388 --- [http-nio-8080-exec-9] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 22:45:36.766 DEBUG 8388 --- [http-nio-8080-exec-9] p.p.blog.repository.BlogRepo.list        : <==      Total: 10
2017-09-14 22:45:36.773 DEBUG 8388 --- [http-nio-8080-exec-9] p.p.blog.repository.BlogRepo.getTotal    : ==>  Preparing: select count(*) from t_blog 
2017-09-14 22:45:36.774 DEBUG 8388 --- [http-nio-8080-exec-9] p.p.blog.repository.BlogRepo.getTotal    : ==> Parameters: 
2017-09-14 22:45:36.775 DEBUG 8388 --- [http-nio-8080-exec-9] p.p.blog.repository.BlogRepo.getTotal    : <==      Total: 1
2017-09-14 22:45:53.986 DEBUG 8388 --- [http-nio-8080-exec-6] p.p.blog.repository.BlogRepo.list        : ==>  Preparing: select * from t_blog order by releaseDate desc limit ?,? 
2017-09-14 22:45:53.986 DEBUG 8388 --- [http-nio-8080-exec-6] p.p.blog.repository.BlogRepo.list        : ==> Parameters: 50(Integer), 10(Integer)
2017-09-14 22:45:53.993 DEBUG 8388 --- [http-nio-8080-exec-6] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 22:45:53.993 DEBUG 8388 --- [http-nio-8080-exec-6] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 24(String)
2017-09-14 22:45:53.994 DEBUG 8388 --- [http-nio-8080-exec-6] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 22:45:53.996 DEBUG 8388 --- [http-nio-8080-exec-6] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 22:45:53.996 DEBUG 8388 --- [http-nio-8080-exec-6] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 23(String)
2017-09-14 22:45:53.998 DEBUG 8388 --- [http-nio-8080-exec-6] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 22:45:53.999 DEBUG 8388 --- [http-nio-8080-exec-6] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 22:45:53.999 DEBUG 8388 --- [http-nio-8080-exec-6] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 16(String)
2017-09-14 22:45:54.001 DEBUG 8388 --- [http-nio-8080-exec-6] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 22:45:54.001 DEBUG 8388 --- [http-nio-8080-exec-6] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 22:45:54.002 DEBUG 8388 --- [http-nio-8080-exec-6] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 1(String)
2017-09-14 22:45:54.005 DEBUG 8388 --- [http-nio-8080-exec-6] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 22:45:54.006 DEBUG 8388 --- [http-nio-8080-exec-6] p.p.blog.repository.BlogRepo.list        : <==      Total: 10
2017-09-14 22:45:54.014 DEBUG 8388 --- [http-nio-8080-exec-6] p.p.blog.repository.BlogRepo.getTotal    : ==>  Preparing: select count(*) from t_blog 
2017-09-14 22:45:54.014 DEBUG 8388 --- [http-nio-8080-exec-6] p.p.blog.repository.BlogRepo.getTotal    : ==> Parameters: 
2017-09-14 22:45:54.015 DEBUG 8388 --- [http-nio-8080-exec-6] p.p.blog.repository.BlogRepo.getTotal    : <==      Total: 1
2017-09-14 22:46:25.254 DEBUG 8388 --- [http-nio-8080-exec-5] p.p.blog.repository.BlogRepo.list        : ==>  Preparing: select * from t_blog order by releaseDate desc limit ?,? 
2017-09-14 22:46:25.255 DEBUG 8388 --- [http-nio-8080-exec-5] p.p.blog.repository.BlogRepo.list        : ==> Parameters: 50(Integer), 10(Integer)
2017-09-14 22:46:25.261 DEBUG 8388 --- [http-nio-8080-exec-5] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 22:46:25.261 DEBUG 8388 --- [http-nio-8080-exec-5] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 24(String)
2017-09-14 22:46:25.262 DEBUG 8388 --- [http-nio-8080-exec-5] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 22:46:25.263 DEBUG 8388 --- [http-nio-8080-exec-5] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 22:46:25.263 DEBUG 8388 --- [http-nio-8080-exec-5] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 23(String)
2017-09-14 22:46:25.264 DEBUG 8388 --- [http-nio-8080-exec-5] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 22:46:25.264 DEBUG 8388 --- [http-nio-8080-exec-5] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 22:46:25.264 DEBUG 8388 --- [http-nio-8080-exec-5] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 16(String)
2017-09-14 22:46:25.265 DEBUG 8388 --- [http-nio-8080-exec-5] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 22:46:25.265 DEBUG 8388 --- [http-nio-8080-exec-5] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 22:46:25.265 DEBUG 8388 --- [http-nio-8080-exec-5] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 1(String)
2017-09-14 22:46:25.266 DEBUG 8388 --- [http-nio-8080-exec-5] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 22:46:25.267 DEBUG 8388 --- [http-nio-8080-exec-5] p.p.blog.repository.BlogRepo.list        : <==      Total: 10
2017-09-14 22:46:25.273 DEBUG 8388 --- [http-nio-8080-exec-5] p.p.blog.repository.BlogRepo.getTotal    : ==>  Preparing: select count(*) from t_blog 
2017-09-14 22:46:25.273 DEBUG 8388 --- [http-nio-8080-exec-5] p.p.blog.repository.BlogRepo.getTotal    : ==> Parameters: 
2017-09-14 22:46:25.275 DEBUG 8388 --- [http-nio-8080-exec-5] p.p.blog.repository.BlogRepo.getTotal    : <==      Total: 1
2017-09-14 22:46:58.711 DEBUG 8388 --- [http-nio-8080-exec-4] p.p.blog.repository.BlogRepo.list        : ==>  Preparing: select * from t_blog order by releaseDate desc limit ?,? 
2017-09-14 22:46:58.711 DEBUG 8388 --- [http-nio-8080-exec-4] p.p.blog.repository.BlogRepo.list        : ==> Parameters: 50(Integer), 10(Integer)
2017-09-14 22:46:58.717 DEBUG 8388 --- [http-nio-8080-exec-4] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 22:46:58.717 DEBUG 8388 --- [http-nio-8080-exec-4] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 24(String)
2017-09-14 22:46:58.719 DEBUG 8388 --- [http-nio-8080-exec-4] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 22:46:58.720 DEBUG 8388 --- [http-nio-8080-exec-4] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 22:46:58.721 DEBUG 8388 --- [http-nio-8080-exec-4] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 23(String)
2017-09-14 22:46:58.723 DEBUG 8388 --- [http-nio-8080-exec-4] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 22:46:58.724 DEBUG 8388 --- [http-nio-8080-exec-4] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 22:46:58.724 DEBUG 8388 --- [http-nio-8080-exec-4] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 16(String)
2017-09-14 22:46:58.725 DEBUG 8388 --- [http-nio-8080-exec-4] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 22:46:58.726 DEBUG 8388 --- [http-nio-8080-exec-4] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 22:46:58.726 DEBUG 8388 --- [http-nio-8080-exec-4] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 1(String)
2017-09-14 22:46:58.728 DEBUG 8388 --- [http-nio-8080-exec-4] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 22:46:58.729 DEBUG 8388 --- [http-nio-8080-exec-4] p.p.blog.repository.BlogRepo.list        : <==      Total: 10
2017-09-14 22:46:58.736 DEBUG 8388 --- [http-nio-8080-exec-4] p.p.blog.repository.BlogRepo.getTotal    : ==>  Preparing: select count(*) from t_blog 
2017-09-14 22:46:58.736 DEBUG 8388 --- [http-nio-8080-exec-4] p.p.blog.repository.BlogRepo.getTotal    : ==> Parameters: 
2017-09-14 22:46:58.737 DEBUG 8388 --- [http-nio-8080-exec-4] p.p.blog.repository.BlogRepo.getTotal    : <==      Total: 1
2017-09-14 22:47:56.036 DEBUG 8388 --- [http-nio-8080-exec-5] p.p.blog.repository.BlogRepo.list        : ==>  Preparing: select * from t_blog order by releaseDate desc limit ?,? 
2017-09-14 22:47:56.037 DEBUG 8388 --- [http-nio-8080-exec-5] p.p.blog.repository.BlogRepo.list        : ==> Parameters: 50(Integer), 10(Integer)
2017-09-14 22:47:56.045 DEBUG 8388 --- [http-nio-8080-exec-5] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 22:47:56.045 DEBUG 8388 --- [http-nio-8080-exec-5] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 24(String)
2017-09-14 22:47:56.047 DEBUG 8388 --- [http-nio-8080-exec-5] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 22:47:56.049 DEBUG 8388 --- [http-nio-8080-exec-5] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 22:47:56.049 DEBUG 8388 --- [http-nio-8080-exec-5] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 23(String)
2017-09-14 22:47:56.050 DEBUG 8388 --- [http-nio-8080-exec-5] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 22:47:56.051 DEBUG 8388 --- [http-nio-8080-exec-5] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 22:47:56.051 DEBUG 8388 --- [http-nio-8080-exec-5] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 16(String)
2017-09-14 22:47:56.053 DEBUG 8388 --- [http-nio-8080-exec-5] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 22:47:56.055 DEBUG 8388 --- [http-nio-8080-exec-5] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 22:47:56.055 DEBUG 8388 --- [http-nio-8080-exec-5] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 1(String)
2017-09-14 22:47:56.057 DEBUG 8388 --- [http-nio-8080-exec-5] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 22:47:56.059 DEBUG 8388 --- [http-nio-8080-exec-5] p.p.blog.repository.BlogRepo.list        : <==      Total: 10
2017-09-14 22:47:56.071 DEBUG 8388 --- [http-nio-8080-exec-5] p.p.blog.repository.BlogRepo.getTotal    : ==>  Preparing: select count(*) from t_blog 
2017-09-14 22:47:56.071 DEBUG 8388 --- [http-nio-8080-exec-5] p.p.blog.repository.BlogRepo.getTotal    : ==> Parameters: 
2017-09-14 22:47:56.073 DEBUG 8388 --- [http-nio-8080-exec-5] p.p.blog.repository.BlogRepo.getTotal    : <==      Total: 1
2017-09-14 22:48:00.823 DEBUG 8388 --- [http-nio-8080-exec-3] p.p.blog.repository.BlogRepo.list        : ==>  Preparing: select * from t_blog order by releaseDate desc limit ?,? 
2017-09-14 22:48:00.824 DEBUG 8388 --- [http-nio-8080-exec-3] p.p.blog.repository.BlogRepo.list        : ==> Parameters: 50(Integer), 10(Integer)
2017-09-14 22:48:00.831 DEBUG 8388 --- [http-nio-8080-exec-3] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 22:48:00.831 DEBUG 8388 --- [http-nio-8080-exec-3] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 24(String)
2017-09-14 22:48:00.834 DEBUG 8388 --- [http-nio-8080-exec-3] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 22:48:00.835 DEBUG 8388 --- [http-nio-8080-exec-3] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 22:48:00.836 DEBUG 8388 --- [http-nio-8080-exec-3] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 23(String)
2017-09-14 22:48:00.837 DEBUG 8388 --- [http-nio-8080-exec-3] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 22:48:00.838 DEBUG 8388 --- [http-nio-8080-exec-3] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 22:48:00.839 DEBUG 8388 --- [http-nio-8080-exec-3] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 16(String)
2017-09-14 22:48:00.840 DEBUG 8388 --- [http-nio-8080-exec-3] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 22:48:00.841 DEBUG 8388 --- [http-nio-8080-exec-3] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 22:48:00.842 DEBUG 8388 --- [http-nio-8080-exec-3] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 1(String)
2017-09-14 22:48:00.843 DEBUG 8388 --- [http-nio-8080-exec-3] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 22:48:00.845 DEBUG 8388 --- [http-nio-8080-exec-3] p.p.blog.repository.BlogRepo.list        : <==      Total: 10
2017-09-14 22:48:00.853 DEBUG 8388 --- [http-nio-8080-exec-3] p.p.blog.repository.BlogRepo.getTotal    : ==>  Preparing: select count(*) from t_blog 
2017-09-14 22:48:00.853 DEBUG 8388 --- [http-nio-8080-exec-3] p.p.blog.repository.BlogRepo.getTotal    : ==> Parameters: 
2017-09-14 22:48:00.854 DEBUG 8388 --- [http-nio-8080-exec-3] p.p.blog.repository.BlogRepo.getTotal    : <==      Total: 1
2017-09-14 22:48:27.097 DEBUG 8388 --- [http-nio-8080-exec-10] p.p.blog.repository.BlogRepo.list        : ==>  Preparing: select * from t_blog order by releaseDate desc limit ?,? 
2017-09-14 22:48:27.098 DEBUG 8388 --- [http-nio-8080-exec-10] p.p.blog.repository.BlogRepo.list        : ==> Parameters: 50(Integer), 10(Integer)
2017-09-14 22:48:27.104 DEBUG 8388 --- [http-nio-8080-exec-10] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 22:48:27.105 DEBUG 8388 --- [http-nio-8080-exec-10] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 24(String)
2017-09-14 22:48:27.106 DEBUG 8388 --- [http-nio-8080-exec-10] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 22:48:27.107 DEBUG 8388 --- [http-nio-8080-exec-10] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 22:48:27.107 DEBUG 8388 --- [http-nio-8080-exec-10] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 23(String)
2017-09-14 22:48:27.109 DEBUG 8388 --- [http-nio-8080-exec-10] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 22:48:27.109 DEBUG 8388 --- [http-nio-8080-exec-10] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 22:48:27.109 DEBUG 8388 --- [http-nio-8080-exec-10] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 16(String)
2017-09-14 22:48:27.111 DEBUG 8388 --- [http-nio-8080-exec-10] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 22:48:27.111 DEBUG 8388 --- [http-nio-8080-exec-10] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 22:48:27.112 DEBUG 8388 --- [http-nio-8080-exec-10] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 1(String)
2017-09-14 22:48:27.114 DEBUG 8388 --- [http-nio-8080-exec-10] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 22:48:27.115 DEBUG 8388 --- [http-nio-8080-exec-10] p.p.blog.repository.BlogRepo.list        : <==      Total: 10
2017-09-14 22:48:27.122 DEBUG 8388 --- [http-nio-8080-exec-10] p.p.blog.repository.BlogRepo.getTotal    : ==>  Preparing: select count(*) from t_blog 
2017-09-14 22:48:27.123 DEBUG 8388 --- [http-nio-8080-exec-10] p.p.blog.repository.BlogRepo.getTotal    : ==> Parameters: 
2017-09-14 22:48:27.125 DEBUG 8388 --- [http-nio-8080-exec-10] p.p.blog.repository.BlogRepo.getTotal    : <==      Total: 1
2017-09-14 22:48:37.509 DEBUG 8388 --- [http-nio-8080-exec-6] p.p.blog.repository.BlogRepo.list        : ==>  Preparing: select * from t_blog order by releaseDate desc limit ?,? 
2017-09-14 22:48:37.511 DEBUG 8388 --- [http-nio-8080-exec-6] p.p.blog.repository.BlogRepo.list        : ==> Parameters: 50(Integer), 10(Integer)
2017-09-14 22:48:37.519 DEBUG 8388 --- [http-nio-8080-exec-6] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 22:48:37.519 DEBUG 8388 --- [http-nio-8080-exec-6] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 24(String)
2017-09-14 22:48:37.520 DEBUG 8388 --- [http-nio-8080-exec-6] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 22:48:37.521 DEBUG 8388 --- [http-nio-8080-exec-6] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 22:48:37.521 DEBUG 8388 --- [http-nio-8080-exec-6] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 23(String)
2017-09-14 22:48:37.522 DEBUG 8388 --- [http-nio-8080-exec-6] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 22:48:37.523 DEBUG 8388 --- [http-nio-8080-exec-6] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 22:48:37.523 DEBUG 8388 --- [http-nio-8080-exec-6] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 16(String)
2017-09-14 22:48:37.524 DEBUG 8388 --- [http-nio-8080-exec-6] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 22:48:37.526 DEBUG 8388 --- [http-nio-8080-exec-6] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 22:48:37.527 DEBUG 8388 --- [http-nio-8080-exec-6] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 1(String)
2017-09-14 22:48:37.528 DEBUG 8388 --- [http-nio-8080-exec-6] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 22:48:37.530 DEBUG 8388 --- [http-nio-8080-exec-6] p.p.blog.repository.BlogRepo.list        : <==      Total: 10
2017-09-14 22:48:37.537 DEBUG 8388 --- [http-nio-8080-exec-6] p.p.blog.repository.BlogRepo.getTotal    : ==>  Preparing: select count(*) from t_blog 
2017-09-14 22:48:37.537 DEBUG 8388 --- [http-nio-8080-exec-6] p.p.blog.repository.BlogRepo.getTotal    : ==> Parameters: 
2017-09-14 22:48:37.539 DEBUG 8388 --- [http-nio-8080-exec-6] p.p.blog.repository.BlogRepo.getTotal    : <==      Total: 1
2017-09-14 22:48:40.729 DEBUG 8388 --- [http-nio-8080-exec-9] p.p.blog.repository.BlogRepo.list        : ==>  Preparing: select * from t_blog order by releaseDate desc limit ?,? 
2017-09-14 22:48:40.730 DEBUG 8388 --- [http-nio-8080-exec-9] p.p.blog.repository.BlogRepo.list        : ==> Parameters: 50(Integer), 10(Integer)
2017-09-14 22:48:40.769 DEBUG 8388 --- [http-nio-8080-exec-9] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 22:48:40.769 DEBUG 8388 --- [http-nio-8080-exec-9] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 24(String)
2017-09-14 22:48:40.771 DEBUG 8388 --- [http-nio-8080-exec-9] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 22:48:40.772 DEBUG 8388 --- [http-nio-8080-exec-9] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 22:48:40.772 DEBUG 8388 --- [http-nio-8080-exec-9] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 23(String)
2017-09-14 22:48:40.774 DEBUG 8388 --- [http-nio-8080-exec-9] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 22:48:40.775 DEBUG 8388 --- [http-nio-8080-exec-9] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 22:48:40.775 DEBUG 8388 --- [http-nio-8080-exec-9] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 16(String)
2017-09-14 22:48:40.777 DEBUG 8388 --- [http-nio-8080-exec-9] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 22:48:40.783 DEBUG 8388 --- [http-nio-8080-exec-9] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 22:48:40.784 DEBUG 8388 --- [http-nio-8080-exec-9] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 1(String)
2017-09-14 22:48:40.785 DEBUG 8388 --- [http-nio-8080-exec-9] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 22:48:40.789 DEBUG 8388 --- [http-nio-8080-exec-9] p.p.blog.repository.BlogRepo.list        : <==      Total: 10
2017-09-14 22:48:40.799 DEBUG 8388 --- [http-nio-8080-exec-9] p.p.blog.repository.BlogRepo.getTotal    : ==>  Preparing: select count(*) from t_blog 
2017-09-14 22:48:40.799 DEBUG 8388 --- [http-nio-8080-exec-9] p.p.blog.repository.BlogRepo.getTotal    : ==> Parameters: 
2017-09-14 22:48:40.801 DEBUG 8388 --- [http-nio-8080-exec-9] p.p.blog.repository.BlogRepo.getTotal    : <==      Total: 1
2017-09-14 22:49:46.997 DEBUG 8388 --- [http-nio-8080-exec-3] p.p.blog.repository.BlogRepo.list        : ==>  Preparing: select * from t_blog order by releaseDate desc limit ?,? 
2017-09-14 22:49:46.998 DEBUG 8388 --- [http-nio-8080-exec-3] p.p.blog.repository.BlogRepo.list        : ==> Parameters: 50(Integer), 10(Integer)
2017-09-14 22:49:47.005 DEBUG 8388 --- [http-nio-8080-exec-3] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 22:49:47.005 DEBUG 8388 --- [http-nio-8080-exec-3] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 24(String)
2017-09-14 22:49:47.008 DEBUG 8388 --- [http-nio-8080-exec-3] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 22:49:47.009 DEBUG 8388 --- [http-nio-8080-exec-3] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 22:49:47.010 DEBUG 8388 --- [http-nio-8080-exec-3] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 23(String)
2017-09-14 22:49:47.012 DEBUG 8388 --- [http-nio-8080-exec-3] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 22:49:47.013 DEBUG 8388 --- [http-nio-8080-exec-3] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 22:49:47.013 DEBUG 8388 --- [http-nio-8080-exec-3] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 16(String)
2017-09-14 22:49:47.017 DEBUG 8388 --- [http-nio-8080-exec-3] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 22:49:47.018 DEBUG 8388 --- [http-nio-8080-exec-3] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 22:49:47.018 DEBUG 8388 --- [http-nio-8080-exec-3] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 1(String)
2017-09-14 22:49:47.020 DEBUG 8388 --- [http-nio-8080-exec-3] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 22:49:47.021 DEBUG 8388 --- [http-nio-8080-exec-3] p.p.blog.repository.BlogRepo.list        : <==      Total: 10
2017-09-14 22:49:47.030 DEBUG 8388 --- [http-nio-8080-exec-3] p.p.blog.repository.BlogRepo.getTotal    : ==>  Preparing: select count(*) from t_blog 
2017-09-14 22:49:47.030 DEBUG 8388 --- [http-nio-8080-exec-3] p.p.blog.repository.BlogRepo.getTotal    : ==> Parameters: 
2017-09-14 22:49:47.033 DEBUG 8388 --- [http-nio-8080-exec-3] p.p.blog.repository.BlogRepo.getTotal    : <==      Total: 1
2017-09-14 22:49:52.062 DEBUG 8388 --- [http-nio-8080-exec-8] p.p.blog.repository.BlogRepo.list        : ==>  Preparing: select * from t_blog order by releaseDate desc limit ?,? 
2017-09-14 22:49:52.062 DEBUG 8388 --- [http-nio-8080-exec-8] p.p.blog.repository.BlogRepo.list        : ==> Parameters: 50(Integer), 10(Integer)
2017-09-14 22:49:52.068 DEBUG 8388 --- [http-nio-8080-exec-8] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 22:49:52.068 DEBUG 8388 --- [http-nio-8080-exec-8] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 24(String)
2017-09-14 22:49:52.070 DEBUG 8388 --- [http-nio-8080-exec-8] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 22:49:52.072 DEBUG 8388 --- [http-nio-8080-exec-8] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 22:49:52.072 DEBUG 8388 --- [http-nio-8080-exec-8] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 23(String)
2017-09-14 22:49:52.074 DEBUG 8388 --- [http-nio-8080-exec-8] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 22:49:52.074 DEBUG 8388 --- [http-nio-8080-exec-8] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 22:49:52.074 DEBUG 8388 --- [http-nio-8080-exec-8] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 16(String)
2017-09-14 22:49:52.076 DEBUG 8388 --- [http-nio-8080-exec-8] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 22:49:52.076 DEBUG 8388 --- [http-nio-8080-exec-8] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 22:49:52.077 DEBUG 8388 --- [http-nio-8080-exec-8] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 1(String)
2017-09-14 22:49:52.084 DEBUG 8388 --- [http-nio-8080-exec-8] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 22:49:52.086 DEBUG 8388 --- [http-nio-8080-exec-8] p.p.blog.repository.BlogRepo.list        : <==      Total: 10
2017-09-14 22:49:52.096 DEBUG 8388 --- [http-nio-8080-exec-8] p.p.blog.repository.BlogRepo.getTotal    : ==>  Preparing: select count(*) from t_blog 
2017-09-14 22:49:52.096 DEBUG 8388 --- [http-nio-8080-exec-8] p.p.blog.repository.BlogRepo.getTotal    : ==> Parameters: 
2017-09-14 22:49:52.099 DEBUG 8388 --- [http-nio-8080-exec-8] p.p.blog.repository.BlogRepo.getTotal    : <==      Total: 1
2017-09-14 22:50:11.595 DEBUG 8388 --- [http-nio-8080-exec-2] p.p.blog.repository.BlogRepo.list        : ==>  Preparing: select * from t_blog order by releaseDate desc limit ?,? 
2017-09-14 22:50:11.596 DEBUG 8388 --- [http-nio-8080-exec-2] p.p.blog.repository.BlogRepo.list        : ==> Parameters: 50(Integer), 10(Integer)
2017-09-14 22:50:11.602 DEBUG 8388 --- [http-nio-8080-exec-2] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 22:50:11.602 DEBUG 8388 --- [http-nio-8080-exec-2] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 24(String)
2017-09-14 22:50:11.604 DEBUG 8388 --- [http-nio-8080-exec-2] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 22:50:11.605 DEBUG 8388 --- [http-nio-8080-exec-2] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 22:50:11.606 DEBUG 8388 --- [http-nio-8080-exec-2] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 23(String)
2017-09-14 22:50:11.609 DEBUG 8388 --- [http-nio-8080-exec-2] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 22:50:11.609 DEBUG 8388 --- [http-nio-8080-exec-2] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 22:50:11.610 DEBUG 8388 --- [http-nio-8080-exec-2] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 16(String)
2017-09-14 22:50:11.611 DEBUG 8388 --- [http-nio-8080-exec-2] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 22:50:11.612 DEBUG 8388 --- [http-nio-8080-exec-2] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 22:50:11.613 DEBUG 8388 --- [http-nio-8080-exec-2] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 1(String)
2017-09-14 22:50:11.614 DEBUG 8388 --- [http-nio-8080-exec-2] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 22:50:11.616 DEBUG 8388 --- [http-nio-8080-exec-2] p.p.blog.repository.BlogRepo.list        : <==      Total: 10
2017-09-14 22:50:11.622 DEBUG 8388 --- [http-nio-8080-exec-2] p.p.blog.repository.BlogRepo.getTotal    : ==>  Preparing: select count(*) from t_blog 
2017-09-14 22:50:11.622 DEBUG 8388 --- [http-nio-8080-exec-2] p.p.blog.repository.BlogRepo.getTotal    : ==> Parameters: 
2017-09-14 22:50:11.624 DEBUG 8388 --- [http-nio-8080-exec-2] p.p.blog.repository.BlogRepo.getTotal    : <==      Total: 1
2017-09-14 22:50:35.991 DEBUG 8388 --- [http-nio-8080-exec-4] p.p.blog.repository.BlogRepo.list        : ==>  Preparing: select * from t_blog order by releaseDate desc limit ?,? 
2017-09-14 22:50:35.991 DEBUG 8388 --- [http-nio-8080-exec-4] p.p.blog.repository.BlogRepo.list        : ==> Parameters: 50(Integer), 10(Integer)
2017-09-14 22:50:35.998 DEBUG 8388 --- [http-nio-8080-exec-4] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 22:50:35.998 DEBUG 8388 --- [http-nio-8080-exec-4] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 24(String)
2017-09-14 22:50:36.002 DEBUG 8388 --- [http-nio-8080-exec-4] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 22:50:36.003 DEBUG 8388 --- [http-nio-8080-exec-4] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 22:50:36.003 DEBUG 8388 --- [http-nio-8080-exec-4] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 23(String)
2017-09-14 22:50:36.005 DEBUG 8388 --- [http-nio-8080-exec-4] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 22:50:36.005 DEBUG 8388 --- [http-nio-8080-exec-4] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 22:50:36.005 DEBUG 8388 --- [http-nio-8080-exec-4] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 16(String)
2017-09-14 22:50:36.008 DEBUG 8388 --- [http-nio-8080-exec-4] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 22:50:36.009 DEBUG 8388 --- [http-nio-8080-exec-4] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 22:50:36.009 DEBUG 8388 --- [http-nio-8080-exec-4] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 1(String)
2017-09-14 22:50:36.012 DEBUG 8388 --- [http-nio-8080-exec-4] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 22:50:36.013 DEBUG 8388 --- [http-nio-8080-exec-4] p.p.blog.repository.BlogRepo.list        : <==      Total: 10
2017-09-14 22:50:36.020 DEBUG 8388 --- [http-nio-8080-exec-4] p.p.blog.repository.BlogRepo.getTotal    : ==>  Preparing: select count(*) from t_blog 
2017-09-14 22:50:36.020 DEBUG 8388 --- [http-nio-8080-exec-4] p.p.blog.repository.BlogRepo.getTotal    : ==> Parameters: 
2017-09-14 22:50:36.022 DEBUG 8388 --- [http-nio-8080-exec-4] p.p.blog.repository.BlogRepo.getTotal    : <==      Total: 1
2017-09-14 22:50:36.030 ERROR 8388 --- [http-nio-8080-exec-4] o.thymeleaf.templateparser.ErrorHandler  : [THYMELEAF][http-nio-8080-exec-4] Fatal error during parsing

org.xml.sax.SAXParseException: 元素类型 "div" 必须后跟属性规范 ">" 或 "/>"。
	at com.sun.org.apache.xerces.internal.util.ErrorHandlerWrapper.createSAXParseException(ErrorHandlerWrapper.java:203)
	at com.sun.org.apache.xerces.internal.util.ErrorHandlerWrapper.fatalError(ErrorHandlerWrapper.java:177)
	at com.sun.org.apache.xerces.internal.impl.XMLErrorReporter.reportError(XMLErrorReporter.java:400)
	at com.sun.org.apache.xerces.internal.impl.XMLErrorReporter.reportError(XMLErrorReporter.java:327)
	at com.sun.org.apache.xerces.internal.impl.XMLScanner.reportFatalError(XMLScanner.java:1438)
	at com.sun.org.apache.xerces.internal.impl.XMLDocumentFragmentScannerImpl.seekCloseOfStartTag(XMLDocumentFragmentScannerImpl.java:1396)
	at com.sun.org.apache.xerces.internal.impl.XMLDocumentFragmentScannerImpl.scanStartElement(XMLDocumentFragmentScannerImpl.java:1329)
	at com.sun.org.apache.xerces.internal.impl.XMLDocumentFragmentScannerImpl$FragmentContentDriver.next(XMLDocumentFragmentScannerImpl.java:2787)
	at com.sun.org.apache.xerces.internal.impl.XMLDocumentScannerImpl.next(XMLDocumentScannerImpl.java:606)
	at com.sun.org.apache.xerces.internal.impl.XMLDocumentFragmentScannerImpl.scanDocument(XMLDocumentFragmentScannerImpl.java:510)
	at com.sun.org.apache.xerces.internal.parsers.XML11Configuration.parse(XML11Configuration.java:848)
	at com.sun.org.apache.xerces.internal.parsers.XML11Configuration.parse(XML11Configuration.java:777)
	at com.sun.org.apache.xerces.internal.parsers.XMLParser.parse(XMLParser.java:141)
	at com.sun.org.apache.xerces.internal.parsers.AbstractSAXParser.parse(AbstractSAXParser.java:1213)
	at com.sun.org.apache.xerces.internal.jaxp.SAXParserImpl$JAXPSAXParser.parse(SAXParserImpl.java:643)
	at com.sun.org.apache.xerces.internal.jaxp.SAXParserImpl.parse(SAXParserImpl.java:327)
	at org.thymeleaf.templateparser.xmlsax.AbstractNonValidatingSAXTemplateParser.doParse(AbstractNonValidatingSAXTemplateParser.java:209)
	at org.thymeleaf.templateparser.xmlsax.AbstractNonValidatingSAXTemplateParser.parseTemplateUsingPool(AbstractNonValidatingSAXTemplateParser.java:134)
	at org.thymeleaf.templateparser.xmlsax.AbstractNonValidatingSAXTemplateParser.parseTemplate(AbstractNonValidatingSAXTemplateParser.java:116)
	at org.thymeleaf.TemplateRepository.getTemplate(TemplateRepository.java:278)
	at org.thymeleaf.standard.fragment.StandardFragment.extractFragment(StandardFragment.java:202)
	at org.thymeleaf.standard.processor.attr.AbstractStandardFragmentHandlingAttrProcessor.computeFragment(AbstractStandardFragmentHandlingAttrProcessor.java:72)
	at org.thymeleaf.processor.attr.AbstractFragmentHandlingAttrProcessor.processAttribute(AbstractFragmentHandlingAttrProcessor.java:63)
	at org.thymeleaf.processor.attr.AbstractAttrProcessor.doProcess(AbstractAttrProcessor.java:87)
	at org.thymeleaf.processor.AbstractProcessor.process(AbstractProcessor.java:212)
	at org.thymeleaf.dom.Node.applyNextProcessor(Node.java:1017)
	at org.thymeleaf.dom.Node.processNode(Node.java:972)
	at org.thymeleaf.dom.NestableNode.computeNextChild(NestableNode.java:695)
	at org.thymeleaf.dom.NestableNode.doAdditionalProcess(NestableNode.java:668)
	at org.thymeleaf.dom.Node.processNode(Node.java:990)
	at org.thymeleaf.dom.NestableNode.computeNextChild(NestableNode.java:695)
	at org.thymeleaf.dom.NestableNode.doAdditionalProcess(NestableNode.java:668)
	at org.thymeleaf.dom.Node.processNode(Node.java:990)
	at org.thymeleaf.dom.NestableNode.computeNextChild(NestableNode.java:695)
	at org.thymeleaf.dom.NestableNode.doAdditionalProcess(NestableNode.java:668)
	at org.thymeleaf.dom.Node.processNode(Node.java:990)
	at org.thymeleaf.dom.NestableNode.computeNextChild(NestableNode.java:695)
	at org.thymeleaf.dom.NestableNode.doAdditionalProcess(NestableNode.java:668)
	at org.thymeleaf.dom.Node.processNode(Node.java:990)
	at org.thymeleaf.dom.NestableNode.computeNextChild(NestableNode.java:695)
	at org.thymeleaf.dom.NestableNode.doAdditionalProcess(NestableNode.java:668)
	at org.thymeleaf.dom.Node.processNode(Node.java:990)
	at org.thymeleaf.dom.NestableNode.computeNextChild(NestableNode.java:695)
	at org.thymeleaf.dom.NestableNode.doAdditionalProcess(NestableNode.java:668)
	at org.thymeleaf.dom.Node.processNode(Node.java:990)
	at org.thymeleaf.dom.Document.process(Document.java:93)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1155)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1060)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1011)
	at org.thymeleaf.spring4.view.ThymeleafView.renderFragment(ThymeleafView.java:335)
	at org.thymeleaf.spring4.view.ThymeleafView.render(ThymeleafView.java:190)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1282)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1037)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:980)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:897)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:861)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:622)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:729)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:230)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:112)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:346)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:262)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:105)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:474)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:79)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:624)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:349)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:783)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:798)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1434)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)

2017-09-14 22:50:36.034 ERROR 8388 --- [http-nio-8080-exec-4] org.thymeleaf.TemplateEngine             : [THYMELEAF][http-nio-8080-exec-4] Exception processing template "mainTemp": Exception parsing document: template="/foreground/common/menu", line 4 - column 43 (/foreground/common/head:8)
2017-09-14 22:50:36.036 ERROR 8388 --- [http-nio-8080-exec-4] o.a.c.c.C.[.[.[/].[dispatcherServlet]    : Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.thymeleaf.exceptions.TemplateInputException: Exception parsing document: template="/foreground/common/menu", line 4 - column 43 (/foreground/common/head:8)] with root cause

org.xml.sax.SAXParseException: 元素类型 "div" 必须后跟属性规范 ">" 或 "/>"。
	at com.sun.org.apache.xerces.internal.util.ErrorHandlerWrapper.createSAXParseException(ErrorHandlerWrapper.java:203)
	at com.sun.org.apache.xerces.internal.util.ErrorHandlerWrapper.fatalError(ErrorHandlerWrapper.java:177)
	at com.sun.org.apache.xerces.internal.impl.XMLErrorReporter.reportError(XMLErrorReporter.java:400)
	at com.sun.org.apache.xerces.internal.impl.XMLErrorReporter.reportError(XMLErrorReporter.java:327)
	at com.sun.org.apache.xerces.internal.impl.XMLScanner.reportFatalError(XMLScanner.java:1438)
	at com.sun.org.apache.xerces.internal.impl.XMLDocumentFragmentScannerImpl.seekCloseOfStartTag(XMLDocumentFragmentScannerImpl.java:1396)
	at com.sun.org.apache.xerces.internal.impl.XMLDocumentFragmentScannerImpl.scanStartElement(XMLDocumentFragmentScannerImpl.java:1329)
	at com.sun.org.apache.xerces.internal.impl.XMLDocumentFragmentScannerImpl$FragmentContentDriver.next(XMLDocumentFragmentScannerImpl.java:2787)
	at com.sun.org.apache.xerces.internal.impl.XMLDocumentScannerImpl.next(XMLDocumentScannerImpl.java:606)
	at com.sun.org.apache.xerces.internal.impl.XMLDocumentFragmentScannerImpl.scanDocument(XMLDocumentFragmentScannerImpl.java:510)
	at com.sun.org.apache.xerces.internal.parsers.XML11Configuration.parse(XML11Configuration.java:848)
	at com.sun.org.apache.xerces.internal.parsers.XML11Configuration.parse(XML11Configuration.java:777)
	at com.sun.org.apache.xerces.internal.parsers.XMLParser.parse(XMLParser.java:141)
	at com.sun.org.apache.xerces.internal.parsers.AbstractSAXParser.parse(AbstractSAXParser.java:1213)
	at com.sun.org.apache.xerces.internal.jaxp.SAXParserImpl$JAXPSAXParser.parse(SAXParserImpl.java:643)
	at com.sun.org.apache.xerces.internal.jaxp.SAXParserImpl.parse(SAXParserImpl.java:327)
	at org.thymeleaf.templateparser.xmlsax.AbstractNonValidatingSAXTemplateParser.doParse(AbstractNonValidatingSAXTemplateParser.java:209)
	at org.thymeleaf.templateparser.xmlsax.AbstractNonValidatingSAXTemplateParser.parseTemplateUsingPool(AbstractNonValidatingSAXTemplateParser.java:134)
	at org.thymeleaf.templateparser.xmlsax.AbstractNonValidatingSAXTemplateParser.parseTemplate(AbstractNonValidatingSAXTemplateParser.java:116)
	at org.thymeleaf.TemplateRepository.getTemplate(TemplateRepository.java:278)
	at org.thymeleaf.standard.fragment.StandardFragment.extractFragment(StandardFragment.java:202)
	at org.thymeleaf.standard.processor.attr.AbstractStandardFragmentHandlingAttrProcessor.computeFragment(AbstractStandardFragmentHandlingAttrProcessor.java:72)
	at org.thymeleaf.processor.attr.AbstractFragmentHandlingAttrProcessor.processAttribute(AbstractFragmentHandlingAttrProcessor.java:63)
	at org.thymeleaf.processor.attr.AbstractAttrProcessor.doProcess(AbstractAttrProcessor.java:87)
	at org.thymeleaf.processor.AbstractProcessor.process(AbstractProcessor.java:212)
	at org.thymeleaf.dom.Node.applyNextProcessor(Node.java:1017)
	at org.thymeleaf.dom.Node.processNode(Node.java:972)
	at org.thymeleaf.dom.NestableNode.computeNextChild(NestableNode.java:695)
	at org.thymeleaf.dom.NestableNode.doAdditionalProcess(NestableNode.java:668)
	at org.thymeleaf.dom.Node.processNode(Node.java:990)
	at org.thymeleaf.dom.NestableNode.computeNextChild(NestableNode.java:695)
	at org.thymeleaf.dom.NestableNode.doAdditionalProcess(NestableNode.java:668)
	at org.thymeleaf.dom.Node.processNode(Node.java:990)
	at org.thymeleaf.dom.NestableNode.computeNextChild(NestableNode.java:695)
	at org.thymeleaf.dom.NestableNode.doAdditionalProcess(NestableNode.java:668)
	at org.thymeleaf.dom.Node.processNode(Node.java:990)
	at org.thymeleaf.dom.NestableNode.computeNextChild(NestableNode.java:695)
	at org.thymeleaf.dom.NestableNode.doAdditionalProcess(NestableNode.java:668)
	at org.thymeleaf.dom.Node.processNode(Node.java:990)
	at org.thymeleaf.dom.NestableNode.computeNextChild(NestableNode.java:695)
	at org.thymeleaf.dom.NestableNode.doAdditionalProcess(NestableNode.java:668)
	at org.thymeleaf.dom.Node.processNode(Node.java:990)
	at org.thymeleaf.dom.NestableNode.computeNextChild(NestableNode.java:695)
	at org.thymeleaf.dom.NestableNode.doAdditionalProcess(NestableNode.java:668)
	at org.thymeleaf.dom.Node.processNode(Node.java:990)
	at org.thymeleaf.dom.Document.process(Document.java:93)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1155)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1060)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1011)
	at org.thymeleaf.spring4.view.ThymeleafView.renderFragment(ThymeleafView.java:335)
	at org.thymeleaf.spring4.view.ThymeleafView.render(ThymeleafView.java:190)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1282)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1037)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:980)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:897)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:861)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:622)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:729)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:230)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:112)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:346)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:262)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:105)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:474)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:79)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:624)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:349)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:783)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:798)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1434)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)

2017-09-14 22:50:48.890 DEBUG 8388 --- [http-nio-8080-exec-2] p.p.blog.repository.BlogRepo.list        : ==>  Preparing: select * from t_blog order by releaseDate desc limit ?,? 
2017-09-14 22:50:48.891 DEBUG 8388 --- [http-nio-8080-exec-2] p.p.blog.repository.BlogRepo.list        : ==> Parameters: 50(Integer), 10(Integer)
2017-09-14 22:50:48.896 DEBUG 8388 --- [http-nio-8080-exec-2] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 22:50:48.897 DEBUG 8388 --- [http-nio-8080-exec-2] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 24(String)
2017-09-14 22:50:48.899 DEBUG 8388 --- [http-nio-8080-exec-2] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 22:50:48.900 DEBUG 8388 --- [http-nio-8080-exec-2] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 22:50:48.901 DEBUG 8388 --- [http-nio-8080-exec-2] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 23(String)
2017-09-14 22:50:48.902 DEBUG 8388 --- [http-nio-8080-exec-2] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 22:50:48.903 DEBUG 8388 --- [http-nio-8080-exec-2] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 22:50:48.903 DEBUG 8388 --- [http-nio-8080-exec-2] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 16(String)
2017-09-14 22:50:48.906 DEBUG 8388 --- [http-nio-8080-exec-2] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 22:50:48.907 DEBUG 8388 --- [http-nio-8080-exec-2] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 22:50:48.908 DEBUG 8388 --- [http-nio-8080-exec-2] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 1(String)
2017-09-14 22:50:48.909 DEBUG 8388 --- [http-nio-8080-exec-2] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 22:50:48.910 DEBUG 8388 --- [http-nio-8080-exec-2] p.p.blog.repository.BlogRepo.list        : <==      Total: 10
2017-09-14 22:50:48.917 DEBUG 8388 --- [http-nio-8080-exec-2] p.p.blog.repository.BlogRepo.getTotal    : ==>  Preparing: select count(*) from t_blog 
2017-09-14 22:50:48.918 DEBUG 8388 --- [http-nio-8080-exec-2] p.p.blog.repository.BlogRepo.getTotal    : ==> Parameters: 
2017-09-14 22:50:48.919 DEBUG 8388 --- [http-nio-8080-exec-2] p.p.blog.repository.BlogRepo.getTotal    : <==      Total: 1
2017-09-14 22:50:48.928 ERROR 8388 --- [http-nio-8080-exec-2] o.thymeleaf.templateparser.ErrorHandler  : [THYMELEAF][http-nio-8080-exec-2] Fatal error during parsing

org.xml.sax.SAXParseException: 元素类型 "div" 必须后跟属性规范 ">" 或 "/>"。
	at com.sun.org.apache.xerces.internal.util.ErrorHandlerWrapper.createSAXParseException(ErrorHandlerWrapper.java:203)
	at com.sun.org.apache.xerces.internal.util.ErrorHandlerWrapper.fatalError(ErrorHandlerWrapper.java:177)
	at com.sun.org.apache.xerces.internal.impl.XMLErrorReporter.reportError(XMLErrorReporter.java:400)
	at com.sun.org.apache.xerces.internal.impl.XMLErrorReporter.reportError(XMLErrorReporter.java:327)
	at com.sun.org.apache.xerces.internal.impl.XMLScanner.reportFatalError(XMLScanner.java:1438)
	at com.sun.org.apache.xerces.internal.impl.XMLDocumentFragmentScannerImpl.seekCloseOfStartTag(XMLDocumentFragmentScannerImpl.java:1396)
	at com.sun.org.apache.xerces.internal.impl.XMLDocumentFragmentScannerImpl.scanStartElement(XMLDocumentFragmentScannerImpl.java:1329)
	at com.sun.org.apache.xerces.internal.impl.XMLDocumentFragmentScannerImpl$FragmentContentDriver.next(XMLDocumentFragmentScannerImpl.java:2787)
	at com.sun.org.apache.xerces.internal.impl.XMLDocumentScannerImpl.next(XMLDocumentScannerImpl.java:606)
	at com.sun.org.apache.xerces.internal.impl.XMLDocumentFragmentScannerImpl.scanDocument(XMLDocumentFragmentScannerImpl.java:510)
	at com.sun.org.apache.xerces.internal.parsers.XML11Configuration.parse(XML11Configuration.java:848)
	at com.sun.org.apache.xerces.internal.parsers.XML11Configuration.parse(XML11Configuration.java:777)
	at com.sun.org.apache.xerces.internal.parsers.XMLParser.parse(XMLParser.java:141)
	at com.sun.org.apache.xerces.internal.parsers.AbstractSAXParser.parse(AbstractSAXParser.java:1213)
	at com.sun.org.apache.xerces.internal.jaxp.SAXParserImpl$JAXPSAXParser.parse(SAXParserImpl.java:643)
	at com.sun.org.apache.xerces.internal.jaxp.SAXParserImpl.parse(SAXParserImpl.java:327)
	at org.thymeleaf.templateparser.xmlsax.AbstractNonValidatingSAXTemplateParser.doParse(AbstractNonValidatingSAXTemplateParser.java:209)
	at org.thymeleaf.templateparser.xmlsax.AbstractNonValidatingSAXTemplateParser.parseTemplateUsingPool(AbstractNonValidatingSAXTemplateParser.java:134)
	at org.thymeleaf.templateparser.xmlsax.AbstractNonValidatingSAXTemplateParser.parseTemplate(AbstractNonValidatingSAXTemplateParser.java:116)
	at org.thymeleaf.TemplateRepository.getTemplate(TemplateRepository.java:278)
	at org.thymeleaf.standard.fragment.StandardFragment.extractFragment(StandardFragment.java:202)
	at org.thymeleaf.standard.processor.attr.AbstractStandardFragmentHandlingAttrProcessor.computeFragment(AbstractStandardFragmentHandlingAttrProcessor.java:72)
	at org.thymeleaf.processor.attr.AbstractFragmentHandlingAttrProcessor.processAttribute(AbstractFragmentHandlingAttrProcessor.java:63)
	at org.thymeleaf.processor.attr.AbstractAttrProcessor.doProcess(AbstractAttrProcessor.java:87)
	at org.thymeleaf.processor.AbstractProcessor.process(AbstractProcessor.java:212)
	at org.thymeleaf.dom.Node.applyNextProcessor(Node.java:1017)
	at org.thymeleaf.dom.Node.processNode(Node.java:972)
	at org.thymeleaf.dom.NestableNode.computeNextChild(NestableNode.java:695)
	at org.thymeleaf.dom.NestableNode.doAdditionalProcess(NestableNode.java:668)
	at org.thymeleaf.dom.Node.processNode(Node.java:990)
	at org.thymeleaf.dom.NestableNode.computeNextChild(NestableNode.java:695)
	at org.thymeleaf.dom.NestableNode.doAdditionalProcess(NestableNode.java:668)
	at org.thymeleaf.dom.Node.processNode(Node.java:990)
	at org.thymeleaf.dom.NestableNode.computeNextChild(NestableNode.java:695)
	at org.thymeleaf.dom.NestableNode.doAdditionalProcess(NestableNode.java:668)
	at org.thymeleaf.dom.Node.processNode(Node.java:990)
	at org.thymeleaf.dom.NestableNode.computeNextChild(NestableNode.java:695)
	at org.thymeleaf.dom.NestableNode.doAdditionalProcess(NestableNode.java:668)
	at org.thymeleaf.dom.Node.processNode(Node.java:990)
	at org.thymeleaf.dom.NestableNode.computeNextChild(NestableNode.java:695)
	at org.thymeleaf.dom.NestableNode.doAdditionalProcess(NestableNode.java:668)
	at org.thymeleaf.dom.Node.processNode(Node.java:990)
	at org.thymeleaf.dom.NestableNode.computeNextChild(NestableNode.java:695)
	at org.thymeleaf.dom.NestableNode.doAdditionalProcess(NestableNode.java:668)
	at org.thymeleaf.dom.Node.processNode(Node.java:990)
	at org.thymeleaf.dom.Document.process(Document.java:93)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1155)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1060)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1011)
	at org.thymeleaf.spring4.view.ThymeleafView.renderFragment(ThymeleafView.java:335)
	at org.thymeleaf.spring4.view.ThymeleafView.render(ThymeleafView.java:190)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1282)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1037)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:980)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:897)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:861)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:622)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:729)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:230)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:112)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:346)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:262)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:105)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:474)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:79)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:624)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:349)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:783)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:798)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1434)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)

2017-09-14 22:50:48.930 ERROR 8388 --- [http-nio-8080-exec-2] org.thymeleaf.TemplateEngine             : [THYMELEAF][http-nio-8080-exec-2] Exception processing template "mainTemp": Exception parsing document: template="/foreground/common/menu", line 4 - column 43 (/foreground/common/head:8)
2017-09-14 22:50:48.932 ERROR 8388 --- [http-nio-8080-exec-2] o.a.c.c.C.[.[.[/].[dispatcherServlet]    : Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.thymeleaf.exceptions.TemplateInputException: Exception parsing document: template="/foreground/common/menu", line 4 - column 43 (/foreground/common/head:8)] with root cause

org.xml.sax.SAXParseException: 元素类型 "div" 必须后跟属性规范 ">" 或 "/>"。
	at com.sun.org.apache.xerces.internal.util.ErrorHandlerWrapper.createSAXParseException(ErrorHandlerWrapper.java:203)
	at com.sun.org.apache.xerces.internal.util.ErrorHandlerWrapper.fatalError(ErrorHandlerWrapper.java:177)
	at com.sun.org.apache.xerces.internal.impl.XMLErrorReporter.reportError(XMLErrorReporter.java:400)
	at com.sun.org.apache.xerces.internal.impl.XMLErrorReporter.reportError(XMLErrorReporter.java:327)
	at com.sun.org.apache.xerces.internal.impl.XMLScanner.reportFatalError(XMLScanner.java:1438)
	at com.sun.org.apache.xerces.internal.impl.XMLDocumentFragmentScannerImpl.seekCloseOfStartTag(XMLDocumentFragmentScannerImpl.java:1396)
	at com.sun.org.apache.xerces.internal.impl.XMLDocumentFragmentScannerImpl.scanStartElement(XMLDocumentFragmentScannerImpl.java:1329)
	at com.sun.org.apache.xerces.internal.impl.XMLDocumentFragmentScannerImpl$FragmentContentDriver.next(XMLDocumentFragmentScannerImpl.java:2787)
	at com.sun.org.apache.xerces.internal.impl.XMLDocumentScannerImpl.next(XMLDocumentScannerImpl.java:606)
	at com.sun.org.apache.xerces.internal.impl.XMLDocumentFragmentScannerImpl.scanDocument(XMLDocumentFragmentScannerImpl.java:510)
	at com.sun.org.apache.xerces.internal.parsers.XML11Configuration.parse(XML11Configuration.java:848)
	at com.sun.org.apache.xerces.internal.parsers.XML11Configuration.parse(XML11Configuration.java:777)
	at com.sun.org.apache.xerces.internal.parsers.XMLParser.parse(XMLParser.java:141)
	at com.sun.org.apache.xerces.internal.parsers.AbstractSAXParser.parse(AbstractSAXParser.java:1213)
	at com.sun.org.apache.xerces.internal.jaxp.SAXParserImpl$JAXPSAXParser.parse(SAXParserImpl.java:643)
	at com.sun.org.apache.xerces.internal.jaxp.SAXParserImpl.parse(SAXParserImpl.java:327)
	at org.thymeleaf.templateparser.xmlsax.AbstractNonValidatingSAXTemplateParser.doParse(AbstractNonValidatingSAXTemplateParser.java:209)
	at org.thymeleaf.templateparser.xmlsax.AbstractNonValidatingSAXTemplateParser.parseTemplateUsingPool(AbstractNonValidatingSAXTemplateParser.java:134)
	at org.thymeleaf.templateparser.xmlsax.AbstractNonValidatingSAXTemplateParser.parseTemplate(AbstractNonValidatingSAXTemplateParser.java:116)
	at org.thymeleaf.TemplateRepository.getTemplate(TemplateRepository.java:278)
	at org.thymeleaf.standard.fragment.StandardFragment.extractFragment(StandardFragment.java:202)
	at org.thymeleaf.standard.processor.attr.AbstractStandardFragmentHandlingAttrProcessor.computeFragment(AbstractStandardFragmentHandlingAttrProcessor.java:72)
	at org.thymeleaf.processor.attr.AbstractFragmentHandlingAttrProcessor.processAttribute(AbstractFragmentHandlingAttrProcessor.java:63)
	at org.thymeleaf.processor.attr.AbstractAttrProcessor.doProcess(AbstractAttrProcessor.java:87)
	at org.thymeleaf.processor.AbstractProcessor.process(AbstractProcessor.java:212)
	at org.thymeleaf.dom.Node.applyNextProcessor(Node.java:1017)
	at org.thymeleaf.dom.Node.processNode(Node.java:972)
	at org.thymeleaf.dom.NestableNode.computeNextChild(NestableNode.java:695)
	at org.thymeleaf.dom.NestableNode.doAdditionalProcess(NestableNode.java:668)
	at org.thymeleaf.dom.Node.processNode(Node.java:990)
	at org.thymeleaf.dom.NestableNode.computeNextChild(NestableNode.java:695)
	at org.thymeleaf.dom.NestableNode.doAdditionalProcess(NestableNode.java:668)
	at org.thymeleaf.dom.Node.processNode(Node.java:990)
	at org.thymeleaf.dom.NestableNode.computeNextChild(NestableNode.java:695)
	at org.thymeleaf.dom.NestableNode.doAdditionalProcess(NestableNode.java:668)
	at org.thymeleaf.dom.Node.processNode(Node.java:990)
	at org.thymeleaf.dom.NestableNode.computeNextChild(NestableNode.java:695)
	at org.thymeleaf.dom.NestableNode.doAdditionalProcess(NestableNode.java:668)
	at org.thymeleaf.dom.Node.processNode(Node.java:990)
	at org.thymeleaf.dom.NestableNode.computeNextChild(NestableNode.java:695)
	at org.thymeleaf.dom.NestableNode.doAdditionalProcess(NestableNode.java:668)
	at org.thymeleaf.dom.Node.processNode(Node.java:990)
	at org.thymeleaf.dom.NestableNode.computeNextChild(NestableNode.java:695)
	at org.thymeleaf.dom.NestableNode.doAdditionalProcess(NestableNode.java:668)
	at org.thymeleaf.dom.Node.processNode(Node.java:990)
	at org.thymeleaf.dom.Document.process(Document.java:93)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1155)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1060)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1011)
	at org.thymeleaf.spring4.view.ThymeleafView.renderFragment(ThymeleafView.java:335)
	at org.thymeleaf.spring4.view.ThymeleafView.render(ThymeleafView.java:190)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1282)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1037)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:980)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:897)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:861)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:622)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:729)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:230)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:112)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:346)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:262)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:105)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:474)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:79)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:624)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:349)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:783)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:798)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1434)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)

2017-09-14 22:50:52.682 DEBUG 8388 --- [http-nio-8080-exec-3] p.p.blog.repository.BlogRepo.list        : ==>  Preparing: select * from t_blog order by releaseDate desc limit ?,? 
2017-09-14 22:50:52.682 DEBUG 8388 --- [http-nio-8080-exec-3] p.p.blog.repository.BlogRepo.list        : ==> Parameters: 50(Integer), 10(Integer)
2017-09-14 22:50:52.689 DEBUG 8388 --- [http-nio-8080-exec-3] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 22:50:52.689 DEBUG 8388 --- [http-nio-8080-exec-3] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 24(String)
2017-09-14 22:50:52.691 DEBUG 8388 --- [http-nio-8080-exec-3] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 22:50:52.692 DEBUG 8388 --- [http-nio-8080-exec-3] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 22:50:52.692 DEBUG 8388 --- [http-nio-8080-exec-3] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 23(String)
2017-09-14 22:50:52.694 DEBUG 8388 --- [http-nio-8080-exec-3] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 22:50:52.695 DEBUG 8388 --- [http-nio-8080-exec-3] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 22:50:52.695 DEBUG 8388 --- [http-nio-8080-exec-3] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 16(String)
2017-09-14 22:50:52.697 DEBUG 8388 --- [http-nio-8080-exec-3] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 22:50:52.697 DEBUG 8388 --- [http-nio-8080-exec-3] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 22:50:52.698 DEBUG 8388 --- [http-nio-8080-exec-3] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 1(String)
2017-09-14 22:50:52.699 DEBUG 8388 --- [http-nio-8080-exec-3] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 22:50:52.701 DEBUG 8388 --- [http-nio-8080-exec-3] p.p.blog.repository.BlogRepo.list        : <==      Total: 10
2017-09-14 22:50:52.708 DEBUG 8388 --- [http-nio-8080-exec-3] p.p.blog.repository.BlogRepo.getTotal    : ==>  Preparing: select count(*) from t_blog 
2017-09-14 22:50:52.708 DEBUG 8388 --- [http-nio-8080-exec-3] p.p.blog.repository.BlogRepo.getTotal    : ==> Parameters: 
2017-09-14 22:50:52.709 DEBUG 8388 --- [http-nio-8080-exec-3] p.p.blog.repository.BlogRepo.getTotal    : <==      Total: 1
2017-09-14 22:50:52.717 ERROR 8388 --- [http-nio-8080-exec-3] o.thymeleaf.templateparser.ErrorHandler  : [THYMELEAF][http-nio-8080-exec-3] Fatal error during parsing

org.xml.sax.SAXParseException: 元素类型 "div" 必须后跟属性规范 ">" 或 "/>"。
	at com.sun.org.apache.xerces.internal.util.ErrorHandlerWrapper.createSAXParseException(ErrorHandlerWrapper.java:203)
	at com.sun.org.apache.xerces.internal.util.ErrorHandlerWrapper.fatalError(ErrorHandlerWrapper.java:177)
	at com.sun.org.apache.xerces.internal.impl.XMLErrorReporter.reportError(XMLErrorReporter.java:400)
	at com.sun.org.apache.xerces.internal.impl.XMLErrorReporter.reportError(XMLErrorReporter.java:327)
	at com.sun.org.apache.xerces.internal.impl.XMLScanner.reportFatalError(XMLScanner.java:1438)
	at com.sun.org.apache.xerces.internal.impl.XMLDocumentFragmentScannerImpl.seekCloseOfStartTag(XMLDocumentFragmentScannerImpl.java:1396)
	at com.sun.org.apache.xerces.internal.impl.XMLDocumentFragmentScannerImpl.scanStartElement(XMLDocumentFragmentScannerImpl.java:1329)
	at com.sun.org.apache.xerces.internal.impl.XMLDocumentFragmentScannerImpl$FragmentContentDriver.next(XMLDocumentFragmentScannerImpl.java:2787)
	at com.sun.org.apache.xerces.internal.impl.XMLDocumentScannerImpl.next(XMLDocumentScannerImpl.java:606)
	at com.sun.org.apache.xerces.internal.impl.XMLDocumentFragmentScannerImpl.scanDocument(XMLDocumentFragmentScannerImpl.java:510)
	at com.sun.org.apache.xerces.internal.parsers.XML11Configuration.parse(XML11Configuration.java:848)
	at com.sun.org.apache.xerces.internal.parsers.XML11Configuration.parse(XML11Configuration.java:777)
	at com.sun.org.apache.xerces.internal.parsers.XMLParser.parse(XMLParser.java:141)
	at com.sun.org.apache.xerces.internal.parsers.AbstractSAXParser.parse(AbstractSAXParser.java:1213)
	at com.sun.org.apache.xerces.internal.jaxp.SAXParserImpl$JAXPSAXParser.parse(SAXParserImpl.java:643)
	at com.sun.org.apache.xerces.internal.jaxp.SAXParserImpl.parse(SAXParserImpl.java:327)
	at org.thymeleaf.templateparser.xmlsax.AbstractNonValidatingSAXTemplateParser.doParse(AbstractNonValidatingSAXTemplateParser.java:209)
	at org.thymeleaf.templateparser.xmlsax.AbstractNonValidatingSAXTemplateParser.parseTemplateUsingPool(AbstractNonValidatingSAXTemplateParser.java:134)
	at org.thymeleaf.templateparser.xmlsax.AbstractNonValidatingSAXTemplateParser.parseTemplate(AbstractNonValidatingSAXTemplateParser.java:116)
	at org.thymeleaf.TemplateRepository.getTemplate(TemplateRepository.java:278)
	at org.thymeleaf.standard.fragment.StandardFragment.extractFragment(StandardFragment.java:202)
	at org.thymeleaf.standard.processor.attr.AbstractStandardFragmentHandlingAttrProcessor.computeFragment(AbstractStandardFragmentHandlingAttrProcessor.java:72)
	at org.thymeleaf.processor.attr.AbstractFragmentHandlingAttrProcessor.processAttribute(AbstractFragmentHandlingAttrProcessor.java:63)
	at org.thymeleaf.processor.attr.AbstractAttrProcessor.doProcess(AbstractAttrProcessor.java:87)
	at org.thymeleaf.processor.AbstractProcessor.process(AbstractProcessor.java:212)
	at org.thymeleaf.dom.Node.applyNextProcessor(Node.java:1017)
	at org.thymeleaf.dom.Node.processNode(Node.java:972)
	at org.thymeleaf.dom.NestableNode.computeNextChild(NestableNode.java:695)
	at org.thymeleaf.dom.NestableNode.doAdditionalProcess(NestableNode.java:668)
	at org.thymeleaf.dom.Node.processNode(Node.java:990)
	at org.thymeleaf.dom.NestableNode.computeNextChild(NestableNode.java:695)
	at org.thymeleaf.dom.NestableNode.doAdditionalProcess(NestableNode.java:668)
	at org.thymeleaf.dom.Node.processNode(Node.java:990)
	at org.thymeleaf.dom.NestableNode.computeNextChild(NestableNode.java:695)
	at org.thymeleaf.dom.NestableNode.doAdditionalProcess(NestableNode.java:668)
	at org.thymeleaf.dom.Node.processNode(Node.java:990)
	at org.thymeleaf.dom.NestableNode.computeNextChild(NestableNode.java:695)
	at org.thymeleaf.dom.NestableNode.doAdditionalProcess(NestableNode.java:668)
	at org.thymeleaf.dom.Node.processNode(Node.java:990)
	at org.thymeleaf.dom.NestableNode.computeNextChild(NestableNode.java:695)
	at org.thymeleaf.dom.NestableNode.doAdditionalProcess(NestableNode.java:668)
	at org.thymeleaf.dom.Node.processNode(Node.java:990)
	at org.thymeleaf.dom.NestableNode.computeNextChild(NestableNode.java:695)
	at org.thymeleaf.dom.NestableNode.doAdditionalProcess(NestableNode.java:668)
	at org.thymeleaf.dom.Node.processNode(Node.java:990)
	at org.thymeleaf.dom.Document.process(Document.java:93)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1155)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1060)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1011)
	at org.thymeleaf.spring4.view.ThymeleafView.renderFragment(ThymeleafView.java:335)
	at org.thymeleaf.spring4.view.ThymeleafView.render(ThymeleafView.java:190)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1282)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1037)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:980)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:897)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:861)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:622)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:729)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:230)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:112)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:346)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:262)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:105)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:474)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:79)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:624)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:349)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:783)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:798)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1434)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)

2017-09-14 22:50:52.719 ERROR 8388 --- [http-nio-8080-exec-3] org.thymeleaf.TemplateEngine             : [THYMELEAF][http-nio-8080-exec-3] Exception processing template "mainTemp": Exception parsing document: template="/foreground/common/menu", line 4 - column 43 (/foreground/common/head:8)
2017-09-14 22:50:52.721 ERROR 8388 --- [http-nio-8080-exec-3] o.a.c.c.C.[.[.[/].[dispatcherServlet]    : Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.thymeleaf.exceptions.TemplateInputException: Exception parsing document: template="/foreground/common/menu", line 4 - column 43 (/foreground/common/head:8)] with root cause

org.xml.sax.SAXParseException: 元素类型 "div" 必须后跟属性规范 ">" 或 "/>"。
	at com.sun.org.apache.xerces.internal.util.ErrorHandlerWrapper.createSAXParseException(ErrorHandlerWrapper.java:203)
	at com.sun.org.apache.xerces.internal.util.ErrorHandlerWrapper.fatalError(ErrorHandlerWrapper.java:177)
	at com.sun.org.apache.xerces.internal.impl.XMLErrorReporter.reportError(XMLErrorReporter.java:400)
	at com.sun.org.apache.xerces.internal.impl.XMLErrorReporter.reportError(XMLErrorReporter.java:327)
	at com.sun.org.apache.xerces.internal.impl.XMLScanner.reportFatalError(XMLScanner.java:1438)
	at com.sun.org.apache.xerces.internal.impl.XMLDocumentFragmentScannerImpl.seekCloseOfStartTag(XMLDocumentFragmentScannerImpl.java:1396)
	at com.sun.org.apache.xerces.internal.impl.XMLDocumentFragmentScannerImpl.scanStartElement(XMLDocumentFragmentScannerImpl.java:1329)
	at com.sun.org.apache.xerces.internal.impl.XMLDocumentFragmentScannerImpl$FragmentContentDriver.next(XMLDocumentFragmentScannerImpl.java:2787)
	at com.sun.org.apache.xerces.internal.impl.XMLDocumentScannerImpl.next(XMLDocumentScannerImpl.java:606)
	at com.sun.org.apache.xerces.internal.impl.XMLDocumentFragmentScannerImpl.scanDocument(XMLDocumentFragmentScannerImpl.java:510)
	at com.sun.org.apache.xerces.internal.parsers.XML11Configuration.parse(XML11Configuration.java:848)
	at com.sun.org.apache.xerces.internal.parsers.XML11Configuration.parse(XML11Configuration.java:777)
	at com.sun.org.apache.xerces.internal.parsers.XMLParser.parse(XMLParser.java:141)
	at com.sun.org.apache.xerces.internal.parsers.AbstractSAXParser.parse(AbstractSAXParser.java:1213)
	at com.sun.org.apache.xerces.internal.jaxp.SAXParserImpl$JAXPSAXParser.parse(SAXParserImpl.java:643)
	at com.sun.org.apache.xerces.internal.jaxp.SAXParserImpl.parse(SAXParserImpl.java:327)
	at org.thymeleaf.templateparser.xmlsax.AbstractNonValidatingSAXTemplateParser.doParse(AbstractNonValidatingSAXTemplateParser.java:209)
	at org.thymeleaf.templateparser.xmlsax.AbstractNonValidatingSAXTemplateParser.parseTemplateUsingPool(AbstractNonValidatingSAXTemplateParser.java:134)
	at org.thymeleaf.templateparser.xmlsax.AbstractNonValidatingSAXTemplateParser.parseTemplate(AbstractNonValidatingSAXTemplateParser.java:116)
	at org.thymeleaf.TemplateRepository.getTemplate(TemplateRepository.java:278)
	at org.thymeleaf.standard.fragment.StandardFragment.extractFragment(StandardFragment.java:202)
	at org.thymeleaf.standard.processor.attr.AbstractStandardFragmentHandlingAttrProcessor.computeFragment(AbstractStandardFragmentHandlingAttrProcessor.java:72)
	at org.thymeleaf.processor.attr.AbstractFragmentHandlingAttrProcessor.processAttribute(AbstractFragmentHandlingAttrProcessor.java:63)
	at org.thymeleaf.processor.attr.AbstractAttrProcessor.doProcess(AbstractAttrProcessor.java:87)
	at org.thymeleaf.processor.AbstractProcessor.process(AbstractProcessor.java:212)
	at org.thymeleaf.dom.Node.applyNextProcessor(Node.java:1017)
	at org.thymeleaf.dom.Node.processNode(Node.java:972)
	at org.thymeleaf.dom.NestableNode.computeNextChild(NestableNode.java:695)
	at org.thymeleaf.dom.NestableNode.doAdditionalProcess(NestableNode.java:668)
	at org.thymeleaf.dom.Node.processNode(Node.java:990)
	at org.thymeleaf.dom.NestableNode.computeNextChild(NestableNode.java:695)
	at org.thymeleaf.dom.NestableNode.doAdditionalProcess(NestableNode.java:668)
	at org.thymeleaf.dom.Node.processNode(Node.java:990)
	at org.thymeleaf.dom.NestableNode.computeNextChild(NestableNode.java:695)
	at org.thymeleaf.dom.NestableNode.doAdditionalProcess(NestableNode.java:668)
	at org.thymeleaf.dom.Node.processNode(Node.java:990)
	at org.thymeleaf.dom.NestableNode.computeNextChild(NestableNode.java:695)
	at org.thymeleaf.dom.NestableNode.doAdditionalProcess(NestableNode.java:668)
	at org.thymeleaf.dom.Node.processNode(Node.java:990)
	at org.thymeleaf.dom.NestableNode.computeNextChild(NestableNode.java:695)
	at org.thymeleaf.dom.NestableNode.doAdditionalProcess(NestableNode.java:668)
	at org.thymeleaf.dom.Node.processNode(Node.java:990)
	at org.thymeleaf.dom.NestableNode.computeNextChild(NestableNode.java:695)
	at org.thymeleaf.dom.NestableNode.doAdditionalProcess(NestableNode.java:668)
	at org.thymeleaf.dom.Node.processNode(Node.java:990)
	at org.thymeleaf.dom.Document.process(Document.java:93)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1155)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1060)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1011)
	at org.thymeleaf.spring4.view.ThymeleafView.renderFragment(ThymeleafView.java:335)
	at org.thymeleaf.spring4.view.ThymeleafView.render(ThymeleafView.java:190)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1282)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1037)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:980)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:897)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:861)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:622)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:729)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:230)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:112)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:346)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:262)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:105)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:474)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:79)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:624)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:349)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:783)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:798)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1434)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)

2017-09-14 22:50:58.755 DEBUG 8388 --- [http-nio-8080-exec-8] p.p.blog.repository.BlogRepo.list        : ==>  Preparing: select * from t_blog order by releaseDate desc limit ?,? 
2017-09-14 22:50:58.755 DEBUG 8388 --- [http-nio-8080-exec-8] p.p.blog.repository.BlogRepo.list        : ==> Parameters: 50(Integer), 10(Integer)
2017-09-14 22:50:58.769 DEBUG 8388 --- [http-nio-8080-exec-8] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 22:50:58.769 DEBUG 8388 --- [http-nio-8080-exec-8] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 24(String)
2017-09-14 22:50:58.772 DEBUG 8388 --- [http-nio-8080-exec-8] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 22:50:58.773 DEBUG 8388 --- [http-nio-8080-exec-8] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 22:50:58.773 DEBUG 8388 --- [http-nio-8080-exec-8] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 23(String)
2017-09-14 22:50:58.790 DEBUG 8388 --- [http-nio-8080-exec-8] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 22:50:58.790 DEBUG 8388 --- [http-nio-8080-exec-8] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 22:50:58.791 DEBUG 8388 --- [http-nio-8080-exec-8] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 16(String)
2017-09-14 22:50:58.795 DEBUG 8388 --- [http-nio-8080-exec-8] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 22:50:58.796 DEBUG 8388 --- [http-nio-8080-exec-8] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 22:50:58.796 DEBUG 8388 --- [http-nio-8080-exec-8] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 1(String)
2017-09-14 22:50:58.797 DEBUG 8388 --- [http-nio-8080-exec-8] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 22:50:58.799 DEBUG 8388 --- [http-nio-8080-exec-8] p.p.blog.repository.BlogRepo.list        : <==      Total: 10
2017-09-14 22:50:58.807 DEBUG 8388 --- [http-nio-8080-exec-8] p.p.blog.repository.BlogRepo.getTotal    : ==>  Preparing: select count(*) from t_blog 
2017-09-14 22:50:58.807 DEBUG 8388 --- [http-nio-8080-exec-8] p.p.blog.repository.BlogRepo.getTotal    : ==> Parameters: 
2017-09-14 22:50:58.810 DEBUG 8388 --- [http-nio-8080-exec-8] p.p.blog.repository.BlogRepo.getTotal    : <==      Total: 1
2017-09-14 22:52:07.704 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.blog.repository.BlogRepo.list        : ==>  Preparing: select * from t_blog order by releaseDate desc limit ?,? 
2017-09-14 22:52:07.705 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.blog.repository.BlogRepo.list        : ==> Parameters: 50(Integer), 10(Integer)
2017-09-14 22:52:07.711 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 22:52:07.711 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 24(String)
2017-09-14 22:52:07.713 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 22:52:07.714 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 22:52:07.714 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 23(String)
2017-09-14 22:52:07.715 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 22:52:07.716 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 22:52:07.717 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 16(String)
2017-09-14 22:52:07.718 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 22:52:07.719 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 22:52:07.719 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 1(String)
2017-09-14 22:52:07.721 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 22:52:07.724 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.blog.repository.BlogRepo.list        : <==      Total: 10
2017-09-14 22:52:07.733 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.blog.repository.BlogRepo.getTotal    : ==>  Preparing: select count(*) from t_blog 
2017-09-14 22:52:07.733 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.blog.repository.BlogRepo.getTotal    : ==> Parameters: 
2017-09-14 22:52:07.736 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.blog.repository.BlogRepo.getTotal    : <==      Total: 1
2017-09-14 22:52:16.131 DEBUG 8388 --- [http-nio-8080-exec-10] p.p.blog.repository.BlogRepo.list        : ==>  Preparing: select * from t_blog order by releaseDate desc limit ?,? 
2017-09-14 22:52:16.132 DEBUG 8388 --- [http-nio-8080-exec-10] p.p.blog.repository.BlogRepo.list        : ==> Parameters: 50(Integer), 10(Integer)
2017-09-14 22:52:16.138 DEBUG 8388 --- [http-nio-8080-exec-10] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 22:52:16.139 DEBUG 8388 --- [http-nio-8080-exec-10] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 24(String)
2017-09-14 22:52:16.141 DEBUG 8388 --- [http-nio-8080-exec-10] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 22:52:16.142 DEBUG 8388 --- [http-nio-8080-exec-10] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 22:52:16.142 DEBUG 8388 --- [http-nio-8080-exec-10] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 23(String)
2017-09-14 22:52:16.144 DEBUG 8388 --- [http-nio-8080-exec-10] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 22:52:16.145 DEBUG 8388 --- [http-nio-8080-exec-10] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 22:52:16.145 DEBUG 8388 --- [http-nio-8080-exec-10] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 16(String)
2017-09-14 22:52:16.147 DEBUG 8388 --- [http-nio-8080-exec-10] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 22:52:16.155 DEBUG 8388 --- [http-nio-8080-exec-10] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 22:52:16.156 DEBUG 8388 --- [http-nio-8080-exec-10] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 1(String)
2017-09-14 22:52:16.158 DEBUG 8388 --- [http-nio-8080-exec-10] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 22:52:16.162 DEBUG 8388 --- [http-nio-8080-exec-10] p.p.blog.repository.BlogRepo.list        : <==      Total: 10
2017-09-14 22:52:16.169 DEBUG 8388 --- [http-nio-8080-exec-10] p.p.blog.repository.BlogRepo.getTotal    : ==>  Preparing: select count(*) from t_blog 
2017-09-14 22:52:16.170 DEBUG 8388 --- [http-nio-8080-exec-10] p.p.blog.repository.BlogRepo.getTotal    : ==> Parameters: 
2017-09-14 22:52:16.172 DEBUG 8388 --- [http-nio-8080-exec-10] p.p.blog.repository.BlogRepo.getTotal    : <==      Total: 1
2017-09-14 22:53:20.131 DEBUG 8388 --- [http-nio-8080-exec-3] p.p.blog.repository.BlogRepo.list        : ==>  Preparing: select * from t_blog order by releaseDate desc limit ?,? 
2017-09-14 22:53:20.131 DEBUG 8388 --- [http-nio-8080-exec-3] p.p.blog.repository.BlogRepo.list        : ==> Parameters: 50(Integer), 10(Integer)
2017-09-14 22:53:20.136 DEBUG 8388 --- [http-nio-8080-exec-3] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 22:53:20.136 DEBUG 8388 --- [http-nio-8080-exec-3] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 24(String)
2017-09-14 22:53:20.138 DEBUG 8388 --- [http-nio-8080-exec-3] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 22:53:20.138 DEBUG 8388 --- [http-nio-8080-exec-3] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 22:53:20.139 DEBUG 8388 --- [http-nio-8080-exec-3] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 23(String)
2017-09-14 22:53:20.140 DEBUG 8388 --- [http-nio-8080-exec-3] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 22:53:20.141 DEBUG 8388 --- [http-nio-8080-exec-3] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 22:53:20.141 DEBUG 8388 --- [http-nio-8080-exec-3] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 16(String)
2017-09-14 22:53:20.142 DEBUG 8388 --- [http-nio-8080-exec-3] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 22:53:20.143 DEBUG 8388 --- [http-nio-8080-exec-3] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 22:53:20.143 DEBUG 8388 --- [http-nio-8080-exec-3] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 1(String)
2017-09-14 22:53:20.145 DEBUG 8388 --- [http-nio-8080-exec-3] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 22:53:20.146 DEBUG 8388 --- [http-nio-8080-exec-3] p.p.blog.repository.BlogRepo.list        : <==      Total: 10
2017-09-14 22:53:20.154 DEBUG 8388 --- [http-nio-8080-exec-3] p.p.blog.repository.BlogRepo.getTotal    : ==>  Preparing: select count(*) from t_blog 
2017-09-14 22:53:20.154 DEBUG 8388 --- [http-nio-8080-exec-3] p.p.blog.repository.BlogRepo.getTotal    : ==> Parameters: 
2017-09-14 22:53:20.155 DEBUG 8388 --- [http-nio-8080-exec-3] p.p.blog.repository.BlogRepo.getTotal    : <==      Total: 1
2017-09-14 22:53:39.274 DEBUG 8388 --- [http-nio-8080-exec-9] p.p.blog.repository.BlogRepo.list        : ==>  Preparing: select * from t_blog order by releaseDate desc limit ?,? 
2017-09-14 22:53:39.275 DEBUG 8388 --- [http-nio-8080-exec-9] p.p.blog.repository.BlogRepo.list        : ==> Parameters: 50(Integer), 10(Integer)
2017-09-14 22:53:39.280 DEBUG 8388 --- [http-nio-8080-exec-9] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 22:53:39.280 DEBUG 8388 --- [http-nio-8080-exec-9] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 24(String)
2017-09-14 22:53:39.288 DEBUG 8388 --- [http-nio-8080-exec-9] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 22:53:39.289 DEBUG 8388 --- [http-nio-8080-exec-9] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 22:53:39.289 DEBUG 8388 --- [http-nio-8080-exec-9] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 23(String)
2017-09-14 22:53:39.291 DEBUG 8388 --- [http-nio-8080-exec-9] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 22:53:39.291 DEBUG 8388 --- [http-nio-8080-exec-9] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 22:53:39.291 DEBUG 8388 --- [http-nio-8080-exec-9] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 16(String)
2017-09-14 22:53:39.293 DEBUG 8388 --- [http-nio-8080-exec-9] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 22:53:39.293 DEBUG 8388 --- [http-nio-8080-exec-9] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 22:53:39.294 DEBUG 8388 --- [http-nio-8080-exec-9] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 1(String)
2017-09-14 22:53:39.295 DEBUG 8388 --- [http-nio-8080-exec-9] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 22:53:39.296 DEBUG 8388 --- [http-nio-8080-exec-9] p.p.blog.repository.BlogRepo.list        : <==      Total: 10
2017-09-14 22:53:39.302 DEBUG 8388 --- [http-nio-8080-exec-9] p.p.blog.repository.BlogRepo.getTotal    : ==>  Preparing: select count(*) from t_blog 
2017-09-14 22:53:39.302 DEBUG 8388 --- [http-nio-8080-exec-9] p.p.blog.repository.BlogRepo.getTotal    : ==> Parameters: 
2017-09-14 22:53:39.303 DEBUG 8388 --- [http-nio-8080-exec-9] p.p.blog.repository.BlogRepo.getTotal    : <==      Total: 1
2017-09-14 22:53:42.098 DEBUG 8388 --- [http-nio-8080-exec-3] p.p.blog.repository.BlogRepo.list        : ==>  Preparing: select * from t_blog order by releaseDate desc limit ?,? 
2017-09-14 22:53:42.098 DEBUG 8388 --- [http-nio-8080-exec-3] p.p.blog.repository.BlogRepo.list        : ==> Parameters: 50(Integer), 10(Integer)
2017-09-14 22:53:42.102 DEBUG 8388 --- [http-nio-8080-exec-3] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 22:53:42.103 DEBUG 8388 --- [http-nio-8080-exec-3] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 24(String)
2017-09-14 22:53:42.104 DEBUG 8388 --- [http-nio-8080-exec-3] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 22:53:42.105 DEBUG 8388 --- [http-nio-8080-exec-3] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 22:53:42.105 DEBUG 8388 --- [http-nio-8080-exec-3] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 23(String)
2017-09-14 22:53:42.107 DEBUG 8388 --- [http-nio-8080-exec-3] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 22:53:42.108 DEBUG 8388 --- [http-nio-8080-exec-3] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 22:53:42.108 DEBUG 8388 --- [http-nio-8080-exec-3] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 16(String)
2017-09-14 22:53:42.109 DEBUG 8388 --- [http-nio-8080-exec-3] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 22:53:42.110 DEBUG 8388 --- [http-nio-8080-exec-3] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 22:53:42.110 DEBUG 8388 --- [http-nio-8080-exec-3] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 1(String)
2017-09-14 22:53:42.111 DEBUG 8388 --- [http-nio-8080-exec-3] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 22:53:42.112 DEBUG 8388 --- [http-nio-8080-exec-3] p.p.blog.repository.BlogRepo.list        : <==      Total: 10
2017-09-14 22:53:42.117 DEBUG 8388 --- [http-nio-8080-exec-3] p.p.blog.repository.BlogRepo.getTotal    : ==>  Preparing: select count(*) from t_blog 
2017-09-14 22:53:42.118 DEBUG 8388 --- [http-nio-8080-exec-3] p.p.blog.repository.BlogRepo.getTotal    : ==> Parameters: 
2017-09-14 22:53:42.119 DEBUG 8388 --- [http-nio-8080-exec-3] p.p.blog.repository.BlogRepo.getTotal    : <==      Total: 1
2017-09-14 22:53:47.184 DEBUG 8388 --- [http-nio-8080-exec-6] p.p.blog.repository.BlogRepo.list        : ==>  Preparing: select * from t_blog order by releaseDate desc limit ?,? 
2017-09-14 22:53:47.184 DEBUG 8388 --- [http-nio-8080-exec-6] p.p.blog.repository.BlogRepo.list        : ==> Parameters: 50(Integer), 10(Integer)
2017-09-14 22:53:47.189 DEBUG 8388 --- [http-nio-8080-exec-6] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 22:53:47.190 DEBUG 8388 --- [http-nio-8080-exec-6] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 24(String)
2017-09-14 22:53:47.191 DEBUG 8388 --- [http-nio-8080-exec-6] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 22:53:47.192 DEBUG 8388 --- [http-nio-8080-exec-6] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 22:53:47.193 DEBUG 8388 --- [http-nio-8080-exec-6] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 23(String)
2017-09-14 22:53:47.194 DEBUG 8388 --- [http-nio-8080-exec-6] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 22:53:47.195 DEBUG 8388 --- [http-nio-8080-exec-6] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 22:53:47.195 DEBUG 8388 --- [http-nio-8080-exec-6] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 16(String)
2017-09-14 22:53:47.196 DEBUG 8388 --- [http-nio-8080-exec-6] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 22:53:47.197 DEBUG 8388 --- [http-nio-8080-exec-6] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 22:53:47.197 DEBUG 8388 --- [http-nio-8080-exec-6] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 1(String)
2017-09-14 22:53:47.198 DEBUG 8388 --- [http-nio-8080-exec-6] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 22:53:47.200 DEBUG 8388 --- [http-nio-8080-exec-6] p.p.blog.repository.BlogRepo.list        : <==      Total: 10
2017-09-14 22:53:47.208 DEBUG 8388 --- [http-nio-8080-exec-6] p.p.blog.repository.BlogRepo.getTotal    : ==>  Preparing: select count(*) from t_blog 
2017-09-14 22:53:47.208 DEBUG 8388 --- [http-nio-8080-exec-6] p.p.blog.repository.BlogRepo.getTotal    : ==> Parameters: 
2017-09-14 22:53:47.213 DEBUG 8388 --- [http-nio-8080-exec-6] p.p.blog.repository.BlogRepo.getTotal    : <==      Total: 1
2017-09-14 22:54:06.280 DEBUG 8388 --- [http-nio-8080-exec-5] p.p.blog.repository.BlogRepo.list        : ==>  Preparing: select * from t_blog order by releaseDate desc limit ?,? 
2017-09-14 22:54:06.281 DEBUG 8388 --- [http-nio-8080-exec-5] p.p.blog.repository.BlogRepo.list        : ==> Parameters: 50(Integer), 10(Integer)
2017-09-14 22:54:06.287 DEBUG 8388 --- [http-nio-8080-exec-5] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 22:54:06.287 DEBUG 8388 --- [http-nio-8080-exec-5] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 24(String)
2017-09-14 22:54:06.289 DEBUG 8388 --- [http-nio-8080-exec-5] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 22:54:06.290 DEBUG 8388 --- [http-nio-8080-exec-5] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 22:54:06.291 DEBUG 8388 --- [http-nio-8080-exec-5] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 23(String)
2017-09-14 22:54:06.292 DEBUG 8388 --- [http-nio-8080-exec-5] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 22:54:06.293 DEBUG 8388 --- [http-nio-8080-exec-5] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 22:54:06.294 DEBUG 8388 --- [http-nio-8080-exec-5] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 16(String)
2017-09-14 22:54:06.296 DEBUG 8388 --- [http-nio-8080-exec-5] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 22:54:06.296 DEBUG 8388 --- [http-nio-8080-exec-5] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 22:54:06.297 DEBUG 8388 --- [http-nio-8080-exec-5] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 1(String)
2017-09-14 22:54:06.298 DEBUG 8388 --- [http-nio-8080-exec-5] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 22:54:06.300 DEBUG 8388 --- [http-nio-8080-exec-5] p.p.blog.repository.BlogRepo.list        : <==      Total: 10
2017-09-14 22:54:06.307 DEBUG 8388 --- [http-nio-8080-exec-5] p.p.blog.repository.BlogRepo.getTotal    : ==>  Preparing: select count(*) from t_blog 
2017-09-14 22:54:06.307 DEBUG 8388 --- [http-nio-8080-exec-5] p.p.blog.repository.BlogRepo.getTotal    : ==> Parameters: 
2017-09-14 22:54:06.314 DEBUG 8388 --- [http-nio-8080-exec-5] p.p.blog.repository.BlogRepo.getTotal    : <==      Total: 1
2017-09-14 22:57:14.282 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.blog.repository.BlogRepo.list        : ==>  Preparing: select * from t_blog order by releaseDate desc limit ?,? 
2017-09-14 22:57:14.283 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.blog.repository.BlogRepo.list        : ==> Parameters: 50(Integer), 10(Integer)
2017-09-14 22:57:14.288 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 22:57:14.289 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 24(String)
2017-09-14 22:57:14.290 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 22:57:14.291 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 22:57:14.291 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 23(String)
2017-09-14 22:57:14.292 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 22:57:14.292 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 22:57:14.293 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 16(String)
2017-09-14 22:57:14.294 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 22:57:14.295 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 22:57:14.295 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 1(String)
2017-09-14 22:57:14.296 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 22:57:14.298 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.blog.repository.BlogRepo.list        : <==      Total: 10
2017-09-14 22:57:14.305 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.blog.repository.BlogRepo.getTotal    : ==>  Preparing: select count(*) from t_blog 
2017-09-14 22:57:14.305 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.blog.repository.BlogRepo.getTotal    : ==> Parameters: 
2017-09-14 22:57:14.306 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.blog.repository.BlogRepo.getTotal    : <==      Total: 1
2017-09-14 22:57:29.061 DEBUG 8388 --- [http-nio-8080-exec-1] p.p.blog.repository.BlogRepo.list        : ==>  Preparing: select * from t_blog order by releaseDate desc limit ?,? 
2017-09-14 22:57:29.061 DEBUG 8388 --- [http-nio-8080-exec-1] p.p.blog.repository.BlogRepo.list        : ==> Parameters: 50(Integer), 10(Integer)
2017-09-14 22:57:29.074 DEBUG 8388 --- [http-nio-8080-exec-1] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 22:57:29.074 DEBUG 8388 --- [http-nio-8080-exec-1] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 24(String)
2017-09-14 22:57:29.079 DEBUG 8388 --- [http-nio-8080-exec-1] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 22:57:29.080 DEBUG 8388 --- [http-nio-8080-exec-1] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 22:57:29.080 DEBUG 8388 --- [http-nio-8080-exec-1] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 23(String)
2017-09-14 22:57:29.082 DEBUG 8388 --- [http-nio-8080-exec-1] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 22:57:29.082 DEBUG 8388 --- [http-nio-8080-exec-1] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 22:57:29.083 DEBUG 8388 --- [http-nio-8080-exec-1] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 16(String)
2017-09-14 22:57:29.085 DEBUG 8388 --- [http-nio-8080-exec-1] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 22:57:29.086 DEBUG 8388 --- [http-nio-8080-exec-1] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 22:57:29.086 DEBUG 8388 --- [http-nio-8080-exec-1] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 1(String)
2017-09-14 22:57:29.088 DEBUG 8388 --- [http-nio-8080-exec-1] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 22:57:29.090 DEBUG 8388 --- [http-nio-8080-exec-1] p.p.blog.repository.BlogRepo.list        : <==      Total: 10
2017-09-14 22:57:29.102 DEBUG 8388 --- [http-nio-8080-exec-1] p.p.blog.repository.BlogRepo.getTotal    : ==>  Preparing: select count(*) from t_blog 
2017-09-14 22:57:29.102 DEBUG 8388 --- [http-nio-8080-exec-1] p.p.blog.repository.BlogRepo.getTotal    : ==> Parameters: 
2017-09-14 22:57:29.104 DEBUG 8388 --- [http-nio-8080-exec-1] p.p.blog.repository.BlogRepo.getTotal    : <==      Total: 1
2017-09-14 22:57:44.354 DEBUG 8388 --- [http-nio-8080-exec-9] p.p.blog.repository.BlogRepo.list        : ==>  Preparing: select * from t_blog order by releaseDate desc limit ?,? 
2017-09-14 22:57:44.354 DEBUG 8388 --- [http-nio-8080-exec-9] p.p.blog.repository.BlogRepo.list        : ==> Parameters: 50(Integer), 10(Integer)
2017-09-14 22:57:44.358 DEBUG 8388 --- [http-nio-8080-exec-9] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 22:57:44.358 DEBUG 8388 --- [http-nio-8080-exec-9] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 24(String)
2017-09-14 22:57:44.361 DEBUG 8388 --- [http-nio-8080-exec-9] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 22:57:44.363 DEBUG 8388 --- [http-nio-8080-exec-9] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 22:57:44.364 DEBUG 8388 --- [http-nio-8080-exec-9] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 23(String)
2017-09-14 22:57:44.365 DEBUG 8388 --- [http-nio-8080-exec-9] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 22:57:44.366 DEBUG 8388 --- [http-nio-8080-exec-9] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 22:57:44.366 DEBUG 8388 --- [http-nio-8080-exec-9] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 16(String)
2017-09-14 22:57:44.367 DEBUG 8388 --- [http-nio-8080-exec-9] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 22:57:44.368 DEBUG 8388 --- [http-nio-8080-exec-9] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 22:57:44.368 DEBUG 8388 --- [http-nio-8080-exec-9] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 1(String)
2017-09-14 22:57:44.368 DEBUG 8388 --- [http-nio-8080-exec-9] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 22:57:44.369 DEBUG 8388 --- [http-nio-8080-exec-9] p.p.blog.repository.BlogRepo.list        : <==      Total: 10
2017-09-14 22:57:44.375 DEBUG 8388 --- [http-nio-8080-exec-9] p.p.blog.repository.BlogRepo.getTotal    : ==>  Preparing: select count(*) from t_blog 
2017-09-14 22:57:44.375 DEBUG 8388 --- [http-nio-8080-exec-9] p.p.blog.repository.BlogRepo.getTotal    : ==> Parameters: 
2017-09-14 22:57:44.377 DEBUG 8388 --- [http-nio-8080-exec-9] p.p.blog.repository.BlogRepo.getTotal    : <==      Total: 1
2017-09-14 22:59:23.780 DEBUG 8388 --- [http-nio-8080-exec-2] p.p.blog.repository.BlogRepo.list        : ==>  Preparing: select * from t_blog order by releaseDate desc limit ?,? 
2017-09-14 22:59:23.781 DEBUG 8388 --- [http-nio-8080-exec-2] p.p.blog.repository.BlogRepo.list        : ==> Parameters: 50(Integer), 10(Integer)
2017-09-14 22:59:23.786 DEBUG 8388 --- [http-nio-8080-exec-2] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 22:59:23.787 DEBUG 8388 --- [http-nio-8080-exec-2] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 24(String)
2017-09-14 22:59:23.789 DEBUG 8388 --- [http-nio-8080-exec-2] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 22:59:23.796 DEBUG 8388 --- [http-nio-8080-exec-2] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 22:59:23.796 DEBUG 8388 --- [http-nio-8080-exec-2] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 23(String)
2017-09-14 22:59:23.797 DEBUG 8388 --- [http-nio-8080-exec-2] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 22:59:23.798 DEBUG 8388 --- [http-nio-8080-exec-2] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 22:59:23.798 DEBUG 8388 --- [http-nio-8080-exec-2] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 16(String)
2017-09-14 22:59:23.800 DEBUG 8388 --- [http-nio-8080-exec-2] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 22:59:23.801 DEBUG 8388 --- [http-nio-8080-exec-2] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 22:59:23.801 DEBUG 8388 --- [http-nio-8080-exec-2] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 1(String)
2017-09-14 22:59:23.803 DEBUG 8388 --- [http-nio-8080-exec-2] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 22:59:23.805 DEBUG 8388 --- [http-nio-8080-exec-2] p.p.blog.repository.BlogRepo.list        : <==      Total: 10
2017-09-14 22:59:23.815 DEBUG 8388 --- [http-nio-8080-exec-2] p.p.blog.repository.BlogRepo.getTotal    : ==>  Preparing: select count(*) from t_blog 
2017-09-14 22:59:23.815 DEBUG 8388 --- [http-nio-8080-exec-2] p.p.blog.repository.BlogRepo.getTotal    : ==> Parameters: 
2017-09-14 22:59:23.817 DEBUG 8388 --- [http-nio-8080-exec-2] p.p.blog.repository.BlogRepo.getTotal    : <==      Total: 1
2017-09-14 22:59:38.388 DEBUG 8388 --- [http-nio-8080-exec-8] p.p.blog.repository.BlogRepo.list        : ==>  Preparing: select * from t_blog order by releaseDate desc limit ?,? 
2017-09-14 22:59:38.389 DEBUG 8388 --- [http-nio-8080-exec-8] p.p.blog.repository.BlogRepo.list        : ==> Parameters: 50(Integer), 10(Integer)
2017-09-14 22:59:38.402 DEBUG 8388 --- [http-nio-8080-exec-8] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 22:59:38.402 DEBUG 8388 --- [http-nio-8080-exec-8] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 24(String)
2017-09-14 22:59:38.403 DEBUG 8388 --- [http-nio-8080-exec-8] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 22:59:38.405 DEBUG 8388 --- [http-nio-8080-exec-8] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 22:59:38.405 DEBUG 8388 --- [http-nio-8080-exec-8] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 23(String)
2017-09-14 22:59:38.408 DEBUG 8388 --- [http-nio-8080-exec-8] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 22:59:38.409 DEBUG 8388 --- [http-nio-8080-exec-8] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 22:59:38.409 DEBUG 8388 --- [http-nio-8080-exec-8] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 16(String)
2017-09-14 22:59:38.411 DEBUG 8388 --- [http-nio-8080-exec-8] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 22:59:38.413 DEBUG 8388 --- [http-nio-8080-exec-8] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 22:59:38.413 DEBUG 8388 --- [http-nio-8080-exec-8] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 1(String)
2017-09-14 22:59:38.414 DEBUG 8388 --- [http-nio-8080-exec-8] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 22:59:38.415 DEBUG 8388 --- [http-nio-8080-exec-8] p.p.blog.repository.BlogRepo.list        : <==      Total: 10
2017-09-14 22:59:38.422 DEBUG 8388 --- [http-nio-8080-exec-8] p.p.blog.repository.BlogRepo.getTotal    : ==>  Preparing: select count(*) from t_blog 
2017-09-14 22:59:38.423 DEBUG 8388 --- [http-nio-8080-exec-8] p.p.blog.repository.BlogRepo.getTotal    : ==> Parameters: 
2017-09-14 22:59:38.424 DEBUG 8388 --- [http-nio-8080-exec-8] p.p.blog.repository.BlogRepo.getTotal    : <==      Total: 1
2017-09-14 23:00:06.859 DEBUG 8388 --- [http-nio-8080-exec-1] p.p.blog.repository.BlogRepo.list        : ==>  Preparing: select * from t_blog order by releaseDate desc limit ?,? 
2017-09-14 23:00:06.859 DEBUG 8388 --- [http-nio-8080-exec-1] p.p.blog.repository.BlogRepo.list        : ==> Parameters: 50(Integer), 10(Integer)
2017-09-14 23:00:06.880 DEBUG 8388 --- [http-nio-8080-exec-1] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 23:00:06.881 DEBUG 8388 --- [http-nio-8080-exec-1] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 24(String)
2017-09-14 23:00:06.888 DEBUG 8388 --- [http-nio-8080-exec-1] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 23:00:06.889 DEBUG 8388 --- [http-nio-8080-exec-1] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 23:00:06.890 DEBUG 8388 --- [http-nio-8080-exec-1] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 23(String)
2017-09-14 23:00:06.893 DEBUG 8388 --- [http-nio-8080-exec-1] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 23:00:06.894 DEBUG 8388 --- [http-nio-8080-exec-1] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 23:00:06.894 DEBUG 8388 --- [http-nio-8080-exec-1] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 16(String)
2017-09-14 23:00:06.895 DEBUG 8388 --- [http-nio-8080-exec-1] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 23:00:06.896 DEBUG 8388 --- [http-nio-8080-exec-1] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 23:00:06.896 DEBUG 8388 --- [http-nio-8080-exec-1] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 1(String)
2017-09-14 23:00:06.897 DEBUG 8388 --- [http-nio-8080-exec-1] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 23:00:06.898 DEBUG 8388 --- [http-nio-8080-exec-1] p.p.blog.repository.BlogRepo.list        : <==      Total: 10
2017-09-14 23:00:06.905 DEBUG 8388 --- [http-nio-8080-exec-1] p.p.blog.repository.BlogRepo.getTotal    : ==>  Preparing: select count(*) from t_blog 
2017-09-14 23:00:06.905 DEBUG 8388 --- [http-nio-8080-exec-1] p.p.blog.repository.BlogRepo.getTotal    : ==> Parameters: 
2017-09-14 23:00:06.907 DEBUG 8388 --- [http-nio-8080-exec-1] p.p.blog.repository.BlogRepo.getTotal    : <==      Total: 1
2017-09-14 23:00:44.451  INFO 8388 --- [http-nio-8080-exec-2] pers.platform.blog.realm.MyRealm         : MyRealm.doGetAuthenticationInfo()
2017-09-14 23:00:44.465 DEBUG 8388 --- [http-nio-8080-exec-2] p.p.b.r.BloggerRepo.getByUserName        : ==>  Preparing: select * from t_blogger where userName=? 
2017-09-14 23:00:44.471 DEBUG 8388 --- [http-nio-8080-exec-2] p.p.b.r.BloggerRepo.getByUserName        : ==> Parameters: null
2017-09-14 23:00:44.473 DEBUG 8388 --- [http-nio-8080-exec-2] p.p.b.r.BloggerRepo.getByUserName        : <==      Total: 0
2017-09-14 23:00:44.541  INFO 8388 --- [http-nio-8080-exec-2] pers.platform.blog.realm.MyRealm         : MyRealm.doGetAuthenticationInfo()
2017-09-14 23:00:44.546  INFO 8388 --- [http-nio-8080-exec-2] pers.platform.blog.realm.MyRealm         : ---------->>bloggerInfopers.platform.blog.model.Blogger@5b4f4b24
2017-09-14 23:00:57.821 DEBUG 8388 --- [http-nio-8080-exec-5] p.p.blog.repository.BloggerRepo.update   : ==>  Preparing: update t_blogger SET nickName=?, sign=?, personalized=?, profile=? where id=1 
2017-09-14 23:00:57.825 DEBUG 8388 --- [http-nio-8080-exec-5] p.p.blog.repository.BloggerRepo.update   : ==> Parameters: cc(String), gogogo(String), 假如生活欺骗了你asdas不要么看了就去乌克兰即可连接撒即可得两节课了啊实打实的(String), <p>爱傻傻的</p>(String)
2017-09-14 23:00:57.865 DEBUG 8388 --- [http-nio-8080-exec-5] p.p.blog.repository.BloggerRepo.update   : <==    Updates: 1
2017-09-14 23:01:09.544 DEBUG 8388 --- [http-nio-8080-exec-3] p.p.b.repository.BlogTypeRepo.countList  : ==>  Preparing: SELECT t2.id,t2.`typeName`,COUNT(t1.id) AS blogCount FROM t_blog t1 RIGHT JOIN t_blogType t2 ON t1.typeId=t2.id GROUP BY t2.id,t2.typeName ORDER BY t2.orderNo; 
2017-09-14 23:01:09.545 DEBUG 8388 --- [http-nio-8080-exec-3] p.p.b.repository.BlogTypeRepo.countList  : ==> Parameters: 
2017-09-14 23:01:09.548 DEBUG 8388 --- [http-nio-8080-exec-3] p.p.b.repository.BlogTypeRepo.countList  : <==      Total: 17
2017-09-14 23:01:09.548 DEBUG 8388 --- [http-nio-8080-exec-3] p.p.blog.repository.BlogRepo.countList   : ==>  Preparing: SELECT DATE_FORMAT (releaseDate,'%Y年%m月') AS releaseDateStr,COUNT(*) AS blogCount FROM t_blog GROUP BY DATE_FORMAT (releaseDate,'%Y年%m月') ORDER BY DATE_FORMAT (releaseDate,'%Y年%m月') DESC 
2017-09-14 23:01:09.549 DEBUG 8388 --- [http-nio-8080-exec-3] p.p.blog.repository.BlogRepo.countList   : ==> Parameters: 
2017-09-14 23:01:09.552 DEBUG 8388 --- [http-nio-8080-exec-3] p.p.blog.repository.BlogRepo.countList   : <==      Total: 12
2017-09-14 23:01:21.641 DEBUG 8388 --- [http-nio-8080-exec-8] p.p.blog.repository.BlogRepo.list        : ==>  Preparing: select * from t_blog order by releaseDate desc limit ?,? 
2017-09-14 23:01:21.641 DEBUG 8388 --- [http-nio-8080-exec-8] p.p.blog.repository.BlogRepo.list        : ==> Parameters: 50(Integer), 10(Integer)
2017-09-14 23:01:21.646 DEBUG 8388 --- [http-nio-8080-exec-8] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 23:01:21.647 DEBUG 8388 --- [http-nio-8080-exec-8] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 24(String)
2017-09-14 23:01:21.649 DEBUG 8388 --- [http-nio-8080-exec-8] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 23:01:21.650 DEBUG 8388 --- [http-nio-8080-exec-8] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 23:01:21.651 DEBUG 8388 --- [http-nio-8080-exec-8] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 23(String)
2017-09-14 23:01:21.652 DEBUG 8388 --- [http-nio-8080-exec-8] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 23:01:21.652 DEBUG 8388 --- [http-nio-8080-exec-8] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 23:01:21.653 DEBUG 8388 --- [http-nio-8080-exec-8] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 16(String)
2017-09-14 23:01:21.654 DEBUG 8388 --- [http-nio-8080-exec-8] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 23:01:21.655 DEBUG 8388 --- [http-nio-8080-exec-8] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 23:01:21.656 DEBUG 8388 --- [http-nio-8080-exec-8] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 1(String)
2017-09-14 23:01:21.683 DEBUG 8388 --- [http-nio-8080-exec-8] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 23:01:21.685 DEBUG 8388 --- [http-nio-8080-exec-8] p.p.blog.repository.BlogRepo.list        : <==      Total: 10
2017-09-14 23:01:21.696 DEBUG 8388 --- [http-nio-8080-exec-8] p.p.blog.repository.BlogRepo.getTotal    : ==>  Preparing: select count(*) from t_blog 
2017-09-14 23:01:21.696 DEBUG 8388 --- [http-nio-8080-exec-8] p.p.blog.repository.BlogRepo.getTotal    : ==> Parameters: 
2017-09-14 23:01:21.698 DEBUG 8388 --- [http-nio-8080-exec-8] p.p.blog.repository.BlogRepo.getTotal    : <==      Total: 1
2017-09-14 23:01:22.310 DEBUG 8388 --- [http-nio-8080-exec-9] p.p.blog.repository.BlogRepo.list        : ==>  Preparing: select * from t_blog order by releaseDate desc limit ?,? 
2017-09-14 23:01:22.311 DEBUG 8388 --- [http-nio-8080-exec-9] p.p.blog.repository.BlogRepo.list        : ==> Parameters: 40(Integer), 10(Integer)
2017-09-14 23:01:22.316 DEBUG 8388 --- [http-nio-8080-exec-9] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 23:01:22.317 DEBUG 8388 --- [http-nio-8080-exec-9] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 24(String)
2017-09-14 23:01:22.319 DEBUG 8388 --- [http-nio-8080-exec-9] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 23:01:22.330 DEBUG 8388 --- [http-nio-8080-exec-9] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 23:01:22.330 DEBUG 8388 --- [http-nio-8080-exec-9] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 23(String)
2017-09-14 23:01:22.345 DEBUG 8388 --- [http-nio-8080-exec-9] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 23:01:22.346 DEBUG 8388 --- [http-nio-8080-exec-9] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 23:01:22.347 DEBUG 8388 --- [http-nio-8080-exec-9] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 28(String)
2017-09-14 23:01:22.354 DEBUG 8388 --- [http-nio-8080-exec-9] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 23:01:22.356 DEBUG 8388 --- [http-nio-8080-exec-9] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 23:01:22.357 DEBUG 8388 --- [http-nio-8080-exec-9] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 1(String)
2017-09-14 23:01:22.363 DEBUG 8388 --- [http-nio-8080-exec-9] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 23:01:22.364 DEBUG 8388 --- [http-nio-8080-exec-9] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 23:01:22.364 DEBUG 8388 --- [http-nio-8080-exec-9] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 11(String)
2017-09-14 23:01:22.366 DEBUG 8388 --- [http-nio-8080-exec-9] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 23:01:22.369 DEBUG 8388 --- [http-nio-8080-exec-9] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 23:01:22.369 DEBUG 8388 --- [http-nio-8080-exec-9] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 25(String)
2017-09-14 23:01:22.374 DEBUG 8388 --- [http-nio-8080-exec-9] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 23:01:22.374 DEBUG 8388 --- [http-nio-8080-exec-9] p.p.blog.repository.BlogRepo.list        : <==      Total: 10
2017-09-14 23:01:22.378 DEBUG 8388 --- [http-nio-8080-exec-9] p.p.blog.repository.BlogRepo.getTotal    : ==>  Preparing: select count(*) from t_blog 
2017-09-14 23:01:22.378 DEBUG 8388 --- [http-nio-8080-exec-9] p.p.blog.repository.BlogRepo.getTotal    : ==> Parameters: 
2017-09-14 23:01:22.380 DEBUG 8388 --- [http-nio-8080-exec-9] p.p.blog.repository.BlogRepo.getTotal    : <==      Total: 1
2017-09-14 23:01:23.691 DEBUG 8388 --- [http-nio-8080-exec-5] p.p.blog.repository.BlogRepo.list        : ==>  Preparing: select * from t_blog order by releaseDate desc limit ?,? 
2017-09-14 23:01:23.692 DEBUG 8388 --- [http-nio-8080-exec-5] p.p.blog.repository.BlogRepo.list        : ==> Parameters: 10(Integer), 10(Integer)
2017-09-14 23:01:23.697 DEBUG 8388 --- [http-nio-8080-exec-5] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 23:01:23.697 DEBUG 8388 --- [http-nio-8080-exec-5] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 11(String)
2017-09-14 23:01:23.704 DEBUG 8388 --- [http-nio-8080-exec-5] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 23:01:23.707 DEBUG 8388 --- [http-nio-8080-exec-5] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 23:01:23.707 DEBUG 8388 --- [http-nio-8080-exec-5] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 12(String)
2017-09-14 23:01:23.712 DEBUG 8388 --- [http-nio-8080-exec-5] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 23:01:23.713 DEBUG 8388 --- [http-nio-8080-exec-5] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 23:01:23.714 DEBUG 8388 --- [http-nio-8080-exec-5] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 27(String)
2017-09-14 23:01:23.716 DEBUG 8388 --- [http-nio-8080-exec-5] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 23:01:23.717 DEBUG 8388 --- [http-nio-8080-exec-5] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 23:01:23.717 DEBUG 8388 --- [http-nio-8080-exec-5] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 31(String)
2017-09-14 23:01:23.718 DEBUG 8388 --- [http-nio-8080-exec-5] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 23:01:23.719 DEBUG 8388 --- [http-nio-8080-exec-5] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 23:01:23.719 DEBUG 8388 --- [http-nio-8080-exec-5] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 28(String)
2017-09-14 23:01:23.720 DEBUG 8388 --- [http-nio-8080-exec-5] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 23:01:23.721 DEBUG 8388 --- [http-nio-8080-exec-5] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 23:01:23.721 DEBUG 8388 --- [http-nio-8080-exec-5] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 14(String)
2017-09-14 23:01:23.724 DEBUG 8388 --- [http-nio-8080-exec-5] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 23:01:23.725 DEBUG 8388 --- [http-nio-8080-exec-5] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 23:01:23.725 DEBUG 8388 --- [http-nio-8080-exec-5] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 1(String)
2017-09-14 23:01:23.727 DEBUG 8388 --- [http-nio-8080-exec-5] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 23:01:23.728 DEBUG 8388 --- [http-nio-8080-exec-5] p.p.blog.repository.BlogRepo.list        : <==      Total: 10
2017-09-14 23:01:23.733 DEBUG 8388 --- [http-nio-8080-exec-5] p.p.blog.repository.BlogRepo.getTotal    : ==>  Preparing: select count(*) from t_blog 
2017-09-14 23:01:23.733 DEBUG 8388 --- [http-nio-8080-exec-5] p.p.blog.repository.BlogRepo.getTotal    : ==> Parameters: 
2017-09-14 23:01:23.734 DEBUG 8388 --- [http-nio-8080-exec-5] p.p.blog.repository.BlogRepo.getTotal    : <==      Total: 1
2017-09-14 23:01:25.388 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.blog.repository.BlogRepo.list        : ==>  Preparing: select * from t_blog order by releaseDate desc limit ?,? 
2017-09-14 23:01:25.389 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.blog.repository.BlogRepo.list        : ==> Parameters: 10(Integer), 10(Integer)
2017-09-14 23:01:25.394 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 23:01:25.394 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 11(String)
2017-09-14 23:01:25.396 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 23:01:25.396 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 23:01:25.397 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 12(String)
2017-09-14 23:01:25.399 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 23:01:25.399 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 23:01:25.400 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 27(String)
2017-09-14 23:01:25.401 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 23:01:25.401 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 23:01:25.402 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 31(String)
2017-09-14 23:01:25.403 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 23:01:25.404 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 23:01:25.404 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 28(String)
2017-09-14 23:01:25.406 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 23:01:25.407 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 23:01:25.407 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 14(String)
2017-09-14 23:01:25.409 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 23:01:25.410 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 23:01:25.410 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 1(String)
2017-09-14 23:01:25.412 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 23:01:25.412 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.blog.repository.BlogRepo.list        : <==      Total: 10
2017-09-14 23:01:25.417 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.blog.repository.BlogRepo.getTotal    : ==>  Preparing: select count(*) from t_blog 
2017-09-14 23:01:25.417 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.blog.repository.BlogRepo.getTotal    : ==> Parameters: 
2017-09-14 23:01:25.419 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.blog.repository.BlogRepo.getTotal    : <==      Total: 1
2017-09-14 23:01:45.671 DEBUG 8388 --- [http-nio-8080-exec-3] p.p.blog.repository.BlogRepo.list        : ==>  Preparing: select * from t_blog order by releaseDate desc limit ?,? 
2017-09-14 23:01:45.672 DEBUG 8388 --- [http-nio-8080-exec-3] p.p.blog.repository.BlogRepo.list        : ==> Parameters: 10(Integer), 10(Integer)
2017-09-14 23:01:45.677 DEBUG 8388 --- [http-nio-8080-exec-3] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 23:01:45.677 DEBUG 8388 --- [http-nio-8080-exec-3] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 11(String)
2017-09-14 23:01:45.679 DEBUG 8388 --- [http-nio-8080-exec-3] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 23:01:45.679 DEBUG 8388 --- [http-nio-8080-exec-3] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 23:01:45.680 DEBUG 8388 --- [http-nio-8080-exec-3] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 12(String)
2017-09-14 23:01:45.681 DEBUG 8388 --- [http-nio-8080-exec-3] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 23:01:45.682 DEBUG 8388 --- [http-nio-8080-exec-3] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 23:01:45.683 DEBUG 8388 --- [http-nio-8080-exec-3] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 27(String)
2017-09-14 23:01:45.684 DEBUG 8388 --- [http-nio-8080-exec-3] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 23:01:45.685 DEBUG 8388 --- [http-nio-8080-exec-3] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 23:01:45.685 DEBUG 8388 --- [http-nio-8080-exec-3] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 31(String)
2017-09-14 23:01:45.687 DEBUG 8388 --- [http-nio-8080-exec-3] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 23:01:45.688 DEBUG 8388 --- [http-nio-8080-exec-3] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 23:01:45.688 DEBUG 8388 --- [http-nio-8080-exec-3] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 28(String)
2017-09-14 23:01:45.689 DEBUG 8388 --- [http-nio-8080-exec-3] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 23:01:45.690 DEBUG 8388 --- [http-nio-8080-exec-3] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 23:01:45.690 DEBUG 8388 --- [http-nio-8080-exec-3] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 14(String)
2017-09-14 23:01:45.692 DEBUG 8388 --- [http-nio-8080-exec-3] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 23:01:45.693 DEBUG 8388 --- [http-nio-8080-exec-3] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 23:01:45.693 DEBUG 8388 --- [http-nio-8080-exec-3] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 1(String)
2017-09-14 23:01:45.695 DEBUG 8388 --- [http-nio-8080-exec-3] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 23:01:45.696 DEBUG 8388 --- [http-nio-8080-exec-3] p.p.blog.repository.BlogRepo.list        : <==      Total: 10
2017-09-14 23:01:45.702 DEBUG 8388 --- [http-nio-8080-exec-3] p.p.blog.repository.BlogRepo.getTotal    : ==>  Preparing: select count(*) from t_blog 
2017-09-14 23:01:45.702 DEBUG 8388 --- [http-nio-8080-exec-3] p.p.blog.repository.BlogRepo.getTotal    : ==> Parameters: 
2017-09-14 23:01:45.705 DEBUG 8388 --- [http-nio-8080-exec-3] p.p.blog.repository.BlogRepo.getTotal    : <==      Total: 1
2017-09-14 23:02:13.790 DEBUG 8388 --- [http-nio-8080-exec-6] p.p.blog.repository.BlogRepo.list        : ==>  Preparing: select * from t_blog order by releaseDate desc limit ?,? 
2017-09-14 23:02:13.791 DEBUG 8388 --- [http-nio-8080-exec-6] p.p.blog.repository.BlogRepo.list        : ==> Parameters: 10(Integer), 10(Integer)
2017-09-14 23:02:13.795 DEBUG 8388 --- [http-nio-8080-exec-6] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 23:02:13.796 DEBUG 8388 --- [http-nio-8080-exec-6] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 11(String)
2017-09-14 23:02:13.799 DEBUG 8388 --- [http-nio-8080-exec-6] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 23:02:13.800 DEBUG 8388 --- [http-nio-8080-exec-6] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 23:02:13.800 DEBUG 8388 --- [http-nio-8080-exec-6] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 12(String)
2017-09-14 23:02:13.802 DEBUG 8388 --- [http-nio-8080-exec-6] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 23:02:13.803 DEBUG 8388 --- [http-nio-8080-exec-6] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 23:02:13.803 DEBUG 8388 --- [http-nio-8080-exec-6] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 27(String)
2017-09-14 23:02:13.804 DEBUG 8388 --- [http-nio-8080-exec-6] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 23:02:13.805 DEBUG 8388 --- [http-nio-8080-exec-6] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 23:02:13.805 DEBUG 8388 --- [http-nio-8080-exec-6] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 31(String)
2017-09-14 23:02:13.806 DEBUG 8388 --- [http-nio-8080-exec-6] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 23:02:13.807 DEBUG 8388 --- [http-nio-8080-exec-6] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 23:02:13.807 DEBUG 8388 --- [http-nio-8080-exec-6] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 28(String)
2017-09-14 23:02:13.808 DEBUG 8388 --- [http-nio-8080-exec-6] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 23:02:13.809 DEBUG 8388 --- [http-nio-8080-exec-6] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 23:02:13.809 DEBUG 8388 --- [http-nio-8080-exec-6] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 14(String)
2017-09-14 23:02:13.810 DEBUG 8388 --- [http-nio-8080-exec-6] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 23:02:13.810 DEBUG 8388 --- [http-nio-8080-exec-6] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 23:02:13.810 DEBUG 8388 --- [http-nio-8080-exec-6] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 1(String)
2017-09-14 23:02:13.811 DEBUG 8388 --- [http-nio-8080-exec-6] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 23:02:13.811 DEBUG 8388 --- [http-nio-8080-exec-6] p.p.blog.repository.BlogRepo.list        : <==      Total: 10
2017-09-14 23:02:13.816 DEBUG 8388 --- [http-nio-8080-exec-6] p.p.blog.repository.BlogRepo.getTotal    : ==>  Preparing: select count(*) from t_blog 
2017-09-14 23:02:13.816 DEBUG 8388 --- [http-nio-8080-exec-6] p.p.blog.repository.BlogRepo.getTotal    : ==> Parameters: 
2017-09-14 23:02:13.818 DEBUG 8388 --- [http-nio-8080-exec-6] p.p.blog.repository.BlogRepo.getTotal    : <==      Total: 1
2017-09-14 23:02:16.855 DEBUG 8388 --- [http-nio-8080-exec-8] p.p.blog.repository.BlogRepo.list        : ==>  Preparing: select * from t_blog order by releaseDate desc limit ?,? 
2017-09-14 23:02:16.856 DEBUG 8388 --- [http-nio-8080-exec-8] p.p.blog.repository.BlogRepo.list        : ==> Parameters: 10(Integer), 10(Integer)
2017-09-14 23:02:16.865 DEBUG 8388 --- [http-nio-8080-exec-8] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 23:02:16.866 DEBUG 8388 --- [http-nio-8080-exec-8] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 11(String)
2017-09-14 23:02:16.867 DEBUG 8388 --- [http-nio-8080-exec-8] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 23:02:16.868 DEBUG 8388 --- [http-nio-8080-exec-8] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 23:02:16.868 DEBUG 8388 --- [http-nio-8080-exec-8] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 12(String)
2017-09-14 23:02:16.870 DEBUG 8388 --- [http-nio-8080-exec-8] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 23:02:16.870 DEBUG 8388 --- [http-nio-8080-exec-8] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 23:02:16.870 DEBUG 8388 --- [http-nio-8080-exec-8] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 27(String)
2017-09-14 23:02:16.872 DEBUG 8388 --- [http-nio-8080-exec-8] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 23:02:16.873 DEBUG 8388 --- [http-nio-8080-exec-8] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 23:02:16.873 DEBUG 8388 --- [http-nio-8080-exec-8] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 31(String)
2017-09-14 23:02:16.874 DEBUG 8388 --- [http-nio-8080-exec-8] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 23:02:16.875 DEBUG 8388 --- [http-nio-8080-exec-8] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 23:02:16.875 DEBUG 8388 --- [http-nio-8080-exec-8] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 28(String)
2017-09-14 23:02:16.875 DEBUG 8388 --- [http-nio-8080-exec-8] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 23:02:16.876 DEBUG 8388 --- [http-nio-8080-exec-8] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 23:02:16.876 DEBUG 8388 --- [http-nio-8080-exec-8] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 14(String)
2017-09-14 23:02:16.876 DEBUG 8388 --- [http-nio-8080-exec-8] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 23:02:16.876 DEBUG 8388 --- [http-nio-8080-exec-8] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 23:02:16.876 DEBUG 8388 --- [http-nio-8080-exec-8] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 1(String)
2017-09-14 23:02:16.877 DEBUG 8388 --- [http-nio-8080-exec-8] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 23:02:16.877 DEBUG 8388 --- [http-nio-8080-exec-8] p.p.blog.repository.BlogRepo.list        : <==      Total: 10
2017-09-14 23:02:16.881 DEBUG 8388 --- [http-nio-8080-exec-8] p.p.blog.repository.BlogRepo.getTotal    : ==>  Preparing: select count(*) from t_blog 
2017-09-14 23:02:16.881 DEBUG 8388 --- [http-nio-8080-exec-8] p.p.blog.repository.BlogRepo.getTotal    : ==> Parameters: 
2017-09-14 23:02:16.883 DEBUG 8388 --- [http-nio-8080-exec-8] p.p.blog.repository.BlogRepo.getTotal    : <==      Total: 1
2017-09-14 23:02:22.712 DEBUG 8388 --- [http-nio-8080-exec-1] p.p.blog.repository.BlogRepo.list        : ==>  Preparing: select * from t_blog order by releaseDate desc limit ?,? 
2017-09-14 23:02:22.713 DEBUG 8388 --- [http-nio-8080-exec-1] p.p.blog.repository.BlogRepo.list        : ==> Parameters: 10(Integer), 10(Integer)
2017-09-14 23:02:22.717 DEBUG 8388 --- [http-nio-8080-exec-1] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 23:02:22.718 DEBUG 8388 --- [http-nio-8080-exec-1] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 11(String)
2017-09-14 23:02:22.719 DEBUG 8388 --- [http-nio-8080-exec-1] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 23:02:22.719 DEBUG 8388 --- [http-nio-8080-exec-1] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 23:02:22.720 DEBUG 8388 --- [http-nio-8080-exec-1] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 12(String)
2017-09-14 23:02:22.721 DEBUG 8388 --- [http-nio-8080-exec-1] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 23:02:22.721 DEBUG 8388 --- [http-nio-8080-exec-1] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 23:02:22.722 DEBUG 8388 --- [http-nio-8080-exec-1] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 27(String)
2017-09-14 23:02:22.723 DEBUG 8388 --- [http-nio-8080-exec-1] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 23:02:22.723 DEBUG 8388 --- [http-nio-8080-exec-1] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 23:02:22.723 DEBUG 8388 --- [http-nio-8080-exec-1] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 31(String)
2017-09-14 23:02:22.725 DEBUG 8388 --- [http-nio-8080-exec-1] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 23:02:22.725 DEBUG 8388 --- [http-nio-8080-exec-1] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 23:02:22.725 DEBUG 8388 --- [http-nio-8080-exec-1] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 28(String)
2017-09-14 23:02:22.726 DEBUG 8388 --- [http-nio-8080-exec-1] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 23:02:22.727 DEBUG 8388 --- [http-nio-8080-exec-1] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 23:02:22.727 DEBUG 8388 --- [http-nio-8080-exec-1] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 14(String)
2017-09-14 23:02:22.728 DEBUG 8388 --- [http-nio-8080-exec-1] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 23:02:22.729 DEBUG 8388 --- [http-nio-8080-exec-1] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 23:02:22.729 DEBUG 8388 --- [http-nio-8080-exec-1] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 1(String)
2017-09-14 23:02:22.732 DEBUG 8388 --- [http-nio-8080-exec-1] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 23:02:22.733 DEBUG 8388 --- [http-nio-8080-exec-1] p.p.blog.repository.BlogRepo.list        : <==      Total: 10
2017-09-14 23:02:22.737 DEBUG 8388 --- [http-nio-8080-exec-1] p.p.blog.repository.BlogRepo.getTotal    : ==>  Preparing: select count(*) from t_blog 
2017-09-14 23:02:22.738 DEBUG 8388 --- [http-nio-8080-exec-1] p.p.blog.repository.BlogRepo.getTotal    : ==> Parameters: 
2017-09-14 23:02:22.743 DEBUG 8388 --- [http-nio-8080-exec-1] p.p.blog.repository.BlogRepo.getTotal    : <==      Total: 1
2017-09-14 23:02:31.496 DEBUG 8388 --- [http-nio-8080-exec-9] p.p.blog.repository.BlogRepo.list        : ==>  Preparing: select * from t_blog order by releaseDate desc limit ?,? 
2017-09-14 23:02:31.498 DEBUG 8388 --- [http-nio-8080-exec-9] p.p.blog.repository.BlogRepo.list        : ==> Parameters: 10(Integer), 10(Integer)
2017-09-14 23:02:31.502 DEBUG 8388 --- [http-nio-8080-exec-9] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 23:02:31.503 DEBUG 8388 --- [http-nio-8080-exec-9] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 11(String)
2017-09-14 23:02:31.507 DEBUG 8388 --- [http-nio-8080-exec-9] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 23:02:31.508 DEBUG 8388 --- [http-nio-8080-exec-9] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 23:02:31.508 DEBUG 8388 --- [http-nio-8080-exec-9] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 12(String)
2017-09-14 23:02:31.510 DEBUG 8388 --- [http-nio-8080-exec-9] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 23:02:31.511 DEBUG 8388 --- [http-nio-8080-exec-9] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 23:02:31.511 DEBUG 8388 --- [http-nio-8080-exec-9] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 27(String)
2017-09-14 23:02:31.512 DEBUG 8388 --- [http-nio-8080-exec-9] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 23:02:31.513 DEBUG 8388 --- [http-nio-8080-exec-9] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 23:02:31.513 DEBUG 8388 --- [http-nio-8080-exec-9] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 31(String)
2017-09-14 23:02:31.519 DEBUG 8388 --- [http-nio-8080-exec-9] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 23:02:31.520 DEBUG 8388 --- [http-nio-8080-exec-9] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 23:02:31.520 DEBUG 8388 --- [http-nio-8080-exec-9] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 28(String)
2017-09-14 23:02:31.521 DEBUG 8388 --- [http-nio-8080-exec-9] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 23:02:31.522 DEBUG 8388 --- [http-nio-8080-exec-9] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 23:02:31.522 DEBUG 8388 --- [http-nio-8080-exec-9] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 14(String)
2017-09-14 23:02:31.529 DEBUG 8388 --- [http-nio-8080-exec-9] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 23:02:31.529 DEBUG 8388 --- [http-nio-8080-exec-9] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 23:02:31.530 DEBUG 8388 --- [http-nio-8080-exec-9] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 1(String)
2017-09-14 23:02:31.532 DEBUG 8388 --- [http-nio-8080-exec-9] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 23:02:31.536 DEBUG 8388 --- [http-nio-8080-exec-9] p.p.blog.repository.BlogRepo.list        : <==      Total: 10
2017-09-14 23:02:31.541 DEBUG 8388 --- [http-nio-8080-exec-9] p.p.blog.repository.BlogRepo.getTotal    : ==>  Preparing: select count(*) from t_blog 
2017-09-14 23:02:31.541 DEBUG 8388 --- [http-nio-8080-exec-9] p.p.blog.repository.BlogRepo.getTotal    : ==> Parameters: 
2017-09-14 23:02:31.542 DEBUG 8388 --- [http-nio-8080-exec-9] p.p.blog.repository.BlogRepo.getTotal    : <==      Total: 1
2017-09-14 23:03:06.326 DEBUG 8388 --- [http-nio-8080-exec-2] p.p.blog.repository.BlogRepo.list        : ==>  Preparing: select * from t_blog order by releaseDate desc limit ?,? 
2017-09-14 23:03:06.327 DEBUG 8388 --- [http-nio-8080-exec-2] p.p.blog.repository.BlogRepo.list        : ==> Parameters: 10(Integer), 10(Integer)
2017-09-14 23:03:06.332 DEBUG 8388 --- [http-nio-8080-exec-2] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 23:03:06.333 DEBUG 8388 --- [http-nio-8080-exec-2] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 11(String)
2017-09-14 23:03:06.334 DEBUG 8388 --- [http-nio-8080-exec-2] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 23:03:06.335 DEBUG 8388 --- [http-nio-8080-exec-2] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 23:03:06.353 DEBUG 8388 --- [http-nio-8080-exec-2] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 12(String)
2017-09-14 23:03:06.355 DEBUG 8388 --- [http-nio-8080-exec-2] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 23:03:06.355 DEBUG 8388 --- [http-nio-8080-exec-2] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 23:03:06.355 DEBUG 8388 --- [http-nio-8080-exec-2] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 27(String)
2017-09-14 23:03:06.357 DEBUG 8388 --- [http-nio-8080-exec-2] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 23:03:06.357 DEBUG 8388 --- [http-nio-8080-exec-2] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 23:03:06.358 DEBUG 8388 --- [http-nio-8080-exec-2] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 31(String)
2017-09-14 23:03:06.359 DEBUG 8388 --- [http-nio-8080-exec-2] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 23:03:06.359 DEBUG 8388 --- [http-nio-8080-exec-2] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 23:03:06.360 DEBUG 8388 --- [http-nio-8080-exec-2] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 28(String)
2017-09-14 23:03:06.362 DEBUG 8388 --- [http-nio-8080-exec-2] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 23:03:06.363 DEBUG 8388 --- [http-nio-8080-exec-2] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 23:03:06.363 DEBUG 8388 --- [http-nio-8080-exec-2] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 14(String)
2017-09-14 23:03:06.364 DEBUG 8388 --- [http-nio-8080-exec-2] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 23:03:06.365 DEBUG 8388 --- [http-nio-8080-exec-2] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 23:03:06.365 DEBUG 8388 --- [http-nio-8080-exec-2] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 1(String)
2017-09-14 23:03:06.366 DEBUG 8388 --- [http-nio-8080-exec-2] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 23:03:06.367 DEBUG 8388 --- [http-nio-8080-exec-2] p.p.blog.repository.BlogRepo.list        : <==      Total: 10
2017-09-14 23:03:06.373 DEBUG 8388 --- [http-nio-8080-exec-2] p.p.blog.repository.BlogRepo.getTotal    : ==>  Preparing: select count(*) from t_blog 
2017-09-14 23:03:06.373 DEBUG 8388 --- [http-nio-8080-exec-2] p.p.blog.repository.BlogRepo.getTotal    : ==> Parameters: 
2017-09-14 23:03:06.375 DEBUG 8388 --- [http-nio-8080-exec-2] p.p.blog.repository.BlogRepo.getTotal    : <==      Total: 1
2017-09-14 23:03:08.659 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.blog.repository.BlogRepo.list        : ==>  Preparing: select * from t_blog order by releaseDate desc limit ?,? 
2017-09-14 23:03:08.659 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.blog.repository.BlogRepo.list        : ==> Parameters: 10(Integer), 10(Integer)
2017-09-14 23:03:08.668 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 23:03:08.668 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 11(String)
2017-09-14 23:03:08.671 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 23:03:08.672 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 23:03:08.672 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 12(String)
2017-09-14 23:03:08.674 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 23:03:08.675 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 23:03:08.675 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 27(String)
2017-09-14 23:03:08.676 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 23:03:08.677 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 23:03:08.677 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 31(String)
2017-09-14 23:03:08.679 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 23:03:08.680 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 23:03:08.680 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 28(String)
2017-09-14 23:03:08.681 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 23:03:08.682 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 23:03:08.683 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 14(String)
2017-09-14 23:03:08.685 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 23:03:08.685 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 23:03:08.686 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 1(String)
2017-09-14 23:03:08.688 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 23:03:08.689 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.blog.repository.BlogRepo.list        : <==      Total: 10
2017-09-14 23:03:08.694 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.blog.repository.BlogRepo.getTotal    : ==>  Preparing: select count(*) from t_blog 
2017-09-14 23:03:08.694 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.blog.repository.BlogRepo.getTotal    : ==> Parameters: 
2017-09-14 23:03:08.696 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.blog.repository.BlogRepo.getTotal    : <==      Total: 1
2017-09-14 23:03:20.553 DEBUG 8388 --- [http-nio-8080-exec-1] p.p.blog.repository.BlogRepo.list        : ==>  Preparing: select * from t_blog order by releaseDate desc limit ?,? 
2017-09-14 23:03:20.554 DEBUG 8388 --- [http-nio-8080-exec-1] p.p.blog.repository.BlogRepo.list        : ==> Parameters: 10(Integer), 10(Integer)
2017-09-14 23:03:20.569 DEBUG 8388 --- [http-nio-8080-exec-1] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 23:03:20.570 DEBUG 8388 --- [http-nio-8080-exec-1] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 11(String)
2017-09-14 23:03:20.571 DEBUG 8388 --- [http-nio-8080-exec-1] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 23:03:20.572 DEBUG 8388 --- [http-nio-8080-exec-1] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 23:03:20.572 DEBUG 8388 --- [http-nio-8080-exec-1] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 12(String)
2017-09-14 23:03:20.573 DEBUG 8388 --- [http-nio-8080-exec-1] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 23:03:20.574 DEBUG 8388 --- [http-nio-8080-exec-1] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 23:03:20.574 DEBUG 8388 --- [http-nio-8080-exec-1] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 27(String)
2017-09-14 23:03:20.576 DEBUG 8388 --- [http-nio-8080-exec-1] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 23:03:20.576 DEBUG 8388 --- [http-nio-8080-exec-1] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 23:03:20.577 DEBUG 8388 --- [http-nio-8080-exec-1] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 31(String)
2017-09-14 23:03:20.579 DEBUG 8388 --- [http-nio-8080-exec-1] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 23:03:20.580 DEBUG 8388 --- [http-nio-8080-exec-1] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 23:03:20.580 DEBUG 8388 --- [http-nio-8080-exec-1] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 28(String)
2017-09-14 23:03:20.584 DEBUG 8388 --- [http-nio-8080-exec-1] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 23:03:20.584 DEBUG 8388 --- [http-nio-8080-exec-1] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 23:03:20.585 DEBUG 8388 --- [http-nio-8080-exec-1] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 14(String)
2017-09-14 23:03:20.587 DEBUG 8388 --- [http-nio-8080-exec-1] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 23:03:20.588 DEBUG 8388 --- [http-nio-8080-exec-1] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 23:03:20.589 DEBUG 8388 --- [http-nio-8080-exec-1] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 1(String)
2017-09-14 23:03:20.593 DEBUG 8388 --- [http-nio-8080-exec-1] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 23:03:20.593 DEBUG 8388 --- [http-nio-8080-exec-1] p.p.blog.repository.BlogRepo.list        : <==      Total: 10
2017-09-14 23:03:20.597 DEBUG 8388 --- [http-nio-8080-exec-1] p.p.blog.repository.BlogRepo.getTotal    : ==>  Preparing: select count(*) from t_blog 
2017-09-14 23:03:20.598 DEBUG 8388 --- [http-nio-8080-exec-1] p.p.blog.repository.BlogRepo.getTotal    : ==> Parameters: 
2017-09-14 23:03:20.600 DEBUG 8388 --- [http-nio-8080-exec-1] p.p.blog.repository.BlogRepo.getTotal    : <==      Total: 1
2017-09-14 23:03:35.814 DEBUG 8388 --- [http-nio-8080-exec-9] p.p.blog.repository.BlogRepo.list        : ==>  Preparing: select * from t_blog order by releaseDate desc limit ?,? 
2017-09-14 23:03:35.814 DEBUG 8388 --- [http-nio-8080-exec-9] p.p.blog.repository.BlogRepo.list        : ==> Parameters: 10(Integer), 10(Integer)
2017-09-14 23:03:35.819 DEBUG 8388 --- [http-nio-8080-exec-9] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 23:03:35.819 DEBUG 8388 --- [http-nio-8080-exec-9] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 11(String)
2017-09-14 23:03:35.820 DEBUG 8388 --- [http-nio-8080-exec-9] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 23:03:35.821 DEBUG 8388 --- [http-nio-8080-exec-9] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 23:03:35.821 DEBUG 8388 --- [http-nio-8080-exec-9] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 12(String)
2017-09-14 23:03:35.823 DEBUG 8388 --- [http-nio-8080-exec-9] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 23:03:35.823 DEBUG 8388 --- [http-nio-8080-exec-9] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 23:03:35.824 DEBUG 8388 --- [http-nio-8080-exec-9] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 27(String)
2017-09-14 23:03:35.825 DEBUG 8388 --- [http-nio-8080-exec-9] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 23:03:35.826 DEBUG 8388 --- [http-nio-8080-exec-9] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 23:03:35.826 DEBUG 8388 --- [http-nio-8080-exec-9] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 31(String)
2017-09-14 23:03:35.833 DEBUG 8388 --- [http-nio-8080-exec-9] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 23:03:35.834 DEBUG 8388 --- [http-nio-8080-exec-9] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 23:03:35.834 DEBUG 8388 --- [http-nio-8080-exec-9] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 28(String)
2017-09-14 23:03:35.838 DEBUG 8388 --- [http-nio-8080-exec-9] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 23:03:35.838 DEBUG 8388 --- [http-nio-8080-exec-9] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 23:03:35.839 DEBUG 8388 --- [http-nio-8080-exec-9] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 14(String)
2017-09-14 23:03:35.840 DEBUG 8388 --- [http-nio-8080-exec-9] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 23:03:35.840 DEBUG 8388 --- [http-nio-8080-exec-9] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 23:03:35.841 DEBUG 8388 --- [http-nio-8080-exec-9] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 1(String)
2017-09-14 23:03:35.842 DEBUG 8388 --- [http-nio-8080-exec-9] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 23:03:35.843 DEBUG 8388 --- [http-nio-8080-exec-9] p.p.blog.repository.BlogRepo.list        : <==      Total: 10
2017-09-14 23:03:35.846 DEBUG 8388 --- [http-nio-8080-exec-9] p.p.blog.repository.BlogRepo.getTotal    : ==>  Preparing: select count(*) from t_blog 
2017-09-14 23:03:35.847 DEBUG 8388 --- [http-nio-8080-exec-9] p.p.blog.repository.BlogRepo.getTotal    : ==> Parameters: 
2017-09-14 23:03:35.848 DEBUG 8388 --- [http-nio-8080-exec-9] p.p.blog.repository.BlogRepo.getTotal    : <==      Total: 1
2017-09-14 23:03:57.720 DEBUG 8388 --- [http-nio-8080-exec-2] p.p.blog.repository.BlogRepo.list        : ==>  Preparing: select * from t_blog order by releaseDate desc limit ?,? 
2017-09-14 23:03:57.720 DEBUG 8388 --- [http-nio-8080-exec-2] p.p.blog.repository.BlogRepo.list        : ==> Parameters: 10(Integer), 10(Integer)
2017-09-14 23:03:57.723 DEBUG 8388 --- [http-nio-8080-exec-2] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 23:03:57.724 DEBUG 8388 --- [http-nio-8080-exec-2] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 11(String)
2017-09-14 23:03:57.726 DEBUG 8388 --- [http-nio-8080-exec-2] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 23:03:57.726 DEBUG 8388 --- [http-nio-8080-exec-2] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 23:03:57.727 DEBUG 8388 --- [http-nio-8080-exec-2] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 12(String)
2017-09-14 23:03:57.728 DEBUG 8388 --- [http-nio-8080-exec-2] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 23:03:57.728 DEBUG 8388 --- [http-nio-8080-exec-2] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 23:03:57.728 DEBUG 8388 --- [http-nio-8080-exec-2] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 27(String)
2017-09-14 23:03:57.730 DEBUG 8388 --- [http-nio-8080-exec-2] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 23:03:57.730 DEBUG 8388 --- [http-nio-8080-exec-2] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 23:03:57.730 DEBUG 8388 --- [http-nio-8080-exec-2] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 31(String)
2017-09-14 23:03:57.732 DEBUG 8388 --- [http-nio-8080-exec-2] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 23:03:57.732 DEBUG 8388 --- [http-nio-8080-exec-2] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 23:03:57.733 DEBUG 8388 --- [http-nio-8080-exec-2] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 28(String)
2017-09-14 23:03:57.734 DEBUG 8388 --- [http-nio-8080-exec-2] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 23:03:57.735 DEBUG 8388 --- [http-nio-8080-exec-2] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 23:03:57.736 DEBUG 8388 --- [http-nio-8080-exec-2] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 14(String)
2017-09-14 23:03:57.737 DEBUG 8388 --- [http-nio-8080-exec-2] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 23:03:57.739 DEBUG 8388 --- [http-nio-8080-exec-2] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 23:03:57.739 DEBUG 8388 --- [http-nio-8080-exec-2] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 1(String)
2017-09-14 23:03:57.740 DEBUG 8388 --- [http-nio-8080-exec-2] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 23:03:57.742 DEBUG 8388 --- [http-nio-8080-exec-2] p.p.blog.repository.BlogRepo.list        : <==      Total: 10
2017-09-14 23:03:57.750 DEBUG 8388 --- [http-nio-8080-exec-2] p.p.blog.repository.BlogRepo.getTotal    : ==>  Preparing: select count(*) from t_blog 
2017-09-14 23:03:57.750 DEBUG 8388 --- [http-nio-8080-exec-2] p.p.blog.repository.BlogRepo.getTotal    : ==> Parameters: 
2017-09-14 23:03:57.753 DEBUG 8388 --- [http-nio-8080-exec-2] p.p.blog.repository.BlogRepo.getTotal    : <==      Total: 1
2017-09-14 23:04:52.813 DEBUG 8388 --- [http-nio-8080-exec-10] p.p.blog.repository.BlogRepo.list        : ==>  Preparing: select * from t_blog order by releaseDate desc limit ?,? 
2017-09-14 23:04:52.813 DEBUG 8388 --- [http-nio-8080-exec-10] p.p.blog.repository.BlogRepo.list        : ==> Parameters: 10(Integer), 10(Integer)
2017-09-14 23:04:52.816 DEBUG 8388 --- [http-nio-8080-exec-10] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 23:04:52.817 DEBUG 8388 --- [http-nio-8080-exec-10] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 11(String)
2017-09-14 23:04:52.818 DEBUG 8388 --- [http-nio-8080-exec-10] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 23:04:52.818 DEBUG 8388 --- [http-nio-8080-exec-10] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 23:04:52.818 DEBUG 8388 --- [http-nio-8080-exec-10] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 12(String)
2017-09-14 23:04:52.820 DEBUG 8388 --- [http-nio-8080-exec-10] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 23:04:52.820 DEBUG 8388 --- [http-nio-8080-exec-10] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 23:04:52.821 DEBUG 8388 --- [http-nio-8080-exec-10] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 27(String)
2017-09-14 23:04:52.822 DEBUG 8388 --- [http-nio-8080-exec-10] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 23:04:52.823 DEBUG 8388 --- [http-nio-8080-exec-10] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 23:04:52.823 DEBUG 8388 --- [http-nio-8080-exec-10] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 31(String)
2017-09-14 23:04:52.824 DEBUG 8388 --- [http-nio-8080-exec-10] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 23:04:52.825 DEBUG 8388 --- [http-nio-8080-exec-10] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 23:04:52.825 DEBUG 8388 --- [http-nio-8080-exec-10] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 28(String)
2017-09-14 23:04:52.826 DEBUG 8388 --- [http-nio-8080-exec-10] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 23:04:52.827 DEBUG 8388 --- [http-nio-8080-exec-10] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 23:04:52.827 DEBUG 8388 --- [http-nio-8080-exec-10] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 14(String)
2017-09-14 23:04:52.828 DEBUG 8388 --- [http-nio-8080-exec-10] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 23:04:52.828 DEBUG 8388 --- [http-nio-8080-exec-10] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 23:04:52.828 DEBUG 8388 --- [http-nio-8080-exec-10] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 1(String)
2017-09-14 23:04:52.830 DEBUG 8388 --- [http-nio-8080-exec-10] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 23:04:52.831 DEBUG 8388 --- [http-nio-8080-exec-10] p.p.blog.repository.BlogRepo.list        : <==      Total: 10
2017-09-14 23:04:52.835 DEBUG 8388 --- [http-nio-8080-exec-10] p.p.blog.repository.BlogRepo.getTotal    : ==>  Preparing: select count(*) from t_blog 
2017-09-14 23:04:52.835 DEBUG 8388 --- [http-nio-8080-exec-10] p.p.blog.repository.BlogRepo.getTotal    : ==> Parameters: 
2017-09-14 23:04:52.836 DEBUG 8388 --- [http-nio-8080-exec-10] p.p.blog.repository.BlogRepo.getTotal    : <==      Total: 1
2017-09-14 23:05:03.124 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.blog.repository.BlogRepo.list        : ==>  Preparing: select * from t_blog order by releaseDate desc limit ?,? 
2017-09-14 23:05:03.126 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.blog.repository.BlogRepo.list        : ==> Parameters: 10(Integer), 10(Integer)
2017-09-14 23:05:03.148 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 23:05:03.149 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 11(String)
2017-09-14 23:05:03.151 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 23:05:03.152 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 23:05:03.152 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 12(String)
2017-09-14 23:05:03.155 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 23:05:03.156 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 23:05:03.157 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 27(String)
2017-09-14 23:05:03.159 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 23:05:03.161 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 23:05:03.161 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 31(String)
2017-09-14 23:05:03.167 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 23:05:03.168 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 23:05:03.168 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 28(String)
2017-09-14 23:05:03.169 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 23:05:03.169 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 23:05:03.169 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 14(String)
2017-09-14 23:05:03.170 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 23:05:03.171 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 23:05:03.171 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 1(String)
2017-09-14 23:05:03.172 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 23:05:03.173 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.blog.repository.BlogRepo.list        : <==      Total: 10
2017-09-14 23:05:03.177 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.blog.repository.BlogRepo.getTotal    : ==>  Preparing: select count(*) from t_blog 
2017-09-14 23:05:03.178 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.blog.repository.BlogRepo.getTotal    : ==> Parameters: 
2017-09-14 23:05:03.179 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.blog.repository.BlogRepo.getTotal    : <==      Total: 1
2017-09-14 23:05:10.756 DEBUG 8388 --- [http-nio-8080-exec-1] p.p.blog.repository.BlogRepo.list        : ==>  Preparing: select * from t_blog order by releaseDate desc limit ?,? 
2017-09-14 23:05:10.757 DEBUG 8388 --- [http-nio-8080-exec-1] p.p.blog.repository.BlogRepo.list        : ==> Parameters: 10(Integer), 10(Integer)
2017-09-14 23:05:10.760 DEBUG 8388 --- [http-nio-8080-exec-1] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 23:05:10.760 DEBUG 8388 --- [http-nio-8080-exec-1] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 11(String)
2017-09-14 23:05:10.762 DEBUG 8388 --- [http-nio-8080-exec-1] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 23:05:10.762 DEBUG 8388 --- [http-nio-8080-exec-1] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 23:05:10.763 DEBUG 8388 --- [http-nio-8080-exec-1] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 12(String)
2017-09-14 23:05:10.766 DEBUG 8388 --- [http-nio-8080-exec-1] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 23:05:10.767 DEBUG 8388 --- [http-nio-8080-exec-1] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 23:05:10.767 DEBUG 8388 --- [http-nio-8080-exec-1] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 27(String)
2017-09-14 23:05:10.768 DEBUG 8388 --- [http-nio-8080-exec-1] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 23:05:10.769 DEBUG 8388 --- [http-nio-8080-exec-1] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 23:05:10.769 DEBUG 8388 --- [http-nio-8080-exec-1] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 31(String)
2017-09-14 23:05:10.771 DEBUG 8388 --- [http-nio-8080-exec-1] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 23:05:10.771 DEBUG 8388 --- [http-nio-8080-exec-1] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 23:05:10.771 DEBUG 8388 --- [http-nio-8080-exec-1] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 28(String)
2017-09-14 23:05:10.772 DEBUG 8388 --- [http-nio-8080-exec-1] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 23:05:10.773 DEBUG 8388 --- [http-nio-8080-exec-1] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 23:05:10.773 DEBUG 8388 --- [http-nio-8080-exec-1] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 14(String)
2017-09-14 23:05:10.776 DEBUG 8388 --- [http-nio-8080-exec-1] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 23:05:10.777 DEBUG 8388 --- [http-nio-8080-exec-1] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 23:05:10.778 DEBUG 8388 --- [http-nio-8080-exec-1] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 1(String)
2017-09-14 23:05:10.779 DEBUG 8388 --- [http-nio-8080-exec-1] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 23:05:10.780 DEBUG 8388 --- [http-nio-8080-exec-1] p.p.blog.repository.BlogRepo.list        : <==      Total: 10
2017-09-14 23:05:10.785 DEBUG 8388 --- [http-nio-8080-exec-1] p.p.blog.repository.BlogRepo.getTotal    : ==>  Preparing: select count(*) from t_blog 
2017-09-14 23:05:10.785 DEBUG 8388 --- [http-nio-8080-exec-1] p.p.blog.repository.BlogRepo.getTotal    : ==> Parameters: 
2017-09-14 23:05:10.786 DEBUG 8388 --- [http-nio-8080-exec-1] p.p.blog.repository.BlogRepo.getTotal    : <==      Total: 1
2017-09-14 23:05:29.583 DEBUG 8388 --- [http-nio-8080-exec-3] p.p.blog.repository.BlogRepo.list        : ==>  Preparing: select * from t_blog order by releaseDate desc limit ?,? 
2017-09-14 23:05:29.584 DEBUG 8388 --- [http-nio-8080-exec-3] p.p.blog.repository.BlogRepo.list        : ==> Parameters: 10(Integer), 10(Integer)
2017-09-14 23:05:29.587 DEBUG 8388 --- [http-nio-8080-exec-3] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 23:05:29.588 DEBUG 8388 --- [http-nio-8080-exec-3] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 11(String)
2017-09-14 23:05:29.589 DEBUG 8388 --- [http-nio-8080-exec-3] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 23:05:29.589 DEBUG 8388 --- [http-nio-8080-exec-3] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 23:05:29.590 DEBUG 8388 --- [http-nio-8080-exec-3] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 12(String)
2017-09-14 23:05:29.591 DEBUG 8388 --- [http-nio-8080-exec-3] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 23:05:29.592 DEBUG 8388 --- [http-nio-8080-exec-3] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 23:05:29.592 DEBUG 8388 --- [http-nio-8080-exec-3] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 27(String)
2017-09-14 23:05:29.593 DEBUG 8388 --- [http-nio-8080-exec-3] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 23:05:29.594 DEBUG 8388 --- [http-nio-8080-exec-3] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 23:05:29.594 DEBUG 8388 --- [http-nio-8080-exec-3] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 31(String)
2017-09-14 23:05:29.595 DEBUG 8388 --- [http-nio-8080-exec-3] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 23:05:29.596 DEBUG 8388 --- [http-nio-8080-exec-3] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 23:05:29.596 DEBUG 8388 --- [http-nio-8080-exec-3] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 28(String)
2017-09-14 23:05:29.597 DEBUG 8388 --- [http-nio-8080-exec-3] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 23:05:29.598 DEBUG 8388 --- [http-nio-8080-exec-3] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 23:05:29.598 DEBUG 8388 --- [http-nio-8080-exec-3] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 14(String)
2017-09-14 23:05:29.599 DEBUG 8388 --- [http-nio-8080-exec-3] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 23:05:29.600 DEBUG 8388 --- [http-nio-8080-exec-3] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 23:05:29.600 DEBUG 8388 --- [http-nio-8080-exec-3] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 1(String)
2017-09-14 23:05:29.606 DEBUG 8388 --- [http-nio-8080-exec-3] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 23:05:29.606 DEBUG 8388 --- [http-nio-8080-exec-3] p.p.blog.repository.BlogRepo.list        : <==      Total: 10
2017-09-14 23:05:29.614 DEBUG 8388 --- [http-nio-8080-exec-3] p.p.blog.repository.BlogRepo.getTotal    : ==>  Preparing: select count(*) from t_blog 
2017-09-14 23:05:29.614 DEBUG 8388 --- [http-nio-8080-exec-3] p.p.blog.repository.BlogRepo.getTotal    : ==> Parameters: 
2017-09-14 23:05:29.615 DEBUG 8388 --- [http-nio-8080-exec-3] p.p.blog.repository.BlogRepo.getTotal    : <==      Total: 1
2017-09-14 23:05:49.675 DEBUG 8388 --- [http-nio-8080-exec-10] p.p.blog.repository.BlogRepo.list        : ==>  Preparing: select * from t_blog order by releaseDate desc limit ?,? 
2017-09-14 23:05:49.676 DEBUG 8388 --- [http-nio-8080-exec-10] p.p.blog.repository.BlogRepo.list        : ==> Parameters: 10(Integer), 10(Integer)
2017-09-14 23:05:49.680 DEBUG 8388 --- [http-nio-8080-exec-10] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 23:05:49.681 DEBUG 8388 --- [http-nio-8080-exec-10] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 11(String)
2017-09-14 23:05:49.682 DEBUG 8388 --- [http-nio-8080-exec-10] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 23:05:49.682 DEBUG 8388 --- [http-nio-8080-exec-10] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 23:05:49.683 DEBUG 8388 --- [http-nio-8080-exec-10] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 12(String)
2017-09-14 23:05:49.684 DEBUG 8388 --- [http-nio-8080-exec-10] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 23:05:49.684 DEBUG 8388 --- [http-nio-8080-exec-10] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 23:05:49.684 DEBUG 8388 --- [http-nio-8080-exec-10] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 27(String)
2017-09-14 23:05:49.686 DEBUG 8388 --- [http-nio-8080-exec-10] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 23:05:49.686 DEBUG 8388 --- [http-nio-8080-exec-10] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 23:05:49.687 DEBUG 8388 --- [http-nio-8080-exec-10] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 31(String)
2017-09-14 23:05:49.688 DEBUG 8388 --- [http-nio-8080-exec-10] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 23:05:49.689 DEBUG 8388 --- [http-nio-8080-exec-10] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 23:05:49.689 DEBUG 8388 --- [http-nio-8080-exec-10] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 28(String)
2017-09-14 23:05:49.691 DEBUG 8388 --- [http-nio-8080-exec-10] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 23:05:49.692 DEBUG 8388 --- [http-nio-8080-exec-10] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 23:05:49.692 DEBUG 8388 --- [http-nio-8080-exec-10] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 14(String)
2017-09-14 23:05:49.694 DEBUG 8388 --- [http-nio-8080-exec-10] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 23:05:49.694 DEBUG 8388 --- [http-nio-8080-exec-10] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 23:05:49.695 DEBUG 8388 --- [http-nio-8080-exec-10] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 1(String)
2017-09-14 23:05:49.696 DEBUG 8388 --- [http-nio-8080-exec-10] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 23:05:49.697 DEBUG 8388 --- [http-nio-8080-exec-10] p.p.blog.repository.BlogRepo.list        : <==      Total: 10
2017-09-14 23:05:49.701 DEBUG 8388 --- [http-nio-8080-exec-10] p.p.blog.repository.BlogRepo.getTotal    : ==>  Preparing: select count(*) from t_blog 
2017-09-14 23:05:49.702 DEBUG 8388 --- [http-nio-8080-exec-10] p.p.blog.repository.BlogRepo.getTotal    : ==> Parameters: 
2017-09-14 23:05:49.703 DEBUG 8388 --- [http-nio-8080-exec-10] p.p.blog.repository.BlogRepo.getTotal    : <==      Total: 1
2017-09-14 23:05:57.312 DEBUG 8388 --- [http-nio-8080-exec-6] p.p.blog.repository.BlogRepo.list        : ==>  Preparing: select * from t_blog order by releaseDate desc limit ?,? 
2017-09-14 23:05:57.318 DEBUG 8388 --- [http-nio-8080-exec-6] p.p.blog.repository.BlogRepo.list        : ==> Parameters: 10(Integer), 10(Integer)
2017-09-14 23:05:57.328 DEBUG 8388 --- [http-nio-8080-exec-6] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 23:05:57.329 DEBUG 8388 --- [http-nio-8080-exec-6] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 11(String)
2017-09-14 23:05:57.330 DEBUG 8388 --- [http-nio-8080-exec-6] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 23:05:57.331 DEBUG 8388 --- [http-nio-8080-exec-6] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 23:05:57.331 DEBUG 8388 --- [http-nio-8080-exec-6] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 12(String)
2017-09-14 23:05:57.333 DEBUG 8388 --- [http-nio-8080-exec-6] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 23:05:57.334 DEBUG 8388 --- [http-nio-8080-exec-6] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 23:05:57.334 DEBUG 8388 --- [http-nio-8080-exec-6] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 27(String)
2017-09-14 23:05:57.335 DEBUG 8388 --- [http-nio-8080-exec-6] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 23:05:57.336 DEBUG 8388 --- [http-nio-8080-exec-6] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 23:05:57.337 DEBUG 8388 --- [http-nio-8080-exec-6] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 31(String)
2017-09-14 23:05:57.338 DEBUG 8388 --- [http-nio-8080-exec-6] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 23:05:57.339 DEBUG 8388 --- [http-nio-8080-exec-6] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 23:05:57.339 DEBUG 8388 --- [http-nio-8080-exec-6] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 28(String)
2017-09-14 23:05:57.341 DEBUG 8388 --- [http-nio-8080-exec-6] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 23:05:57.341 DEBUG 8388 --- [http-nio-8080-exec-6] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 23:05:57.341 DEBUG 8388 --- [http-nio-8080-exec-6] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 14(String)
2017-09-14 23:05:57.343 DEBUG 8388 --- [http-nio-8080-exec-6] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 23:05:57.343 DEBUG 8388 --- [http-nio-8080-exec-6] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 23:05:57.344 DEBUG 8388 --- [http-nio-8080-exec-6] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 1(String)
2017-09-14 23:05:57.345 DEBUG 8388 --- [http-nio-8080-exec-6] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 23:05:57.345 DEBUG 8388 --- [http-nio-8080-exec-6] p.p.blog.repository.BlogRepo.list        : <==      Total: 10
2017-09-14 23:05:57.350 DEBUG 8388 --- [http-nio-8080-exec-6] p.p.blog.repository.BlogRepo.getTotal    : ==>  Preparing: select count(*) from t_blog 
2017-09-14 23:05:57.350 DEBUG 8388 --- [http-nio-8080-exec-6] p.p.blog.repository.BlogRepo.getTotal    : ==> Parameters: 
2017-09-14 23:05:57.364 DEBUG 8388 --- [http-nio-8080-exec-6] p.p.blog.repository.BlogRepo.getTotal    : <==      Total: 1
2017-09-14 23:06:27.534 DEBUG 8388 --- [http-nio-8080-exec-1] p.p.blog.repository.BlogRepo.list        : ==>  Preparing: select * from t_blog order by releaseDate desc limit ?,? 
2017-09-14 23:06:27.534 DEBUG 8388 --- [http-nio-8080-exec-1] p.p.blog.repository.BlogRepo.list        : ==> Parameters: 10(Integer), 10(Integer)
2017-09-14 23:06:27.539 DEBUG 8388 --- [http-nio-8080-exec-1] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 23:06:27.540 DEBUG 8388 --- [http-nio-8080-exec-1] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 11(String)
2017-09-14 23:06:27.540 DEBUG 8388 --- [http-nio-8080-exec-1] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 23:06:27.541 DEBUG 8388 --- [http-nio-8080-exec-1] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 23:06:27.541 DEBUG 8388 --- [http-nio-8080-exec-1] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 12(String)
2017-09-14 23:06:27.541 DEBUG 8388 --- [http-nio-8080-exec-1] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 23:06:27.542 DEBUG 8388 --- [http-nio-8080-exec-1] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 23:06:27.542 DEBUG 8388 --- [http-nio-8080-exec-1] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 27(String)
2017-09-14 23:06:27.546 DEBUG 8388 --- [http-nio-8080-exec-1] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 23:06:27.546 DEBUG 8388 --- [http-nio-8080-exec-1] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 23:06:27.547 DEBUG 8388 --- [http-nio-8080-exec-1] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 31(String)
2017-09-14 23:06:27.548 DEBUG 8388 --- [http-nio-8080-exec-1] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 23:06:27.548 DEBUG 8388 --- [http-nio-8080-exec-1] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 23:06:27.548 DEBUG 8388 --- [http-nio-8080-exec-1] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 28(String)
2017-09-14 23:06:27.549 DEBUG 8388 --- [http-nio-8080-exec-1] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 23:06:27.550 DEBUG 8388 --- [http-nio-8080-exec-1] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 23:06:27.550 DEBUG 8388 --- [http-nio-8080-exec-1] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 14(String)
2017-09-14 23:06:27.551 DEBUG 8388 --- [http-nio-8080-exec-1] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 23:06:27.551 DEBUG 8388 --- [http-nio-8080-exec-1] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 23:06:27.551 DEBUG 8388 --- [http-nio-8080-exec-1] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 1(String)
2017-09-14 23:06:27.552 DEBUG 8388 --- [http-nio-8080-exec-1] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 23:06:27.553 DEBUG 8388 --- [http-nio-8080-exec-1] p.p.blog.repository.BlogRepo.list        : <==      Total: 10
2017-09-14 23:06:27.557 DEBUG 8388 --- [http-nio-8080-exec-1] p.p.blog.repository.BlogRepo.getTotal    : ==>  Preparing: select count(*) from t_blog 
2017-09-14 23:06:27.557 DEBUG 8388 --- [http-nio-8080-exec-1] p.p.blog.repository.BlogRepo.getTotal    : ==> Parameters: 
2017-09-14 23:06:27.559 DEBUG 8388 --- [http-nio-8080-exec-1] p.p.blog.repository.BlogRepo.getTotal    : <==      Total: 1
2017-09-14 23:06:38.179 DEBUG 8388 --- [http-nio-8080-exec-9] p.p.blog.repository.BlogRepo.list        : ==>  Preparing: select * from t_blog order by releaseDate desc limit ?,? 
2017-09-14 23:06:38.180 DEBUG 8388 --- [http-nio-8080-exec-9] p.p.blog.repository.BlogRepo.list        : ==> Parameters: 10(Integer), 10(Integer)
2017-09-14 23:06:38.183 DEBUG 8388 --- [http-nio-8080-exec-9] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 23:06:38.183 DEBUG 8388 --- [http-nio-8080-exec-9] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 11(String)
2017-09-14 23:06:38.186 DEBUG 8388 --- [http-nio-8080-exec-9] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 23:06:38.187 DEBUG 8388 --- [http-nio-8080-exec-9] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 23:06:38.187 DEBUG 8388 --- [http-nio-8080-exec-9] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 12(String)
2017-09-14 23:06:38.188 DEBUG 8388 --- [http-nio-8080-exec-9] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 23:06:38.189 DEBUG 8388 --- [http-nio-8080-exec-9] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 23:06:38.189 DEBUG 8388 --- [http-nio-8080-exec-9] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 27(String)
2017-09-14 23:06:38.192 DEBUG 8388 --- [http-nio-8080-exec-9] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 23:06:38.192 DEBUG 8388 --- [http-nio-8080-exec-9] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 23:06:38.192 DEBUG 8388 --- [http-nio-8080-exec-9] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 31(String)
2017-09-14 23:06:38.193 DEBUG 8388 --- [http-nio-8080-exec-9] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 23:06:38.193 DEBUG 8388 --- [http-nio-8080-exec-9] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 23:06:38.193 DEBUG 8388 --- [http-nio-8080-exec-9] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 28(String)
2017-09-14 23:06:38.194 DEBUG 8388 --- [http-nio-8080-exec-9] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 23:06:38.194 DEBUG 8388 --- [http-nio-8080-exec-9] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 23:06:38.195 DEBUG 8388 --- [http-nio-8080-exec-9] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 14(String)
2017-09-14 23:06:38.196 DEBUG 8388 --- [http-nio-8080-exec-9] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 23:06:38.197 DEBUG 8388 --- [http-nio-8080-exec-9] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 23:06:38.197 DEBUG 8388 --- [http-nio-8080-exec-9] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 1(String)
2017-09-14 23:06:38.198 DEBUG 8388 --- [http-nio-8080-exec-9] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 23:06:38.198 DEBUG 8388 --- [http-nio-8080-exec-9] p.p.blog.repository.BlogRepo.list        : <==      Total: 10
2017-09-14 23:06:38.202 DEBUG 8388 --- [http-nio-8080-exec-9] p.p.blog.repository.BlogRepo.getTotal    : ==>  Preparing: select count(*) from t_blog 
2017-09-14 23:06:38.202 DEBUG 8388 --- [http-nio-8080-exec-9] p.p.blog.repository.BlogRepo.getTotal    : ==> Parameters: 
2017-09-14 23:06:38.203 DEBUG 8388 --- [http-nio-8080-exec-9] p.p.blog.repository.BlogRepo.getTotal    : <==      Total: 1
2017-09-14 23:06:57.230 DEBUG 8388 --- [http-nio-8080-exec-4] p.p.blog.repository.BlogRepo.list        : ==>  Preparing: select * from t_blog order by releaseDate desc limit ?,? 
2017-09-14 23:06:57.230 DEBUG 8388 --- [http-nio-8080-exec-4] p.p.blog.repository.BlogRepo.list        : ==> Parameters: 10(Integer), 10(Integer)
2017-09-14 23:06:57.234 DEBUG 8388 --- [http-nio-8080-exec-4] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 23:06:57.241 DEBUG 8388 --- [http-nio-8080-exec-4] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 11(String)
2017-09-14 23:06:57.243 DEBUG 8388 --- [http-nio-8080-exec-4] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 23:06:57.243 DEBUG 8388 --- [http-nio-8080-exec-4] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 23:06:57.243 DEBUG 8388 --- [http-nio-8080-exec-4] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 12(String)
2017-09-14 23:06:57.244 DEBUG 8388 --- [http-nio-8080-exec-4] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 23:06:57.244 DEBUG 8388 --- [http-nio-8080-exec-4] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 23:06:57.245 DEBUG 8388 --- [http-nio-8080-exec-4] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 27(String)
2017-09-14 23:06:57.245 DEBUG 8388 --- [http-nio-8080-exec-4] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 23:06:57.246 DEBUG 8388 --- [http-nio-8080-exec-4] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 23:06:57.246 DEBUG 8388 --- [http-nio-8080-exec-4] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 31(String)
2017-09-14 23:06:57.247 DEBUG 8388 --- [http-nio-8080-exec-4] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 23:06:57.247 DEBUG 8388 --- [http-nio-8080-exec-4] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 23:06:57.247 DEBUG 8388 --- [http-nio-8080-exec-4] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 28(String)
2017-09-14 23:06:57.248 DEBUG 8388 --- [http-nio-8080-exec-4] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 23:06:57.248 DEBUG 8388 --- [http-nio-8080-exec-4] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 23:06:57.248 DEBUG 8388 --- [http-nio-8080-exec-4] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 14(String)
2017-09-14 23:06:57.249 DEBUG 8388 --- [http-nio-8080-exec-4] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 23:06:57.249 DEBUG 8388 --- [http-nio-8080-exec-4] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 23:06:57.249 DEBUG 8388 --- [http-nio-8080-exec-4] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 1(String)
2017-09-14 23:06:57.250 DEBUG 8388 --- [http-nio-8080-exec-4] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 23:06:57.250 DEBUG 8388 --- [http-nio-8080-exec-4] p.p.blog.repository.BlogRepo.list        : <==      Total: 10
2017-09-14 23:06:57.254 DEBUG 8388 --- [http-nio-8080-exec-4] p.p.blog.repository.BlogRepo.getTotal    : ==>  Preparing: select count(*) from t_blog 
2017-09-14 23:06:57.254 DEBUG 8388 --- [http-nio-8080-exec-4] p.p.blog.repository.BlogRepo.getTotal    : ==> Parameters: 
2017-09-14 23:06:57.256 DEBUG 8388 --- [http-nio-8080-exec-4] p.p.blog.repository.BlogRepo.getTotal    : <==      Total: 1
2017-09-14 23:06:59.574 DEBUG 8388 --- [http-nio-8080-exec-2] p.p.blog.repository.BlogRepo.list        : ==>  Preparing: select * from t_blog order by releaseDate desc limit ?,? 
2017-09-14 23:06:59.575 DEBUG 8388 --- [http-nio-8080-exec-2] p.p.blog.repository.BlogRepo.list        : ==> Parameters: 10(Integer), 10(Integer)
2017-09-14 23:06:59.579 DEBUG 8388 --- [http-nio-8080-exec-2] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 23:06:59.579 DEBUG 8388 --- [http-nio-8080-exec-2] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 11(String)
2017-09-14 23:06:59.581 DEBUG 8388 --- [http-nio-8080-exec-2] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 23:06:59.582 DEBUG 8388 --- [http-nio-8080-exec-2] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 23:06:59.583 DEBUG 8388 --- [http-nio-8080-exec-2] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 12(String)
2017-09-14 23:06:59.584 DEBUG 8388 --- [http-nio-8080-exec-2] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 23:06:59.585 DEBUG 8388 --- [http-nio-8080-exec-2] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 23:06:59.585 DEBUG 8388 --- [http-nio-8080-exec-2] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 27(String)
2017-09-14 23:06:59.586 DEBUG 8388 --- [http-nio-8080-exec-2] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 23:06:59.587 DEBUG 8388 --- [http-nio-8080-exec-2] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 23:06:59.587 DEBUG 8388 --- [http-nio-8080-exec-2] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 31(String)
2017-09-14 23:06:59.589 DEBUG 8388 --- [http-nio-8080-exec-2] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 23:06:59.590 DEBUG 8388 --- [http-nio-8080-exec-2] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 23:06:59.590 DEBUG 8388 --- [http-nio-8080-exec-2] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 28(String)
2017-09-14 23:06:59.592 DEBUG 8388 --- [http-nio-8080-exec-2] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 23:06:59.592 DEBUG 8388 --- [http-nio-8080-exec-2] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 23:06:59.593 DEBUG 8388 --- [http-nio-8080-exec-2] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 14(String)
2017-09-14 23:06:59.594 DEBUG 8388 --- [http-nio-8080-exec-2] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 23:06:59.595 DEBUG 8388 --- [http-nio-8080-exec-2] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 23:06:59.595 DEBUG 8388 --- [http-nio-8080-exec-2] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 1(String)
2017-09-14 23:06:59.596 DEBUG 8388 --- [http-nio-8080-exec-2] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 23:06:59.597 DEBUG 8388 --- [http-nio-8080-exec-2] p.p.blog.repository.BlogRepo.list        : <==      Total: 10
2017-09-14 23:06:59.602 DEBUG 8388 --- [http-nio-8080-exec-2] p.p.blog.repository.BlogRepo.getTotal    : ==>  Preparing: select count(*) from t_blog 
2017-09-14 23:06:59.602 DEBUG 8388 --- [http-nio-8080-exec-2] p.p.blog.repository.BlogRepo.getTotal    : ==> Parameters: 
2017-09-14 23:06:59.604 DEBUG 8388 --- [http-nio-8080-exec-2] p.p.blog.repository.BlogRepo.getTotal    : <==      Total: 1
2017-09-14 23:07:13.627 DEBUG 8388 --- [http-nio-8080-exec-9] p.p.blog.repository.BlogRepo.list        : ==>  Preparing: select * from t_blog order by releaseDate desc limit ?,? 
2017-09-14 23:07:13.627 DEBUG 8388 --- [http-nio-8080-exec-9] p.p.blog.repository.BlogRepo.list        : ==> Parameters: 10(Integer), 10(Integer)
2017-09-14 23:07:13.633 DEBUG 8388 --- [http-nio-8080-exec-9] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 23:07:13.633 DEBUG 8388 --- [http-nio-8080-exec-9] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 11(String)
2017-09-14 23:07:13.634 DEBUG 8388 --- [http-nio-8080-exec-9] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 23:07:13.635 DEBUG 8388 --- [http-nio-8080-exec-9] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 23:07:13.635 DEBUG 8388 --- [http-nio-8080-exec-9] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 12(String)
2017-09-14 23:07:13.639 DEBUG 8388 --- [http-nio-8080-exec-9] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 23:07:13.640 DEBUG 8388 --- [http-nio-8080-exec-9] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 23:07:13.640 DEBUG 8388 --- [http-nio-8080-exec-9] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 27(String)
2017-09-14 23:07:13.641 DEBUG 8388 --- [http-nio-8080-exec-9] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 23:07:13.642 DEBUG 8388 --- [http-nio-8080-exec-9] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 23:07:13.642 DEBUG 8388 --- [http-nio-8080-exec-9] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 31(String)
2017-09-14 23:07:13.643 DEBUG 8388 --- [http-nio-8080-exec-9] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 23:07:13.643 DEBUG 8388 --- [http-nio-8080-exec-9] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 23:07:13.644 DEBUG 8388 --- [http-nio-8080-exec-9] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 28(String)
2017-09-14 23:07:13.645 DEBUG 8388 --- [http-nio-8080-exec-9] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 23:07:13.645 DEBUG 8388 --- [http-nio-8080-exec-9] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 23:07:13.645 DEBUG 8388 --- [http-nio-8080-exec-9] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 14(String)
2017-09-14 23:07:13.646 DEBUG 8388 --- [http-nio-8080-exec-9] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 23:07:13.647 DEBUG 8388 --- [http-nio-8080-exec-9] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 23:07:13.647 DEBUG 8388 --- [http-nio-8080-exec-9] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 1(String)
2017-09-14 23:07:13.657 DEBUG 8388 --- [http-nio-8080-exec-9] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 23:07:13.658 DEBUG 8388 --- [http-nio-8080-exec-9] p.p.blog.repository.BlogRepo.list        : <==      Total: 10
2017-09-14 23:07:13.663 DEBUG 8388 --- [http-nio-8080-exec-9] p.p.blog.repository.BlogRepo.getTotal    : ==>  Preparing: select count(*) from t_blog 
2017-09-14 23:07:13.663 DEBUG 8388 --- [http-nio-8080-exec-9] p.p.blog.repository.BlogRepo.getTotal    : ==> Parameters: 
2017-09-14 23:07:13.665 DEBUG 8388 --- [http-nio-8080-exec-9] p.p.blog.repository.BlogRepo.getTotal    : <==      Total: 1
2017-09-14 23:07:34.886 DEBUG 8388 --- [http-nio-8080-exec-8] p.p.blog.repository.BlogRepo.list        : ==>  Preparing: select * from t_blog order by releaseDate desc limit ?,? 
2017-09-14 23:07:34.887 DEBUG 8388 --- [http-nio-8080-exec-8] p.p.blog.repository.BlogRepo.list        : ==> Parameters: 10(Integer), 10(Integer)
2017-09-14 23:07:34.891 DEBUG 8388 --- [http-nio-8080-exec-8] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 23:07:34.891 DEBUG 8388 --- [http-nio-8080-exec-8] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 11(String)
2017-09-14 23:07:34.892 DEBUG 8388 --- [http-nio-8080-exec-8] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 23:07:34.893 DEBUG 8388 --- [http-nio-8080-exec-8] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 23:07:34.893 DEBUG 8388 --- [http-nio-8080-exec-8] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 12(String)
2017-09-14 23:07:34.896 DEBUG 8388 --- [http-nio-8080-exec-8] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 23:07:34.898 DEBUG 8388 --- [http-nio-8080-exec-8] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 23:07:34.898 DEBUG 8388 --- [http-nio-8080-exec-8] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 27(String)
2017-09-14 23:07:34.901 DEBUG 8388 --- [http-nio-8080-exec-8] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 23:07:34.902 DEBUG 8388 --- [http-nio-8080-exec-8] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 23:07:34.902 DEBUG 8388 --- [http-nio-8080-exec-8] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 31(String)
2017-09-14 23:07:34.904 DEBUG 8388 --- [http-nio-8080-exec-8] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 23:07:34.905 DEBUG 8388 --- [http-nio-8080-exec-8] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 23:07:34.905 DEBUG 8388 --- [http-nio-8080-exec-8] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 28(String)
2017-09-14 23:07:34.907 DEBUG 8388 --- [http-nio-8080-exec-8] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 23:07:34.907 DEBUG 8388 --- [http-nio-8080-exec-8] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 23:07:34.908 DEBUG 8388 --- [http-nio-8080-exec-8] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 14(String)
2017-09-14 23:07:34.909 DEBUG 8388 --- [http-nio-8080-exec-8] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 23:07:34.909 DEBUG 8388 --- [http-nio-8080-exec-8] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 23:07:34.910 DEBUG 8388 --- [http-nio-8080-exec-8] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 1(String)
2017-09-14 23:07:34.912 DEBUG 8388 --- [http-nio-8080-exec-8] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 23:07:34.913 DEBUG 8388 --- [http-nio-8080-exec-8] p.p.blog.repository.BlogRepo.list        : <==      Total: 10
2017-09-14 23:07:34.917 DEBUG 8388 --- [http-nio-8080-exec-8] p.p.blog.repository.BlogRepo.getTotal    : ==>  Preparing: select count(*) from t_blog 
2017-09-14 23:07:34.917 DEBUG 8388 --- [http-nio-8080-exec-8] p.p.blog.repository.BlogRepo.getTotal    : ==> Parameters: 
2017-09-14 23:07:34.919 DEBUG 8388 --- [http-nio-8080-exec-8] p.p.blog.repository.BlogRepo.getTotal    : <==      Total: 1
2017-09-14 23:07:49.143 DEBUG 8388 --- [http-nio-8080-exec-10] p.p.blog.repository.BlogRepo.list        : ==>  Preparing: select * from t_blog order by releaseDate desc limit ?,? 
2017-09-14 23:07:49.143 DEBUG 8388 --- [http-nio-8080-exec-10] p.p.blog.repository.BlogRepo.list        : ==> Parameters: 10(Integer), 10(Integer)
2017-09-14 23:07:49.161 DEBUG 8388 --- [http-nio-8080-exec-10] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 23:07:49.161 DEBUG 8388 --- [http-nio-8080-exec-10] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 11(String)
2017-09-14 23:07:49.162 DEBUG 8388 --- [http-nio-8080-exec-10] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 23:07:49.163 DEBUG 8388 --- [http-nio-8080-exec-10] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 23:07:49.163 DEBUG 8388 --- [http-nio-8080-exec-10] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 12(String)
2017-09-14 23:07:49.165 DEBUG 8388 --- [http-nio-8080-exec-10] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 23:07:49.165 DEBUG 8388 --- [http-nio-8080-exec-10] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 23:07:49.165 DEBUG 8388 --- [http-nio-8080-exec-10] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 27(String)
2017-09-14 23:07:49.167 DEBUG 8388 --- [http-nio-8080-exec-10] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 23:07:49.167 DEBUG 8388 --- [http-nio-8080-exec-10] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 23:07:49.167 DEBUG 8388 --- [http-nio-8080-exec-10] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 31(String)
2017-09-14 23:07:49.169 DEBUG 8388 --- [http-nio-8080-exec-10] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 23:07:49.170 DEBUG 8388 --- [http-nio-8080-exec-10] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 23:07:49.170 DEBUG 8388 --- [http-nio-8080-exec-10] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 28(String)
2017-09-14 23:07:49.171 DEBUG 8388 --- [http-nio-8080-exec-10] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 23:07:49.172 DEBUG 8388 --- [http-nio-8080-exec-10] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 23:07:49.172 DEBUG 8388 --- [http-nio-8080-exec-10] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 14(String)
2017-09-14 23:07:49.173 DEBUG 8388 --- [http-nio-8080-exec-10] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 23:07:49.174 DEBUG 8388 --- [http-nio-8080-exec-10] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 23:07:49.175 DEBUG 8388 --- [http-nio-8080-exec-10] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 1(String)
2017-09-14 23:07:49.176 DEBUG 8388 --- [http-nio-8080-exec-10] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 23:07:49.178 DEBUG 8388 --- [http-nio-8080-exec-10] p.p.blog.repository.BlogRepo.list        : <==      Total: 10
2017-09-14 23:07:49.190 DEBUG 8388 --- [http-nio-8080-exec-10] p.p.blog.repository.BlogRepo.getTotal    : ==>  Preparing: select count(*) from t_blog 
2017-09-14 23:07:49.190 DEBUG 8388 --- [http-nio-8080-exec-10] p.p.blog.repository.BlogRepo.getTotal    : ==> Parameters: 
2017-09-14 23:07:49.191 DEBUG 8388 --- [http-nio-8080-exec-10] p.p.blog.repository.BlogRepo.getTotal    : <==      Total: 1
2017-09-14 23:08:38.877 DEBUG 8388 --- [http-nio-8080-exec-3] p.p.blog.repository.BlogRepo.list        : ==>  Preparing: select * from t_blog order by releaseDate desc limit ?,? 
2017-09-14 23:08:38.877 DEBUG 8388 --- [http-nio-8080-exec-3] p.p.blog.repository.BlogRepo.list        : ==> Parameters: 10(Integer), 10(Integer)
2017-09-14 23:08:38.881 DEBUG 8388 --- [http-nio-8080-exec-3] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 23:08:38.882 DEBUG 8388 --- [http-nio-8080-exec-3] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 11(String)
2017-09-14 23:08:38.885 DEBUG 8388 --- [http-nio-8080-exec-3] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 23:08:38.886 DEBUG 8388 --- [http-nio-8080-exec-3] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 23:08:38.886 DEBUG 8388 --- [http-nio-8080-exec-3] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 12(String)
2017-09-14 23:08:38.888 DEBUG 8388 --- [http-nio-8080-exec-3] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 23:08:38.888 DEBUG 8388 --- [http-nio-8080-exec-3] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 23:08:38.889 DEBUG 8388 --- [http-nio-8080-exec-3] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 27(String)
2017-09-14 23:08:38.892 DEBUG 8388 --- [http-nio-8080-exec-3] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 23:08:38.893 DEBUG 8388 --- [http-nio-8080-exec-3] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 23:08:38.893 DEBUG 8388 --- [http-nio-8080-exec-3] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 31(String)
2017-09-14 23:08:38.894 DEBUG 8388 --- [http-nio-8080-exec-3] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 23:08:38.895 DEBUG 8388 --- [http-nio-8080-exec-3] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 23:08:38.895 DEBUG 8388 --- [http-nio-8080-exec-3] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 28(String)
2017-09-14 23:08:38.896 DEBUG 8388 --- [http-nio-8080-exec-3] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 23:08:38.897 DEBUG 8388 --- [http-nio-8080-exec-3] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 23:08:38.897 DEBUG 8388 --- [http-nio-8080-exec-3] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 14(String)
2017-09-14 23:08:38.898 DEBUG 8388 --- [http-nio-8080-exec-3] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 23:08:38.899 DEBUG 8388 --- [http-nio-8080-exec-3] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 23:08:38.899 DEBUG 8388 --- [http-nio-8080-exec-3] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 1(String)
2017-09-14 23:08:38.901 DEBUG 8388 --- [http-nio-8080-exec-3] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 23:08:38.901 DEBUG 8388 --- [http-nio-8080-exec-3] p.p.blog.repository.BlogRepo.list        : <==      Total: 10
2017-09-14 23:08:38.906 DEBUG 8388 --- [http-nio-8080-exec-3] p.p.blog.repository.BlogRepo.getTotal    : ==>  Preparing: select count(*) from t_blog 
2017-09-14 23:08:38.906 DEBUG 8388 --- [http-nio-8080-exec-3] p.p.blog.repository.BlogRepo.getTotal    : ==> Parameters: 
2017-09-14 23:08:38.914 DEBUG 8388 --- [http-nio-8080-exec-3] p.p.blog.repository.BlogRepo.getTotal    : <==      Total: 1
2017-09-14 23:08:59.063 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.blog.repository.BlogRepo.list        : ==>  Preparing: select * from t_blog order by releaseDate desc limit ?,? 
2017-09-14 23:08:59.064 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.blog.repository.BlogRepo.list        : ==> Parameters: 10(Integer), 10(Integer)
2017-09-14 23:08:59.070 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 23:08:59.070 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 11(String)
2017-09-14 23:08:59.071 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 23:08:59.072 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 23:08:59.072 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 12(String)
2017-09-14 23:08:59.073 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 23:08:59.074 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 23:08:59.074 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 27(String)
2017-09-14 23:08:59.075 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 23:08:59.076 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 23:08:59.076 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 31(String)
2017-09-14 23:08:59.078 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 23:08:59.079 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 23:08:59.080 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 28(String)
2017-09-14 23:08:59.081 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 23:08:59.082 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 23:08:59.082 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 14(String)
2017-09-14 23:08:59.083 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 23:08:59.084 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 23:08:59.084 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 1(String)
2017-09-14 23:08:59.085 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 23:08:59.086 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.blog.repository.BlogRepo.list        : <==      Total: 10
2017-09-14 23:08:59.090 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.blog.repository.BlogRepo.getTotal    : ==>  Preparing: select count(*) from t_blog 
2017-09-14 23:08:59.091 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.blog.repository.BlogRepo.getTotal    : ==> Parameters: 
2017-09-14 23:08:59.092 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.blog.repository.BlogRepo.getTotal    : <==      Total: 1
2017-09-14 23:09:16.259 DEBUG 8388 --- [http-nio-8080-exec-4] p.p.blog.repository.BlogRepo.list        : ==>  Preparing: select * from t_blog order by releaseDate desc limit ?,? 
2017-09-14 23:09:16.260 DEBUG 8388 --- [http-nio-8080-exec-4] p.p.blog.repository.BlogRepo.list        : ==> Parameters: 10(Integer), 10(Integer)
2017-09-14 23:09:16.263 DEBUG 8388 --- [http-nio-8080-exec-4] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 23:09:16.264 DEBUG 8388 --- [http-nio-8080-exec-4] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 11(String)
2017-09-14 23:09:16.266 DEBUG 8388 --- [http-nio-8080-exec-4] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 23:09:16.268 DEBUG 8388 --- [http-nio-8080-exec-4] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 23:09:16.268 DEBUG 8388 --- [http-nio-8080-exec-4] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 12(String)
2017-09-14 23:09:16.269 DEBUG 8388 --- [http-nio-8080-exec-4] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 23:09:16.270 DEBUG 8388 --- [http-nio-8080-exec-4] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 23:09:16.270 DEBUG 8388 --- [http-nio-8080-exec-4] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 27(String)
2017-09-14 23:09:16.272 DEBUG 8388 --- [http-nio-8080-exec-4] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 23:09:16.272 DEBUG 8388 --- [http-nio-8080-exec-4] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 23:09:16.272 DEBUG 8388 --- [http-nio-8080-exec-4] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 31(String)
2017-09-14 23:09:16.275 DEBUG 8388 --- [http-nio-8080-exec-4] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 23:09:16.276 DEBUG 8388 --- [http-nio-8080-exec-4] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 23:09:16.276 DEBUG 8388 --- [http-nio-8080-exec-4] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 28(String)
2017-09-14 23:09:16.277 DEBUG 8388 --- [http-nio-8080-exec-4] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 23:09:16.277 DEBUG 8388 --- [http-nio-8080-exec-4] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 23:09:16.278 DEBUG 8388 --- [http-nio-8080-exec-4] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 14(String)
2017-09-14 23:09:16.279 DEBUG 8388 --- [http-nio-8080-exec-4] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 23:09:16.279 DEBUG 8388 --- [http-nio-8080-exec-4] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 23:09:16.280 DEBUG 8388 --- [http-nio-8080-exec-4] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 1(String)
2017-09-14 23:09:16.284 DEBUG 8388 --- [http-nio-8080-exec-4] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 23:09:16.285 DEBUG 8388 --- [http-nio-8080-exec-4] p.p.blog.repository.BlogRepo.list        : <==      Total: 10
2017-09-14 23:09:16.290 DEBUG 8388 --- [http-nio-8080-exec-4] p.p.blog.repository.BlogRepo.getTotal    : ==>  Preparing: select count(*) from t_blog 
2017-09-14 23:09:16.290 DEBUG 8388 --- [http-nio-8080-exec-4] p.p.blog.repository.BlogRepo.getTotal    : ==> Parameters: 
2017-09-14 23:09:16.291 DEBUG 8388 --- [http-nio-8080-exec-4] p.p.blog.repository.BlogRepo.getTotal    : <==      Total: 1
2017-09-14 23:09:18.588 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.blog.repository.BlogRepo.list        : ==>  Preparing: select * from t_blog order by releaseDate desc limit ?,? 
2017-09-14 23:09:18.588 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.blog.repository.BlogRepo.list        : ==> Parameters: 10(Integer), 10(Integer)
2017-09-14 23:09:18.592 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 23:09:18.593 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 11(String)
2017-09-14 23:09:18.594 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 23:09:18.595 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 23:09:18.595 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 12(String)
2017-09-14 23:09:18.597 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 23:09:18.597 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 23:09:18.598 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 27(String)
2017-09-14 23:09:18.600 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 23:09:18.601 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 23:09:18.601 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 31(String)
2017-09-14 23:09:18.602 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 23:09:18.603 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 23:09:18.603 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 28(String)
2017-09-14 23:09:18.604 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 23:09:18.605 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 23:09:18.605 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 14(String)
2017-09-14 23:09:18.607 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 23:09:18.608 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 23:09:18.608 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 1(String)
2017-09-14 23:09:18.610 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 23:09:18.611 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.blog.repository.BlogRepo.list        : <==      Total: 10
2017-09-14 23:09:18.614 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.blog.repository.BlogRepo.getTotal    : ==>  Preparing: select count(*) from t_blog 
2017-09-14 23:09:18.615 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.blog.repository.BlogRepo.getTotal    : ==> Parameters: 
2017-09-14 23:09:18.616 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.blog.repository.BlogRepo.getTotal    : <==      Total: 1
2017-09-14 23:09:26.056 DEBUG 8388 --- [http-nio-8080-exec-3] p.p.blog.repository.BlogRepo.list        : ==>  Preparing: select * from t_blog order by releaseDate desc limit ?,? 
2017-09-14 23:09:26.056 DEBUG 8388 --- [http-nio-8080-exec-3] p.p.blog.repository.BlogRepo.list        : ==> Parameters: 10(Integer), 10(Integer)
2017-09-14 23:09:26.060 DEBUG 8388 --- [http-nio-8080-exec-3] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 23:09:26.060 DEBUG 8388 --- [http-nio-8080-exec-3] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 11(String)
2017-09-14 23:09:26.062 DEBUG 8388 --- [http-nio-8080-exec-3] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 23:09:26.062 DEBUG 8388 --- [http-nio-8080-exec-3] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 23:09:26.063 DEBUG 8388 --- [http-nio-8080-exec-3] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 12(String)
2017-09-14 23:09:26.064 DEBUG 8388 --- [http-nio-8080-exec-3] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 23:09:26.065 DEBUG 8388 --- [http-nio-8080-exec-3] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 23:09:26.065 DEBUG 8388 --- [http-nio-8080-exec-3] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 27(String)
2017-09-14 23:09:26.066 DEBUG 8388 --- [http-nio-8080-exec-3] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 23:09:26.067 DEBUG 8388 --- [http-nio-8080-exec-3] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 23:09:26.067 DEBUG 8388 --- [http-nio-8080-exec-3] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 31(String)
2017-09-14 23:09:26.069 DEBUG 8388 --- [http-nio-8080-exec-3] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 23:09:26.069 DEBUG 8388 --- [http-nio-8080-exec-3] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 23:09:26.070 DEBUG 8388 --- [http-nio-8080-exec-3] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 28(String)
2017-09-14 23:09:26.071 DEBUG 8388 --- [http-nio-8080-exec-3] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 23:09:26.071 DEBUG 8388 --- [http-nio-8080-exec-3] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 23:09:26.072 DEBUG 8388 --- [http-nio-8080-exec-3] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 14(String)
2017-09-14 23:09:26.073 DEBUG 8388 --- [http-nio-8080-exec-3] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 23:09:26.073 DEBUG 8388 --- [http-nio-8080-exec-3] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 23:09:26.073 DEBUG 8388 --- [http-nio-8080-exec-3] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 1(String)
2017-09-14 23:09:26.074 DEBUG 8388 --- [http-nio-8080-exec-3] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 23:09:26.075 DEBUG 8388 --- [http-nio-8080-exec-3] p.p.blog.repository.BlogRepo.list        : <==      Total: 10
2017-09-14 23:09:26.079 DEBUG 8388 --- [http-nio-8080-exec-3] p.p.blog.repository.BlogRepo.getTotal    : ==>  Preparing: select count(*) from t_blog 
2017-09-14 23:09:26.080 DEBUG 8388 --- [http-nio-8080-exec-3] p.p.blog.repository.BlogRepo.getTotal    : ==> Parameters: 
2017-09-14 23:09:26.081 DEBUG 8388 --- [http-nio-8080-exec-3] p.p.blog.repository.BlogRepo.getTotal    : <==      Total: 1
2017-09-14 23:09:52.733 DEBUG 8388 --- [http-nio-8080-exec-2] p.p.blog.repository.BlogRepo.list        : ==>  Preparing: select * from t_blog order by releaseDate desc limit ?,? 
2017-09-14 23:09:52.734 DEBUG 8388 --- [http-nio-8080-exec-2] p.p.blog.repository.BlogRepo.list        : ==> Parameters: 10(Integer), 10(Integer)
2017-09-14 23:09:52.738 DEBUG 8388 --- [http-nio-8080-exec-2] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 23:09:52.738 DEBUG 8388 --- [http-nio-8080-exec-2] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 11(String)
2017-09-14 23:09:52.740 DEBUG 8388 --- [http-nio-8080-exec-2] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 23:09:52.740 DEBUG 8388 --- [http-nio-8080-exec-2] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 23:09:52.740 DEBUG 8388 --- [http-nio-8080-exec-2] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 12(String)
2017-09-14 23:09:52.741 DEBUG 8388 --- [http-nio-8080-exec-2] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 23:09:52.742 DEBUG 8388 --- [http-nio-8080-exec-2] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 23:09:52.742 DEBUG 8388 --- [http-nio-8080-exec-2] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 27(String)
2017-09-14 23:09:52.742 DEBUG 8388 --- [http-nio-8080-exec-2] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 23:09:52.743 DEBUG 8388 --- [http-nio-8080-exec-2] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 23:09:52.743 DEBUG 8388 --- [http-nio-8080-exec-2] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 31(String)
2017-09-14 23:09:52.744 DEBUG 8388 --- [http-nio-8080-exec-2] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 23:09:52.744 DEBUG 8388 --- [http-nio-8080-exec-2] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 23:09:52.744 DEBUG 8388 --- [http-nio-8080-exec-2] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 28(String)
2017-09-14 23:09:52.745 DEBUG 8388 --- [http-nio-8080-exec-2] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 23:09:52.745 DEBUG 8388 --- [http-nio-8080-exec-2] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 23:09:52.745 DEBUG 8388 --- [http-nio-8080-exec-2] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 14(String)
2017-09-14 23:09:52.746 DEBUG 8388 --- [http-nio-8080-exec-2] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 23:09:52.747 DEBUG 8388 --- [http-nio-8080-exec-2] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 23:09:52.747 DEBUG 8388 --- [http-nio-8080-exec-2] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 1(String)
2017-09-14 23:09:52.748 DEBUG 8388 --- [http-nio-8080-exec-2] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 23:09:52.749 DEBUG 8388 --- [http-nio-8080-exec-2] p.p.blog.repository.BlogRepo.list        : <==      Total: 10
2017-09-14 23:09:52.752 DEBUG 8388 --- [http-nio-8080-exec-2] p.p.blog.repository.BlogRepo.getTotal    : ==>  Preparing: select count(*) from t_blog 
2017-09-14 23:09:52.753 DEBUG 8388 --- [http-nio-8080-exec-2] p.p.blog.repository.BlogRepo.getTotal    : ==> Parameters: 
2017-09-14 23:09:52.754 DEBUG 8388 --- [http-nio-8080-exec-2] p.p.blog.repository.BlogRepo.getTotal    : <==      Total: 1
2017-09-14 23:10:01.277 DEBUG 8388 --- [http-nio-8080-exec-8] p.p.blog.repository.BlogRepo.list        : ==>  Preparing: select * from t_blog order by releaseDate desc limit ?,? 
2017-09-14 23:10:01.277 DEBUG 8388 --- [http-nio-8080-exec-8] p.p.blog.repository.BlogRepo.list        : ==> Parameters: 10(Integer), 10(Integer)
2017-09-14 23:10:01.284 DEBUG 8388 --- [http-nio-8080-exec-8] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 23:10:01.285 DEBUG 8388 --- [http-nio-8080-exec-8] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 11(String)
2017-09-14 23:10:01.286 DEBUG 8388 --- [http-nio-8080-exec-8] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 23:10:01.286 DEBUG 8388 --- [http-nio-8080-exec-8] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 23:10:01.286 DEBUG 8388 --- [http-nio-8080-exec-8] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 12(String)
2017-09-14 23:10:01.287 DEBUG 8388 --- [http-nio-8080-exec-8] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 23:10:01.288 DEBUG 8388 --- [http-nio-8080-exec-8] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 23:10:01.288 DEBUG 8388 --- [http-nio-8080-exec-8] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 27(String)
2017-09-14 23:10:01.289 DEBUG 8388 --- [http-nio-8080-exec-8] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 23:10:01.290 DEBUG 8388 --- [http-nio-8080-exec-8] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 23:10:01.290 DEBUG 8388 --- [http-nio-8080-exec-8] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 31(String)
2017-09-14 23:10:01.291 DEBUG 8388 --- [http-nio-8080-exec-8] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 23:10:01.292 DEBUG 8388 --- [http-nio-8080-exec-8] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 23:10:01.292 DEBUG 8388 --- [http-nio-8080-exec-8] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 28(String)
2017-09-14 23:10:01.293 DEBUG 8388 --- [http-nio-8080-exec-8] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 23:10:01.294 DEBUG 8388 --- [http-nio-8080-exec-8] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 23:10:01.294 DEBUG 8388 --- [http-nio-8080-exec-8] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 14(String)
2017-09-14 23:10:01.295 DEBUG 8388 --- [http-nio-8080-exec-8] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 23:10:01.296 DEBUG 8388 --- [http-nio-8080-exec-8] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 23:10:01.296 DEBUG 8388 --- [http-nio-8080-exec-8] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 1(String)
2017-09-14 23:10:01.303 DEBUG 8388 --- [http-nio-8080-exec-8] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 23:10:01.304 DEBUG 8388 --- [http-nio-8080-exec-8] p.p.blog.repository.BlogRepo.list        : <==      Total: 10
2017-09-14 23:10:01.308 DEBUG 8388 --- [http-nio-8080-exec-8] p.p.blog.repository.BlogRepo.getTotal    : ==>  Preparing: select count(*) from t_blog 
2017-09-14 23:10:01.309 DEBUG 8388 --- [http-nio-8080-exec-8] p.p.blog.repository.BlogRepo.getTotal    : ==> Parameters: 
2017-09-14 23:10:01.320 DEBUG 8388 --- [http-nio-8080-exec-8] p.p.blog.repository.BlogRepo.getTotal    : <==      Total: 1
2017-09-14 23:10:38.542 DEBUG 8388 --- [http-nio-8080-exec-9] p.p.blog.repository.BlogRepo.list        : ==>  Preparing: select * from t_blog order by releaseDate desc limit ?,? 
2017-09-14 23:10:38.542 DEBUG 8388 --- [http-nio-8080-exec-9] p.p.blog.repository.BlogRepo.list        : ==> Parameters: 10(Integer), 10(Integer)
2017-09-14 23:10:38.545 DEBUG 8388 --- [http-nio-8080-exec-9] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 23:10:38.545 DEBUG 8388 --- [http-nio-8080-exec-9] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 11(String)
2017-09-14 23:10:38.547 DEBUG 8388 --- [http-nio-8080-exec-9] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 23:10:38.547 DEBUG 8388 --- [http-nio-8080-exec-9] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 23:10:38.547 DEBUG 8388 --- [http-nio-8080-exec-9] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 12(String)
2017-09-14 23:10:38.549 DEBUG 8388 --- [http-nio-8080-exec-9] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 23:10:38.549 DEBUG 8388 --- [http-nio-8080-exec-9] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 23:10:38.549 DEBUG 8388 --- [http-nio-8080-exec-9] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 27(String)
2017-09-14 23:10:38.551 DEBUG 8388 --- [http-nio-8080-exec-9] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 23:10:38.552 DEBUG 8388 --- [http-nio-8080-exec-9] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 23:10:38.552 DEBUG 8388 --- [http-nio-8080-exec-9] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 31(String)
2017-09-14 23:10:38.553 DEBUG 8388 --- [http-nio-8080-exec-9] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 23:10:38.554 DEBUG 8388 --- [http-nio-8080-exec-9] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 23:10:38.554 DEBUG 8388 --- [http-nio-8080-exec-9] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 28(String)
2017-09-14 23:10:38.555 DEBUG 8388 --- [http-nio-8080-exec-9] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 23:10:38.555 DEBUG 8388 --- [http-nio-8080-exec-9] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 23:10:38.555 DEBUG 8388 --- [http-nio-8080-exec-9] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 14(String)
2017-09-14 23:10:38.556 DEBUG 8388 --- [http-nio-8080-exec-9] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 23:10:38.557 DEBUG 8388 --- [http-nio-8080-exec-9] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 23:10:38.557 DEBUG 8388 --- [http-nio-8080-exec-9] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 1(String)
2017-09-14 23:10:38.558 DEBUG 8388 --- [http-nio-8080-exec-9] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 23:10:38.559 DEBUG 8388 --- [http-nio-8080-exec-9] p.p.blog.repository.BlogRepo.list        : <==      Total: 10
2017-09-14 23:10:38.563 DEBUG 8388 --- [http-nio-8080-exec-9] p.p.blog.repository.BlogRepo.getTotal    : ==>  Preparing: select count(*) from t_blog 
2017-09-14 23:10:38.564 DEBUG 8388 --- [http-nio-8080-exec-9] p.p.blog.repository.BlogRepo.getTotal    : ==> Parameters: 
2017-09-14 23:10:38.577 DEBUG 8388 --- [http-nio-8080-exec-9] p.p.blog.repository.BlogRepo.getTotal    : <==      Total: 1
2017-09-14 23:11:03.379 DEBUG 8388 --- [http-nio-8080-exec-6] p.p.blog.repository.BlogRepo.list        : ==>  Preparing: select * from t_blog order by releaseDate desc limit ?,? 
2017-09-14 23:11:03.379 DEBUG 8388 --- [http-nio-8080-exec-6] p.p.blog.repository.BlogRepo.list        : ==> Parameters: 10(Integer), 10(Integer)
2017-09-14 23:11:03.383 DEBUG 8388 --- [http-nio-8080-exec-6] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 23:11:03.384 DEBUG 8388 --- [http-nio-8080-exec-6] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 11(String)
2017-09-14 23:11:03.385 DEBUG 8388 --- [http-nio-8080-exec-6] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 23:11:03.385 DEBUG 8388 --- [http-nio-8080-exec-6] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 23:11:03.386 DEBUG 8388 --- [http-nio-8080-exec-6] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 12(String)
2017-09-14 23:11:03.387 DEBUG 8388 --- [http-nio-8080-exec-6] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 23:11:03.387 DEBUG 8388 --- [http-nio-8080-exec-6] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 23:11:03.388 DEBUG 8388 --- [http-nio-8080-exec-6] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 27(String)
2017-09-14 23:11:03.390 DEBUG 8388 --- [http-nio-8080-exec-6] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 23:11:03.390 DEBUG 8388 --- [http-nio-8080-exec-6] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 23:11:03.390 DEBUG 8388 --- [http-nio-8080-exec-6] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 31(String)
2017-09-14 23:11:03.392 DEBUG 8388 --- [http-nio-8080-exec-6] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 23:11:03.393 DEBUG 8388 --- [http-nio-8080-exec-6] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 23:11:03.393 DEBUG 8388 --- [http-nio-8080-exec-6] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 28(String)
2017-09-14 23:11:03.395 DEBUG 8388 --- [http-nio-8080-exec-6] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 23:11:03.395 DEBUG 8388 --- [http-nio-8080-exec-6] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 23:11:03.396 DEBUG 8388 --- [http-nio-8080-exec-6] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 14(String)
2017-09-14 23:11:03.397 DEBUG 8388 --- [http-nio-8080-exec-6] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 23:11:03.397 DEBUG 8388 --- [http-nio-8080-exec-6] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 23:11:03.398 DEBUG 8388 --- [http-nio-8080-exec-6] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 1(String)
2017-09-14 23:11:03.399 DEBUG 8388 --- [http-nio-8080-exec-6] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 23:11:03.399 DEBUG 8388 --- [http-nio-8080-exec-6] p.p.blog.repository.BlogRepo.list        : <==      Total: 10
2017-09-14 23:11:03.404 DEBUG 8388 --- [http-nio-8080-exec-6] p.p.blog.repository.BlogRepo.getTotal    : ==>  Preparing: select count(*) from t_blog 
2017-09-14 23:11:03.404 DEBUG 8388 --- [http-nio-8080-exec-6] p.p.blog.repository.BlogRepo.getTotal    : ==> Parameters: 
2017-09-14 23:11:03.416 DEBUG 8388 --- [http-nio-8080-exec-6] p.p.blog.repository.BlogRepo.getTotal    : <==      Total: 1
2017-09-14 23:11:09.135 DEBUG 8388 --- [http-nio-8080-exec-10] p.p.blog.repository.BlogRepo.list        : ==>  Preparing: select * from t_blog order by releaseDate desc limit ?,? 
2017-09-14 23:11:09.136 DEBUG 8388 --- [http-nio-8080-exec-10] p.p.blog.repository.BlogRepo.list        : ==> Parameters: 10(Integer), 10(Integer)
2017-09-14 23:11:09.140 DEBUG 8388 --- [http-nio-8080-exec-10] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 23:11:09.140 DEBUG 8388 --- [http-nio-8080-exec-10] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 11(String)
2017-09-14 23:11:09.141 DEBUG 8388 --- [http-nio-8080-exec-10] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 23:11:09.142 DEBUG 8388 --- [http-nio-8080-exec-10] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 23:11:09.142 DEBUG 8388 --- [http-nio-8080-exec-10] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 12(String)
2017-09-14 23:11:09.144 DEBUG 8388 --- [http-nio-8080-exec-10] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 23:11:09.145 DEBUG 8388 --- [http-nio-8080-exec-10] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 23:11:09.145 DEBUG 8388 --- [http-nio-8080-exec-10] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 27(String)
2017-09-14 23:11:09.146 DEBUG 8388 --- [http-nio-8080-exec-10] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 23:11:09.148 DEBUG 8388 --- [http-nio-8080-exec-10] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 23:11:09.148 DEBUG 8388 --- [http-nio-8080-exec-10] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 31(String)
2017-09-14 23:11:09.149 DEBUG 8388 --- [http-nio-8080-exec-10] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 23:11:09.150 DEBUG 8388 --- [http-nio-8080-exec-10] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 23:11:09.150 DEBUG 8388 --- [http-nio-8080-exec-10] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 28(String)
2017-09-14 23:11:09.151 DEBUG 8388 --- [http-nio-8080-exec-10] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 23:11:09.152 DEBUG 8388 --- [http-nio-8080-exec-10] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 23:11:09.152 DEBUG 8388 --- [http-nio-8080-exec-10] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 14(String)
2017-09-14 23:11:09.153 DEBUG 8388 --- [http-nio-8080-exec-10] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 23:11:09.154 DEBUG 8388 --- [http-nio-8080-exec-10] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 23:11:09.154 DEBUG 8388 --- [http-nio-8080-exec-10] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 1(String)
2017-09-14 23:11:09.156 DEBUG 8388 --- [http-nio-8080-exec-10] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 23:11:09.157 DEBUG 8388 --- [http-nio-8080-exec-10] p.p.blog.repository.BlogRepo.list        : <==      Total: 10
2017-09-14 23:11:09.163 DEBUG 8388 --- [http-nio-8080-exec-10] p.p.blog.repository.BlogRepo.getTotal    : ==>  Preparing: select count(*) from t_blog 
2017-09-14 23:11:09.163 DEBUG 8388 --- [http-nio-8080-exec-10] p.p.blog.repository.BlogRepo.getTotal    : ==> Parameters: 
2017-09-14 23:11:09.164 DEBUG 8388 --- [http-nio-8080-exec-10] p.p.blog.repository.BlogRepo.getTotal    : <==      Total: 1
2017-09-14 23:11:18.042 DEBUG 8388 --- [http-nio-8080-exec-4] p.p.blog.repository.BlogRepo.list        : ==>  Preparing: select * from t_blog order by releaseDate desc limit ?,? 
2017-09-14 23:11:18.043 DEBUG 8388 --- [http-nio-8080-exec-4] p.p.blog.repository.BlogRepo.list        : ==> Parameters: 10(Integer), 10(Integer)
2017-09-14 23:11:18.048 DEBUG 8388 --- [http-nio-8080-exec-4] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 23:11:18.048 DEBUG 8388 --- [http-nio-8080-exec-4] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 11(String)
2017-09-14 23:11:18.050 DEBUG 8388 --- [http-nio-8080-exec-4] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 23:11:18.051 DEBUG 8388 --- [http-nio-8080-exec-4] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 23:11:18.051 DEBUG 8388 --- [http-nio-8080-exec-4] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 12(String)
2017-09-14 23:11:18.052 DEBUG 8388 --- [http-nio-8080-exec-4] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 23:11:18.053 DEBUG 8388 --- [http-nio-8080-exec-4] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 23:11:18.053 DEBUG 8388 --- [http-nio-8080-exec-4] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 27(String)
2017-09-14 23:11:18.055 DEBUG 8388 --- [http-nio-8080-exec-4] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 23:11:18.055 DEBUG 8388 --- [http-nio-8080-exec-4] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 23:11:18.056 DEBUG 8388 --- [http-nio-8080-exec-4] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 31(String)
2017-09-14 23:11:18.057 DEBUG 8388 --- [http-nio-8080-exec-4] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 23:11:18.058 DEBUG 8388 --- [http-nio-8080-exec-4] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 23:11:18.058 DEBUG 8388 --- [http-nio-8080-exec-4] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 28(String)
2017-09-14 23:11:18.060 DEBUG 8388 --- [http-nio-8080-exec-4] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 23:11:18.060 DEBUG 8388 --- [http-nio-8080-exec-4] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 23:11:18.060 DEBUG 8388 --- [http-nio-8080-exec-4] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 14(String)
2017-09-14 23:11:18.066 DEBUG 8388 --- [http-nio-8080-exec-4] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 23:11:18.067 DEBUG 8388 --- [http-nio-8080-exec-4] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 23:11:18.067 DEBUG 8388 --- [http-nio-8080-exec-4] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 1(String)
2017-09-14 23:11:18.069 DEBUG 8388 --- [http-nio-8080-exec-4] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 23:11:18.070 DEBUG 8388 --- [http-nio-8080-exec-4] p.p.blog.repository.BlogRepo.list        : <==      Total: 10
2017-09-14 23:11:18.074 DEBUG 8388 --- [http-nio-8080-exec-4] p.p.blog.repository.BlogRepo.getTotal    : ==>  Preparing: select count(*) from t_blog 
2017-09-14 23:11:18.074 DEBUG 8388 --- [http-nio-8080-exec-4] p.p.blog.repository.BlogRepo.getTotal    : ==> Parameters: 
2017-09-14 23:11:18.075 DEBUG 8388 --- [http-nio-8080-exec-4] p.p.blog.repository.BlogRepo.getTotal    : <==      Total: 1
2017-09-14 23:11:24.782 DEBUG 8388 --- [http-nio-8080-exec-5] p.p.blog.repository.BlogRepo.list        : ==>  Preparing: select * from t_blog order by releaseDate desc limit ?,? 
2017-09-14 23:11:24.782 DEBUG 8388 --- [http-nio-8080-exec-5] p.p.blog.repository.BlogRepo.list        : ==> Parameters: 10(Integer), 10(Integer)
2017-09-14 23:11:24.785 DEBUG 8388 --- [http-nio-8080-exec-5] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 23:11:24.785 DEBUG 8388 --- [http-nio-8080-exec-5] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 11(String)
2017-09-14 23:11:24.787 DEBUG 8388 --- [http-nio-8080-exec-5] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 23:11:24.787 DEBUG 8388 --- [http-nio-8080-exec-5] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 23:11:24.787 DEBUG 8388 --- [http-nio-8080-exec-5] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 12(String)
2017-09-14 23:11:24.789 DEBUG 8388 --- [http-nio-8080-exec-5] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 23:11:24.789 DEBUG 8388 --- [http-nio-8080-exec-5] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 23:11:24.790 DEBUG 8388 --- [http-nio-8080-exec-5] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 27(String)
2017-09-14 23:11:24.791 DEBUG 8388 --- [http-nio-8080-exec-5] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 23:11:24.791 DEBUG 8388 --- [http-nio-8080-exec-5] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 23:11:24.791 DEBUG 8388 --- [http-nio-8080-exec-5] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 31(String)
2017-09-14 23:11:24.793 DEBUG 8388 --- [http-nio-8080-exec-5] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 23:11:24.794 DEBUG 8388 --- [http-nio-8080-exec-5] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 23:11:24.794 DEBUG 8388 --- [http-nio-8080-exec-5] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 28(String)
2017-09-14 23:11:24.795 DEBUG 8388 --- [http-nio-8080-exec-5] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 23:11:24.797 DEBUG 8388 --- [http-nio-8080-exec-5] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 23:11:24.797 DEBUG 8388 --- [http-nio-8080-exec-5] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 14(String)
2017-09-14 23:11:24.798 DEBUG 8388 --- [http-nio-8080-exec-5] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 23:11:24.799 DEBUG 8388 --- [http-nio-8080-exec-5] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 23:11:24.799 DEBUG 8388 --- [http-nio-8080-exec-5] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 1(String)
2017-09-14 23:11:24.801 DEBUG 8388 --- [http-nio-8080-exec-5] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 23:11:24.802 DEBUG 8388 --- [http-nio-8080-exec-5] p.p.blog.repository.BlogRepo.list        : <==      Total: 10
2017-09-14 23:11:24.806 DEBUG 8388 --- [http-nio-8080-exec-5] p.p.blog.repository.BlogRepo.getTotal    : ==>  Preparing: select count(*) from t_blog 
2017-09-14 23:11:24.806 DEBUG 8388 --- [http-nio-8080-exec-5] p.p.blog.repository.BlogRepo.getTotal    : ==> Parameters: 
2017-09-14 23:11:24.808 DEBUG 8388 --- [http-nio-8080-exec-5] p.p.blog.repository.BlogRepo.getTotal    : <==      Total: 1
2017-09-14 23:11:37.772 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.blog.repository.BlogRepo.list        : ==>  Preparing: select * from t_blog order by releaseDate desc limit ?,? 
2017-09-14 23:11:37.772 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.blog.repository.BlogRepo.list        : ==> Parameters: 10(Integer), 10(Integer)
2017-09-14 23:11:37.776 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 23:11:37.776 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 11(String)
2017-09-14 23:11:37.777 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 23:11:37.778 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 23:11:37.778 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 12(String)
2017-09-14 23:11:37.780 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 23:11:37.781 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 23:11:37.781 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 27(String)
2017-09-14 23:11:37.782 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 23:11:37.783 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 23:11:37.783 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 31(String)
2017-09-14 23:11:37.784 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 23:11:37.784 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 23:11:37.784 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 28(String)
2017-09-14 23:11:37.785 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 23:11:37.786 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 23:11:37.786 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 14(String)
2017-09-14 23:11:37.787 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 23:11:37.788 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 23:11:37.788 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 1(String)
2017-09-14 23:11:37.790 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 23:11:37.790 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.blog.repository.BlogRepo.list        : <==      Total: 10
2017-09-14 23:11:37.795 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.blog.repository.BlogRepo.getTotal    : ==>  Preparing: select count(*) from t_blog 
2017-09-14 23:11:37.795 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.blog.repository.BlogRepo.getTotal    : ==> Parameters: 
2017-09-14 23:11:37.796 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.blog.repository.BlogRepo.getTotal    : <==      Total: 1
2017-09-14 23:11:58.371 DEBUG 8388 --- [http-nio-8080-exec-2] p.p.blog.repository.BlogRepo.list        : ==>  Preparing: select * from t_blog order by releaseDate desc limit ?,? 
2017-09-14 23:11:58.371 DEBUG 8388 --- [http-nio-8080-exec-2] p.p.blog.repository.BlogRepo.list        : ==> Parameters: 10(Integer), 10(Integer)
2017-09-14 23:11:58.375 DEBUG 8388 --- [http-nio-8080-exec-2] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 23:11:58.376 DEBUG 8388 --- [http-nio-8080-exec-2] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 11(String)
2017-09-14 23:11:58.377 DEBUG 8388 --- [http-nio-8080-exec-2] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 23:11:58.377 DEBUG 8388 --- [http-nio-8080-exec-2] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 23:11:58.377 DEBUG 8388 --- [http-nio-8080-exec-2] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 12(String)
2017-09-14 23:11:58.378 DEBUG 8388 --- [http-nio-8080-exec-2] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 23:11:58.379 DEBUG 8388 --- [http-nio-8080-exec-2] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 23:11:58.379 DEBUG 8388 --- [http-nio-8080-exec-2] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 27(String)
2017-09-14 23:11:58.381 DEBUG 8388 --- [http-nio-8080-exec-2] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 23:11:58.381 DEBUG 8388 --- [http-nio-8080-exec-2] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 23:11:58.382 DEBUG 8388 --- [http-nio-8080-exec-2] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 31(String)
2017-09-14 23:11:58.383 DEBUG 8388 --- [http-nio-8080-exec-2] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 23:11:58.384 DEBUG 8388 --- [http-nio-8080-exec-2] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 23:11:58.384 DEBUG 8388 --- [http-nio-8080-exec-2] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 28(String)
2017-09-14 23:11:58.385 DEBUG 8388 --- [http-nio-8080-exec-2] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 23:11:58.385 DEBUG 8388 --- [http-nio-8080-exec-2] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 23:11:58.386 DEBUG 8388 --- [http-nio-8080-exec-2] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 14(String)
2017-09-14 23:11:58.387 DEBUG 8388 --- [http-nio-8080-exec-2] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 23:11:58.393 DEBUG 8388 --- [http-nio-8080-exec-2] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 23:11:58.393 DEBUG 8388 --- [http-nio-8080-exec-2] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 1(String)
2017-09-14 23:11:58.394 DEBUG 8388 --- [http-nio-8080-exec-2] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 23:11:58.395 DEBUG 8388 --- [http-nio-8080-exec-2] p.p.blog.repository.BlogRepo.list        : <==      Total: 10
2017-09-14 23:11:58.471 DEBUG 8388 --- [http-nio-8080-exec-2] p.p.blog.repository.BlogRepo.getTotal    : ==>  Preparing: select count(*) from t_blog 
2017-09-14 23:11:58.471 DEBUG 8388 --- [http-nio-8080-exec-2] p.p.blog.repository.BlogRepo.getTotal    : ==> Parameters: 
2017-09-14 23:11:58.472 DEBUG 8388 --- [http-nio-8080-exec-2] p.p.blog.repository.BlogRepo.getTotal    : <==      Total: 1
2017-09-14 23:13:05.060 DEBUG 8388 --- [http-nio-8080-exec-4] p.p.blog.repository.BlogRepo.list        : ==>  Preparing: select * from t_blog order by releaseDate desc limit ?,? 
2017-09-14 23:13:05.060 DEBUG 8388 --- [http-nio-8080-exec-4] p.p.blog.repository.BlogRepo.list        : ==> Parameters: 10(Integer), 10(Integer)
2017-09-14 23:13:05.063 DEBUG 8388 --- [http-nio-8080-exec-4] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 23:13:05.063 DEBUG 8388 --- [http-nio-8080-exec-4] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 11(String)
2017-09-14 23:13:05.064 DEBUG 8388 --- [http-nio-8080-exec-4] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 23:13:05.065 DEBUG 8388 --- [http-nio-8080-exec-4] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 23:13:05.065 DEBUG 8388 --- [http-nio-8080-exec-4] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 12(String)
2017-09-14 23:13:05.066 DEBUG 8388 --- [http-nio-8080-exec-4] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 23:13:05.066 DEBUG 8388 --- [http-nio-8080-exec-4] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 23:13:05.067 DEBUG 8388 --- [http-nio-8080-exec-4] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 27(String)
2017-09-14 23:13:05.068 DEBUG 8388 --- [http-nio-8080-exec-4] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 23:13:05.069 DEBUG 8388 --- [http-nio-8080-exec-4] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 23:13:05.069 DEBUG 8388 --- [http-nio-8080-exec-4] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 31(String)
2017-09-14 23:13:05.070 DEBUG 8388 --- [http-nio-8080-exec-4] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 23:13:05.071 DEBUG 8388 --- [http-nio-8080-exec-4] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 23:13:05.071 DEBUG 8388 --- [http-nio-8080-exec-4] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 28(String)
2017-09-14 23:13:05.072 DEBUG 8388 --- [http-nio-8080-exec-4] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 23:13:05.072 DEBUG 8388 --- [http-nio-8080-exec-4] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 23:13:05.073 DEBUG 8388 --- [http-nio-8080-exec-4] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 14(String)
2017-09-14 23:13:05.074 DEBUG 8388 --- [http-nio-8080-exec-4] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 23:13:05.074 DEBUG 8388 --- [http-nio-8080-exec-4] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 23:13:05.075 DEBUG 8388 --- [http-nio-8080-exec-4] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 1(String)
2017-09-14 23:13:05.076 DEBUG 8388 --- [http-nio-8080-exec-4] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 23:13:05.077 DEBUG 8388 --- [http-nio-8080-exec-4] p.p.blog.repository.BlogRepo.list        : <==      Total: 10
2017-09-14 23:13:05.081 DEBUG 8388 --- [http-nio-8080-exec-4] p.p.blog.repository.BlogRepo.getTotal    : ==>  Preparing: select count(*) from t_blog 
2017-09-14 23:13:05.081 DEBUG 8388 --- [http-nio-8080-exec-4] p.p.blog.repository.BlogRepo.getTotal    : ==> Parameters: 
2017-09-14 23:13:05.082 DEBUG 8388 --- [http-nio-8080-exec-4] p.p.blog.repository.BlogRepo.getTotal    : <==      Total: 1
2017-09-14 23:13:53.469 DEBUG 8388 --- [http-nio-8080-exec-6] p.p.blog.repository.BlogRepo.list        : ==>  Preparing: select * from t_blog order by releaseDate desc limit ?,? 
2017-09-14 23:13:53.470 DEBUG 8388 --- [http-nio-8080-exec-6] p.p.blog.repository.BlogRepo.list        : ==> Parameters: 10(Integer), 10(Integer)
2017-09-14 23:13:53.474 DEBUG 8388 --- [http-nio-8080-exec-6] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 23:13:53.475 DEBUG 8388 --- [http-nio-8080-exec-6] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 11(String)
2017-09-14 23:13:53.476 DEBUG 8388 --- [http-nio-8080-exec-6] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 23:13:53.476 DEBUG 8388 --- [http-nio-8080-exec-6] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 23:13:53.477 DEBUG 8388 --- [http-nio-8080-exec-6] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 12(String)
2017-09-14 23:13:53.478 DEBUG 8388 --- [http-nio-8080-exec-6] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 23:13:53.478 DEBUG 8388 --- [http-nio-8080-exec-6] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 23:13:53.478 DEBUG 8388 --- [http-nio-8080-exec-6] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 27(String)
2017-09-14 23:13:53.479 DEBUG 8388 --- [http-nio-8080-exec-6] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 23:13:53.480 DEBUG 8388 --- [http-nio-8080-exec-6] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 23:13:53.480 DEBUG 8388 --- [http-nio-8080-exec-6] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 31(String)
2017-09-14 23:13:53.481 DEBUG 8388 --- [http-nio-8080-exec-6] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 23:13:53.482 DEBUG 8388 --- [http-nio-8080-exec-6] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 23:13:53.482 DEBUG 8388 --- [http-nio-8080-exec-6] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 28(String)
2017-09-14 23:13:53.483 DEBUG 8388 --- [http-nio-8080-exec-6] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 23:13:53.484 DEBUG 8388 --- [http-nio-8080-exec-6] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 23:13:53.484 DEBUG 8388 --- [http-nio-8080-exec-6] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 14(String)
2017-09-14 23:13:53.486 DEBUG 8388 --- [http-nio-8080-exec-6] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 23:13:53.486 DEBUG 8388 --- [http-nio-8080-exec-6] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 23:13:53.487 DEBUG 8388 --- [http-nio-8080-exec-6] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 1(String)
2017-09-14 23:13:53.488 DEBUG 8388 --- [http-nio-8080-exec-6] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 23:13:53.488 DEBUG 8388 --- [http-nio-8080-exec-6] p.p.blog.repository.BlogRepo.list        : <==      Total: 10
2017-09-14 23:13:53.492 DEBUG 8388 --- [http-nio-8080-exec-6] p.p.blog.repository.BlogRepo.getTotal    : ==>  Preparing: select count(*) from t_blog 
2017-09-14 23:13:53.492 DEBUG 8388 --- [http-nio-8080-exec-6] p.p.blog.repository.BlogRepo.getTotal    : ==> Parameters: 
2017-09-14 23:13:53.494 DEBUG 8388 --- [http-nio-8080-exec-6] p.p.blog.repository.BlogRepo.getTotal    : <==      Total: 1
2017-09-14 23:14:01.995 DEBUG 8388 --- [http-nio-8080-exec-9] p.p.blog.repository.BlogRepo.list        : ==>  Preparing: select * from t_blog order by releaseDate desc limit ?,? 
2017-09-14 23:14:01.995 DEBUG 8388 --- [http-nio-8080-exec-9] p.p.blog.repository.BlogRepo.list        : ==> Parameters: 10(Integer), 10(Integer)
2017-09-14 23:14:02.000 DEBUG 8388 --- [http-nio-8080-exec-9] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 23:14:02.001 DEBUG 8388 --- [http-nio-8080-exec-9] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 11(String)
2017-09-14 23:14:02.002 DEBUG 8388 --- [http-nio-8080-exec-9] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 23:14:02.003 DEBUG 8388 --- [http-nio-8080-exec-9] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 23:14:02.003 DEBUG 8388 --- [http-nio-8080-exec-9] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 12(String)
2017-09-14 23:14:02.004 DEBUG 8388 --- [http-nio-8080-exec-9] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 23:14:02.005 DEBUG 8388 --- [http-nio-8080-exec-9] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 23:14:02.005 DEBUG 8388 --- [http-nio-8080-exec-9] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 27(String)
2017-09-14 23:14:02.006 DEBUG 8388 --- [http-nio-8080-exec-9] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 23:14:02.007 DEBUG 8388 --- [http-nio-8080-exec-9] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 23:14:02.007 DEBUG 8388 --- [http-nio-8080-exec-9] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 31(String)
2017-09-14 23:14:02.009 DEBUG 8388 --- [http-nio-8080-exec-9] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 23:14:02.009 DEBUG 8388 --- [http-nio-8080-exec-9] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 23:14:02.009 DEBUG 8388 --- [http-nio-8080-exec-9] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 28(String)
2017-09-14 23:14:02.011 DEBUG 8388 --- [http-nio-8080-exec-9] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 23:14:02.012 DEBUG 8388 --- [http-nio-8080-exec-9] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 23:14:02.012 DEBUG 8388 --- [http-nio-8080-exec-9] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 14(String)
2017-09-14 23:14:02.013 DEBUG 8388 --- [http-nio-8080-exec-9] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 23:14:02.014 DEBUG 8388 --- [http-nio-8080-exec-9] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 23:14:02.014 DEBUG 8388 --- [http-nio-8080-exec-9] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 1(String)
2017-09-14 23:14:02.017 DEBUG 8388 --- [http-nio-8080-exec-9] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 23:14:02.017 DEBUG 8388 --- [http-nio-8080-exec-9] p.p.blog.repository.BlogRepo.list        : <==      Total: 10
2017-09-14 23:14:02.022 DEBUG 8388 --- [http-nio-8080-exec-9] p.p.blog.repository.BlogRepo.getTotal    : ==>  Preparing: select count(*) from t_blog 
2017-09-14 23:14:02.023 DEBUG 8388 --- [http-nio-8080-exec-9] p.p.blog.repository.BlogRepo.getTotal    : ==> Parameters: 
2017-09-14 23:14:02.025 DEBUG 8388 --- [http-nio-8080-exec-9] p.p.blog.repository.BlogRepo.getTotal    : <==      Total: 1
2017-09-14 23:14:40.614 DEBUG 8388 --- [http-nio-8080-exec-2] p.p.blog.repository.BlogRepo.list        : ==>  Preparing: select * from t_blog order by releaseDate desc limit ?,? 
2017-09-14 23:14:40.615 DEBUG 8388 --- [http-nio-8080-exec-2] p.p.blog.repository.BlogRepo.list        : ==> Parameters: 10(Integer), 10(Integer)
2017-09-14 23:14:40.619 DEBUG 8388 --- [http-nio-8080-exec-2] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 23:14:40.619 DEBUG 8388 --- [http-nio-8080-exec-2] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 11(String)
2017-09-14 23:14:40.621 DEBUG 8388 --- [http-nio-8080-exec-2] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 23:14:40.621 DEBUG 8388 --- [http-nio-8080-exec-2] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 23:14:40.622 DEBUG 8388 --- [http-nio-8080-exec-2] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 12(String)
2017-09-14 23:14:40.623 DEBUG 8388 --- [http-nio-8080-exec-2] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 23:14:40.624 DEBUG 8388 --- [http-nio-8080-exec-2] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 23:14:40.625 DEBUG 8388 --- [http-nio-8080-exec-2] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 27(String)
2017-09-14 23:14:40.627 DEBUG 8388 --- [http-nio-8080-exec-2] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 23:14:40.627 DEBUG 8388 --- [http-nio-8080-exec-2] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 23:14:40.627 DEBUG 8388 --- [http-nio-8080-exec-2] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 31(String)
2017-09-14 23:14:40.629 DEBUG 8388 --- [http-nio-8080-exec-2] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 23:14:40.630 DEBUG 8388 --- [http-nio-8080-exec-2] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 23:14:40.630 DEBUG 8388 --- [http-nio-8080-exec-2] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 28(String)
2017-09-14 23:14:40.631 DEBUG 8388 --- [http-nio-8080-exec-2] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 23:14:40.632 DEBUG 8388 --- [http-nio-8080-exec-2] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 23:14:40.632 DEBUG 8388 --- [http-nio-8080-exec-2] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 14(String)
2017-09-14 23:14:40.634 DEBUG 8388 --- [http-nio-8080-exec-2] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 23:14:40.634 DEBUG 8388 --- [http-nio-8080-exec-2] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 23:14:40.634 DEBUG 8388 --- [http-nio-8080-exec-2] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 1(String)
2017-09-14 23:14:40.636 DEBUG 8388 --- [http-nio-8080-exec-2] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 23:14:40.636 DEBUG 8388 --- [http-nio-8080-exec-2] p.p.blog.repository.BlogRepo.list        : <==      Total: 10
2017-09-14 23:14:40.641 DEBUG 8388 --- [http-nio-8080-exec-2] p.p.blog.repository.BlogRepo.getTotal    : ==>  Preparing: select count(*) from t_blog 
2017-09-14 23:14:40.641 DEBUG 8388 --- [http-nio-8080-exec-2] p.p.blog.repository.BlogRepo.getTotal    : ==> Parameters: 
2017-09-14 23:14:40.642 DEBUG 8388 --- [http-nio-8080-exec-2] p.p.blog.repository.BlogRepo.getTotal    : <==      Total: 1
2017-09-14 23:15:08.501 DEBUG 8388 --- [http-nio-8080-exec-1] p.p.blog.repository.BlogRepo.list        : ==>  Preparing: select * from t_blog order by releaseDate desc limit ?,? 
2017-09-14 23:15:08.501 DEBUG 8388 --- [http-nio-8080-exec-1] p.p.blog.repository.BlogRepo.list        : ==> Parameters: 10(Integer), 10(Integer)
2017-09-14 23:15:08.504 DEBUG 8388 --- [http-nio-8080-exec-1] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 23:15:08.504 DEBUG 8388 --- [http-nio-8080-exec-1] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 11(String)
2017-09-14 23:15:08.506 DEBUG 8388 --- [http-nio-8080-exec-1] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 23:15:08.506 DEBUG 8388 --- [http-nio-8080-exec-1] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 23:15:08.507 DEBUG 8388 --- [http-nio-8080-exec-1] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 12(String)
2017-09-14 23:15:08.508 DEBUG 8388 --- [http-nio-8080-exec-1] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 23:15:08.509 DEBUG 8388 --- [http-nio-8080-exec-1] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 23:15:08.509 DEBUG 8388 --- [http-nio-8080-exec-1] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 27(String)
2017-09-14 23:15:08.511 DEBUG 8388 --- [http-nio-8080-exec-1] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 23:15:08.511 DEBUG 8388 --- [http-nio-8080-exec-1] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 23:15:08.512 DEBUG 8388 --- [http-nio-8080-exec-1] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 31(String)
2017-09-14 23:15:08.513 DEBUG 8388 --- [http-nio-8080-exec-1] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 23:15:08.514 DEBUG 8388 --- [http-nio-8080-exec-1] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 23:15:08.514 DEBUG 8388 --- [http-nio-8080-exec-1] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 28(String)
2017-09-14 23:15:08.515 DEBUG 8388 --- [http-nio-8080-exec-1] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 23:15:08.516 DEBUG 8388 --- [http-nio-8080-exec-1] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 23:15:08.516 DEBUG 8388 --- [http-nio-8080-exec-1] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 14(String)
2017-09-14 23:15:08.521 DEBUG 8388 --- [http-nio-8080-exec-1] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 23:15:08.522 DEBUG 8388 --- [http-nio-8080-exec-1] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 23:15:08.522 DEBUG 8388 --- [http-nio-8080-exec-1] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 1(String)
2017-09-14 23:15:08.524 DEBUG 8388 --- [http-nio-8080-exec-1] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 23:15:08.525 DEBUG 8388 --- [http-nio-8080-exec-1] p.p.blog.repository.BlogRepo.list        : <==      Total: 10
2017-09-14 23:15:08.529 DEBUG 8388 --- [http-nio-8080-exec-1] p.p.blog.repository.BlogRepo.getTotal    : ==>  Preparing: select count(*) from t_blog 
2017-09-14 23:15:08.530 DEBUG 8388 --- [http-nio-8080-exec-1] p.p.blog.repository.BlogRepo.getTotal    : ==> Parameters: 
2017-09-14 23:15:08.531 DEBUG 8388 --- [http-nio-8080-exec-1] p.p.blog.repository.BlogRepo.getTotal    : <==      Total: 1
2017-09-14 23:15:31.495 DEBUG 8388 --- [http-nio-8080-exec-3] p.p.blog.repository.BlogRepo.list        : ==>  Preparing: select * from t_blog order by releaseDate desc limit ?,? 
2017-09-14 23:15:31.496 DEBUG 8388 --- [http-nio-8080-exec-3] p.p.blog.repository.BlogRepo.list        : ==> Parameters: 10(Integer), 10(Integer)
2017-09-14 23:15:31.501 DEBUG 8388 --- [http-nio-8080-exec-3] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 23:15:31.502 DEBUG 8388 --- [http-nio-8080-exec-3] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 11(String)
2017-09-14 23:15:31.503 DEBUG 8388 --- [http-nio-8080-exec-3] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 23:15:31.504 DEBUG 8388 --- [http-nio-8080-exec-3] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 23:15:31.505 DEBUG 8388 --- [http-nio-8080-exec-3] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 12(String)
2017-09-14 23:15:31.506 DEBUG 8388 --- [http-nio-8080-exec-3] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 23:15:31.506 DEBUG 8388 --- [http-nio-8080-exec-3] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 23:15:31.507 DEBUG 8388 --- [http-nio-8080-exec-3] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 27(String)
2017-09-14 23:15:31.507 DEBUG 8388 --- [http-nio-8080-exec-3] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 23:15:31.508 DEBUG 8388 --- [http-nio-8080-exec-3] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 23:15:31.508 DEBUG 8388 --- [http-nio-8080-exec-3] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 31(String)
2017-09-14 23:15:31.510 DEBUG 8388 --- [http-nio-8080-exec-3] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 23:15:31.510 DEBUG 8388 --- [http-nio-8080-exec-3] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 23:15:31.510 DEBUG 8388 --- [http-nio-8080-exec-3] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 28(String)
2017-09-14 23:15:31.511 DEBUG 8388 --- [http-nio-8080-exec-3] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 23:15:31.512 DEBUG 8388 --- [http-nio-8080-exec-3] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 23:15:31.512 DEBUG 8388 --- [http-nio-8080-exec-3] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 14(String)
2017-09-14 23:15:31.513 DEBUG 8388 --- [http-nio-8080-exec-3] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 23:15:31.514 DEBUG 8388 --- [http-nio-8080-exec-3] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 23:15:31.514 DEBUG 8388 --- [http-nio-8080-exec-3] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 1(String)
2017-09-14 23:15:31.515 DEBUG 8388 --- [http-nio-8080-exec-3] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 23:15:31.516 DEBUG 8388 --- [http-nio-8080-exec-3] p.p.blog.repository.BlogRepo.list        : <==      Total: 10
2017-09-14 23:15:31.521 DEBUG 8388 --- [http-nio-8080-exec-3] p.p.blog.repository.BlogRepo.getTotal    : ==>  Preparing: select count(*) from t_blog 
2017-09-14 23:15:31.521 DEBUG 8388 --- [http-nio-8080-exec-3] p.p.blog.repository.BlogRepo.getTotal    : ==> Parameters: 
2017-09-14 23:15:31.522 DEBUG 8388 --- [http-nio-8080-exec-3] p.p.blog.repository.BlogRepo.getTotal    : <==      Total: 1
2017-09-14 23:16:01.035 DEBUG 8388 --- [http-nio-8080-exec-6] p.p.blog.repository.BlogRepo.list        : ==>  Preparing: select * from t_blog order by releaseDate desc limit ?,? 
2017-09-14 23:16:01.036 DEBUG 8388 --- [http-nio-8080-exec-6] p.p.blog.repository.BlogRepo.list        : ==> Parameters: 10(Integer), 10(Integer)
2017-09-14 23:16:01.043 DEBUG 8388 --- [http-nio-8080-exec-6] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 23:16:01.044 DEBUG 8388 --- [http-nio-8080-exec-6] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 11(String)
2017-09-14 23:16:01.045 DEBUG 8388 --- [http-nio-8080-exec-6] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 23:16:01.046 DEBUG 8388 --- [http-nio-8080-exec-6] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 23:16:01.046 DEBUG 8388 --- [http-nio-8080-exec-6] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 12(String)
2017-09-14 23:16:01.047 DEBUG 8388 --- [http-nio-8080-exec-6] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 23:16:01.048 DEBUG 8388 --- [http-nio-8080-exec-6] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 23:16:01.048 DEBUG 8388 --- [http-nio-8080-exec-6] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 27(String)
2017-09-14 23:16:01.050 DEBUG 8388 --- [http-nio-8080-exec-6] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 23:16:01.051 DEBUG 8388 --- [http-nio-8080-exec-6] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 23:16:01.051 DEBUG 8388 --- [http-nio-8080-exec-6] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 31(String)
2017-09-14 23:16:01.052 DEBUG 8388 --- [http-nio-8080-exec-6] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 23:16:01.053 DEBUG 8388 --- [http-nio-8080-exec-6] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 23:16:01.053 DEBUG 8388 --- [http-nio-8080-exec-6] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 28(String)
2017-09-14 23:16:01.054 DEBUG 8388 --- [http-nio-8080-exec-6] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 23:16:01.055 DEBUG 8388 --- [http-nio-8080-exec-6] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 23:16:01.055 DEBUG 8388 --- [http-nio-8080-exec-6] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 14(String)
2017-09-14 23:16:01.056 DEBUG 8388 --- [http-nio-8080-exec-6] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 23:16:01.057 DEBUG 8388 --- [http-nio-8080-exec-6] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 23:16:01.058 DEBUG 8388 --- [http-nio-8080-exec-6] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 1(String)
2017-09-14 23:16:01.059 DEBUG 8388 --- [http-nio-8080-exec-6] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 23:16:01.059 DEBUG 8388 --- [http-nio-8080-exec-6] p.p.blog.repository.BlogRepo.list        : <==      Total: 10
2017-09-14 23:16:01.064 DEBUG 8388 --- [http-nio-8080-exec-6] p.p.blog.repository.BlogRepo.getTotal    : ==>  Preparing: select count(*) from t_blog 
2017-09-14 23:16:01.064 DEBUG 8388 --- [http-nio-8080-exec-6] p.p.blog.repository.BlogRepo.getTotal    : ==> Parameters: 
2017-09-14 23:16:01.065 DEBUG 8388 --- [http-nio-8080-exec-6] p.p.blog.repository.BlogRepo.getTotal    : <==      Total: 1
2017-09-14 23:16:19.611 DEBUG 8388 --- [http-nio-8080-exec-1] p.p.blog.repository.BlogRepo.list        : ==>  Preparing: select * from t_blog order by releaseDate desc limit ?,? 
2017-09-14 23:16:19.611 DEBUG 8388 --- [http-nio-8080-exec-1] p.p.blog.repository.BlogRepo.list        : ==> Parameters: 10(Integer), 10(Integer)
2017-09-14 23:16:19.614 DEBUG 8388 --- [http-nio-8080-exec-1] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 23:16:19.614 DEBUG 8388 --- [http-nio-8080-exec-1] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 11(String)
2017-09-14 23:16:19.617 DEBUG 8388 --- [http-nio-8080-exec-1] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 23:16:19.617 DEBUG 8388 --- [http-nio-8080-exec-1] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 23:16:19.617 DEBUG 8388 --- [http-nio-8080-exec-1] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 12(String)
2017-09-14 23:16:19.619 DEBUG 8388 --- [http-nio-8080-exec-1] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 23:16:19.619 DEBUG 8388 --- [http-nio-8080-exec-1] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 23:16:19.619 DEBUG 8388 --- [http-nio-8080-exec-1] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 27(String)
2017-09-14 23:16:19.620 DEBUG 8388 --- [http-nio-8080-exec-1] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 23:16:19.621 DEBUG 8388 --- [http-nio-8080-exec-1] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 23:16:19.621 DEBUG 8388 --- [http-nio-8080-exec-1] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 31(String)
2017-09-14 23:16:19.622 DEBUG 8388 --- [http-nio-8080-exec-1] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 23:16:19.623 DEBUG 8388 --- [http-nio-8080-exec-1] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 23:16:19.623 DEBUG 8388 --- [http-nio-8080-exec-1] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 28(String)
2017-09-14 23:16:19.625 DEBUG 8388 --- [http-nio-8080-exec-1] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 23:16:19.625 DEBUG 8388 --- [http-nio-8080-exec-1] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 23:16:19.626 DEBUG 8388 --- [http-nio-8080-exec-1] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 14(String)
2017-09-14 23:16:19.627 DEBUG 8388 --- [http-nio-8080-exec-1] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 23:16:19.633 DEBUG 8388 --- [http-nio-8080-exec-1] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 23:16:19.633 DEBUG 8388 --- [http-nio-8080-exec-1] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 1(String)
2017-09-14 23:16:19.636 DEBUG 8388 --- [http-nio-8080-exec-1] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 23:16:19.637 DEBUG 8388 --- [http-nio-8080-exec-1] p.p.blog.repository.BlogRepo.list        : <==      Total: 10
2017-09-14 23:16:19.641 DEBUG 8388 --- [http-nio-8080-exec-1] p.p.blog.repository.BlogRepo.getTotal    : ==>  Preparing: select count(*) from t_blog 
2017-09-14 23:16:19.641 DEBUG 8388 --- [http-nio-8080-exec-1] p.p.blog.repository.BlogRepo.getTotal    : ==> Parameters: 
2017-09-14 23:16:19.642 DEBUG 8388 --- [http-nio-8080-exec-1] p.p.blog.repository.BlogRepo.getTotal    : <==      Total: 1
2017-09-14 23:16:29.488 DEBUG 8388 --- [http-nio-8080-exec-2] p.p.blog.repository.BlogRepo.list        : ==>  Preparing: select * from t_blog order by releaseDate desc limit ?,? 
2017-09-14 23:16:29.488 DEBUG 8388 --- [http-nio-8080-exec-2] p.p.blog.repository.BlogRepo.list        : ==> Parameters: 10(Integer), 10(Integer)
2017-09-14 23:16:29.494 DEBUG 8388 --- [http-nio-8080-exec-2] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 23:16:29.494 DEBUG 8388 --- [http-nio-8080-exec-2] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 11(String)
2017-09-14 23:16:29.496 DEBUG 8388 --- [http-nio-8080-exec-2] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 23:16:29.497 DEBUG 8388 --- [http-nio-8080-exec-2] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 23:16:29.497 DEBUG 8388 --- [http-nio-8080-exec-2] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 12(String)
2017-09-14 23:16:29.498 DEBUG 8388 --- [http-nio-8080-exec-2] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 23:16:29.499 DEBUG 8388 --- [http-nio-8080-exec-2] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 23:16:29.499 DEBUG 8388 --- [http-nio-8080-exec-2] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 27(String)
2017-09-14 23:16:29.500 DEBUG 8388 --- [http-nio-8080-exec-2] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 23:16:29.501 DEBUG 8388 --- [http-nio-8080-exec-2] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 23:16:29.501 DEBUG 8388 --- [http-nio-8080-exec-2] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 31(String)
2017-09-14 23:16:29.503 DEBUG 8388 --- [http-nio-8080-exec-2] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 23:16:29.504 DEBUG 8388 --- [http-nio-8080-exec-2] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 23:16:29.504 DEBUG 8388 --- [http-nio-8080-exec-2] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 28(String)
2017-09-14 23:16:29.506 DEBUG 8388 --- [http-nio-8080-exec-2] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 23:16:29.507 DEBUG 8388 --- [http-nio-8080-exec-2] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 23:16:29.507 DEBUG 8388 --- [http-nio-8080-exec-2] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 14(String)
2017-09-14 23:16:29.509 DEBUG 8388 --- [http-nio-8080-exec-2] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 23:16:29.509 DEBUG 8388 --- [http-nio-8080-exec-2] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 23:16:29.510 DEBUG 8388 --- [http-nio-8080-exec-2] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 1(String)
2017-09-14 23:16:29.511 DEBUG 8388 --- [http-nio-8080-exec-2] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 23:16:29.511 DEBUG 8388 --- [http-nio-8080-exec-2] p.p.blog.repository.BlogRepo.list        : <==      Total: 10
2017-09-14 23:16:29.516 DEBUG 8388 --- [http-nio-8080-exec-2] p.p.blog.repository.BlogRepo.getTotal    : ==>  Preparing: select count(*) from t_blog 
2017-09-14 23:16:29.517 DEBUG 8388 --- [http-nio-8080-exec-2] p.p.blog.repository.BlogRepo.getTotal    : ==> Parameters: 
2017-09-14 23:16:29.518 DEBUG 8388 --- [http-nio-8080-exec-2] p.p.blog.repository.BlogRepo.getTotal    : <==      Total: 1
2017-09-14 23:16:49.229 DEBUG 8388 --- [http-nio-8080-exec-8] p.p.blog.repository.BlogRepo.list        : ==>  Preparing: select * from t_blog order by releaseDate desc limit ?,? 
2017-09-14 23:16:49.230 DEBUG 8388 --- [http-nio-8080-exec-8] p.p.blog.repository.BlogRepo.list        : ==> Parameters: 10(Integer), 10(Integer)
2017-09-14 23:16:49.233 DEBUG 8388 --- [http-nio-8080-exec-8] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 23:16:49.233 DEBUG 8388 --- [http-nio-8080-exec-8] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 11(String)
2017-09-14 23:16:49.234 DEBUG 8388 --- [http-nio-8080-exec-8] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 23:16:49.235 DEBUG 8388 --- [http-nio-8080-exec-8] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 23:16:49.235 DEBUG 8388 --- [http-nio-8080-exec-8] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 12(String)
2017-09-14 23:16:49.237 DEBUG 8388 --- [http-nio-8080-exec-8] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 23:16:49.238 DEBUG 8388 --- [http-nio-8080-exec-8] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 23:16:49.238 DEBUG 8388 --- [http-nio-8080-exec-8] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 27(String)
2017-09-14 23:16:49.240 DEBUG 8388 --- [http-nio-8080-exec-8] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 23:16:49.241 DEBUG 8388 --- [http-nio-8080-exec-8] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 23:16:49.241 DEBUG 8388 --- [http-nio-8080-exec-8] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 31(String)
2017-09-14 23:16:49.244 DEBUG 8388 --- [http-nio-8080-exec-8] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 23:16:49.245 DEBUG 8388 --- [http-nio-8080-exec-8] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 23:16:49.245 DEBUG 8388 --- [http-nio-8080-exec-8] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 28(String)
2017-09-14 23:16:49.247 DEBUG 8388 --- [http-nio-8080-exec-8] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 23:16:49.248 DEBUG 8388 --- [http-nio-8080-exec-8] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 23:16:49.249 DEBUG 8388 --- [http-nio-8080-exec-8] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 14(String)
2017-09-14 23:16:49.250 DEBUG 8388 --- [http-nio-8080-exec-8] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 23:16:49.251 DEBUG 8388 --- [http-nio-8080-exec-8] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 23:16:49.251 DEBUG 8388 --- [http-nio-8080-exec-8] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 1(String)
2017-09-14 23:16:49.253 DEBUG 8388 --- [http-nio-8080-exec-8] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 23:16:49.253 DEBUG 8388 --- [http-nio-8080-exec-8] p.p.blog.repository.BlogRepo.list        : <==      Total: 10
2017-09-14 23:16:49.257 DEBUG 8388 --- [http-nio-8080-exec-8] p.p.blog.repository.BlogRepo.getTotal    : ==>  Preparing: select count(*) from t_blog 
2017-09-14 23:16:49.257 DEBUG 8388 --- [http-nio-8080-exec-8] p.p.blog.repository.BlogRepo.getTotal    : ==> Parameters: 
2017-09-14 23:16:49.262 DEBUG 8388 --- [http-nio-8080-exec-8] p.p.blog.repository.BlogRepo.getTotal    : <==      Total: 1
2017-09-14 23:18:01.637 DEBUG 8388 --- [http-nio-8080-exec-3] p.p.blog.repository.BlogRepo.list        : ==>  Preparing: select * from t_blog order by releaseDate desc limit ?,? 
2017-09-14 23:18:01.637 DEBUG 8388 --- [http-nio-8080-exec-3] p.p.blog.repository.BlogRepo.list        : ==> Parameters: 10(Integer), 10(Integer)
2017-09-14 23:18:01.641 DEBUG 8388 --- [http-nio-8080-exec-3] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 23:18:01.641 DEBUG 8388 --- [http-nio-8080-exec-3] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 11(String)
2017-09-14 23:18:01.644 DEBUG 8388 --- [http-nio-8080-exec-3] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 23:18:01.645 DEBUG 8388 --- [http-nio-8080-exec-3] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 23:18:01.646 DEBUG 8388 --- [http-nio-8080-exec-3] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 12(String)
2017-09-14 23:18:01.649 DEBUG 8388 --- [http-nio-8080-exec-3] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 23:18:01.650 DEBUG 8388 --- [http-nio-8080-exec-3] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 23:18:01.650 DEBUG 8388 --- [http-nio-8080-exec-3] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 27(String)
2017-09-14 23:18:01.653 DEBUG 8388 --- [http-nio-8080-exec-3] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 23:18:01.653 DEBUG 8388 --- [http-nio-8080-exec-3] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 23:18:01.654 DEBUG 8388 --- [http-nio-8080-exec-3] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 31(String)
2017-09-14 23:18:01.656 DEBUG 8388 --- [http-nio-8080-exec-3] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 23:18:01.657 DEBUG 8388 --- [http-nio-8080-exec-3] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 23:18:01.657 DEBUG 8388 --- [http-nio-8080-exec-3] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 28(String)
2017-09-14 23:18:01.658 DEBUG 8388 --- [http-nio-8080-exec-3] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 23:18:01.659 DEBUG 8388 --- [http-nio-8080-exec-3] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 23:18:01.659 DEBUG 8388 --- [http-nio-8080-exec-3] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 14(String)
2017-09-14 23:18:01.660 DEBUG 8388 --- [http-nio-8080-exec-3] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 23:18:01.661 DEBUG 8388 --- [http-nio-8080-exec-3] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 23:18:01.661 DEBUG 8388 --- [http-nio-8080-exec-3] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 1(String)
2017-09-14 23:18:01.662 DEBUG 8388 --- [http-nio-8080-exec-3] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 23:18:01.663 DEBUG 8388 --- [http-nio-8080-exec-3] p.p.blog.repository.BlogRepo.list        : <==      Total: 10
2017-09-14 23:18:01.667 DEBUG 8388 --- [http-nio-8080-exec-3] p.p.blog.repository.BlogRepo.getTotal    : ==>  Preparing: select count(*) from t_blog 
2017-09-14 23:18:01.667 DEBUG 8388 --- [http-nio-8080-exec-3] p.p.blog.repository.BlogRepo.getTotal    : ==> Parameters: 
2017-09-14 23:18:01.669 DEBUG 8388 --- [http-nio-8080-exec-3] p.p.blog.repository.BlogRepo.getTotal    : <==      Total: 1
2017-09-14 23:18:22.266 DEBUG 8388 --- [http-nio-8080-exec-5] p.p.blog.repository.BlogRepo.list        : ==>  Preparing: select * from t_blog order by releaseDate desc limit ?,? 
2017-09-14 23:18:22.267 DEBUG 8388 --- [http-nio-8080-exec-5] p.p.blog.repository.BlogRepo.list        : ==> Parameters: 10(Integer), 10(Integer)
2017-09-14 23:18:22.270 DEBUG 8388 --- [http-nio-8080-exec-5] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 23:18:22.270 DEBUG 8388 --- [http-nio-8080-exec-5] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 11(String)
2017-09-14 23:18:22.271 DEBUG 8388 --- [http-nio-8080-exec-5] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 23:18:22.272 DEBUG 8388 --- [http-nio-8080-exec-5] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 23:18:22.272 DEBUG 8388 --- [http-nio-8080-exec-5] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 12(String)
2017-09-14 23:18:22.273 DEBUG 8388 --- [http-nio-8080-exec-5] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 23:18:22.275 DEBUG 8388 --- [http-nio-8080-exec-5] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 23:18:22.276 DEBUG 8388 --- [http-nio-8080-exec-5] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 27(String)
2017-09-14 23:18:22.277 DEBUG 8388 --- [http-nio-8080-exec-5] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 23:18:22.277 DEBUG 8388 --- [http-nio-8080-exec-5] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 23:18:22.278 DEBUG 8388 --- [http-nio-8080-exec-5] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 31(String)
2017-09-14 23:18:22.279 DEBUG 8388 --- [http-nio-8080-exec-5] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 23:18:22.279 DEBUG 8388 --- [http-nio-8080-exec-5] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 23:18:22.280 DEBUG 8388 --- [http-nio-8080-exec-5] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 28(String)
2017-09-14 23:18:22.281 DEBUG 8388 --- [http-nio-8080-exec-5] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 23:18:22.282 DEBUG 8388 --- [http-nio-8080-exec-5] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 23:18:22.282 DEBUG 8388 --- [http-nio-8080-exec-5] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 14(String)
2017-09-14 23:18:22.284 DEBUG 8388 --- [http-nio-8080-exec-5] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 23:18:22.284 DEBUG 8388 --- [http-nio-8080-exec-5] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 23:18:22.285 DEBUG 8388 --- [http-nio-8080-exec-5] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 1(String)
2017-09-14 23:18:22.286 DEBUG 8388 --- [http-nio-8080-exec-5] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 23:18:22.287 DEBUG 8388 --- [http-nio-8080-exec-5] p.p.blog.repository.BlogRepo.list        : <==      Total: 10
2017-09-14 23:18:22.291 DEBUG 8388 --- [http-nio-8080-exec-5] p.p.blog.repository.BlogRepo.getTotal    : ==>  Preparing: select count(*) from t_blog 
2017-09-14 23:18:22.291 DEBUG 8388 --- [http-nio-8080-exec-5] p.p.blog.repository.BlogRepo.getTotal    : ==> Parameters: 
2017-09-14 23:18:22.293 DEBUG 8388 --- [http-nio-8080-exec-5] p.p.blog.repository.BlogRepo.getTotal    : <==      Total: 1
2017-09-14 23:18:38.905 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.blog.repository.BlogRepo.list        : ==>  Preparing: select * from t_blog order by releaseDate desc limit ?,? 
2017-09-14 23:18:38.906 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.blog.repository.BlogRepo.list        : ==> Parameters: 10(Integer), 10(Integer)
2017-09-14 23:18:38.909 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 23:18:38.910 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 11(String)
2017-09-14 23:18:38.911 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 23:18:38.912 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 23:18:38.913 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 12(String)
2017-09-14 23:18:38.914 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 23:18:38.915 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 23:18:38.915 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 27(String)
2017-09-14 23:18:38.917 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 23:18:38.918 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 23:18:38.918 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 31(String)
2017-09-14 23:18:38.920 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 23:18:38.920 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 23:18:38.921 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 28(String)
2017-09-14 23:18:38.922 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 23:18:38.923 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 23:18:38.923 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 14(String)
2017-09-14 23:18:38.924 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 23:18:38.925 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 23:18:38.925 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 1(String)
2017-09-14 23:18:38.926 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 23:18:38.926 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.blog.repository.BlogRepo.list        : <==      Total: 10
2017-09-14 23:18:38.931 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.blog.repository.BlogRepo.getTotal    : ==>  Preparing: select count(*) from t_blog 
2017-09-14 23:18:38.931 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.blog.repository.BlogRepo.getTotal    : ==> Parameters: 
2017-09-14 23:18:38.932 DEBUG 8388 --- [http-nio-8080-exec-7] p.p.blog.repository.BlogRepo.getTotal    : <==      Total: 1
2017-09-14 23:18:41.132 DEBUG 8388 --- [http-nio-8080-exec-1] p.p.blog.repository.BlogRepo.list        : ==>  Preparing: select * from t_blog order by releaseDate desc limit ?,? 
2017-09-14 23:18:41.133 DEBUG 8388 --- [http-nio-8080-exec-1] p.p.blog.repository.BlogRepo.list        : ==> Parameters: 10(Integer), 10(Integer)
2017-09-14 23:18:41.138 DEBUG 8388 --- [http-nio-8080-exec-1] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 23:18:41.138 DEBUG 8388 --- [http-nio-8080-exec-1] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 11(String)
2017-09-14 23:18:41.139 DEBUG 8388 --- [http-nio-8080-exec-1] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 23:18:41.140 DEBUG 8388 --- [http-nio-8080-exec-1] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 23:18:41.140 DEBUG 8388 --- [http-nio-8080-exec-1] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 12(String)
2017-09-14 23:18:41.141 DEBUG 8388 --- [http-nio-8080-exec-1] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 23:18:41.142 DEBUG 8388 --- [http-nio-8080-exec-1] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 23:18:41.142 DEBUG 8388 --- [http-nio-8080-exec-1] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 27(String)
2017-09-14 23:18:41.144 DEBUG 8388 --- [http-nio-8080-exec-1] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 23:18:41.144 DEBUG 8388 --- [http-nio-8080-exec-1] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 23:18:41.144 DEBUG 8388 --- [http-nio-8080-exec-1] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 31(String)
2017-09-14 23:18:41.147 DEBUG 8388 --- [http-nio-8080-exec-1] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 23:18:41.147 DEBUG 8388 --- [http-nio-8080-exec-1] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 23:18:41.147 DEBUG 8388 --- [http-nio-8080-exec-1] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 28(String)
2017-09-14 23:18:41.149 DEBUG 8388 --- [http-nio-8080-exec-1] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 23:18:41.149 DEBUG 8388 --- [http-nio-8080-exec-1] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 23:18:41.149 DEBUG 8388 --- [http-nio-8080-exec-1] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 14(String)
2017-09-14 23:18:41.151 DEBUG 8388 --- [http-nio-8080-exec-1] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 23:18:41.151 DEBUG 8388 --- [http-nio-8080-exec-1] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 23:18:41.152 DEBUG 8388 --- [http-nio-8080-exec-1] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 1(String)
2017-09-14 23:18:41.153 DEBUG 8388 --- [http-nio-8080-exec-1] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 23:18:41.153 DEBUG 8388 --- [http-nio-8080-exec-1] p.p.blog.repository.BlogRepo.list        : <==      Total: 10
2017-09-14 23:18:41.157 DEBUG 8388 --- [http-nio-8080-exec-1] p.p.blog.repository.BlogRepo.getTotal    : ==>  Preparing: select count(*) from t_blog 
2017-09-14 23:18:41.158 DEBUG 8388 --- [http-nio-8080-exec-1] p.p.blog.repository.BlogRepo.getTotal    : ==> Parameters: 
2017-09-14 23:18:41.159 DEBUG 8388 --- [http-nio-8080-exec-1] p.p.blog.repository.BlogRepo.getTotal    : <==      Total: 1
2017-09-14 23:20:43.016 DEBUG 8388 --- [http-nio-8080-exec-8] p.p.blog.repository.BlogRepo.list        : ==>  Preparing: select * from t_blog order by releaseDate desc limit ?,? 
2017-09-14 23:20:43.016 DEBUG 8388 --- [http-nio-8080-exec-8] p.p.blog.repository.BlogRepo.list        : ==> Parameters: 10(Integer), 10(Integer)
2017-09-14 23:20:43.019 DEBUG 8388 --- [http-nio-8080-exec-8] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 23:20:43.020 DEBUG 8388 --- [http-nio-8080-exec-8] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 11(String)
2017-09-14 23:20:43.021 DEBUG 8388 --- [http-nio-8080-exec-8] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 23:20:43.021 DEBUG 8388 --- [http-nio-8080-exec-8] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 23:20:43.022 DEBUG 8388 --- [http-nio-8080-exec-8] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 12(String)
2017-09-14 23:20:43.023 DEBUG 8388 --- [http-nio-8080-exec-8] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 23:20:43.023 DEBUG 8388 --- [http-nio-8080-exec-8] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 23:20:43.024 DEBUG 8388 --- [http-nio-8080-exec-8] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 27(String)
2017-09-14 23:20:43.024 DEBUG 8388 --- [http-nio-8080-exec-8] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 23:20:43.024 DEBUG 8388 --- [http-nio-8080-exec-8] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 23:20:43.024 DEBUG 8388 --- [http-nio-8080-exec-8] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 31(String)
2017-09-14 23:20:43.025 DEBUG 8388 --- [http-nio-8080-exec-8] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 23:20:43.025 DEBUG 8388 --- [http-nio-8080-exec-8] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 23:20:43.026 DEBUG 8388 --- [http-nio-8080-exec-8] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 28(String)
2017-09-14 23:20:43.026 DEBUG 8388 --- [http-nio-8080-exec-8] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 23:20:43.027 DEBUG 8388 --- [http-nio-8080-exec-8] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 23:20:43.027 DEBUG 8388 --- [http-nio-8080-exec-8] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 14(String)
2017-09-14 23:20:43.027 DEBUG 8388 --- [http-nio-8080-exec-8] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 23:20:43.027 DEBUG 8388 --- [http-nio-8080-exec-8] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 23:20:43.027 DEBUG 8388 --- [http-nio-8080-exec-8] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 1(String)
2017-09-14 23:20:43.028 DEBUG 8388 --- [http-nio-8080-exec-8] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 23:20:43.028 DEBUG 8388 --- [http-nio-8080-exec-8] p.p.blog.repository.BlogRepo.list        : <==      Total: 10
2017-09-14 23:20:43.032 DEBUG 8388 --- [http-nio-8080-exec-8] p.p.blog.repository.BlogRepo.getTotal    : ==>  Preparing: select count(*) from t_blog 
2017-09-14 23:20:43.033 DEBUG 8388 --- [http-nio-8080-exec-8] p.p.blog.repository.BlogRepo.getTotal    : ==> Parameters: 
2017-09-14 23:20:43.034 DEBUG 8388 --- [http-nio-8080-exec-8] p.p.blog.repository.BlogRepo.getTotal    : <==      Total: 1
2017-09-14 23:20:53.818 DEBUG 8388 --- [http-nio-8080-exec-4] p.p.blog.repository.BlogRepo.list        : ==>  Preparing: select * from t_blog order by releaseDate desc limit ?,? 
2017-09-14 23:20:53.818 DEBUG 8388 --- [http-nio-8080-exec-4] p.p.blog.repository.BlogRepo.list        : ==> Parameters: 10(Integer), 10(Integer)
2017-09-14 23:20:53.824 DEBUG 8388 --- [http-nio-8080-exec-4] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 23:20:53.824 DEBUG 8388 --- [http-nio-8080-exec-4] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 11(String)
2017-09-14 23:20:53.826 DEBUG 8388 --- [http-nio-8080-exec-4] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 23:20:53.826 DEBUG 8388 --- [http-nio-8080-exec-4] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 23:20:53.826 DEBUG 8388 --- [http-nio-8080-exec-4] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 12(String)
2017-09-14 23:20:53.828 DEBUG 8388 --- [http-nio-8080-exec-4] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 23:20:53.828 DEBUG 8388 --- [http-nio-8080-exec-4] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 23:20:53.828 DEBUG 8388 --- [http-nio-8080-exec-4] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 27(String)
2017-09-14 23:20:53.831 DEBUG 8388 --- [http-nio-8080-exec-4] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 23:20:53.831 DEBUG 8388 --- [http-nio-8080-exec-4] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 23:20:53.831 DEBUG 8388 --- [http-nio-8080-exec-4] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 31(String)
2017-09-14 23:20:53.833 DEBUG 8388 --- [http-nio-8080-exec-4] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 23:20:53.833 DEBUG 8388 --- [http-nio-8080-exec-4] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 23:20:53.833 DEBUG 8388 --- [http-nio-8080-exec-4] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 28(String)
2017-09-14 23:20:53.834 DEBUG 8388 --- [http-nio-8080-exec-4] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 23:20:53.835 DEBUG 8388 --- [http-nio-8080-exec-4] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 23:20:53.835 DEBUG 8388 --- [http-nio-8080-exec-4] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 14(String)
2017-09-14 23:20:53.836 DEBUG 8388 --- [http-nio-8080-exec-4] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 23:20:53.837 DEBUG 8388 --- [http-nio-8080-exec-4] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 23:20:53.837 DEBUG 8388 --- [http-nio-8080-exec-4] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 1(String)
2017-09-14 23:20:53.838 DEBUG 8388 --- [http-nio-8080-exec-4] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 23:20:53.839 DEBUG 8388 --- [http-nio-8080-exec-4] p.p.blog.repository.BlogRepo.list        : <==      Total: 10
2017-09-14 23:20:53.844 DEBUG 8388 --- [http-nio-8080-exec-4] p.p.blog.repository.BlogRepo.getTotal    : ==>  Preparing: select count(*) from t_blog 
2017-09-14 23:20:53.844 DEBUG 8388 --- [http-nio-8080-exec-4] p.p.blog.repository.BlogRepo.getTotal    : ==> Parameters: 
2017-09-14 23:20:53.846 DEBUG 8388 --- [http-nio-8080-exec-4] p.p.blog.repository.BlogRepo.getTotal    : <==      Total: 1
2017-09-14 23:21:07.441 DEBUG 8388 --- [http-nio-8080-exec-10] p.p.blog.repository.BlogRepo.list        : ==>  Preparing: select * from t_blog order by releaseDate desc limit ?,? 
2017-09-14 23:21:07.441 DEBUG 8388 --- [http-nio-8080-exec-10] p.p.blog.repository.BlogRepo.list        : ==> Parameters: 10(Integer), 10(Integer)
2017-09-14 23:21:07.445 DEBUG 8388 --- [http-nio-8080-exec-10] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 23:21:07.445 DEBUG 8388 --- [http-nio-8080-exec-10] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 11(String)
2017-09-14 23:21:07.446 DEBUG 8388 --- [http-nio-8080-exec-10] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 23:21:07.447 DEBUG 8388 --- [http-nio-8080-exec-10] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 23:21:07.447 DEBUG 8388 --- [http-nio-8080-exec-10] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 12(String)
2017-09-14 23:21:07.448 DEBUG 8388 --- [http-nio-8080-exec-10] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 23:21:07.449 DEBUG 8388 --- [http-nio-8080-exec-10] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 23:21:07.449 DEBUG 8388 --- [http-nio-8080-exec-10] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 27(String)
2017-09-14 23:21:07.451 DEBUG 8388 --- [http-nio-8080-exec-10] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 23:21:07.451 DEBUG 8388 --- [http-nio-8080-exec-10] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 23:21:07.451 DEBUG 8388 --- [http-nio-8080-exec-10] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 31(String)
2017-09-14 23:21:07.452 DEBUG 8388 --- [http-nio-8080-exec-10] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 23:21:07.453 DEBUG 8388 --- [http-nio-8080-exec-10] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 23:21:07.453 DEBUG 8388 --- [http-nio-8080-exec-10] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 28(String)
2017-09-14 23:21:07.454 DEBUG 8388 --- [http-nio-8080-exec-10] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 23:21:07.455 DEBUG 8388 --- [http-nio-8080-exec-10] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 23:21:07.455 DEBUG 8388 --- [http-nio-8080-exec-10] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 14(String)
2017-09-14 23:21:07.456 DEBUG 8388 --- [http-nio-8080-exec-10] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 23:21:07.457 DEBUG 8388 --- [http-nio-8080-exec-10] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 23:21:07.458 DEBUG 8388 --- [http-nio-8080-exec-10] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 1(String)
2017-09-14 23:21:07.460 DEBUG 8388 --- [http-nio-8080-exec-10] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 23:21:07.461 DEBUG 8388 --- [http-nio-8080-exec-10] p.p.blog.repository.BlogRepo.list        : <==      Total: 10
2017-09-14 23:21:07.465 DEBUG 8388 --- [http-nio-8080-exec-10] p.p.blog.repository.BlogRepo.getTotal    : ==>  Preparing: select count(*) from t_blog 
2017-09-14 23:21:07.466 DEBUG 8388 --- [http-nio-8080-exec-10] p.p.blog.repository.BlogRepo.getTotal    : ==> Parameters: 
2017-09-14 23:21:07.469 DEBUG 8388 --- [http-nio-8080-exec-10] p.p.blog.repository.BlogRepo.getTotal    : <==      Total: 1
2017-09-14 23:21:50.196 DEBUG 8388 --- [http-nio-8080-exec-1] p.p.blog.repository.BlogRepo.list        : ==>  Preparing: select * from t_blog order by releaseDate desc limit ?,? 
2017-09-14 23:21:50.197 DEBUG 8388 --- [http-nio-8080-exec-1] p.p.blog.repository.BlogRepo.list        : ==> Parameters: 10(Integer), 10(Integer)
2017-09-14 23:21:50.200 DEBUG 8388 --- [http-nio-8080-exec-1] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 23:21:50.201 DEBUG 8388 --- [http-nio-8080-exec-1] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 11(String)
2017-09-14 23:21:50.202 DEBUG 8388 --- [http-nio-8080-exec-1] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 23:21:50.203 DEBUG 8388 --- [http-nio-8080-exec-1] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 23:21:50.203 DEBUG 8388 --- [http-nio-8080-exec-1] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 12(String)
2017-09-14 23:21:50.204 DEBUG 8388 --- [http-nio-8080-exec-1] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 23:21:50.205 DEBUG 8388 --- [http-nio-8080-exec-1] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 23:21:50.205 DEBUG 8388 --- [http-nio-8080-exec-1] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 27(String)
2017-09-14 23:21:50.207 DEBUG 8388 --- [http-nio-8080-exec-1] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 23:21:50.208 DEBUG 8388 --- [http-nio-8080-exec-1] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 23:21:50.208 DEBUG 8388 --- [http-nio-8080-exec-1] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 31(String)
2017-09-14 23:21:50.209 DEBUG 8388 --- [http-nio-8080-exec-1] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 23:21:50.214 DEBUG 8388 --- [http-nio-8080-exec-1] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 23:21:50.214 DEBUG 8388 --- [http-nio-8080-exec-1] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 28(String)
2017-09-14 23:21:50.216 DEBUG 8388 --- [http-nio-8080-exec-1] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 23:21:50.216 DEBUG 8388 --- [http-nio-8080-exec-1] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 23:21:50.216 DEBUG 8388 --- [http-nio-8080-exec-1] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 14(String)
2017-09-14 23:21:50.219 DEBUG 8388 --- [http-nio-8080-exec-1] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 23:21:50.219 DEBUG 8388 --- [http-nio-8080-exec-1] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 23:21:50.220 DEBUG 8388 --- [http-nio-8080-exec-1] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 1(String)
2017-09-14 23:21:50.221 DEBUG 8388 --- [http-nio-8080-exec-1] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 23:21:50.221 DEBUG 8388 --- [http-nio-8080-exec-1] p.p.blog.repository.BlogRepo.list        : <==      Total: 10
2017-09-14 23:21:50.228 DEBUG 8388 --- [http-nio-8080-exec-1] p.p.blog.repository.BlogRepo.getTotal    : ==>  Preparing: select count(*) from t_blog 
2017-09-14 23:21:50.228 DEBUG 8388 --- [http-nio-8080-exec-1] p.p.blog.repository.BlogRepo.getTotal    : ==> Parameters: 
2017-09-14 23:21:50.230 DEBUG 8388 --- [http-nio-8080-exec-1] p.p.blog.repository.BlogRepo.getTotal    : <==      Total: 1
2017-09-14 23:22:51.491 DEBUG 8388 --- [http-nio-8080-exec-4] p.p.blog.repository.BlogRepo.list        : ==>  Preparing: select * from t_blog order by releaseDate desc limit ?,? 
2017-09-14 23:22:51.491 DEBUG 8388 --- [http-nio-8080-exec-4] p.p.blog.repository.BlogRepo.list        : ==> Parameters: 10(Integer), 10(Integer)
2017-09-14 23:22:51.494 DEBUG 8388 --- [http-nio-8080-exec-4] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 23:22:51.495 DEBUG 8388 --- [http-nio-8080-exec-4] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 11(String)
2017-09-14 23:22:51.496 DEBUG 8388 --- [http-nio-8080-exec-4] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 23:22:51.497 DEBUG 8388 --- [http-nio-8080-exec-4] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 23:22:51.497 DEBUG 8388 --- [http-nio-8080-exec-4] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 12(String)
2017-09-14 23:22:51.501 DEBUG 8388 --- [http-nio-8080-exec-4] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 23:22:51.502 DEBUG 8388 --- [http-nio-8080-exec-4] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 23:22:51.502 DEBUG 8388 --- [http-nio-8080-exec-4] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 27(String)
2017-09-14 23:22:51.506 DEBUG 8388 --- [http-nio-8080-exec-4] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 23:22:51.506 DEBUG 8388 --- [http-nio-8080-exec-4] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 23:22:51.507 DEBUG 8388 --- [http-nio-8080-exec-4] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 31(String)
2017-09-14 23:22:51.509 DEBUG 8388 --- [http-nio-8080-exec-4] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 23:22:51.509 DEBUG 8388 --- [http-nio-8080-exec-4] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 23:22:51.509 DEBUG 8388 --- [http-nio-8080-exec-4] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 28(String)
2017-09-14 23:22:51.512 DEBUG 8388 --- [http-nio-8080-exec-4] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 23:22:51.513 DEBUG 8388 --- [http-nio-8080-exec-4] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 23:22:51.513 DEBUG 8388 --- [http-nio-8080-exec-4] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 14(String)
2017-09-14 23:22:51.515 DEBUG 8388 --- [http-nio-8080-exec-4] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 23:22:51.516 DEBUG 8388 --- [http-nio-8080-exec-4] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 23:22:51.516 DEBUG 8388 --- [http-nio-8080-exec-4] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 1(String)
2017-09-14 23:22:51.517 DEBUG 8388 --- [http-nio-8080-exec-4] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 23:22:51.518 DEBUG 8388 --- [http-nio-8080-exec-4] p.p.blog.repository.BlogRepo.list        : <==      Total: 10
2017-09-14 23:22:51.522 DEBUG 8388 --- [http-nio-8080-exec-4] p.p.blog.repository.BlogRepo.getTotal    : ==>  Preparing: select count(*) from t_blog 
2017-09-14 23:22:51.522 DEBUG 8388 --- [http-nio-8080-exec-4] p.p.blog.repository.BlogRepo.getTotal    : ==> Parameters: 
2017-09-14 23:22:51.523 DEBUG 8388 --- [http-nio-8080-exec-4] p.p.blog.repository.BlogRepo.getTotal    : <==      Total: 1
2017-09-14 23:22:59.474 DEBUG 8388 --- [http-nio-8080-exec-10] p.p.blog.repository.BlogRepo.list        : ==>  Preparing: select * from t_blog order by releaseDate desc limit ?,? 
2017-09-14 23:22:59.474 DEBUG 8388 --- [http-nio-8080-exec-10] p.p.blog.repository.BlogRepo.list        : ==> Parameters: 10(Integer), 10(Integer)
2017-09-14 23:22:59.478 DEBUG 8388 --- [http-nio-8080-exec-10] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 23:22:59.478 DEBUG 8388 --- [http-nio-8080-exec-10] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 11(String)
2017-09-14 23:22:59.480 DEBUG 8388 --- [http-nio-8080-exec-10] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 23:22:59.480 DEBUG 8388 --- [http-nio-8080-exec-10] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 23:22:59.480 DEBUG 8388 --- [http-nio-8080-exec-10] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 12(String)
2017-09-14 23:22:59.482 DEBUG 8388 --- [http-nio-8080-exec-10] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 23:22:59.483 DEBUG 8388 --- [http-nio-8080-exec-10] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 23:22:59.483 DEBUG 8388 --- [http-nio-8080-exec-10] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 27(String)
2017-09-14 23:22:59.484 DEBUG 8388 --- [http-nio-8080-exec-10] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 23:22:59.485 DEBUG 8388 --- [http-nio-8080-exec-10] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 23:22:59.486 DEBUG 8388 --- [http-nio-8080-exec-10] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 31(String)
2017-09-14 23:22:59.487 DEBUG 8388 --- [http-nio-8080-exec-10] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 23:22:59.488 DEBUG 8388 --- [http-nio-8080-exec-10] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 23:22:59.488 DEBUG 8388 --- [http-nio-8080-exec-10] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 28(String)
2017-09-14 23:22:59.490 DEBUG 8388 --- [http-nio-8080-exec-10] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 23:22:59.491 DEBUG 8388 --- [http-nio-8080-exec-10] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 23:22:59.491 DEBUG 8388 --- [http-nio-8080-exec-10] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 14(String)
2017-09-14 23:22:59.492 DEBUG 8388 --- [http-nio-8080-exec-10] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 23:22:59.493 DEBUG 8388 --- [http-nio-8080-exec-10] p.p.b.repository.BlogTypeRepo.findById   : ====>  Preparing: select * from t_blogType where id=? 
2017-09-14 23:22:59.493 DEBUG 8388 --- [http-nio-8080-exec-10] p.p.b.repository.BlogTypeRepo.findById   : ====> Parameters: 1(String)
2017-09-14 23:22:59.494 DEBUG 8388 --- [http-nio-8080-exec-10] p.p.b.repository.BlogTypeRepo.findById   : <====      Total: 1
2017-09-14 23:22:59.495 DEBUG 8388 --- [http-nio-8080-exec-10] p.p.blog.repository.BlogRepo.list        : <==      Total: 10
2017-09-14 23:22:59.500 DEBUG 8388 --- [http-nio-8080-exec-10] p.p.blog.repository.BlogRepo.getTotal    : ==>  Preparing: select count(*) from t_blog 
2017-09-14 23:22:59.500 DEBUG 8388 --- [http-nio-8080-exec-10] p.p.blog.repository.BlogRepo.getTotal    : ==> Parameters: 
2017-09-14 23:22:59.501 DEBUG 8388 --- [http-nio-8080-exec-10] p.p.blog.repository.BlogRepo.getTotal    : <==      Total: 1
