<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>pers-cc-platform</groupId>
	<artifactId>pers-cc-platform</artifactId>
	<packaging>pom</packaging>
	<version>1.0-SNAPSHOT</version>
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>1.5.7.RELEASE</version>
	</parent>

    <developers>
        <developer>
            <id>cc</id>
            <name>haochencheng(cc)</name>
            <email>532224524@qq.com</email>
            <organization>free</organization>
            <roles>
                <role>Developer</role>
            </roles>
        </developer>
    </developers>


    <modules>
        <module>pers-platform-common</module>
        <module>pers-platform-core</module>
        <module>pers-platform-monitor-api</module>
        <module>pers-platform-monitor-service</module>
        <module>pers-platform-monitor-web</module>
    </modules>

    <licenses>
        <license>
            <name>Apache License, Version 2.0</name>
            <url>http://www.apache.org/licenses/LICENSE-2.0</url>
        </license>
    </licenses>
    <scm>
        <url>https://github.com/haochencheng/pers-cc-platform</url>
    </scm>

	<properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<spring-boot-version>1.5.9.RELEASE</spring-boot-version>
		<!-- 规范版本 -->
		<junit-version>4.2</junit-version>
		<shiro-version>1.3.0</shiro-version>
        <shiro-ehcache>1.2.3</shiro-ehcache>
		<lucene.version>6.1.0</lucene.version>
        <jdk.version>1.8</jdk.version>
        <spring.version>4.3.9.RELEASE</spring.version>
        <dubbo.version>2.5.8</dubbo.version>
        <mysql-connector-java>5.1.40</mysql-connector-java>
        <commons-lang3.version>3.3.2</commons-lang3.version>
        <guava.version>21.0</guava.version>
        <nettty.version>4.1.12.Final</nettty.version>
        <commons.httpclient.version>3.0.1</commons.httpclient.version>
        <httpclient.version>4.5.1</httpclient.version>
        <okhttp.version>3.7.0</okhttp.version>
        <gson.verions>2.6.2</gson.verions>
        <druid.version>1.0.29</druid.version>
        <maven.skip.text>true</maven.skip.text>
	</properties>

	<dependencies>




	</dependencies>
	<build>
		<finalName>pers-cc-platform</finalName>
		<resources>
			<resource>
				<directory>src/main/resources/</directory>
				<filtering>false</filtering>
				<includes>
					<include>**/*.properties</include>
					<include>**/*.xml</include>
					<include>**/*.txt</include>
					<include>**/*.ico</include>
				</includes>
			</resource>
			<resource>
				<directory>src/main/java/</directory>
				<filtering>false</filtering>
				<includes>
					<include>**/*.xml</include>
				</includes>
			</resource>
		</resources>

		<plugins>
			<!-- java编译插件 -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<configuration>
					<source>1.8</source>
					<target>1.8</target>
					<skip>true</skip>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
				<configuration>
					<fork>true</fork>
					<skip>true</skip>
					<!-- 指定该Main Class为全局的唯一入口 -->
					<mainClass>pers.platform.monitor.Application</mainClass>
					<layout>WAR</layout>
				</configuration>
				<dependencies>
					<!-- spring热部署 -->
					<dependency>
						<groupId>org.springframework</groupId>
						<artifactId>springloaded</artifactId>
						<version>1.2.6.RELEASE</version>
					</dependency>
				</dependencies>
				<executions>
					<execution>
						<goals>
							<goal>repackage</goal><!--可以把依赖的包都打包到生成的Jar包中 -->
						</goals>
					</execution>
				</executions>
			</plugin>

			<!-- maven打包跳过测试类 -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<configuration>
					<skip>true</skip>
				</configuration>
			</plugin>

			<!-- 资源文件拷贝插件 -->
			<!-- 此plugin可以用 利用此plugin，把源代码中的xml文件，打包到相应位置， 这里主要是为了打包Mybatis的mapper.xml文件 -->
			 <plugin>
				<artifactId>maven-resources-plugin</artifactId>
				<configuration>
					<encoding>UTF-8</encoding>
				</configuration>
				<executions>
					<execution>
						<id>copy-xmls</id>
						<phase>process-sources</phase>
						<goals>
							<goal>copy-resources</goal>
						</goals>
						<configuration>
							<outputDirectory>${basedir}/target/classes</outputDirectory>
							<resources>
								<resource>
									<directory>${basedir}/src/main/java</directory>
									<includes>
										<include>**/*.xml</include>
									</includes>
								</resource>
							</resources>
						</configuration>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>


</project>